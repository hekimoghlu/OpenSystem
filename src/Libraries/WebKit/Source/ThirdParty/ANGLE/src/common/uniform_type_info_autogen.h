/*
 *
 * Copyright (c) NeXTHub Corporation. All Rights Reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Author: Tunjay Akbarli
 * Date: Friday, May 5, 2023.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201, 
 * Middletown, DE 19709, New Castle County, USA.
 *
 */

// GENERATED FILE - DO NOT EDIT.
// Generated by gen_uniform_type_table.py.
//
// Copyright 2024 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Uniform type info table:
//   Metadata about a particular uniform format, indexed by GL type.

#ifndef COMMON_UNIFORM_TYPE_INFO_AUTOGEN_H_
#define COMMON_UNIFORM_TYPE_INFO_AUTOGEN_H_

#include "angle_gl.h"
#include "utilities.h"

namespace gl
{

inline GLint GetUniformElementComponents(UniformTypeIndex index)
{
    static constexpr std::array<uint8_t, 77> kElementComponents = {
        0, 1, 2, 3, 4, 1, 4, 6, 8, 9, 6, 12, 16, 8, 12, 2, 3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1,  2, 3,  4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,  1,  1, 1,  1, 1, 1, 1, 1, 2, 3, 4, 1, 1};
    ASSERT(index.value >= 0 && index.value < 77);
    return kElementComponents[index.value];
}

extern const std::array<UniformTypeInfo, 77> kUniformInfoTable;

}  // namespace gl
#endif  // COMMON_UNIFORM_TYPE_INFO_AUTOGEN_H_
