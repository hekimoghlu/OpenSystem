
//===-- TestLanguage.def - Language Versions for Testing --------*- C++ -*-===//
//
// Copyright (c) 2025, NeXTHub Corporation. All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
// 
// Author: Tunjay Akbarli
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Please contact NeXTHub Corporation, 651 N Broad St, Suite 201,
// Middletown, DE 19709, New Castle County, USA.
//
//===----------------------------------------------------------------------===//

// The TESTLANGUAGE(-C/-CXX) macros have four parameters:
// the language, the standard version, the corresponding compile-flag,
// and an index of the language version for each language.
// The standard version is used to compare a standard version numerically,
// and the index is used to impose ordering for the language versions
// with respect to each language.

#ifndef TESTLANGUAGE
#  define TESTLANGUAGE(...)
#endif

#ifndef TESTLANGUAGE_C
#  define TESTLANGUAGE_C(...) TESTLANGUAGE(__VA_ARGS__)
#endif

#ifndef TESTLANGUAGE_CXX
#  define TESTLANGUAGE_CXX(...) TESTLANGUAGE(__VA_ARGS__)
#endif

TESTLANGUAGE_C(C, 89, c89, 0)
TESTLANGUAGE_C(C, 99, c99, 1)
TESTLANGUAGE_C(C, 11, c11, 2)
TESTLANGUAGE_C(C, 17, c17, 3)
TESTLANGUAGE_C(C, 23, c23, 4)
TESTLANGUAGE_C(C, 26, c2y, 5)

// TESTLANGUAGE_CXX(CXX, 98, c++98, 0)
TESTLANGUAGE_CXX(CXX, 03, c++03, 1)
TESTLANGUAGE_CXX(CXX, 11, c++11, 2)
TESTLANGUAGE_CXX(CXX, 14, c++14, 3)
TESTLANGUAGE_CXX(CXX, 17, c++17, 4)
TESTLANGUAGE_CXX(CXX, 20, c++20, 5)
TESTLANGUAGE_CXX(CXX, 23, c++23, 6)
TESTLANGUAGE_CXX(CXX, 26, c++26, 7)

#undef TESTLANGUAGE_CXX
#undef TESTLANGUAGE_C
#undef TESTLANGUAGE
