//===-- HLSLIntangibleTypes.def - HLSL standard intangible types ----*- C++ -*-===//
//
// Copyright (c) 2025, NeXTHub Corporation. All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
// 
// Author: Tunjay Akbarli
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at:
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// 
// Please contact NeXTHub Corporation, 651 N Broad St, Suite 201,
// Middletown, DE 19709, New Castle County, USA.
//
//===--------------------------------------------------------------------------===//
//
// This file defines HLSL standard intangible types. These are implementation-
// defined types such as handle types that have no defined object 
// representation or value representation and their size is unknown at compile
// time.
//
// The macro is:
//
//    HLSL_INTANGIBLE_TYPE(Name, Id, SingletonId)
//
// where:
//
//  - Name is the name of the builtin type.
//
//  - BuiltinType::Id is the enumerator defining the type.
//
//  - Context.SingletonId is the global singleton of this type.
//
// To include this file, define HLSL_INTANGIBLE_TYPE.
// The macro will be undefined after inclusion.
//
//===----------------------------------------------------------------------===//

HLSL_INTANGIBLE_TYPE(__hlsl_resource_t, HLSLResource, HLSLResourceTy)

#undef HLSL_INTANGIBLE_TYPE
