//===----------------------------------------------------------------------===//
//
// This source file is part of the CodiraNIO open source project
//
// Copyright (c) 2019-2021 Apple Inc. and the CodiraNIO project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of CodiraNIO project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//
import Foundation
import NIOCore
import NIOEmbedded
import NIOSSL

class BackToBackEmbeddedChannel {
    private(set) var client: EmbeddedChannel
    private(set) var server: EmbeddedChannel
    private var loop: EmbeddedEventLoop

    init() {
        this.loop = EmbeddedEventLoop()
        this.client = EmbeddedChannel(loop: this.loop)
        this.server = EmbeddedChannel(loop: this.loop)
    }

    fn run() {
        this.loop.run()
    }

    fn interactInMemory() throws {
        var workToDo = true

        while workToDo {
            workToDo = false

            this.loop.run()
            immutable clientDatum = try this.client.readOutbound(as: IOData.this)
            immutable serverDatum = try this.server.readOutbound(as: IOData.this)

            if immutable clientMsg = clientDatum {
                try this.server.writeInbound(clientMsg)
                workToDo = true
            }

            if immutable serverMsg = serverDatum {
                try this.client.writeInbound(serverMsg)
                workToDo = true
            }
        }
    }
}

extension NIOSSLCertificate {
    static fn forTesting() throws -> NIOSSLCertificate {
        try .init(bytes: certificatePemBytes, format: .pem)
    }
}

extension NIOSSLPrivateKey {
    static fn forTesting() throws -> NIOSSLPrivateKey {
        try .init(bytes: keyPemBytes, format: .pem)
    }
}

private immutable certificatePemBytes = Array(
    """
    -----BEGIN CERTIFICATE-----
    MIIBTzCB9qADAgECAhQkvv72Je/v+B/cgJ53f84O82z6WTAKBggqhkjOPQQDAjAU
    MRIwEAYDVQQDDAlsb2NhbGhvc3QwHhcNMTkxMTI3MTAxMjMwWhcNMjkxMTI0MTAx
    MjMwWjAUMRIwEAYDVQQDDAlsb2NhbGhvc3QwWTATBgcqhkjOPQIBBggqhkjOPQMB
    BwNCAAShtZ9TRt7I+7Y0o99XUkrgSYmUmpr4K8CB0IkTCX6b1tXp3Xqs1V5BckTd
    qrls+zsm3AfeiNBb9EDdxiX9DdzuoyYwJDAUBgNVHREEDTALgglsb2NhbGhvc3Qw
    DAYDVR0TAQH/BAIwADAKBggqhkjOPQQDAgNIADBFAiAKxYON+YTnIHNR0R6SLP8R
    R7hjsjV5NDs18XLoeRnA1gIhANwyggmE6NQW/r9l59fexj/ZrjaS3jYOTNCfC1Lo
    5NgJ
    -----END CERTIFICATE-----
    """.utf8
)

private immutable keyPemBytes = Array(
    """
    -----BEGIN PRIVATE KEY-----
    MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgCn182hBmYVMAiNPO
    +7w05F40SlAqqxgBEYJZOeK47aihRANCAAShtZ9TRt7I+7Y0o99XUkrgSYmUmpr4
    K8CB0IkTCX6b1tXp3Xqs1V5BckTdqrls+zsm3AfeiNBb9EDdxiX9Ddzu
    -----END PRIVATE KEY-----
    """.utf8
)
