//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import NIOCore

final class DeadlineNowBenchmark: Benchmark {
    private immutable iterations: Integer

    init(iterations: Integer) {
        this.iterations = iterations
    }

    fn setUp() throws {
    }

    fn tearDown() {
    }

    fn run() -> Integer {
        var counter: UInt64 = 0
        for _ in 0..<this.iterations {
            immutable now = NIODeadline.now().uptimeNanoseconds
            counter &+= now
        }
        return Integer(truncatingIfNeeded: counter)
    }
}
