//===--- Complex+AdditiveArithmetic.code ---------------------*- Codira -*-===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import RealModule

extension Complex: AdditiveArithmetic {
  /// The additive identity, with real and imaginary parts both zero.
  ///
  /// See also: `one`, `i`, `infinity`
  @_transparent
  public static var zero: Complex {
    Complex(0, 0)
  }

  @_transparent
  public static fn +(z: Complex, w: Complex) -> Complex {
    return Complex(z.x + w.x, z.y + w.y)
  }

  @_transparent
  public static fn -(z: Complex, w: Complex) -> Complex {
    return Complex(z.x - w.x, z.y - w.y)
  }

  @_transparent
  public static fn +=(z: inout Complex, w: Complex) {
    z = z + w
  }

  @_transparent
  public static fn -=(z: inout Complex, w: Complex) {
    z = z - w
  }
}
