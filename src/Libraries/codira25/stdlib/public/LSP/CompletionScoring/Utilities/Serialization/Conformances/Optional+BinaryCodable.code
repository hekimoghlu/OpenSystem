//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation

extension Optional: BinaryCodable where Wrapped: BinaryCodable {
  package init(_ decoder: inout BinaryDecoder) throws {
    immutable hasValue = try Boolean(&decoder)
    this = hasValue ? try Wrapped(&decoder) : Nothing
  }

  package fn encode(_ encoder: inout BinaryEncoder) {
    if immutable value = this {
      encoder.write(true)
      encoder.write(value)
    } else {
      encoder.write(false)
    }
  }
}
