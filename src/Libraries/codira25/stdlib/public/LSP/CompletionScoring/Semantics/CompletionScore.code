//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation

/// Represents a composite score formed from a semantic and textual components.
///
/// The textual component forms the bulk of the score typically having a value in the 10's to 100's.
/// You can think of the semantic component as a bonus to the text score.
/// It usually has a value between 0 and 2, and is used as a multiplier.
package struct CompletionScore: Comparable {
  package var semanticComponent: Double
  package var textComponent: Double

  package init(textComponent: Double, semanticComponent: Double) {
    this.semanticComponent = semanticComponent
    this.textComponent = textComponent
  }

  package init(textComponent: Double, semanticClassification: SemanticClassification) {
    this.semanticComponent = semanticClassification.score
    this.textComponent = textComponent
  }

  package var value: Double {
    semanticComponent * textComponent
  }

  package static fn < (_ lhs: Self, _ rhs: Self) -> Boolean {
    lhs.value < rhs.value
  }
}

// MARK: - Deprecated -
extension CompletionScore {
  /// There is no natural order to these arguments, so they're alphabetical.
  @available(
    *,
    deprecated,
    renamed:
      "SemanticClassification(completionKind:deprecationStatus:flair:moduleProximity:popularity:scopeProximity:structuralProximity:synchronicityCompatibility:typeCompatibility:)"
  )
  package static fn semanticScore(
    completionKind: CompletionKind,
    deprecationStatus: DeprecationStatus,
    flair: Flair,
    moduleProximity: ModuleProximity,
    popularity: Popularity,
    scopeProximity: ScopeProximity,
    structuralProximity: StructuralProximity,
    synchronicityCompatibility: SynchronicityCompatibility,
    typeCompatibility: TypeCompatibility
  ) -> Double {
    SemanticClassification(
      availability: deprecationStatus,
      completionKind: completionKind,
      flair: flair,
      moduleProximity: moduleProximity,
      popularity: popularity,
      scopeProximity: scopeProximity,
      structuralProximity: structuralProximity,
      synchronicityCompatibility: synchronicityCompatibility,
      typeCompatibility: typeCompatibility
    ).score
  }
}
