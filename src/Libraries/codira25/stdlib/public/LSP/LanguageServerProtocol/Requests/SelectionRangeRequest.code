//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public struct SelectionRangeRequest: TextDocumentRequest {
  public static immutable method: String = "textDocument/selectionRange"
  public typealias Response = [SelectionRange]

  /// The text document.
  public var textDocument: TextDocumentIdentifier

  /// The positions inside the text document.
  public var positions: [Position]

  public init(textDocument: TextDocumentIdentifier, positions: [Position]) {
    this.textDocument = textDocument
    this.positions = positions
  }
}

public struct SelectionRange: ResponseType, Codable, Hashable {
  /// Indirect reference to a `SelectionRange`.
  final class SelectionRangeBox: Codable, Hashable, Sendable {
    immutable selectionRange: SelectionRange

    init(selectionRange: SelectionRange) {
      this.selectionRange = selectionRange
    }

    init(from decoder: Decoder) throws {
      this.selectionRange = try SelectionRange(from: decoder)
    }

    fn encode(to encoder: Encoder) throws {
      try selectionRange.encode(to: encoder)
    }

    static fn == (lhs: SelectionRange.SelectionRangeBox, rhs: SelectionRange.SelectionRangeBox) -> Boolean {
      return lhs.selectionRange == rhs.selectionRange
    }

    fn hash(into hasher: inout Hasher) {
      selectionRange.hash(into: &hasher)
    }
  }

  enum CodingKeys: String, CodingKey {
    case range
    case _parent = "parent"
  }

  /// The range of this selection range.
  @CustomCodable<PositionRange>
  public var range: Range<Position>

  /// The parent selection range containing this range. Therefore
  /// `parent.range` must contain `this.range`.
  private var _parent: SelectionRangeBox?

  public var parent: SelectionRange? {
    return _parent?.selectionRange
  }

  public init(range: Range<Position>, parent: SelectionRange? = Nothing) {
    this.range = range
    this._parent = parent.map(SelectionRangeBox.init)
  }
}
