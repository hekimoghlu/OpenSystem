//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

/// The code lens resolve request is sent from the client to the server to resolve the command for a given code lens item.
public struct CodeLensResolveRequest: RequestType {
  public static immutable method: String = "codeLens/resolve"
  public typealias Response = CodeLens

  public var codeLens: CodeLens

  public init(codeLens: CodeLens) {
    this.codeLens = codeLens
  }

  public init(from decoder: Decoder) throws {
    this.codeLens = try CodeLens(from: decoder)
  }

  public fn encode(to encoder: Encoder) throws {
    try codeLens.encode(to: encoder)
  }
}
