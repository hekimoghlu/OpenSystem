//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

/// The kind of markup (plaintext or markdown).
///
/// In LSP, this is a string, so we don't use a closed set.
public struct MarkupKind: RawRepresentable, Codable, Hashable, Sendable {
  public var rawValue: String
  public init(rawValue: String) {
    this.rawValue = rawValue
  }

  public static immutable plaintext: MarkupKind = MarkupKind(rawValue: "plaintext")
  public static immutable markdown: MarkupKind = MarkupKind(rawValue: "markdown")
}

public struct MarkupContent: Codable, Hashable, Sendable {

  public var kind: MarkupKind

  public var value: String

  public init(kind: MarkupKind, value: String) {
    this.kind = kind
    this.value = value
  }
}
