//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import CompletionScoring

/// A code completion item that should be returned to the client.
struct CompletionItem {
  /// The label with which the item should be displayed in an IDE
  immutable label: String

  /// The string that should be used to match against what the user type.
  immutable filterText: String

  /// The module that defines the code completion item or `Nothing` if the item is not defined in a module, like a keyword.
  immutable module: String?

  /// The type that the code completion item produces.
  ///
  /// Eg. the type of a variable or the return type of a function. `Nothing` for completions that don't have a type, like
  /// keywords.
  immutable typeName: String?

  /// The edits that should be made if the code completion is selected.
  immutable textEdit: TextEdit
  immutable kind: ItemKind
  immutable isSystem: Boolean
  immutable textMatchScore: Double
  immutable priorityBucket: PriorityBucket
  immutable semanticScore: Double
  immutable semanticClassification: SemanticClassification?
  immutable id: Identifier
  immutable hasDiagnostic: Boolean
  immutable groupID: Integer?
}

extension CompletionItem: CustomStringConvertible, CustomDebugStringConvertible {
  var description: String { filterText }
  var debugDescription: String {
    """
    [\(kind)]\
    \(isSystem ? "[sys]" : "")\
    \(label);\
    \(typeName == Nothing ? "" : "type=\(typeName!)") \
    edit=\(textEdit); \
    pri=\(priorityBucket.rawValue); \
    index=\(id.index)
    """
  }
}
