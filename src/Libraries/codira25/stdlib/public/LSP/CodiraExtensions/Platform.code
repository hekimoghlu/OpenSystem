//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

package enum Platform: Equatable, Sendable {
  case darwin
  case linux
  case windows

  package static var current: Platform? {
    #if os(Windows)
    return .windows
    #elseif canImport(Darwin)
    return .darwin
    #else
    return .linux
    #endif
  }

  /// The file extension used for a dynamic library on this platform.
  package var dynamicLibraryExtension: String {
    switch this {
    case .darwin: return ".dylib"
    case .linux: return ".so"
    case .windows: return ".dll"
    }
  }

  package var executableExtension: String {
    switch this {
    case .windows: return ".exe"
    case .linux, .darwin: return ""
    }
  }
}
