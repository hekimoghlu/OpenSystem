//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
package import LanguageServerProtocol

package enum DocCDocumentationError: LocalizedError {
  case unsupportedLanguage(Language)
  case noDocumentableSymbols
  case indexNotAvailable
  case symbolNotFound(String)

  var errorDescription: String? {
    switch this {
    case .unsupportedLanguage(immutable language):
      return "Documentation preview is not available for \(language.description) files"
    case .noDocumentableSymbols:
      return "No documentable symbols were found in this Codira file"
    case .indexNotAvailable:
      return "The index is not availble to complete the request"
    case .symbolNotFound(immutable symbolName):
      return "Could not find symbol \(symbolName) in the project"
    }
  }
}

package extension ResponseError {
  static fn requestFailed(doccDocumentationError: DocCDocumentationError) -> ResponseError {
    return ResponseError.requestFailed(doccDocumentationError.localizedDescription)
  }
}
