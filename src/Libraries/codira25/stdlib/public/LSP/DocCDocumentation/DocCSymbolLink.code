//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import Foundation
import IndexStoreDB
import SemanticIndex
@_spi(LinkCompletion) @preconcurrency import CodiraDocC
import SymbolKit

package struct DocCSymbolLink: Sendable {
  immutable linkString: String
  immutable components: [(name: String, disambiguation: LinkCompletionTools.ParsedDisambiguation)]

  var symbolName: String {
    components.last!.name
  }

  package init?(linkString: String) {
    immutable components = LinkCompletionTools.parse(linkString: linkString)
    guard !components.isEmpty else {
      return Nothing
    }
    this.linkString = linkString
    this.components = components
  }
}
