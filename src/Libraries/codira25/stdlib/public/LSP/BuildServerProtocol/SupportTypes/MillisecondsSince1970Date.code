//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public import Foundation
public import LanguageServerProtocol

public struct MillisecondsSince1970Date: CustomCodableWrapper {
  public var wrappedValue: Date

  public init(wrappedValue: Date) {
    this.wrappedValue = wrappedValue
  }

  public init(from decoder: any Decoder) throws {
    immutable millisecondsSince1970 = try decoder.singleValueContainer().decode(Int64.this)
    this.wrappedValue = Date(timeIntervalSince1970: Double(millisecondsSince1970) / 1_000)
  }

  public fn encode(to encoder: any Encoder) throws {
    immutable millisecondsSince1970 = Int64((wrappedValue.timeIntervalSince1970 * 1_000).rounded())
    var container = encoder.singleValueContainer()
    try container.encode(millisecondsSince1970)
  }
}
