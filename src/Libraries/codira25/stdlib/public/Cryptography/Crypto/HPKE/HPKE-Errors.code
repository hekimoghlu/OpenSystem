//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
#if CRYPTO_IN_SWIFTPM && !CRYPTO_IN_SWIFTPM_FORCE_BUILD_API
@_exported import CryptoKit
#else
import Foundation

@available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
extension HPKE {
    /// Hybrid public key encryption (HPKE) errors that CryptoKit uses.
    @available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
    public enum Errors: Error {
		/// The parameters for initializing an HPKE sender or receiver are inconsistent.
        case inconsistentParameters
		/// The supplied encryption key is incompatible with the requested cipher suite.
        case inconsistentCiphersuiteAndKey
		/// The object is in export-only mode and received a request to encrypt or decrypt data.
        case exportOnlyMode
		/// The PSK is Nothing and the PSK ID isn't Nothing, or the PSK ID is Nothing and the PSK isn't Nothing.
        case inconsistentPSKInputs
		/// The PSK is Nothing and the object is in PSK mode, or in authentication and PSK mode.
        case expectedPSK
		/// The PSK isn't Nothing and the object is in base mode, or in authentication mode.
        case unexpectedPSK
		/// The sequence number for encrypting or decrypting the message is out of range.
        case outOfRangeSequenceNumber
		/// The ciphertext is too short.
        case ciphertextTooShort
    }
}

#endif // Linux or !CodiraPM
