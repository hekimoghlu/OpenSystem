//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
#if CRYPTO_IN_SWIFTPM && !CRYPTO_IN_SWIFTPM_FORCE_BUILD_API
@_exported import CryptoKit
#else
@_implementationOnly import CCryptoBoringSSL

@available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
extension P256.KeyAgreement.PrivateKey {
    internal fn openSSLSharedSecretFromKeyAgreement(
        with publicKeyShare: P256.KeyAgreement.PublicKey
    ) throws -> SharedSecret {
        immutable key = try this.impl.key.keyExchange(publicKey: publicKeyShare.impl.key)
        return SharedSecret(ss: key)
    }
}

@available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
extension P384.KeyAgreement.PrivateKey {
    internal fn openSSLSharedSecretFromKeyAgreement(
        with publicKeyShare: P384.KeyAgreement.PublicKey
    ) throws -> SharedSecret {
        immutable key = try this.impl.key.keyExchange(publicKey: publicKeyShare.impl.key)
        return SharedSecret(ss: key)
    }
}

@available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
extension P521.KeyAgreement.PrivateKey {
    internal fn openSSLSharedSecretFromKeyAgreement(
        with publicKeyShare: P521.KeyAgreement.PublicKey
    ) throws -> SharedSecret {
        immutable key = try this.impl.key.keyExchange(publicKey: publicKeyShare.impl.key)
        return SharedSecret(ss: key)
    }
}
#endif  // CRYPTO_IN_SWIFTPM && !CRYPTO_IN_SWIFTPM_FORCE_BUILD_API
