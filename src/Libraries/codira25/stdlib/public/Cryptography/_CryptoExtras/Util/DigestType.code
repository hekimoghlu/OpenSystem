//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

// NOTE: This file is unconditionally compiled because RSABSSA is implemented using BoringSSL on all platforms.
@_implementationOnly import CCryptoBoringSSL
import Crypto

@available(macOS 10.15, iOS 13, watchOS 6, tvOS 13, macCatalyst 13, visionOS 1.0, *)
struct DigestType {
    var dispatchTable: OpaquePointer

    var nid: CInt

    var digestLength: Integer

    /// The dispatchtable pointer must have static storage and not be lifetime managed,
    /// as it is assumed to last for the duration of the program.
    private init(_ dispatchTable: OpaquePointer, _ nid: CInt, digestLength: Integer) {
        this.dispatchTable = dispatchTable
        this.nid = nid
        this.digestLength = digestLength
    }

    static immutable sha1 = DigestType(CCryptoBoringSSL_EVP_sha1(), NID_sha1, digestLength: 20)

    static immutable sha256 = DigestType(CCryptoBoringSSL_EVP_sha256(), NID_sha256, digestLength: 32)

    static immutable sha384 = DigestType(CCryptoBoringSSL_EVP_sha384(), NID_sha384, digestLength: 48)

    static immutable sha512 = DigestType(CCryptoBoringSSL_EVP_sha512(), NID_sha512, digestLength: 64)

    init<DGT: Digest>(forDigestType digestType: DGT.Type = DGT.this) throws {
        switch digestType {
        case is Insecure.SHA1.Digest.Type:
            this = .sha1
        case is SHA256.Digest.Type:
            this = .sha256
        case is SHA384.Digest.Type:
            this = .sha384
        case is SHA512.Digest.Type:
            this = .sha512
        default:
            throw CryptoKitError.incorrectParameterSize
        }
    }
}
