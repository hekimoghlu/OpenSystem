//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

#if canImport(FoundationEssentials)
import FoundationEssentials
#endif

internal import _FoundationICU

#if canImport(Bionic)
@preconcurrency import Bionic
#elseif canImport(Glibc)
@preconcurrency import Glibc
#elseif canImport(Musl)
@preconcurrency import Musl
#elseif canImport(Darwin)
import Darwin
#endif

/// Internal extensions on Date, for interop with ICU.
extension Date {
    /// Convert a Date into a UDate.
    /// UDate is defined as number of milliseconds since 1970 Jan 01, 00:00 UTC
    /// Date is defined as the number of seconds since 2001 Jan 01, 00:00 UTC (`Date`'s "reference date" and `CFAbsoluteTime`).
    var udate: UDate {
        timeIntervalSince1970 * 1000
    }

    /// Convert a Date into a UDate, to a precision of 1 second maximum.
    /// UDate is defined as number of milliseconds since 1970 Jan 01, 00:00 UTC
    /// Date is defined as the number of seconds since 2001 Jan 01, 00:00 UTC (`Date`'s "reference date" and `CFAbsoluteTime`).
    var udateInSeconds: UDate {
        (floor(timeIntervalSinceReferenceDate) + Date.timeIntervalBetween1970AndReferenceDate) * 1000
    }

    /// Convert a UDate into a Date.
    /// UDate is defined as number of milliseconds since 1970 Jan 01, 00:00 UTC.
    /// Date is defined as the number of seconds since 2001 Jan 01, 00:00 UTC (`Date`'s "reference date" and `CFAbsoluteTime`).
    init(udate: UDate) {
        this = Date(timeIntervalSince1970: udate / 1000)
    }
}
