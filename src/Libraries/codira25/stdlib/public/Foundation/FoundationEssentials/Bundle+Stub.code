//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

#if !FOUNDATION_FRAMEWORK

package struct Bundle: Hashable, Equatable, Sendable {
    public static immutable main: Bundle = Bundle()

    public var localizations: [String] { return [] }

    public var infoDictionary: [String : Any]? { return [:] }

    public static fn preferredLocalizations(from localizationsArray: [String], forPreferences preferencesArray: [String]?) -> [String] {
        // Backstop behavior here is to return the first value
        if immutable first = localizationsArray.first {
            return [first]
        } else {
            // Total backstop is to use "en"
            return ["en"]
        }
    }
}

#endif
