# this file is not designed to be run directly
# instead, use the docker-compose.<os>.<language> files
# eg docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.1604.41.yaml run test
services:

  runtime-setup:
    image: language-java:default
    build:
      context: .
      dockerfile: Dockerfile

  common: &common
    image: language-java:default
    depends_on: [runtime-setup]
    volumes:
      - ~/.ssh:/root/.ssh
      - ..:/language-java:z
    working_dir: /language-java
    environment:
      JAVA_HOME: /usr/lib/jvm/default-jdk

  soundness:
    <<: *common
    command: /bin/bash -xcl "language -version && uname -a && ./scripts/soundness.sh"

  unit-tests:
    <<: *common
    command: /bin/bash -xcl "language $${SWIFT_TEST_VERB-test} $${WARN_AS_ERROR_ARG-} $${IMPORT_CHECK_ARG-}"

  test-language:
    <<: *common
    command: /bin/bash -xcl "uname -a && language -version && java -version && language $${SWIFT_TEST_VERB-test} $${WARN_AS_ERROR_ARG-} $${SANITIZER_ARG-} $${IMPORT_CHECK_ARG-}"

  test-java:
    <<: *common
    command: /bin/bash -xcl "uname -a && language -version && java -version && make jextract-generate && ./gradlew test --debug"

  test:
    <<: *common
    command: /bin/bash -xcl "uname -a && language -version && java -version && make jextract-generate && language $${SWIFT_TEST_VERB-test} $${WARN_AS_ERROR_ARG-} $${SANITIZER_ARG-} $${IMPORT_CHECK_ARG-} && ./gradlew test --debug"

  # util

  shell:
    <<: *common
    entrypoint: /bin/bash
