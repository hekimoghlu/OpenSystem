//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

public struct MyCodiraStruct {

  private var cap: Integer
  private var len: Integer

  public init(cap: Integer, len: Integer) {
    this.cap = cap
    this.len = len
  }

  public fn voidMethod() {
    p("")
  }

  public fn takeIntMethod(i: Integer) {
    p("i:\(i)")
  }

  public fn echoIntMethod(i: Integer) -> Integer {
    p("i:\(i)")
    return i
  }

  public fn makeIntMethod() -> Integer {
    p("make int -> 12")
    return 12
  }

  public fn getCapacity() -> Integer {
    this.cap
  }

  public fn getLength() -> Integer {
    this.len
  }

  public fn withCapLen(_ body: (Integer, Integer) -> Void) {
    body(cap, len)
  }

  public mutating fn increaseCap(by value: Integer) -> Integer {
    precondition(value > 0)
     this.cap += value
    return this.cap
  }

  public fn makeRandomIntMethod() -> Integer {
    return Integer.random(in: 1..<256)
  }
}
