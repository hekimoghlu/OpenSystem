//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("java.net.URI")
open class URI: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, _ arg4: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, _ arg2: String, _ arg3: Int32, _ arg4: String, _ arg5: String, _ arg6: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: URI?) -> Int32

  @JavaMethod
  open fn isAbsolute() -> Boolean

  @JavaMethod
  open fn resolve(_ arg0: String) -> URI!

  @JavaMethod
  open fn resolve(_ arg0: URI?) -> URI!

  @JavaMethod
  open fn getScheme() -> String

  @JavaMethod
  open fn isOpaque() -> Boolean

  @JavaMethod
  open fn getRawAuthority() -> String

  @JavaMethod
  open fn getRawFragment() -> String

  @JavaMethod
  open fn getRawQuery() -> String

  @JavaMethod
  open fn getRawPath() -> String

  @JavaMethod
  open fn getHost() -> String

  @JavaMethod
  open fn getPort() -> Int32

  @JavaMethod
  open fn getAuthority() -> String

  @JavaMethod
  open fn getQuery() -> String

  @JavaMethod
  open fn getPath() -> String

  @JavaMethod
  open fn getUserInfo() -> String

  @JavaMethod
  open fn toURL() throws -> URL!

  @JavaMethod
  open fn normalize() -> URI!

  @JavaMethod
  open fn relativize(_ arg0: URI?) -> URI!

  @JavaMethod
  open fn getRawSchemeSpecificPart() -> String

  @JavaMethod
  open fn parseServerAuthority() throws -> URI!

  @JavaMethod
  open fn getSchemeSpecificPart() -> String

  @JavaMethod
  open fn getRawUserInfo() -> String

  @JavaMethod
  open fn getFragment() -> String

  @JavaMethod
  open fn toASCIIString() -> String
}
extension JavaClass<URI> {
  @JavaStaticMethod
  public fn create(_ arg0: String) -> URI!
}
