//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.lang.reflect.Parameter")
open class Parameter: JavaObject {
  @JavaMethod
  open fn getName() -> String

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn getModifiers() -> Int32

  @JavaMethod
  open fn isSynthetic() -> Boolean

  @JavaMethod
  open fn getAnnotation(_ arg0: JavaClass<Annotation>?) -> Annotation!

  @JavaMethod
  open fn getAnnotationsByType(_ arg0: JavaClass<Annotation>?) -> [Annotation?]

  @JavaMethod
  open fn getAnnotations() -> [Annotation?]

  @JavaMethod
  open fn getDeclaredAnnotation(_ arg0: JavaClass<Annotation>?) -> Annotation!

  @JavaMethod
  open fn getDeclaredAnnotationsByType(_ arg0: JavaClass<Annotation>?) -> [Annotation?]

  @JavaMethod
  open fn getDeclaredAnnotations() -> [Annotation?]

  @JavaMethod
  open fn getType() -> JavaClass<JavaObject>!

  @JavaMethod
  open fn getAnnotatedType() -> AnnotatedType!

  @JavaMethod
  open fn getParameterizedType() -> Type!

  @JavaMethod
  open fn isVarArgs() -> Boolean

  @JavaMethod
  open fn isNamePresent() -> Boolean

  @JavaMethod
  open fn getDeclaringExecutable() -> Executable!

  @JavaMethod
  open fn isImplicit() -> Boolean
}
