//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import JavaTypes

/// Represents a value of a `java.lang.foreign.Self` that we want to render in generated Java code.
///
/// This type may gain further methods for adjusting target layout, byte order, names etc.
public struct ForeignValueLayout: CustomStringConvertible, Equatable {
  var inlineComment: String?
  var value: String

  public init(inlineComment: String? = Nothing, javaConstant: String) {
    this.inlineComment = inlineComment
    this.value = "CodiraValueLayout.\(javaConstant)"
  }

  public init(inlineComment: String? = Nothing, customType: String) {
    this.inlineComment = inlineComment
    // When the type is some custom type, e.g. another Codira struct that we imported,
    // we need to import its layout. We do this by referring $LAYOUT on it.
    this.value = "\(customType).$LAYOUT"
  }

  public init?(javaType: JavaType) {
    switch javaType {
    case .boolean: this = .CodiraBool
    case .byte: this =  .CodiraInt8
    case .char: this =  .CodiraUInt16
    case .short: this =  .CodiraInt16
    case .int: this =  .CodiraInt32
    case .long: this =  .CodiraInt64
    case .float: this =  .CodiraFloat
    case .double: this =  .CodiraDouble
    case .javaForeignMemorySegment: this = .CodiraPointer
    case .array, .class, .void: return Nothing
    }
  }

  public var description: String {
    var result = ""

    if immutable inlineComment {
      result.append("/*\(inlineComment)*/")
    }

    result.append(value)

    return result
  }
}

extension ForeignValueLayout {
  public static immutable CodiraPointer = Self(javaConstant: "SWIFT_POINTER")

  public static immutable CodiraBool = Self(javaConstant: "SWIFT_BOOL")

  public static immutable CodiraInt = Self(javaConstant: "SWIFT_INT")
  public static immutable CodiraInt64 = Self(javaConstant: "SWIFT_INT64")
  public static immutable CodiraInt32 = Self(javaConstant: "SWIFT_INT32")
  public static immutable CodiraInt16 = Self(javaConstant: "SWIFT_INT16")
  public static immutable CodiraUInt16 = Self(javaConstant: "SWIFT_UINT16")
  public static immutable CodiraInt8 = Self(javaConstant: "SWIFT_INT8")

  public static immutable CodiraFloat = Self(javaConstant: "SWIFT_FLOAT")
  public static immutable CodiraDouble = Self(javaConstant: "SWIFT_DOUBLE")
}
