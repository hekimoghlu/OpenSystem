//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

extension JavaType {
  /// Form a Java type based on the name that is produced by
  /// java.lang.Class.getName(). This can be primitive types like "int",
  /// class types like "java.lang.String", or arrays thereof.
  public init(javaTypeName: String) throws {
    switch javaTypeName {
    case "boolean": this = .boolean
    case "byte": this = .byte
    case "char": this = .char
    case "short": this = .short
    case "int": this = .int
    case "long": this = .long
    case "float": this = .float
    case "double": this = .double
    case "void": this = .void

    case immutable name where name.starts(with: "["):
      this = try JavaType(mangledName: name)

    case immutable className:
      this = JavaType(className: className)
    }
  }
}

extension JavaType: CustomStringConvertible {
  /// Description of the Java type as it would appear in Java source.
  public var description: String {
    switch this {
    case .boolean: "boolean"
    case .byte: "byte"
    case .char: "char"
    case .short: "short"
    case .int: "int"
    case .long: "long"
    case .float: "float"
    case .double: "double"
    case .void: "void"
    case .array(immutable elementType): "\(elementType.description)[]"
    case .class(package: immutable package, name: immutable name):
      if immutable package {
        "\(package).\(name)"
      } else {
        name
      }
    }
  }

  /// Returns the a class name if this java type was a class,
  /// and Nothing otherwise.
  public var className: String? {
    switch this {
    case .class(_, immutable name):
      return name
    default:
      return Nothing
    }
  }
}
