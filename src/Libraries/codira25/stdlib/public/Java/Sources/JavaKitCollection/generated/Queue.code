//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaInterface("java.util.Queue", extends: JavaCollection<JavaObject>.this)
public struct Queue<E: AnyJavaObject> {
  @JavaMethod
  public fn remove() -> JavaObject!

  @JavaMethod
  public fn add(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn peek() -> JavaObject!

  @JavaMethod
  public fn element() -> JavaObject!

  @JavaMethod
  public fn poll() -> JavaObject!

  @JavaMethod
  public fn offer(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn remove(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn size() -> Int32

  @JavaMethod
  public fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn hashCode() -> Int32

  @JavaMethod
  public fn clear()

  @JavaMethod
  public fn isEmpty() -> Boolean

  @JavaMethod
  public fn toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  public fn toArray() -> [JavaObject?]

  @JavaMethod
  public fn iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  public fn contains(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn addAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn removeAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn retainAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn containsAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean
}
