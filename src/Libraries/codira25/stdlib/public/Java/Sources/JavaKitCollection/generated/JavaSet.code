//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaInterface("java.util.Set", extends: JavaCollection<JavaObject>.this)
public struct JavaSet<E: AnyJavaObject> {
  @JavaMethod
  public fn remove(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn size() -> Int32

  @JavaMethod
  public fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn hashCode() -> Int32

  @JavaMethod
  public fn clear()

  @JavaMethod
  public fn isEmpty() -> Boolean

  @JavaMethod
  public fn add(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn toArray() -> [JavaObject?]

  @JavaMethod
  public fn toArray(_ arg0: [JavaObject?]) -> [JavaObject?]

  @JavaMethod
  public fn iterator() -> JavaIterator<JavaObject>!

  @JavaMethod
  public fn contains(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn addAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn removeAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn retainAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean

  @JavaMethod
  public fn containsAll(_ arg0: JavaCollection<JavaObject>?) -> Boolean
}
extension JavaClass {
  @JavaStaticMethod
  public fn copyOf<E: AnyJavaObject>(_ arg0: JavaCollection<JavaObject>?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>() -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?, _ arg8: JavaObject?, _ arg9: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?, _ arg8: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?, _ arg7: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?, _ arg3: JavaObject?, _ arg4: JavaObject?, _ arg5: JavaObject?, _ arg6: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: [JavaObject?]) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?, _ arg2: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>

  @JavaStaticMethod
  public fn of<E: AnyJavaObject>(_ arg0: JavaObject?, _ arg1: JavaObject?) -> JavaSet<JavaObject>! where ObjectType == JavaSet<E>
}
