//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaRuntime

@JavaClass("java.lang.Character")
open class JavaCharacter: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: UInt16, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: JavaCharacter?) -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn charValue() -> UInt16
}
extension JavaCharacter {
  @JavaClass("java.lang.Character$Subset")
  open class Subset: JavaObject {
  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32
  }
}
extension JavaCharacter {
  @JavaClass("java.lang.Character$UnicodeBlock")
  open class UnicodeBlock: JavaCharacter.Subset {

  }
}
extension JavaClass<JavaCharacter.UnicodeBlock> {
  @JavaStaticField(isFinal: true)
  public var BASIC_LATIN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_1_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var IPA_EXTENSIONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SPACING_MODIFIER_LETTERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMBINING_DIACRITICAL_MARKS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GREEK: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARMENIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HEBREW: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DEVANAGARI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BENGALI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GURMUKHI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GUJARATI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ORIYA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAMIL: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TELUGU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANNADA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MALAYALAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var THAI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LAO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TIBETAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GEORGIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANGUL_JAMO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_ADDITIONAL: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GREEK_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GENERAL_PUNCTUATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPERSCRIPTS_AND_SUBSCRIPTS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CURRENCY_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMBINING_MARKS_FOR_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LETTERLIKE_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NUMBER_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARROWS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MATHEMATICAL_OPERATORS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_TECHNICAL: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CONTROL_PICTURES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OPTICAL_CHARACTER_RECOGNITION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ENCLOSED_ALPHANUMERICS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BOX_DRAWING: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BLOCK_ELEMENTS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GEOMETRIC_SHAPES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DINGBATS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_SYMBOLS_AND_PUNCTUATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HIRAGANA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KATAKANA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BOPOMOFO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANGUL_COMPATIBILITY_JAMO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANBUN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ENCLOSED_CJK_LETTERS_AND_MONTHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_COMPATIBILITY: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANGUL_SYLLABLES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PRIVATE_USE_AREA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_COMPATIBILITY_IDEOGRAPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ALPHABETIC_PRESENTATION_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_PRESENTATION_FORMS_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMBINING_HALF_MARKS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_COMPATIBILITY_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SMALL_FORM_VARIANTS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_PRESENTATION_FORMS_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HALFWIDTH_AND_FULLWIDTH_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SPECIALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SURROGATES_AREA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SYRIAC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var THAANA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SINHALA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MYANMAR: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHEROKEE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OGHAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var RUNIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHMER: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MONGOLIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BRAILLE_PATTERNS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_RADICALS_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANGXI_RADICALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var IDEOGRAPHIC_DESCRIPTION_CHARACTERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BOPOMOFO_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var YI_SYLLABLES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var YI_RADICALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC_SUPPLEMENTARY: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAGALOG: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANUNOO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BUHID: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAGBANWA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LIMBU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAI_LE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHMER_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PHONETIC_EXTENSIONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_ARROWS_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_ARROWS_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_MATHEMATICAL_OPERATORS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_SYMBOLS_AND_ARROWS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KATAKANA_PHONETIC_EXTENSIONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var YIJING_HEXAGRAM_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VARIATION_SELECTORS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LINEAR_B_SYLLABARY: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LINEAR_B_IDEOGRAMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var AEGEAN_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_ITALIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GOTHIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var UGARITIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DESERET: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SHAVIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OSMANYA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYPRIOT_SYLLABARY: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BYZANTINE_MUSICAL_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MUSICAL_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAI_XUAN_JING_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MATHEMATICAL_ALPHANUMERIC_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAGS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VARIATION_SELECTORS_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTARY_PRIVATE_USE_AREA_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTARY_PRIVATE_USE_AREA_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HIGH_SURROGATES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HIGH_PRIVATE_USE_SURROGATES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LOW_SURROGATES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NKO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SAMARITAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MANDAIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NEW_TAI_LUE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BUGINESE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAI_THAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BALINESE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUNDANESE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BATAK: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LEPCHA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OL_CHIKI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VEDIC_EXTENSIONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PHONETIC_EXTENSIONS_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMBINING_DIACRITICAL_MARKS_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GLAGOLITIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_C: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COPTIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GEORGIAN_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TIFINAGH: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_PUNCTUATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_STROKES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LISU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VAI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BAMUM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MODIFIER_TONE_LETTERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_D: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SYLOTI_NAGRI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMMON_INDIC_NUMBER_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PHAGS_PA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SAURASHTRA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DEVANAGARI_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KAYAH_LI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var REJANG: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANGUL_JAMO_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var JAVANESE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MYANMAR_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAI_VIET: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MEETEI_MAYEK: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANGUL_JAMO_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VERTICAL_FORMS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ANCIENT_GREEK_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ANCIENT_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PHAISTOS_DISC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LYCIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CARIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_PERSIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var IMPERIAL_ARAMAIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PHOENICIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LYDIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHAROSHTHI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_SOUTH_ARABIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var AVESTAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var INSCRIPTIONAL_PARTHIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var INSCRIPTIONAL_PAHLAVI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_TURKIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var RUMI_NUMERAL_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BRAHMI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KAITHI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CUNEIFORM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CUNEIFORM_NUMBERS_AND_PUNCTUATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var EGYPTIAN_HIEROGLYPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BAMUM_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANA_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ANCIENT_GREEK_MUSICAL_NOTATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COUNTING_ROD_NUMERALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MAHJONG_TILES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DOMINO_TILES: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PLAYING_CARDS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ENCLOSED_ALPHANUMERIC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ENCLOSED_IDEOGRAPHIC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var EMOTICONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TRANSPORT_AND_MAP_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ALCHEMICAL_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUNDANESE_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MEETEI_MAYEK_EXTENSIONS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MEROITIC_HIEROGLYPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MEROITIC_CURSIVE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SORA_SOMPENG: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHAKMA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SHARADA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAKRI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MIAO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COMBINING_DIACRITICAL_MARKS_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MYANMAR_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_E: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var COPTIC_EPACT_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_PERMIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ELBASAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CAUCASIAN_ALBANIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LINEAR_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PALMYRENE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NABATAEAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_NORTH_ARABIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MANICHAEAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PSALTER_PAHLAVI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MAHAJANI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SINHALA_ARCHAIC_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHOJKI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHUDAWADI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GRANTHA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TIRHUTA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SIDDHAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MODI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var WARANG_CITI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PAU_CIN_HAU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MRO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BASSA_VAH: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var PAHAWH_HMONG: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DUPLOYAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SHORTHAND_FORMAT_CONTROLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MENDE_KIKAKUI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ORNAMENTAL_DINGBATS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GEOMETRIC_SHAPES_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_ARROWS_C: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHEROKEE_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HATRAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_HUNGARIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MULTANI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var AHOM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var EARLY_DYNASTIC_CUNEIFORM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ANATOLIAN_HIEROGLYPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUTTON_SIGNWRITING: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SYRIAC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC_EXTENDED_C: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OSAGE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NEWA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MONGOLIAN_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MARCHEN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var IDEOGRAPHIC_SYMBOLS_AND_PUNCTUATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TANGUT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TANGUT_COMPONENTS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANA_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GLAGOLITIC_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ADLAM: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MASARAM_GONDI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ZANABAZAR_SQUARE: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NUSHU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SOYOMBO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var BHAIKSUKI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_F: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GEORGIAN_EXTENDED: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var HANIFI_ROHINGYA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_SOGDIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SOGDIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DOGRA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var GUNJALA_GONDI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MAKASAR: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MEDEFAIDRIN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var MAYAN_NUMERALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var INDIC_SIYAQ_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHESS_SYMBOLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ELYMAIC: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NANDINAGARI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TAMIL_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SMALL_KANA_EXTENSION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NYIAKENG_PUACHUE_HMONG: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var WANCHO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OTTOMAN_SIYAQ_NUMBERS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SYMBOLS_AND_PICTOGRAPHS_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var YEZIDI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CHORASMIAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DIVES_AKURU: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LISU_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KHITAN_SMALL_SCRIPT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TANGUT_SUPPLEMENT: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var SYMBOLS_FOR_LEGACY_COMPUTING: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_G: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var VITHKUQI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_F: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var OLD_UYGHUR: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYPRO_MINOAN: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TANGSA: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KANA_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ZNAMENNY_MUSICAL_NOTATION: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var LATIN_EXTENDED_G: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var TOTO: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC_EXTENDED_B: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var ARABIC_EXTENDED_C: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var DEVANAGARI_EXTENDED_A: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KAWI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var KAKTOVIK_NUMERALS: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC_EXTENDED_D: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var NAG_MUNDARI: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H: JavaCharacter.UnicodeBlock!

  @JavaStaticField(isFinal: true)
  public var CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I: JavaCharacter.UnicodeBlock!

  @JavaStaticMethod
  public fn forName(_ arg0: String) -> JavaCharacter.UnicodeBlock!

  @JavaStaticMethod
  public fn of(_ arg0: Int32) -> JavaCharacter.UnicodeBlock!

  @JavaStaticMethod
  public fn of(_ arg0: UInt16) -> JavaCharacter.UnicodeBlock!
}
extension JavaCharacter {
  @JavaClass("java.lang.Character$UnicodeScript")
  open class UnicodeScript: JavaObject {
    public enum UnicodeScriptCases: Equatable {
      case COMMON
  case LATIN
  case GREEK
  case CYRILLIC
  case ARMENIAN
  case HEBREW
  case ARABIC
  case SYRIAC
  case THAANA
  case DEVANAGARI
  case BENGALI
  case GURMUKHI
  case GUJARATI
  case ORIYA
  case TAMIL
  case TELUGU
  case KANNADA
  case MALAYALAM
  case SINHALA
  case THAI
  case LAO
  case TIBETAN
  case MYANMAR
  case GEORGIAN
  case HANGUL
  case ETHIOPIC
  case CHEROKEE
  case CANADIAN_ABORIGINAL
  case OGHAM
  case RUNIC
  case KHMER
  case MONGOLIAN
  case HIRAGANA
  case KATAKANA
  case BOPOMOFO
  case HAN
  case YI
  case OLD_ITALIC
  case GOTHIC
  case DESERET
  case INHERITED
  case TAGALOG
  case HANUNOO
  case BUHID
  case TAGBANWA
  case LIMBU
  case TAI_LE
  case LINEAR_B
  case UGARITIC
  case SHAVIAN
  case OSMANYA
  case CYPRIOT
  case BRAILLE
  case BUGINESE
  case COPTIC
  case NEW_TAI_LUE
  case GLAGOLITIC
  case TIFINAGH
  case SYLOTI_NAGRI
  case OLD_PERSIAN
  case KHAROSHTHI
  case BALINESE
  case CUNEIFORM
  case PHOENICIAN
  case PHAGS_PA
  case NKO
  case SUNDANESE
  case BATAK
  case LEPCHA
  case OL_CHIKI
  case VAI
  case SAURASHTRA
  case KAYAH_LI
  case REJANG
  case LYCIAN
  case CARIAN
  case LYDIAN
  case CHAM
  case TAI_THAM
  case TAI_VIET
  case AVESTAN
  case EGYPTIAN_HIEROGLYPHS
  case SAMARITAN
  case MANDAIC
  case LISU
  case BAMUM
  case JAVANESE
  case MEETEI_MAYEK
  case IMPERIAL_ARAMAIC
  case OLD_SOUTH_ARABIAN
  case INSCRIPTIONAL_PARTHIAN
  case INSCRIPTIONAL_PAHLAVI
  case OLD_TURKIC
  case BRAHMI
  case KAITHI
  case MEROITIC_HIEROGLYPHS
  case MEROITIC_CURSIVE
  case SORA_SOMPENG
  case CHAKMA
  case SHARADA
  case TAKRI
  case MIAO
  case CAUCASIAN_ALBANIAN
  case BASSA_VAH
  case DUPLOYAN
  case ELBASAN
  case GRANTHA
  case PAHAWH_HMONG
  case KHOJKI
  case LINEAR_A
  case MAHAJANI
  case MANICHAEAN
  case MENDE_KIKAKUI
  case MODI
  case MRO
  case OLD_NORTH_ARABIAN
  case NABATAEAN
  case PALMYRENE
  case PAU_CIN_HAU
  case OLD_PERMIC
  case PSALTER_PAHLAVI
  case SIDDHAM
  case KHUDAWADI
  case TIRHUTA
  case WARANG_CITI
  case AHOM
  case ANATOLIAN_HIEROGLYPHS
  case HATRAN
  case MULTANI
  case OLD_HUNGARIAN
  case SIGNWRITING
  case ADLAM
  case BHAIKSUKI
  case MARCHEN
  case NEWA
  case OSAGE
  case TANGUT
  case MASARAM_GONDI
  case NUSHU
  case SOYOMBO
  case ZANABAZAR_SQUARE
  case HANIFI_ROHINGYA
  case OLD_SOGDIAN
  case SOGDIAN
  case DOGRA
  case GUNJALA_GONDI
  case MAKASAR
  case MEDEFAIDRIN
  case ELYMAIC
  case NANDINAGARI
  case NYIAKENG_PUACHUE_HMONG
  case WANCHO
  case YEZIDI
  case CHORASMIAN
  case DIVES_AKURU
  case KHITAN_SMALL_SCRIPT
  case VITHKUQI
  case OLD_UYGHUR
  case CYPRO_MINOAN
  case TANGSA
  case TOTO
  case KAWI
  case NAG_MUNDARI
  case UNKNOWN
    }

    public var enumValue: UnicodeScriptCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.COMMON?.as(JavaObject.this)) {
        return UnicodeScriptCases.COMMON
  } else if this.equals(classObj.LATIN?.as(JavaObject.this)) {
        return UnicodeScriptCases.LATIN
  } else if this.equals(classObj.GREEK?.as(JavaObject.this)) {
        return UnicodeScriptCases.GREEK
  } else if this.equals(classObj.CYRILLIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.CYRILLIC
  } else if this.equals(classObj.ARMENIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.ARMENIAN
  } else if this.equals(classObj.HEBREW?.as(JavaObject.this)) {
        return UnicodeScriptCases.HEBREW
  } else if this.equals(classObj.ARABIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.ARABIC
  } else if this.equals(classObj.SYRIAC?.as(JavaObject.this)) {
        return UnicodeScriptCases.SYRIAC
  } else if this.equals(classObj.THAANA?.as(JavaObject.this)) {
        return UnicodeScriptCases.THAANA
  } else if this.equals(classObj.DEVANAGARI?.as(JavaObject.this)) {
        return UnicodeScriptCases.DEVANAGARI
  } else if this.equals(classObj.BENGALI?.as(JavaObject.this)) {
        return UnicodeScriptCases.BENGALI
  } else if this.equals(classObj.GURMUKHI?.as(JavaObject.this)) {
        return UnicodeScriptCases.GURMUKHI
  } else if this.equals(classObj.GUJARATI?.as(JavaObject.this)) {
        return UnicodeScriptCases.GUJARATI
  } else if this.equals(classObj.ORIYA?.as(JavaObject.this)) {
        return UnicodeScriptCases.ORIYA
  } else if this.equals(classObj.TAMIL?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAMIL
  } else if this.equals(classObj.TELUGU?.as(JavaObject.this)) {
        return UnicodeScriptCases.TELUGU
  } else if this.equals(classObj.KANNADA?.as(JavaObject.this)) {
        return UnicodeScriptCases.KANNADA
  } else if this.equals(classObj.MALAYALAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.MALAYALAM
  } else if this.equals(classObj.SINHALA?.as(JavaObject.this)) {
        return UnicodeScriptCases.SINHALA
  } else if this.equals(classObj.THAI?.as(JavaObject.this)) {
        return UnicodeScriptCases.THAI
  } else if this.equals(classObj.LAO?.as(JavaObject.this)) {
        return UnicodeScriptCases.LAO
  } else if this.equals(classObj.TIBETAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.TIBETAN
  } else if this.equals(classObj.MYANMAR?.as(JavaObject.this)) {
        return UnicodeScriptCases.MYANMAR
  } else if this.equals(classObj.GEORGIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.GEORGIAN
  } else if this.equals(classObj.HANGUL?.as(JavaObject.this)) {
        return UnicodeScriptCases.HANGUL
  } else if this.equals(classObj.ETHIOPIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.ETHIOPIC
  } else if this.equals(classObj.CHEROKEE?.as(JavaObject.this)) {
        return UnicodeScriptCases.CHEROKEE
  } else if this.equals(classObj.CANADIAN_ABORIGINAL?.as(JavaObject.this)) {
        return UnicodeScriptCases.CANADIAN_ABORIGINAL
  } else if this.equals(classObj.OGHAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.OGHAM
  } else if this.equals(classObj.RUNIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.RUNIC
  } else if this.equals(classObj.KHMER?.as(JavaObject.this)) {
        return UnicodeScriptCases.KHMER
  } else if this.equals(classObj.MONGOLIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.MONGOLIAN
  } else if this.equals(classObj.HIRAGANA?.as(JavaObject.this)) {
        return UnicodeScriptCases.HIRAGANA
  } else if this.equals(classObj.KATAKANA?.as(JavaObject.this)) {
        return UnicodeScriptCases.KATAKANA
  } else if this.equals(classObj.BOPOMOFO?.as(JavaObject.this)) {
        return UnicodeScriptCases.BOPOMOFO
  } else if this.equals(classObj.HAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.HAN
  } else if this.equals(classObj.YI?.as(JavaObject.this)) {
        return UnicodeScriptCases.YI
  } else if this.equals(classObj.OLD_ITALIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_ITALIC
  } else if this.equals(classObj.GOTHIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.GOTHIC
  } else if this.equals(classObj.DESERET?.as(JavaObject.this)) {
        return UnicodeScriptCases.DESERET
  } else if this.equals(classObj.INHERITED?.as(JavaObject.this)) {
        return UnicodeScriptCases.INHERITED
  } else if this.equals(classObj.TAGALOG?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAGALOG
  } else if this.equals(classObj.HANUNOO?.as(JavaObject.this)) {
        return UnicodeScriptCases.HANUNOO
  } else if this.equals(classObj.BUHID?.as(JavaObject.this)) {
        return UnicodeScriptCases.BUHID
  } else if this.equals(classObj.TAGBANWA?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAGBANWA
  } else if this.equals(classObj.LIMBU?.as(JavaObject.this)) {
        return UnicodeScriptCases.LIMBU
  } else if this.equals(classObj.TAI_LE?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAI_LE
  } else if this.equals(classObj.LINEAR_B?.as(JavaObject.this)) {
        return UnicodeScriptCases.LINEAR_B
  } else if this.equals(classObj.UGARITIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.UGARITIC
  } else if this.equals(classObj.SHAVIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.SHAVIAN
  } else if this.equals(classObj.OSMANYA?.as(JavaObject.this)) {
        return UnicodeScriptCases.OSMANYA
  } else if this.equals(classObj.CYPRIOT?.as(JavaObject.this)) {
        return UnicodeScriptCases.CYPRIOT
  } else if this.equals(classObj.BRAILLE?.as(JavaObject.this)) {
        return UnicodeScriptCases.BRAILLE
  } else if this.equals(classObj.BUGINESE?.as(JavaObject.this)) {
        return UnicodeScriptCases.BUGINESE
  } else if this.equals(classObj.COPTIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.COPTIC
  } else if this.equals(classObj.NEW_TAI_LUE?.as(JavaObject.this)) {
        return UnicodeScriptCases.NEW_TAI_LUE
  } else if this.equals(classObj.GLAGOLITIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.GLAGOLITIC
  } else if this.equals(classObj.TIFINAGH?.as(JavaObject.this)) {
        return UnicodeScriptCases.TIFINAGH
  } else if this.equals(classObj.SYLOTI_NAGRI?.as(JavaObject.this)) {
        return UnicodeScriptCases.SYLOTI_NAGRI
  } else if this.equals(classObj.OLD_PERSIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_PERSIAN
  } else if this.equals(classObj.KHAROSHTHI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KHAROSHTHI
  } else if this.equals(classObj.BALINESE?.as(JavaObject.this)) {
        return UnicodeScriptCases.BALINESE
  } else if this.equals(classObj.CUNEIFORM?.as(JavaObject.this)) {
        return UnicodeScriptCases.CUNEIFORM
  } else if this.equals(classObj.PHOENICIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.PHOENICIAN
  } else if this.equals(classObj.PHAGS_PA?.as(JavaObject.this)) {
        return UnicodeScriptCases.PHAGS_PA
  } else if this.equals(classObj.NKO?.as(JavaObject.this)) {
        return UnicodeScriptCases.NKO
  } else if this.equals(classObj.SUNDANESE?.as(JavaObject.this)) {
        return UnicodeScriptCases.SUNDANESE
  } else if this.equals(classObj.BATAK?.as(JavaObject.this)) {
        return UnicodeScriptCases.BATAK
  } else if this.equals(classObj.LEPCHA?.as(JavaObject.this)) {
        return UnicodeScriptCases.LEPCHA
  } else if this.equals(classObj.OL_CHIKI?.as(JavaObject.this)) {
        return UnicodeScriptCases.OL_CHIKI
  } else if this.equals(classObj.VAI?.as(JavaObject.this)) {
        return UnicodeScriptCases.VAI
  } else if this.equals(classObj.SAURASHTRA?.as(JavaObject.this)) {
        return UnicodeScriptCases.SAURASHTRA
  } else if this.equals(classObj.KAYAH_LI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KAYAH_LI
  } else if this.equals(classObj.REJANG?.as(JavaObject.this)) {
        return UnicodeScriptCases.REJANG
  } else if this.equals(classObj.LYCIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.LYCIAN
  } else if this.equals(classObj.CARIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.CARIAN
  } else if this.equals(classObj.LYDIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.LYDIAN
  } else if this.equals(classObj.CHAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.CHAM
  } else if this.equals(classObj.TAI_THAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAI_THAM
  } else if this.equals(classObj.TAI_VIET?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAI_VIET
  } else if this.equals(classObj.AVESTAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.AVESTAN
  } else if this.equals(classObj.EGYPTIAN_HIEROGLYPHS?.as(JavaObject.this)) {
        return UnicodeScriptCases.EGYPTIAN_HIEROGLYPHS
  } else if this.equals(classObj.SAMARITAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.SAMARITAN
  } else if this.equals(classObj.MANDAIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.MANDAIC
  } else if this.equals(classObj.LISU?.as(JavaObject.this)) {
        return UnicodeScriptCases.LISU
  } else if this.equals(classObj.BAMUM?.as(JavaObject.this)) {
        return UnicodeScriptCases.BAMUM
  } else if this.equals(classObj.JAVANESE?.as(JavaObject.this)) {
        return UnicodeScriptCases.JAVANESE
  } else if this.equals(classObj.MEETEI_MAYEK?.as(JavaObject.this)) {
        return UnicodeScriptCases.MEETEI_MAYEK
  } else if this.equals(classObj.IMPERIAL_ARAMAIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.IMPERIAL_ARAMAIC
  } else if this.equals(classObj.OLD_SOUTH_ARABIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_SOUTH_ARABIAN
  } else if this.equals(classObj.INSCRIPTIONAL_PARTHIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.INSCRIPTIONAL_PARTHIAN
  } else if this.equals(classObj.INSCRIPTIONAL_PAHLAVI?.as(JavaObject.this)) {
        return UnicodeScriptCases.INSCRIPTIONAL_PAHLAVI
  } else if this.equals(classObj.OLD_TURKIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_TURKIC
  } else if this.equals(classObj.BRAHMI?.as(JavaObject.this)) {
        return UnicodeScriptCases.BRAHMI
  } else if this.equals(classObj.KAITHI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KAITHI
  } else if this.equals(classObj.MEROITIC_HIEROGLYPHS?.as(JavaObject.this)) {
        return UnicodeScriptCases.MEROITIC_HIEROGLYPHS
  } else if this.equals(classObj.MEROITIC_CURSIVE?.as(JavaObject.this)) {
        return UnicodeScriptCases.MEROITIC_CURSIVE
  } else if this.equals(classObj.SORA_SOMPENG?.as(JavaObject.this)) {
        return UnicodeScriptCases.SORA_SOMPENG
  } else if this.equals(classObj.CHAKMA?.as(JavaObject.this)) {
        return UnicodeScriptCases.CHAKMA
  } else if this.equals(classObj.SHARADA?.as(JavaObject.this)) {
        return UnicodeScriptCases.SHARADA
  } else if this.equals(classObj.TAKRI?.as(JavaObject.this)) {
        return UnicodeScriptCases.TAKRI
  } else if this.equals(classObj.MIAO?.as(JavaObject.this)) {
        return UnicodeScriptCases.MIAO
  } else if this.equals(classObj.CAUCASIAN_ALBANIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.CAUCASIAN_ALBANIAN
  } else if this.equals(classObj.BASSA_VAH?.as(JavaObject.this)) {
        return UnicodeScriptCases.BASSA_VAH
  } else if this.equals(classObj.DUPLOYAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.DUPLOYAN
  } else if this.equals(classObj.ELBASAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.ELBASAN
  } else if this.equals(classObj.GRANTHA?.as(JavaObject.this)) {
        return UnicodeScriptCases.GRANTHA
  } else if this.equals(classObj.PAHAWH_HMONG?.as(JavaObject.this)) {
        return UnicodeScriptCases.PAHAWH_HMONG
  } else if this.equals(classObj.KHOJKI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KHOJKI
  } else if this.equals(classObj.LINEAR_A?.as(JavaObject.this)) {
        return UnicodeScriptCases.LINEAR_A
  } else if this.equals(classObj.MAHAJANI?.as(JavaObject.this)) {
        return UnicodeScriptCases.MAHAJANI
  } else if this.equals(classObj.MANICHAEAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.MANICHAEAN
  } else if this.equals(classObj.MENDE_KIKAKUI?.as(JavaObject.this)) {
        return UnicodeScriptCases.MENDE_KIKAKUI
  } else if this.equals(classObj.MODI?.as(JavaObject.this)) {
        return UnicodeScriptCases.MODI
  } else if this.equals(classObj.MRO?.as(JavaObject.this)) {
        return UnicodeScriptCases.MRO
  } else if this.equals(classObj.OLD_NORTH_ARABIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_NORTH_ARABIAN
  } else if this.equals(classObj.NABATAEAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.NABATAEAN
  } else if this.equals(classObj.PALMYRENE?.as(JavaObject.this)) {
        return UnicodeScriptCases.PALMYRENE
  } else if this.equals(classObj.PAU_CIN_HAU?.as(JavaObject.this)) {
        return UnicodeScriptCases.PAU_CIN_HAU
  } else if this.equals(classObj.OLD_PERMIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_PERMIC
  } else if this.equals(classObj.PSALTER_PAHLAVI?.as(JavaObject.this)) {
        return UnicodeScriptCases.PSALTER_PAHLAVI
  } else if this.equals(classObj.SIDDHAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.SIDDHAM
  } else if this.equals(classObj.KHUDAWADI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KHUDAWADI
  } else if this.equals(classObj.TIRHUTA?.as(JavaObject.this)) {
        return UnicodeScriptCases.TIRHUTA
  } else if this.equals(classObj.WARANG_CITI?.as(JavaObject.this)) {
        return UnicodeScriptCases.WARANG_CITI
  } else if this.equals(classObj.AHOM?.as(JavaObject.this)) {
        return UnicodeScriptCases.AHOM
  } else if this.equals(classObj.ANATOLIAN_HIEROGLYPHS?.as(JavaObject.this)) {
        return UnicodeScriptCases.ANATOLIAN_HIEROGLYPHS
  } else if this.equals(classObj.HATRAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.HATRAN
  } else if this.equals(classObj.MULTANI?.as(JavaObject.this)) {
        return UnicodeScriptCases.MULTANI
  } else if this.equals(classObj.OLD_HUNGARIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_HUNGARIAN
  } else if this.equals(classObj.SIGNWRITING?.as(JavaObject.this)) {
        return UnicodeScriptCases.SIGNWRITING
  } else if this.equals(classObj.ADLAM?.as(JavaObject.this)) {
        return UnicodeScriptCases.ADLAM
  } else if this.equals(classObj.BHAIKSUKI?.as(JavaObject.this)) {
        return UnicodeScriptCases.BHAIKSUKI
  } else if this.equals(classObj.MARCHEN?.as(JavaObject.this)) {
        return UnicodeScriptCases.MARCHEN
  } else if this.equals(classObj.NEWA?.as(JavaObject.this)) {
        return UnicodeScriptCases.NEWA
  } else if this.equals(classObj.OSAGE?.as(JavaObject.this)) {
        return UnicodeScriptCases.OSAGE
  } else if this.equals(classObj.TANGUT?.as(JavaObject.this)) {
        return UnicodeScriptCases.TANGUT
  } else if this.equals(classObj.MASARAM_GONDI?.as(JavaObject.this)) {
        return UnicodeScriptCases.MASARAM_GONDI
  } else if this.equals(classObj.NUSHU?.as(JavaObject.this)) {
        return UnicodeScriptCases.NUSHU
  } else if this.equals(classObj.SOYOMBO?.as(JavaObject.this)) {
        return UnicodeScriptCases.SOYOMBO
  } else if this.equals(classObj.ZANABAZAR_SQUARE?.as(JavaObject.this)) {
        return UnicodeScriptCases.ZANABAZAR_SQUARE
  } else if this.equals(classObj.HANIFI_ROHINGYA?.as(JavaObject.this)) {
        return UnicodeScriptCases.HANIFI_ROHINGYA
  } else if this.equals(classObj.OLD_SOGDIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_SOGDIAN
  } else if this.equals(classObj.SOGDIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.SOGDIAN
  } else if this.equals(classObj.DOGRA?.as(JavaObject.this)) {
        return UnicodeScriptCases.DOGRA
  } else if this.equals(classObj.GUNJALA_GONDI?.as(JavaObject.this)) {
        return UnicodeScriptCases.GUNJALA_GONDI
  } else if this.equals(classObj.MAKASAR?.as(JavaObject.this)) {
        return UnicodeScriptCases.MAKASAR
  } else if this.equals(classObj.MEDEFAIDRIN?.as(JavaObject.this)) {
        return UnicodeScriptCases.MEDEFAIDRIN
  } else if this.equals(classObj.ELYMAIC?.as(JavaObject.this)) {
        return UnicodeScriptCases.ELYMAIC
  } else if this.equals(classObj.NANDINAGARI?.as(JavaObject.this)) {
        return UnicodeScriptCases.NANDINAGARI
  } else if this.equals(classObj.NYIAKENG_PUACHUE_HMONG?.as(JavaObject.this)) {
        return UnicodeScriptCases.NYIAKENG_PUACHUE_HMONG
  } else if this.equals(classObj.WANCHO?.as(JavaObject.this)) {
        return UnicodeScriptCases.WANCHO
  } else if this.equals(classObj.YEZIDI?.as(JavaObject.this)) {
        return UnicodeScriptCases.YEZIDI
  } else if this.equals(classObj.CHORASMIAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.CHORASMIAN
  } else if this.equals(classObj.DIVES_AKURU?.as(JavaObject.this)) {
        return UnicodeScriptCases.DIVES_AKURU
  } else if this.equals(classObj.KHITAN_SMALL_SCRIPT?.as(JavaObject.this)) {
        return UnicodeScriptCases.KHITAN_SMALL_SCRIPT
  } else if this.equals(classObj.VITHKUQI?.as(JavaObject.this)) {
        return UnicodeScriptCases.VITHKUQI
  } else if this.equals(classObj.OLD_UYGHUR?.as(JavaObject.this)) {
        return UnicodeScriptCases.OLD_UYGHUR
  } else if this.equals(classObj.CYPRO_MINOAN?.as(JavaObject.this)) {
        return UnicodeScriptCases.CYPRO_MINOAN
  } else if this.equals(classObj.TANGSA?.as(JavaObject.this)) {
        return UnicodeScriptCases.TANGSA
  } else if this.equals(classObj.TOTO?.as(JavaObject.this)) {
        return UnicodeScriptCases.TOTO
  } else if this.equals(classObj.KAWI?.as(JavaObject.this)) {
        return UnicodeScriptCases.KAWI
  } else if this.equals(classObj.NAG_MUNDARI?.as(JavaObject.this)) {
        return UnicodeScriptCases.NAG_MUNDARI
  } else if this.equals(classObj.UNKNOWN?.as(JavaObject.this)) {
        return UnicodeScriptCases.UNKNOWN
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: UnicodeScriptCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<UnicodeScript>(environment: _environment)
    switch enumValue {
      case .COMMON:
        if immutable COMMON = classObj.COMMON {
          this.init(javaHolder: COMMON.javaHolder)
        } else {
          fatalError("Enum value COMMON was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LATIN:
        if immutable LATIN = classObj.LATIN {
          this.init(javaHolder: LATIN.javaHolder)
        } else {
          fatalError("Enum value LATIN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GREEK:
        if immutable GREEK = classObj.GREEK {
          this.init(javaHolder: GREEK.javaHolder)
        } else {
          fatalError("Enum value GREEK was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CYRILLIC:
        if immutable CYRILLIC = classObj.CYRILLIC {
          this.init(javaHolder: CYRILLIC.javaHolder)
        } else {
          fatalError("Enum value CYRILLIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ARMENIAN:
        if immutable ARMENIAN = classObj.ARMENIAN {
          this.init(javaHolder: ARMENIAN.javaHolder)
        } else {
          fatalError("Enum value ARMENIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HEBREW:
        if immutable HEBREW = classObj.HEBREW {
          this.init(javaHolder: HEBREW.javaHolder)
        } else {
          fatalError("Enum value HEBREW was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ARABIC:
        if immutable ARABIC = classObj.ARABIC {
          this.init(javaHolder: ARABIC.javaHolder)
        } else {
          fatalError("Enum value ARABIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SYRIAC:
        if immutable SYRIAC = classObj.SYRIAC {
          this.init(javaHolder: SYRIAC.javaHolder)
        } else {
          fatalError("Enum value SYRIAC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .THAANA:
        if immutable THAANA = classObj.THAANA {
          this.init(javaHolder: THAANA.javaHolder)
        } else {
          fatalError("Enum value THAANA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .DEVANAGARI:
        if immutable DEVANAGARI = classObj.DEVANAGARI {
          this.init(javaHolder: DEVANAGARI.javaHolder)
        } else {
          fatalError("Enum value DEVANAGARI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BENGALI:
        if immutable BENGALI = classObj.BENGALI {
          this.init(javaHolder: BENGALI.javaHolder)
        } else {
          fatalError("Enum value BENGALI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GURMUKHI:
        if immutable GURMUKHI = classObj.GURMUKHI {
          this.init(javaHolder: GURMUKHI.javaHolder)
        } else {
          fatalError("Enum value GURMUKHI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GUJARATI:
        if immutable GUJARATI = classObj.GUJARATI {
          this.init(javaHolder: GUJARATI.javaHolder)
        } else {
          fatalError("Enum value GUJARATI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ORIYA:
        if immutable ORIYA = classObj.ORIYA {
          this.init(javaHolder: ORIYA.javaHolder)
        } else {
          fatalError("Enum value ORIYA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAMIL:
        if immutable TAMIL = classObj.TAMIL {
          this.init(javaHolder: TAMIL.javaHolder)
        } else {
          fatalError("Enum value TAMIL was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TELUGU:
        if immutable TELUGU = classObj.TELUGU {
          this.init(javaHolder: TELUGU.javaHolder)
        } else {
          fatalError("Enum value TELUGU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KANNADA:
        if immutable KANNADA = classObj.KANNADA {
          this.init(javaHolder: KANNADA.javaHolder)
        } else {
          fatalError("Enum value KANNADA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MALAYALAM:
        if immutable MALAYALAM = classObj.MALAYALAM {
          this.init(javaHolder: MALAYALAM.javaHolder)
        } else {
          fatalError("Enum value MALAYALAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SINHALA:
        if immutable SINHALA = classObj.SINHALA {
          this.init(javaHolder: SINHALA.javaHolder)
        } else {
          fatalError("Enum value SINHALA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .THAI:
        if immutable THAI = classObj.THAI {
          this.init(javaHolder: THAI.javaHolder)
        } else {
          fatalError("Enum value THAI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LAO:
        if immutable LAO = classObj.LAO {
          this.init(javaHolder: LAO.javaHolder)
        } else {
          fatalError("Enum value LAO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TIBETAN:
        if immutable TIBETAN = classObj.TIBETAN {
          this.init(javaHolder: TIBETAN.javaHolder)
        } else {
          fatalError("Enum value TIBETAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MYANMAR:
        if immutable MYANMAR = classObj.MYANMAR {
          this.init(javaHolder: MYANMAR.javaHolder)
        } else {
          fatalError("Enum value MYANMAR was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GEORGIAN:
        if immutable GEORGIAN = classObj.GEORGIAN {
          this.init(javaHolder: GEORGIAN.javaHolder)
        } else {
          fatalError("Enum value GEORGIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HANGUL:
        if immutable HANGUL = classObj.HANGUL {
          this.init(javaHolder: HANGUL.javaHolder)
        } else {
          fatalError("Enum value HANGUL was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ETHIOPIC:
        if immutable ETHIOPIC = classObj.ETHIOPIC {
          this.init(javaHolder: ETHIOPIC.javaHolder)
        } else {
          fatalError("Enum value ETHIOPIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CHEROKEE:
        if immutable CHEROKEE = classObj.CHEROKEE {
          this.init(javaHolder: CHEROKEE.javaHolder)
        } else {
          fatalError("Enum value CHEROKEE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CANADIAN_ABORIGINAL:
        if immutable CANADIAN_ABORIGINAL = classObj.CANADIAN_ABORIGINAL {
          this.init(javaHolder: CANADIAN_ABORIGINAL.javaHolder)
        } else {
          fatalError("Enum value CANADIAN_ABORIGINAL was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OGHAM:
        if immutable OGHAM = classObj.OGHAM {
          this.init(javaHolder: OGHAM.javaHolder)
        } else {
          fatalError("Enum value OGHAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .RUNIC:
        if immutable RUNIC = classObj.RUNIC {
          this.init(javaHolder: RUNIC.javaHolder)
        } else {
          fatalError("Enum value RUNIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KHMER:
        if immutable KHMER = classObj.KHMER {
          this.init(javaHolder: KHMER.javaHolder)
        } else {
          fatalError("Enum value KHMER was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MONGOLIAN:
        if immutable MONGOLIAN = classObj.MONGOLIAN {
          this.init(javaHolder: MONGOLIAN.javaHolder)
        } else {
          fatalError("Enum value MONGOLIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HIRAGANA:
        if immutable HIRAGANA = classObj.HIRAGANA {
          this.init(javaHolder: HIRAGANA.javaHolder)
        } else {
          fatalError("Enum value HIRAGANA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KATAKANA:
        if immutable KATAKANA = classObj.KATAKANA {
          this.init(javaHolder: KATAKANA.javaHolder)
        } else {
          fatalError("Enum value KATAKANA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BOPOMOFO:
        if immutable BOPOMOFO = classObj.BOPOMOFO {
          this.init(javaHolder: BOPOMOFO.javaHolder)
        } else {
          fatalError("Enum value BOPOMOFO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HAN:
        if immutable HAN = classObj.HAN {
          this.init(javaHolder: HAN.javaHolder)
        } else {
          fatalError("Enum value HAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .YI:
        if immutable YI = classObj.YI {
          this.init(javaHolder: YI.javaHolder)
        } else {
          fatalError("Enum value YI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_ITALIC:
        if immutable OLD_ITALIC = classObj.OLD_ITALIC {
          this.init(javaHolder: OLD_ITALIC.javaHolder)
        } else {
          fatalError("Enum value OLD_ITALIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GOTHIC:
        if immutable GOTHIC = classObj.GOTHIC {
          this.init(javaHolder: GOTHIC.javaHolder)
        } else {
          fatalError("Enum value GOTHIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .DESERET:
        if immutable DESERET = classObj.DESERET {
          this.init(javaHolder: DESERET.javaHolder)
        } else {
          fatalError("Enum value DESERET was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .INHERITED:
        if immutable INHERITED = classObj.INHERITED {
          this.init(javaHolder: INHERITED.javaHolder)
        } else {
          fatalError("Enum value INHERITED was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAGALOG:
        if immutable TAGALOG = classObj.TAGALOG {
          this.init(javaHolder: TAGALOG.javaHolder)
        } else {
          fatalError("Enum value TAGALOG was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HANUNOO:
        if immutable HANUNOO = classObj.HANUNOO {
          this.init(javaHolder: HANUNOO.javaHolder)
        } else {
          fatalError("Enum value HANUNOO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BUHID:
        if immutable BUHID = classObj.BUHID {
          this.init(javaHolder: BUHID.javaHolder)
        } else {
          fatalError("Enum value BUHID was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAGBANWA:
        if immutable TAGBANWA = classObj.TAGBANWA {
          this.init(javaHolder: TAGBANWA.javaHolder)
        } else {
          fatalError("Enum value TAGBANWA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LIMBU:
        if immutable LIMBU = classObj.LIMBU {
          this.init(javaHolder: LIMBU.javaHolder)
        } else {
          fatalError("Enum value LIMBU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAI_LE:
        if immutable TAI_LE = classObj.TAI_LE {
          this.init(javaHolder: TAI_LE.javaHolder)
        } else {
          fatalError("Enum value TAI_LE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LINEAR_B:
        if immutable LINEAR_B = classObj.LINEAR_B {
          this.init(javaHolder: LINEAR_B.javaHolder)
        } else {
          fatalError("Enum value LINEAR_B was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .UGARITIC:
        if immutable UGARITIC = classObj.UGARITIC {
          this.init(javaHolder: UGARITIC.javaHolder)
        } else {
          fatalError("Enum value UGARITIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SHAVIAN:
        if immutable SHAVIAN = classObj.SHAVIAN {
          this.init(javaHolder: SHAVIAN.javaHolder)
        } else {
          fatalError("Enum value SHAVIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OSMANYA:
        if immutable OSMANYA = classObj.OSMANYA {
          this.init(javaHolder: OSMANYA.javaHolder)
        } else {
          fatalError("Enum value OSMANYA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CYPRIOT:
        if immutable CYPRIOT = classObj.CYPRIOT {
          this.init(javaHolder: CYPRIOT.javaHolder)
        } else {
          fatalError("Enum value CYPRIOT was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BRAILLE:
        if immutable BRAILLE = classObj.BRAILLE {
          this.init(javaHolder: BRAILLE.javaHolder)
        } else {
          fatalError("Enum value BRAILLE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BUGINESE:
        if immutable BUGINESE = classObj.BUGINESE {
          this.init(javaHolder: BUGINESE.javaHolder)
        } else {
          fatalError("Enum value BUGINESE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .COPTIC:
        if immutable COPTIC = classObj.COPTIC {
          this.init(javaHolder: COPTIC.javaHolder)
        } else {
          fatalError("Enum value COPTIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NEW_TAI_LUE:
        if immutable NEW_TAI_LUE = classObj.NEW_TAI_LUE {
          this.init(javaHolder: NEW_TAI_LUE.javaHolder)
        } else {
          fatalError("Enum value NEW_TAI_LUE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GLAGOLITIC:
        if immutable GLAGOLITIC = classObj.GLAGOLITIC {
          this.init(javaHolder: GLAGOLITIC.javaHolder)
        } else {
          fatalError("Enum value GLAGOLITIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TIFINAGH:
        if immutable TIFINAGH = classObj.TIFINAGH {
          this.init(javaHolder: TIFINAGH.javaHolder)
        } else {
          fatalError("Enum value TIFINAGH was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SYLOTI_NAGRI:
        if immutable SYLOTI_NAGRI = classObj.SYLOTI_NAGRI {
          this.init(javaHolder: SYLOTI_NAGRI.javaHolder)
        } else {
          fatalError("Enum value SYLOTI_NAGRI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_PERSIAN:
        if immutable OLD_PERSIAN = classObj.OLD_PERSIAN {
          this.init(javaHolder: OLD_PERSIAN.javaHolder)
        } else {
          fatalError("Enum value OLD_PERSIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KHAROSHTHI:
        if immutable KHAROSHTHI = classObj.KHAROSHTHI {
          this.init(javaHolder: KHAROSHTHI.javaHolder)
        } else {
          fatalError("Enum value KHAROSHTHI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BALINESE:
        if immutable BALINESE = classObj.BALINESE {
          this.init(javaHolder: BALINESE.javaHolder)
        } else {
          fatalError("Enum value BALINESE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CUNEIFORM:
        if immutable CUNEIFORM = classObj.CUNEIFORM {
          this.init(javaHolder: CUNEIFORM.javaHolder)
        } else {
          fatalError("Enum value CUNEIFORM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PHOENICIAN:
        if immutable PHOENICIAN = classObj.PHOENICIAN {
          this.init(javaHolder: PHOENICIAN.javaHolder)
        } else {
          fatalError("Enum value PHOENICIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PHAGS_PA:
        if immutable PHAGS_PA = classObj.PHAGS_PA {
          this.init(javaHolder: PHAGS_PA.javaHolder)
        } else {
          fatalError("Enum value PHAGS_PA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NKO:
        if immutable NKO = classObj.NKO {
          this.init(javaHolder: NKO.javaHolder)
        } else {
          fatalError("Enum value NKO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SUNDANESE:
        if immutable SUNDANESE = classObj.SUNDANESE {
          this.init(javaHolder: SUNDANESE.javaHolder)
        } else {
          fatalError("Enum value SUNDANESE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BATAK:
        if immutable BATAK = classObj.BATAK {
          this.init(javaHolder: BATAK.javaHolder)
        } else {
          fatalError("Enum value BATAK was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LEPCHA:
        if immutable LEPCHA = classObj.LEPCHA {
          this.init(javaHolder: LEPCHA.javaHolder)
        } else {
          fatalError("Enum value LEPCHA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OL_CHIKI:
        if immutable OL_CHIKI = classObj.OL_CHIKI {
          this.init(javaHolder: OL_CHIKI.javaHolder)
        } else {
          fatalError("Enum value OL_CHIKI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .VAI:
        if immutable VAI = classObj.VAI {
          this.init(javaHolder: VAI.javaHolder)
        } else {
          fatalError("Enum value VAI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SAURASHTRA:
        if immutable SAURASHTRA = classObj.SAURASHTRA {
          this.init(javaHolder: SAURASHTRA.javaHolder)
        } else {
          fatalError("Enum value SAURASHTRA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KAYAH_LI:
        if immutable KAYAH_LI = classObj.KAYAH_LI {
          this.init(javaHolder: KAYAH_LI.javaHolder)
        } else {
          fatalError("Enum value KAYAH_LI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .REJANG:
        if immutable REJANG = classObj.REJANG {
          this.init(javaHolder: REJANG.javaHolder)
        } else {
          fatalError("Enum value REJANG was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LYCIAN:
        if immutable LYCIAN = classObj.LYCIAN {
          this.init(javaHolder: LYCIAN.javaHolder)
        } else {
          fatalError("Enum value LYCIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CARIAN:
        if immutable CARIAN = classObj.CARIAN {
          this.init(javaHolder: CARIAN.javaHolder)
        } else {
          fatalError("Enum value CARIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LYDIAN:
        if immutable LYDIAN = classObj.LYDIAN {
          this.init(javaHolder: LYDIAN.javaHolder)
        } else {
          fatalError("Enum value LYDIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CHAM:
        if immutable CHAM = classObj.CHAM {
          this.init(javaHolder: CHAM.javaHolder)
        } else {
          fatalError("Enum value CHAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAI_THAM:
        if immutable TAI_THAM = classObj.TAI_THAM {
          this.init(javaHolder: TAI_THAM.javaHolder)
        } else {
          fatalError("Enum value TAI_THAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAI_VIET:
        if immutable TAI_VIET = classObj.TAI_VIET {
          this.init(javaHolder: TAI_VIET.javaHolder)
        } else {
          fatalError("Enum value TAI_VIET was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .AVESTAN:
        if immutable AVESTAN = classObj.AVESTAN {
          this.init(javaHolder: AVESTAN.javaHolder)
        } else {
          fatalError("Enum value AVESTAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .EGYPTIAN_HIEROGLYPHS:
        if immutable EGYPTIAN_HIEROGLYPHS = classObj.EGYPTIAN_HIEROGLYPHS {
          this.init(javaHolder: EGYPTIAN_HIEROGLYPHS.javaHolder)
        } else {
          fatalError("Enum value EGYPTIAN_HIEROGLYPHS was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SAMARITAN:
        if immutable SAMARITAN = classObj.SAMARITAN {
          this.init(javaHolder: SAMARITAN.javaHolder)
        } else {
          fatalError("Enum value SAMARITAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MANDAIC:
        if immutable MANDAIC = classObj.MANDAIC {
          this.init(javaHolder: MANDAIC.javaHolder)
        } else {
          fatalError("Enum value MANDAIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LISU:
        if immutable LISU = classObj.LISU {
          this.init(javaHolder: LISU.javaHolder)
        } else {
          fatalError("Enum value LISU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BAMUM:
        if immutable BAMUM = classObj.BAMUM {
          this.init(javaHolder: BAMUM.javaHolder)
        } else {
          fatalError("Enum value BAMUM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .JAVANESE:
        if immutable JAVANESE = classObj.JAVANESE {
          this.init(javaHolder: JAVANESE.javaHolder)
        } else {
          fatalError("Enum value JAVANESE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MEETEI_MAYEK:
        if immutable MEETEI_MAYEK = classObj.MEETEI_MAYEK {
          this.init(javaHolder: MEETEI_MAYEK.javaHolder)
        } else {
          fatalError("Enum value MEETEI_MAYEK was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .IMPERIAL_ARAMAIC:
        if immutable IMPERIAL_ARAMAIC = classObj.IMPERIAL_ARAMAIC {
          this.init(javaHolder: IMPERIAL_ARAMAIC.javaHolder)
        } else {
          fatalError("Enum value IMPERIAL_ARAMAIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_SOUTH_ARABIAN:
        if immutable OLD_SOUTH_ARABIAN = classObj.OLD_SOUTH_ARABIAN {
          this.init(javaHolder: OLD_SOUTH_ARABIAN.javaHolder)
        } else {
          fatalError("Enum value OLD_SOUTH_ARABIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .INSCRIPTIONAL_PARTHIAN:
        if immutable INSCRIPTIONAL_PARTHIAN = classObj.INSCRIPTIONAL_PARTHIAN {
          this.init(javaHolder: INSCRIPTIONAL_PARTHIAN.javaHolder)
        } else {
          fatalError("Enum value INSCRIPTIONAL_PARTHIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .INSCRIPTIONAL_PAHLAVI:
        if immutable INSCRIPTIONAL_PAHLAVI = classObj.INSCRIPTIONAL_PAHLAVI {
          this.init(javaHolder: INSCRIPTIONAL_PAHLAVI.javaHolder)
        } else {
          fatalError("Enum value INSCRIPTIONAL_PAHLAVI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_TURKIC:
        if immutable OLD_TURKIC = classObj.OLD_TURKIC {
          this.init(javaHolder: OLD_TURKIC.javaHolder)
        } else {
          fatalError("Enum value OLD_TURKIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BRAHMI:
        if immutable BRAHMI = classObj.BRAHMI {
          this.init(javaHolder: BRAHMI.javaHolder)
        } else {
          fatalError("Enum value BRAHMI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KAITHI:
        if immutable KAITHI = classObj.KAITHI {
          this.init(javaHolder: KAITHI.javaHolder)
        } else {
          fatalError("Enum value KAITHI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MEROITIC_HIEROGLYPHS:
        if immutable MEROITIC_HIEROGLYPHS = classObj.MEROITIC_HIEROGLYPHS {
          this.init(javaHolder: MEROITIC_HIEROGLYPHS.javaHolder)
        } else {
          fatalError("Enum value MEROITIC_HIEROGLYPHS was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MEROITIC_CURSIVE:
        if immutable MEROITIC_CURSIVE = classObj.MEROITIC_CURSIVE {
          this.init(javaHolder: MEROITIC_CURSIVE.javaHolder)
        } else {
          fatalError("Enum value MEROITIC_CURSIVE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SORA_SOMPENG:
        if immutable SORA_SOMPENG = classObj.SORA_SOMPENG {
          this.init(javaHolder: SORA_SOMPENG.javaHolder)
        } else {
          fatalError("Enum value SORA_SOMPENG was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CHAKMA:
        if immutable CHAKMA = classObj.CHAKMA {
          this.init(javaHolder: CHAKMA.javaHolder)
        } else {
          fatalError("Enum value CHAKMA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SHARADA:
        if immutable SHARADA = classObj.SHARADA {
          this.init(javaHolder: SHARADA.javaHolder)
        } else {
          fatalError("Enum value SHARADA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TAKRI:
        if immutable TAKRI = classObj.TAKRI {
          this.init(javaHolder: TAKRI.javaHolder)
        } else {
          fatalError("Enum value TAKRI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MIAO:
        if immutable MIAO = classObj.MIAO {
          this.init(javaHolder: MIAO.javaHolder)
        } else {
          fatalError("Enum value MIAO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CAUCASIAN_ALBANIAN:
        if immutable CAUCASIAN_ALBANIAN = classObj.CAUCASIAN_ALBANIAN {
          this.init(javaHolder: CAUCASIAN_ALBANIAN.javaHolder)
        } else {
          fatalError("Enum value CAUCASIAN_ALBANIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BASSA_VAH:
        if immutable BASSA_VAH = classObj.BASSA_VAH {
          this.init(javaHolder: BASSA_VAH.javaHolder)
        } else {
          fatalError("Enum value BASSA_VAH was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .DUPLOYAN:
        if immutable DUPLOYAN = classObj.DUPLOYAN {
          this.init(javaHolder: DUPLOYAN.javaHolder)
        } else {
          fatalError("Enum value DUPLOYAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ELBASAN:
        if immutable ELBASAN = classObj.ELBASAN {
          this.init(javaHolder: ELBASAN.javaHolder)
        } else {
          fatalError("Enum value ELBASAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GRANTHA:
        if immutable GRANTHA = classObj.GRANTHA {
          this.init(javaHolder: GRANTHA.javaHolder)
        } else {
          fatalError("Enum value GRANTHA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PAHAWH_HMONG:
        if immutable PAHAWH_HMONG = classObj.PAHAWH_HMONG {
          this.init(javaHolder: PAHAWH_HMONG.javaHolder)
        } else {
          fatalError("Enum value PAHAWH_HMONG was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KHOJKI:
        if immutable KHOJKI = classObj.KHOJKI {
          this.init(javaHolder: KHOJKI.javaHolder)
        } else {
          fatalError("Enum value KHOJKI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .LINEAR_A:
        if immutable LINEAR_A = classObj.LINEAR_A {
          this.init(javaHolder: LINEAR_A.javaHolder)
        } else {
          fatalError("Enum value LINEAR_A was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MAHAJANI:
        if immutable MAHAJANI = classObj.MAHAJANI {
          this.init(javaHolder: MAHAJANI.javaHolder)
        } else {
          fatalError("Enum value MAHAJANI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MANICHAEAN:
        if immutable MANICHAEAN = classObj.MANICHAEAN {
          this.init(javaHolder: MANICHAEAN.javaHolder)
        } else {
          fatalError("Enum value MANICHAEAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MENDE_KIKAKUI:
        if immutable MENDE_KIKAKUI = classObj.MENDE_KIKAKUI {
          this.init(javaHolder: MENDE_KIKAKUI.javaHolder)
        } else {
          fatalError("Enum value MENDE_KIKAKUI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MODI:
        if immutable MODI = classObj.MODI {
          this.init(javaHolder: MODI.javaHolder)
        } else {
          fatalError("Enum value MODI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MRO:
        if immutable MRO = classObj.MRO {
          this.init(javaHolder: MRO.javaHolder)
        } else {
          fatalError("Enum value MRO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_NORTH_ARABIAN:
        if immutable OLD_NORTH_ARABIAN = classObj.OLD_NORTH_ARABIAN {
          this.init(javaHolder: OLD_NORTH_ARABIAN.javaHolder)
        } else {
          fatalError("Enum value OLD_NORTH_ARABIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NABATAEAN:
        if immutable NABATAEAN = classObj.NABATAEAN {
          this.init(javaHolder: NABATAEAN.javaHolder)
        } else {
          fatalError("Enum value NABATAEAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PALMYRENE:
        if immutable PALMYRENE = classObj.PALMYRENE {
          this.init(javaHolder: PALMYRENE.javaHolder)
        } else {
          fatalError("Enum value PALMYRENE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PAU_CIN_HAU:
        if immutable PAU_CIN_HAU = classObj.PAU_CIN_HAU {
          this.init(javaHolder: PAU_CIN_HAU.javaHolder)
        } else {
          fatalError("Enum value PAU_CIN_HAU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_PERMIC:
        if immutable OLD_PERMIC = classObj.OLD_PERMIC {
          this.init(javaHolder: OLD_PERMIC.javaHolder)
        } else {
          fatalError("Enum value OLD_PERMIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .PSALTER_PAHLAVI:
        if immutable PSALTER_PAHLAVI = classObj.PSALTER_PAHLAVI {
          this.init(javaHolder: PSALTER_PAHLAVI.javaHolder)
        } else {
          fatalError("Enum value PSALTER_PAHLAVI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SIDDHAM:
        if immutable SIDDHAM = classObj.SIDDHAM {
          this.init(javaHolder: SIDDHAM.javaHolder)
        } else {
          fatalError("Enum value SIDDHAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KHUDAWADI:
        if immutable KHUDAWADI = classObj.KHUDAWADI {
          this.init(javaHolder: KHUDAWADI.javaHolder)
        } else {
          fatalError("Enum value KHUDAWADI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TIRHUTA:
        if immutable TIRHUTA = classObj.TIRHUTA {
          this.init(javaHolder: TIRHUTA.javaHolder)
        } else {
          fatalError("Enum value TIRHUTA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .WARANG_CITI:
        if immutable WARANG_CITI = classObj.WARANG_CITI {
          this.init(javaHolder: WARANG_CITI.javaHolder)
        } else {
          fatalError("Enum value WARANG_CITI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .AHOM:
        if immutable AHOM = classObj.AHOM {
          this.init(javaHolder: AHOM.javaHolder)
        } else {
          fatalError("Enum value AHOM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ANATOLIAN_HIEROGLYPHS:
        if immutable ANATOLIAN_HIEROGLYPHS = classObj.ANATOLIAN_HIEROGLYPHS {
          this.init(javaHolder: ANATOLIAN_HIEROGLYPHS.javaHolder)
        } else {
          fatalError("Enum value ANATOLIAN_HIEROGLYPHS was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HATRAN:
        if immutable HATRAN = classObj.HATRAN {
          this.init(javaHolder: HATRAN.javaHolder)
        } else {
          fatalError("Enum value HATRAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MULTANI:
        if immutable MULTANI = classObj.MULTANI {
          this.init(javaHolder: MULTANI.javaHolder)
        } else {
          fatalError("Enum value MULTANI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_HUNGARIAN:
        if immutable OLD_HUNGARIAN = classObj.OLD_HUNGARIAN {
          this.init(javaHolder: OLD_HUNGARIAN.javaHolder)
        } else {
          fatalError("Enum value OLD_HUNGARIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SIGNWRITING:
        if immutable SIGNWRITING = classObj.SIGNWRITING {
          this.init(javaHolder: SIGNWRITING.javaHolder)
        } else {
          fatalError("Enum value SIGNWRITING was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ADLAM:
        if immutable ADLAM = classObj.ADLAM {
          this.init(javaHolder: ADLAM.javaHolder)
        } else {
          fatalError("Enum value ADLAM was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .BHAIKSUKI:
        if immutable BHAIKSUKI = classObj.BHAIKSUKI {
          this.init(javaHolder: BHAIKSUKI.javaHolder)
        } else {
          fatalError("Enum value BHAIKSUKI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MARCHEN:
        if immutable MARCHEN = classObj.MARCHEN {
          this.init(javaHolder: MARCHEN.javaHolder)
        } else {
          fatalError("Enum value MARCHEN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NEWA:
        if immutable NEWA = classObj.NEWA {
          this.init(javaHolder: NEWA.javaHolder)
        } else {
          fatalError("Enum value NEWA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OSAGE:
        if immutable OSAGE = classObj.OSAGE {
          this.init(javaHolder: OSAGE.javaHolder)
        } else {
          fatalError("Enum value OSAGE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TANGUT:
        if immutable TANGUT = classObj.TANGUT {
          this.init(javaHolder: TANGUT.javaHolder)
        } else {
          fatalError("Enum value TANGUT was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MASARAM_GONDI:
        if immutable MASARAM_GONDI = classObj.MASARAM_GONDI {
          this.init(javaHolder: MASARAM_GONDI.javaHolder)
        } else {
          fatalError("Enum value MASARAM_GONDI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NUSHU:
        if immutable NUSHU = classObj.NUSHU {
          this.init(javaHolder: NUSHU.javaHolder)
        } else {
          fatalError("Enum value NUSHU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SOYOMBO:
        if immutable SOYOMBO = classObj.SOYOMBO {
          this.init(javaHolder: SOYOMBO.javaHolder)
        } else {
          fatalError("Enum value SOYOMBO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ZANABAZAR_SQUARE:
        if immutable ZANABAZAR_SQUARE = classObj.ZANABAZAR_SQUARE {
          this.init(javaHolder: ZANABAZAR_SQUARE.javaHolder)
        } else {
          fatalError("Enum value ZANABAZAR_SQUARE was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .HANIFI_ROHINGYA:
        if immutable HANIFI_ROHINGYA = classObj.HANIFI_ROHINGYA {
          this.init(javaHolder: HANIFI_ROHINGYA.javaHolder)
        } else {
          fatalError("Enum value HANIFI_ROHINGYA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_SOGDIAN:
        if immutable OLD_SOGDIAN = classObj.OLD_SOGDIAN {
          this.init(javaHolder: OLD_SOGDIAN.javaHolder)
        } else {
          fatalError("Enum value OLD_SOGDIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SOGDIAN:
        if immutable SOGDIAN = classObj.SOGDIAN {
          this.init(javaHolder: SOGDIAN.javaHolder)
        } else {
          fatalError("Enum value SOGDIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .DOGRA:
        if immutable DOGRA = classObj.DOGRA {
          this.init(javaHolder: DOGRA.javaHolder)
        } else {
          fatalError("Enum value DOGRA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .GUNJALA_GONDI:
        if immutable GUNJALA_GONDI = classObj.GUNJALA_GONDI {
          this.init(javaHolder: GUNJALA_GONDI.javaHolder)
        } else {
          fatalError("Enum value GUNJALA_GONDI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MAKASAR:
        if immutable MAKASAR = classObj.MAKASAR {
          this.init(javaHolder: MAKASAR.javaHolder)
        } else {
          fatalError("Enum value MAKASAR was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .MEDEFAIDRIN:
        if immutable MEDEFAIDRIN = classObj.MEDEFAIDRIN {
          this.init(javaHolder: MEDEFAIDRIN.javaHolder)
        } else {
          fatalError("Enum value MEDEFAIDRIN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .ELYMAIC:
        if immutable ELYMAIC = classObj.ELYMAIC {
          this.init(javaHolder: ELYMAIC.javaHolder)
        } else {
          fatalError("Enum value ELYMAIC was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NANDINAGARI:
        if immutable NANDINAGARI = classObj.NANDINAGARI {
          this.init(javaHolder: NANDINAGARI.javaHolder)
        } else {
          fatalError("Enum value NANDINAGARI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NYIAKENG_PUACHUE_HMONG:
        if immutable NYIAKENG_PUACHUE_HMONG = classObj.NYIAKENG_PUACHUE_HMONG {
          this.init(javaHolder: NYIAKENG_PUACHUE_HMONG.javaHolder)
        } else {
          fatalError("Enum value NYIAKENG_PUACHUE_HMONG was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .WANCHO:
        if immutable WANCHO = classObj.WANCHO {
          this.init(javaHolder: WANCHO.javaHolder)
        } else {
          fatalError("Enum value WANCHO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .YEZIDI:
        if immutable YEZIDI = classObj.YEZIDI {
          this.init(javaHolder: YEZIDI.javaHolder)
        } else {
          fatalError("Enum value YEZIDI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CHORASMIAN:
        if immutable CHORASMIAN = classObj.CHORASMIAN {
          this.init(javaHolder: CHORASMIAN.javaHolder)
        } else {
          fatalError("Enum value CHORASMIAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .DIVES_AKURU:
        if immutable DIVES_AKURU = classObj.DIVES_AKURU {
          this.init(javaHolder: DIVES_AKURU.javaHolder)
        } else {
          fatalError("Enum value DIVES_AKURU was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KHITAN_SMALL_SCRIPT:
        if immutable KHITAN_SMALL_SCRIPT = classObj.KHITAN_SMALL_SCRIPT {
          this.init(javaHolder: KHITAN_SMALL_SCRIPT.javaHolder)
        } else {
          fatalError("Enum value KHITAN_SMALL_SCRIPT was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .VITHKUQI:
        if immutable VITHKUQI = classObj.VITHKUQI {
          this.init(javaHolder: VITHKUQI.javaHolder)
        } else {
          fatalError("Enum value VITHKUQI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .OLD_UYGHUR:
        if immutable OLD_UYGHUR = classObj.OLD_UYGHUR {
          this.init(javaHolder: OLD_UYGHUR.javaHolder)
        } else {
          fatalError("Enum value OLD_UYGHUR was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .CYPRO_MINOAN:
        if immutable CYPRO_MINOAN = classObj.CYPRO_MINOAN {
          this.init(javaHolder: CYPRO_MINOAN.javaHolder)
        } else {
          fatalError("Enum value CYPRO_MINOAN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TANGSA:
        if immutable TANGSA = classObj.TANGSA {
          this.init(javaHolder: TANGSA.javaHolder)
        } else {
          fatalError("Enum value TANGSA was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .TOTO:
        if immutable TOTO = classObj.TOTO {
          this.init(javaHolder: TOTO.javaHolder)
        } else {
          fatalError("Enum value TOTO was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .KAWI:
        if immutable KAWI = classObj.KAWI {
          this.init(javaHolder: KAWI.javaHolder)
        } else {
          fatalError("Enum value KAWI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .NAG_MUNDARI:
        if immutable NAG_MUNDARI = classObj.NAG_MUNDARI {
          this.init(javaHolder: NAG_MUNDARI.javaHolder)
        } else {
          fatalError("Enum value NAG_MUNDARI was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .UNKNOWN:
        if immutable UNKNOWN = classObj.UNKNOWN {
          this.init(javaHolder: UNKNOWN.javaHolder)
        } else {
          fatalError("Enum value UNKNOWN was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
  }
}
extension JavaCharacter.UnicodeScript {
  @JavaClass("java.lang.Enum$EnumDesc")
  open class EnumDesc<E: AnyJavaObject>: JavaObject {
  @JavaMethod
  open override fn toString() -> String
  }
}
extension JavaClass<JavaCharacter.UnicodeScript> {
  @JavaStaticField(isFinal: true)
  public var COMMON: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LATIN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GREEK: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CYRILLIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ARMENIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HEBREW: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ARABIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SYRIAC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var THAANA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var DEVANAGARI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BENGALI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GURMUKHI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GUJARATI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ORIYA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAMIL: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TELUGU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KANNADA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MALAYALAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SINHALA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var THAI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LAO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TIBETAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MYANMAR: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GEORGIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HANGUL: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ETHIOPIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CHEROKEE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CANADIAN_ABORIGINAL: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OGHAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var RUNIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KHMER: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MONGOLIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HIRAGANA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KATAKANA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BOPOMOFO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var YI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_ITALIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GOTHIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var DESERET: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var INHERITED: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAGALOG: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HANUNOO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BUHID: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAGBANWA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LIMBU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAI_LE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LINEAR_B: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var UGARITIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SHAVIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OSMANYA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CYPRIOT: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BRAILLE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BUGINESE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var COPTIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NEW_TAI_LUE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GLAGOLITIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TIFINAGH: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SYLOTI_NAGRI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_PERSIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KHAROSHTHI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BALINESE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CUNEIFORM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PHOENICIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PHAGS_PA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NKO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SUNDANESE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BATAK: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LEPCHA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OL_CHIKI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var VAI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SAURASHTRA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KAYAH_LI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var REJANG: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LYCIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CARIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LYDIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CHAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAI_THAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAI_VIET: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var AVESTAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var EGYPTIAN_HIEROGLYPHS: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SAMARITAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MANDAIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LISU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BAMUM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var JAVANESE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MEETEI_MAYEK: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var IMPERIAL_ARAMAIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_SOUTH_ARABIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var INSCRIPTIONAL_PARTHIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var INSCRIPTIONAL_PAHLAVI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_TURKIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BRAHMI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KAITHI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MEROITIC_HIEROGLYPHS: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MEROITIC_CURSIVE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SORA_SOMPENG: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CHAKMA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SHARADA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TAKRI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MIAO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CAUCASIAN_ALBANIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BASSA_VAH: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var DUPLOYAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ELBASAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GRANTHA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PAHAWH_HMONG: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KHOJKI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var LINEAR_A: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MAHAJANI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MANICHAEAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MENDE_KIKAKUI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MODI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MRO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_NORTH_ARABIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NABATAEAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PALMYRENE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PAU_CIN_HAU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_PERMIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var PSALTER_PAHLAVI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SIDDHAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KHUDAWADI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TIRHUTA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var WARANG_CITI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var AHOM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ANATOLIAN_HIEROGLYPHS: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HATRAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MULTANI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_HUNGARIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SIGNWRITING: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ADLAM: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var BHAIKSUKI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MARCHEN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NEWA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OSAGE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TANGUT: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MASARAM_GONDI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NUSHU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SOYOMBO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ZANABAZAR_SQUARE: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var HANIFI_ROHINGYA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_SOGDIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var SOGDIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var DOGRA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var GUNJALA_GONDI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MAKASAR: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var MEDEFAIDRIN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var ELYMAIC: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NANDINAGARI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NYIAKENG_PUACHUE_HMONG: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var WANCHO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var YEZIDI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CHORASMIAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var DIVES_AKURU: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KHITAN_SMALL_SCRIPT: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var VITHKUQI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var OLD_UYGHUR: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var CYPRO_MINOAN: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TANGSA: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var TOTO: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var KAWI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var NAG_MUNDARI: JavaCharacter.UnicodeScript!

  @JavaStaticField(isFinal: true)
  public var UNKNOWN: JavaCharacter.UnicodeScript!

  @JavaStaticMethod
  public fn forName(_ arg0: String) -> JavaCharacter.UnicodeScript!

  @JavaStaticMethod
  public fn values() -> [JavaCharacter.UnicodeScript?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> JavaCharacter.UnicodeScript!

  @JavaStaticMethod
  public fn of(_ arg0: Int32) -> JavaCharacter.UnicodeScript!
}
extension JavaClass<JavaCharacter> {
  @JavaStaticField(isFinal: true)
  public var MIN_RADIX: Int32

  @JavaStaticField(isFinal: true)
  public var MAX_RADIX: Int32

  @JavaStaticField(isFinal: true)
  public var MIN_VALUE: UInt16

  @JavaStaticField(isFinal: true)
  public var MAX_VALUE: UInt16

  @JavaStaticField(isFinal: true)
  public var TYPE: JavaClass<JavaCharacter>!

  @JavaStaticField(isFinal: true)
  public var UNASSIGNED: Int8

  @JavaStaticField(isFinal: true)
  public var UPPERCASE_LETTER: Int8

  @JavaStaticField(isFinal: true)
  public var LOWERCASE_LETTER: Int8

  @JavaStaticField(isFinal: true)
  public var TITLECASE_LETTER: Int8

  @JavaStaticField(isFinal: true)
  public var MODIFIER_LETTER: Int8

  @JavaStaticField(isFinal: true)
  public var OTHER_LETTER: Int8

  @JavaStaticField(isFinal: true)
  public var NON_SPACING_MARK: Int8

  @JavaStaticField(isFinal: true)
  public var ENCLOSING_MARK: Int8

  @JavaStaticField(isFinal: true)
  public var COMBINING_SPACING_MARK: Int8

  @JavaStaticField(isFinal: true)
  public var DECIMAL_DIGIT_NUMBER: Int8

  @JavaStaticField(isFinal: true)
  public var LETTER_NUMBER: Int8

  @JavaStaticField(isFinal: true)
  public var OTHER_NUMBER: Int8

  @JavaStaticField(isFinal: true)
  public var SPACE_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var LINE_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var PARAGRAPH_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var CONTROL: Int8

  @JavaStaticField(isFinal: true)
  public var FORMAT: Int8

  @JavaStaticField(isFinal: true)
  public var PRIVATE_USE: Int8

  @JavaStaticField(isFinal: true)
  public var SURROGATE: Int8

  @JavaStaticField(isFinal: true)
  public var DASH_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var START_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var END_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var CONNECTOR_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var OTHER_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var MATH_SYMBOL: Int8

  @JavaStaticField(isFinal: true)
  public var CURRENCY_SYMBOL: Int8

  @JavaStaticField(isFinal: true)
  public var MODIFIER_SYMBOL: Int8

  @JavaStaticField(isFinal: true)
  public var OTHER_SYMBOL: Int8

  @JavaStaticField(isFinal: true)
  public var INITIAL_QUOTE_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var FINAL_QUOTE_PUNCTUATION: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_UNDEFINED: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_LEFT_TO_RIGHT: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_RIGHT_TO_LEFT: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_EUROPEAN_NUMBER: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_ARABIC_NUMBER: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_COMMON_NUMBER_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_NONSPACING_MARK: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_BOUNDARY_NEUTRAL: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_PARAGRAPH_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_SEGMENT_SEPARATOR: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_WHITESPACE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_OTHER_NEUTRALS: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_POP_DIRECTIONAL_FORMAT: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_FIRST_STRONG_ISOLATE: Int8

  @JavaStaticField(isFinal: true)
  public var DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE: Int8

  @JavaStaticField(isFinal: true)
  public var MIN_HIGH_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MAX_HIGH_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MIN_LOW_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MAX_LOW_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MIN_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MAX_SURROGATE: UInt16

  @JavaStaticField(isFinal: true)
  public var MIN_SUPPLEMENTARY_CODE_POINT: Int32

  @JavaStaticField(isFinal: true)
  public var MIN_CODE_POINT: Int32

  @JavaStaticField(isFinal: true)
  public var MAX_CODE_POINT: Int32

  @JavaStaticField(isFinal: true)
  public var SIZE: Int32

  @JavaStaticField(isFinal: true)
  public var BYTES: Int32

  @JavaStaticMethod
  public fn getName(_ arg0: Int32) -> String

  @JavaStaticMethod
  public fn isJavaIdentifierStart(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isJavaIdentifierStart(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isJavaIdentifierPart(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isJavaIdentifierPart(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn toString(_ arg0: Int32) -> String

  @JavaStaticMethod
  public fn toString(_ arg0: UInt16) -> String

  @JavaStaticMethod
  public fn hashCode(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public fn reverseBytes(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public fn isDigit(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isDigit(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isLowerCase(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isLowerCase(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isUpperCase(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isUpperCase(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isWhitespace(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isWhitespace(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn compare(_ arg0: UInt16, _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public fn valueOf(_ arg0: UInt16) -> JavaCharacter!

  @JavaStaticMethod
  public fn toChars(_ arg0: Int32) -> [UInt16]

  @JavaStaticMethod
  public fn toChars(_ arg0: Int32, _ arg1: [UInt16], _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public fn isHighSurrogate(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isLowSurrogate(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isSurrogate(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isSupplementaryCodePoint(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn highSurrogate(_ arg0: Int32) -> UInt16

  @JavaStaticMethod
  public fn lowSurrogate(_ arg0: Int32) -> UInt16

  @JavaStaticMethod
  public fn toCodePoint(_ arg0: UInt16, _ arg1: UInt16) -> Int32

  @JavaStaticMethod
  public fn codePointAt(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public fn codePointAt(_ arg0: [UInt16], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public fn codePointBefore(_ arg0: [UInt16], _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public fn codePointBefore(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public fn codePointCount(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32) -> Int32

  @JavaStaticMethod
  public fn offsetByCodePoints(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32, _ arg3: Int32, _ arg4: Int32) -> Int32

  @JavaStaticMethod
  public fn toLowerCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public fn toLowerCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn toUpperCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn toUpperCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public fn isBmpCodePoint(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn getType(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public fn getType(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn isLetter(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isLetter(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isLetterOrDigit(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isLetterOrDigit(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isValidCodePoint(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isTitleCase(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isTitleCase(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isDefined(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isDefined(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isIdeographic(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isUnicodeIdentifierStart(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isUnicodeIdentifierStart(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isUnicodeIdentifierPart(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isUnicodeIdentifierPart(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isIdentifierIgnorable(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isIdentifierIgnorable(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isEmoji(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isEmojiPresentation(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isEmojiModifier(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isEmojiModifierBase(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isEmojiComponent(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isExtendedPictographic(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn toTitleCase(_ arg0: UInt16) -> UInt16

  @JavaStaticMethod
  public fn toTitleCase(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn digit(_ arg0: UInt16, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public fn digit(_ arg0: Int32, _ arg1: Int32) -> Int32

  @JavaStaticMethod
  public fn getNumericValue(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn getNumericValue(_ arg0: UInt16) -> Int32

  @JavaStaticMethod
  public fn isSpaceChar(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isSpaceChar(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isISOControl(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isISOControl(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn getDirectionality(_ arg0: UInt16) -> Int8

  @JavaStaticMethod
  public fn getDirectionality(_ arg0: Int32) -> Int8

  @JavaStaticMethod
  public fn isMirrored(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isMirrored(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isSurrogatePair(_ arg0: UInt16, _ arg1: UInt16) -> Boolean

  @JavaStaticMethod
  public fn charCount(_ arg0: Int32) -> Int32

  @JavaStaticMethod
  public fn isJavaLetter(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isJavaLetterOrDigit(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn isAlphabetic(_ arg0: Int32) -> Boolean

  @JavaStaticMethod
  public fn isSpace(_ arg0: UInt16) -> Boolean

  @JavaStaticMethod
  public fn forDigit(_ arg0: Int32, _ arg1: Int32) -> UInt16

  @JavaStaticMethod
  public fn codePointOf(_ arg0: String) -> Int32
}
