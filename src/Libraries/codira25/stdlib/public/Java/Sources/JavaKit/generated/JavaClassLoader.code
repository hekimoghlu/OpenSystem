//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaRuntime

@JavaClass("java.lang.ClassLoader")
open class JavaClassLoader: JavaObject {
  @JavaMethod
  open fn getName() -> String

  @JavaMethod
  open fn loadClass(_ arg0: String, _ arg1: Boolean) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn loadClass(_ arg0: String) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn setSigners(_ arg0: JavaClass<JavaObject>?, _ arg1: [JavaObject?])

  @JavaMethod
  open fn getClassLoadingLock(_ arg0: String) -> JavaObject!

  @JavaMethod
  open fn findLoadedClass(_ arg0: String) -> JavaClass<JavaObject>!

  @JavaMethod
  open fn findClass(_ arg0: String) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn findClass(_ arg0: String, _ arg1: String) -> JavaClass<JavaObject>!

  @JavaMethod
  open fn resolveClass(_ arg0: JavaClass<JavaObject>?)

  @JavaMethod
  open fn defineClass(_ arg0: String, _ arg1: [Int8], _ arg2: Int32, _ arg3: Int32) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn defineClass(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn findLibrary(_ arg0: String) -> String

  @JavaMethod
  open fn findSystemClass(_ arg0: String) throws -> JavaClass<JavaObject>!

  @JavaMethod
  open fn isRegisteredAsParallelCapable() -> Boolean

  @JavaMethod
  open fn getParent() -> JavaClassLoader!

  @JavaMethod
  open fn setDefaultAssertionStatus(_ arg0: Boolean)

  @JavaMethod
  open fn setPackageAssertionStatus(_ arg0: String, _ arg1: Boolean)

  @JavaMethod
  open fn setClassAssertionStatus(_ arg0: String, _ arg1: Boolean)

  @JavaMethod
  open fn clearAssertionStatus()
}
extension JavaClass<JavaClassLoader> {
  @JavaStaticMethod
  public fn getPlatformClassLoader() -> JavaClassLoader!

  @JavaStaticMethod
  public fn getSystemClassLoader() -> JavaClassLoader!

  @JavaStaticMethod
  public fn registerAsParallelCapable() -> Boolean
}
