//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaRuntime

@JavaClass("java.lang.Throwable")
open class Throwable: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Throwable?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Throwable?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn printStackTrace()

  @JavaMethod
  open fn fillInStackTrace() -> Throwable!

  @JavaMethod
  open fn getCause() -> Throwable!

  @JavaMethod
  open fn initCause(_ arg0: Throwable?) -> Throwable!

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open fn getMessage() -> String

  @JavaMethod
  open fn getSuppressed() -> [Throwable?]

  @JavaMethod
  open fn getLocalizedMessage() -> String

  @JavaMethod
  open fn addSuppressed(_ arg0: Throwable?)
}
