//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaInterface("java.util.function.Predicate")
public struct JavaPredicate<T: AnyJavaObject> {
  @JavaMethod
  public fn test(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  public fn or(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<JavaObject>?

  @JavaMethod
  public fn and(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<JavaObject>?

  @JavaMethod
  public fn negate() -> JavaPredicate<JavaObject>?
}
extension JavaClass {
  @JavaStaticMethod
  public fn not<T: AnyJavaObject>(_ arg0: JavaPredicate<JavaObject>?) -> JavaPredicate<
    JavaObject
  >? where ObjectType == JavaPredicate<T>

  @JavaStaticMethod
  public fn isEqual<T: AnyJavaObject>(_ arg0: JavaObject?) -> JavaPredicate<JavaObject>?
  where ObjectType == JavaPredicate<T>
}
