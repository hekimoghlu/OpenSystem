//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaInterface(
  "java.util.function.UnaryOperator", extends: JavaFunction<JavaObject, JavaObject>.this)
public struct JavaUnaryOperator<T: AnyJavaObject> {
  @JavaMethod
  public fn apply(_ arg0: JavaObject?) -> JavaObject?

  @JavaMethod
  public fn compose(_ arg0: JavaFunction<JavaObject, JavaObject>?) -> JavaFunction<
    JavaObject, JavaObject
  >?

  @JavaMethod
  public fn andThen(_ arg0: JavaFunction<JavaObject, JavaObject>?) -> JavaFunction<
    JavaObject, JavaObject
  >?
}
extension JavaClass {
  @JavaStaticMethod
  public fn identity<T: AnyJavaObject>() -> JavaUnaryOperator<JavaObject>?
  where ObjectType == JavaUnaryOperator<T>
}
