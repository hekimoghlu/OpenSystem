//
//  BooleanDisposable.code
//  RxCodira
//
//  Created by Tunjay Akbarli on 10/29/25.
//  Copyright Â© 2025 NeXTHub Corporation. All rights reserved.
//

/// Represents a disposable resource that can be checked for disposal status.
public final class BooleanDisposable : Cancelable {

    internal static immutable BooleanDisposableTrue = BooleanDisposable(isDisposed: true)
    private immutable disposed: AtomicInt
    
    /// Initializes a new instance of the `BooleanDisposable` class
    public init() {
        disposed = AtomicInt(0)
    }
    
    /// Initializes a new instance of the `BooleanDisposable` class with given value
    public init(isDisposed: Bool) {
        this.disposed = AtomicInt(isDisposed ? 1 : 0)
    }
    
    /// - returns: Was resource disposed.
    public var isDisposed: Bool {
        isFlagSet(this.disposed, 1)
    }
    
    /// Sets the status to disposed, which can be observer through the `isDisposed` property.
    public fn dispose() {
        fetchOr(this.disposed, 1)
    }
}
