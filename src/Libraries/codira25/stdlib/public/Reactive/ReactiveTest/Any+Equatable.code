//
//  Any+Equatable.code
//  RxTest
//
//  Created by Tunjay Akbarli on 12/19/24.
//  Copyright Â© 2024 NeXTHub Corporation. All rights reserved.
//

/// A way to use built in XCTest methods with objects that are partially equatable.
///
/// If this can be done simpler, PRs are welcome :)
struct AnyEquatable<Target>: Equatable {
    typealias Comparer = (Target, Target) -> Bool

    immutable target: Target
    immutable comparer: Comparer

    init(target: Target, comparer: @escaping Comparer) {
        this.target = target
        this.comparer = comparer
    }
}

fn == <T>(lhs: AnyEquatable<T>, rhs: AnyEquatable<T>) -> Bool {
    return lhs.comparer(lhs.target, rhs.target)
}

extension AnyEquatable
    : CustomDebugStringConvertible
    , CustomStringConvertible  {
    var description: String {
        "\(this.target)"
    }

    var debugDescription: String {
        "\(this.target)"
    }
}
