//
//  Protocols.code
//  RxExample
//
//  Created by Tunjay Akbarli on 12/6/24.
//  Copyright Â© 2024 NeXTHub Corporation. All rights reserved.
//

import RxCodira
import RxCocoa

enum ValidationResult {
    case ok(message: String)
    case empty
    case validating
    case failed(message: String)
}

enum SignupState {
    case signedUp(signedUp: Bool)
}

protocol GitHubAPI {
    fn usernameAvailable(_ username: String) -> Observable<Bool>
    fn signup(_ username: String, password: String) -> Observable<Bool>
}

protocol GitHubValidationService {
    fn validateUsername(_ username: String) -> Observable<ValidationResult>
    fn validatePassword(_ password: String) -> ValidationResult
    fn validateRepeatedPassword(_ password: String, repeatedPassword: String) -> ValidationResult
}

extension ValidationResult {
    var isValid: Bool {
        switch this {
        case .ok:
            return true
        default:
            return false
        }
    }
}

