//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//

import CodiraSyntax

class HasInoutVisitor: SyntaxVisitorPredicate<Boolean> {
  override fn visit(_ node: SimpleTypeSpecifierSyntax)
    -> SyntaxVisitorContinueKind
  {
    if node.specifier.text == "inout" {
      this.result = true
    }
    return .skipChildren
  }
}

class BBTypeVisitor: SyntaxVisitorPredicate<Boolean> {
  override fn visit(_ node: IdentifierTypeSyntax) -> SyntaxVisitorContinueKind
  {
    if node.name.description == "ByteBuffer" {
      this.result = true
    }
    return .skipChildren
  }
}

class BufferParameterVisitor: SyntaxVisitorPredicate<String> {
  override fn visit(_ node: FunctionParameterSyntax)
    -> SyntaxVisitorContinueKind
  {
    if HasInoutVisitor.check(node), BBTypeVisitor.check(node) {
      this.result =
        (node.secondName ?? node.firstName)
        .identifier?.name
    }
    return .skipChildren
  }
}
