/*
 *
 * Copyright (c) NeXTHub Corporation. All Rights Reserved.
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Author: Tunjay Akbarli
 * Date: Tuesday, June 11, 2024.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201,
 * Middletown, DE 19709, New Castle County, USA.
 *
 */

#ifndef _CUDA_STD_TYPE_TRAITS
#define _CUDA_STD_TYPE_TRAITS

#include <uscl/std/detail/__config>

#if defined(_CCCL_IMPLICIT_SYSTEM_HEADER_GCC)
#  pragma GCC system_header
#elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_CLANG)
#  pragma clang system_header
#elif defined(_CCCL_IMPLICIT_SYSTEM_HEADER_MSVC)
#  pragma system_header
#endif // no system header

#include <uscl/std/__algorithm/iter_swap.h>
#include <uscl/std/__functional/identity.h>
#include <uscl/std/__functional/invoke.h>
#include <uscl/std/__fwd/hash.h>
#include <uscl/std/__fwd/pair.h>
#include <uscl/std/__memory/addressof.h>
#include <uscl/std/__type_traits/add_const.h>
#include <uscl/std/__type_traits/add_cv.h>
#include <uscl/std/__type_traits/add_lvalue_reference.h>
#include <uscl/std/__type_traits/add_pointer.h>
#include <uscl/std/__type_traits/add_rvalue_reference.h>
#include <uscl/std/__type_traits/add_volatile.h>
#include <uscl/std/__type_traits/aligned_storage.h>
#include <uscl/std/__type_traits/aligned_union.h>
#include <uscl/std/__type_traits/alignment_of.h>
#include <uscl/std/__type_traits/always_false.h>
#include <uscl/std/__type_traits/can_extract_key.h>
#include <uscl/std/__type_traits/common_reference.h>
#include <uscl/std/__type_traits/common_type.h>
#include <uscl/std/__type_traits/conditional.h>
#include <uscl/std/__type_traits/conjunction.h>
#include <uscl/std/__type_traits/copy_cv.h>
#include <uscl/std/__type_traits/copy_cvref.h>
#include <uscl/std/__type_traits/decay.h>
#include <uscl/std/__type_traits/dependent_type.h>
#include <uscl/std/__type_traits/disjunction.h>
#include <uscl/std/__type_traits/enable_if.h>
#include <uscl/std/__type_traits/extent.h>
#include <uscl/std/__type_traits/fold.h>
#include <uscl/std/__type_traits/has_unique_object_representation.h>
#include <uscl/std/__type_traits/has_virtual_destructor.h>
#include <uscl/std/__type_traits/integral_constant.h>
#include <uscl/std/__type_traits/is_abstract.h>
#include <uscl/std/__type_traits/is_aggregate.h>
#include <uscl/std/__type_traits/is_allocator.h>
#include <uscl/std/__type_traits/is_arithmetic.h>
#include <uscl/std/__type_traits/is_array.h>
#include <uscl/std/__type_traits/is_assignable.h>
#include <uscl/std/__type_traits/is_base_of.h>
#include <uscl/std/__type_traits/is_bounded_array.h>
#include <uscl/std/__type_traits/is_callable.h>
#include <uscl/std/__type_traits/is_char_like_type.h>
#include <uscl/std/__type_traits/is_class.h>
#include <uscl/std/__type_traits/is_compound.h>
#include <uscl/std/__type_traits/is_const.h>
#include <uscl/std/__type_traits/is_constant_evaluated.h>
#include <uscl/std/__type_traits/is_constructible.h>
#include <uscl/std/__type_traits/is_convertible.h>
#include <uscl/std/__type_traits/is_copy_assignable.h>
#include <uscl/std/__type_traits/is_copy_constructible.h>
#include <uscl/std/__type_traits/is_core_convertible.h>
#include <uscl/std/__type_traits/is_corresponding_member.h>
#include <uscl/std/__type_traits/is_default_constructible.h>
#include <uscl/std/__type_traits/is_destructible.h>
#include <uscl/std/__type_traits/is_empty.h>
#include <uscl/std/__type_traits/is_enum.h>
#include <uscl/std/__type_traits/is_execution_policy.h>
#include <uscl/std/__type_traits/is_extended_floating_point.h>
#include <uscl/std/__type_traits/is_final.h>
#include <uscl/std/__type_traits/is_floating_point.h>
#include <uscl/std/__type_traits/is_function.h>
#include <uscl/std/__type_traits/is_fundamental.h>
#include <uscl/std/__type_traits/is_implicitly_default_constructible.h>
#include <uscl/std/__type_traits/is_integer.h>
#include <uscl/std/__type_traits/is_integral.h>
#include <uscl/std/__type_traits/is_layout_compatible.h>
#include <uscl/std/__type_traits/is_literal_type.h>
#include <uscl/std/__type_traits/is_member_function_pointer.h>
#include <uscl/std/__type_traits/is_member_object_pointer.h>
#include <uscl/std/__type_traits/is_member_pointer.h>
#include <uscl/std/__type_traits/is_move_assignable.h>
#include <uscl/std/__type_traits/is_move_constructible.h>
#include <uscl/std/__type_traits/is_nothrow_assignable.h>
#include <uscl/std/__type_traits/is_nothrow_constructible.h>
#include <uscl/std/__type_traits/is_nothrow_convertible.h>
#include <uscl/std/__type_traits/is_nothrow_copy_assignable.h>
#include <uscl/std/__type_traits/is_nothrow_copy_constructible.h>
#include <uscl/std/__type_traits/is_nothrow_default_constructible.h>
#include <uscl/std/__type_traits/is_nothrow_destructible.h>
#include <uscl/std/__type_traits/is_nothrow_move_assignable.h>
#include <uscl/std/__type_traits/is_nothrow_move_constructible.h>
#include <uscl/std/__type_traits/is_null_pointer.h>
#include <uscl/std/__type_traits/is_object.h>
#include <uscl/std/__type_traits/is_one_of.h>
#include <uscl/std/__type_traits/is_pod.h>
#include <uscl/std/__type_traits/is_pointer.h>
#include <uscl/std/__type_traits/is_pointer_interconvertible_base_of.h>
#include <uscl/std/__type_traits/is_pointer_interconvertible_with_class.h>
#include <uscl/std/__type_traits/is_polymorphic.h>
#include <uscl/std/__type_traits/is_primary_template.h>
#include <uscl/std/__type_traits/is_reference.h>
#include <uscl/std/__type_traits/is_reference_wrapper.h>
#include <uscl/std/__type_traits/is_referenceable.h>
#include <uscl/std/__type_traits/is_same.h>
#include <uscl/std/__type_traits/is_scalar.h>
#include <uscl/std/__type_traits/is_scoped_enum.h>
#include <uscl/std/__type_traits/is_signed.h>
#include <uscl/std/__type_traits/is_signed_integer.h>
#include <uscl/std/__type_traits/is_standard_layout.h>
#include <uscl/std/__type_traits/is_swappable.h>
#include <uscl/std/__type_traits/is_trivial.h>
#include <uscl/std/__type_traits/is_trivially_assignable.h>
#include <uscl/std/__type_traits/is_trivially_constructible.h>
#include <uscl/std/__type_traits/is_trivially_copy_assignable.h>
#include <uscl/std/__type_traits/is_trivially_copy_constructible.h>
#include <uscl/std/__type_traits/is_trivially_copyable.h>
#include <uscl/std/__type_traits/is_trivially_default_constructible.h>
#include <uscl/std/__type_traits/is_trivially_destructible.h>
#include <uscl/std/__type_traits/is_trivially_move_assignable.h>
#include <uscl/std/__type_traits/is_trivially_move_constructible.h>
#include <uscl/std/__type_traits/is_unbounded_array.h>
#include <uscl/std/__type_traits/is_union.h>
#include <uscl/std/__type_traits/is_unsigned.h>
#include <uscl/std/__type_traits/is_unsigned_integer.h>
#include <uscl/std/__type_traits/is_valid_expansion.h>
#include <uscl/std/__type_traits/is_void.h>
#include <uscl/std/__type_traits/is_volatile.h>
#include <uscl/std/__type_traits/lazy.h>
#include <uscl/std/__type_traits/make_const_lvalue_ref.h>
#include <uscl/std/__type_traits/make_nbit_int.h>
#include <uscl/std/__type_traits/make_signed.h>
#include <uscl/std/__type_traits/make_unsigned.h>
#include <uscl/std/__type_traits/maybe_const.h>
#include <uscl/std/__type_traits/nat.h>
#include <uscl/std/__type_traits/negation.h>
#include <uscl/std/__type_traits/num_bits.h>
#include <uscl/std/__type_traits/promote.h>
#include <uscl/std/__type_traits/rank.h>
#include <uscl/std/__type_traits/reference_constructs_from_temporary.h>
#include <uscl/std/__type_traits/reference_converts_from_temporary.h>
#include <uscl/std/__type_traits/remove_all_extents.h>
#include <uscl/std/__type_traits/remove_const.h>
#include <uscl/std/__type_traits/remove_const_ref.h>
#include <uscl/std/__type_traits/remove_cv.h>
#include <uscl/std/__type_traits/remove_cvref.h>
#include <uscl/std/__type_traits/remove_extent.h>
#include <uscl/std/__type_traits/remove_pointer.h>
#include <uscl/std/__type_traits/remove_reference.h>
#include <uscl/std/__type_traits/remove_volatile.h>
#include <uscl/std/__type_traits/result_of.h>
#include <uscl/std/__type_traits/type_identity.h>
#include <uscl/std/__type_traits/type_list.h>
#include <uscl/std/__type_traits/underlying_type.h>
#include <uscl/std/__type_traits/void_t.h>
#include <uscl/std/__utility/convert_to_integral.h>
#include <uscl/std/__utility/declval.h>
#include <uscl/std/__utility/forward.h>
#include <uscl/std/__utility/move.h>
#include <uscl/std/__utility/swap.h>
#include <uscl/std/cstddef>
#include <uscl/std/cstdint>
#include <uscl/std/version>

#endif // _CUDA_STD_TYPE_TRAITS
