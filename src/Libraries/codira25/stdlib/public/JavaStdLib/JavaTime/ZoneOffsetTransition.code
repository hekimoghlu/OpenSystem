//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.time.zone.ZoneOffsetTransition", implements: Comparable.this, Serializable.this)
open class ZoneOffsetTransition: JavaObject {
  @JavaMethod
  open fn isOverlap() -> Boolean

  @JavaMethod
  open fn getInstant() -> Instant!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn toString() -> String

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: ZoneOffsetTransition?) -> Int32

  @JavaMethod
  open fn compareTo(_ arg0: JavaObject?) -> Int32

  @JavaMethod
  open fn getDuration() -> Duration!

  @JavaMethod
  open fn isGap() -> Boolean

  @JavaMethod
  open fn getDateTimeAfter() -> LocalDateTime!

  @JavaMethod
  open fn toEpochSecond() -> Int64

  @JavaMethod
  open fn getOffsetBefore() -> ZoneOffset!

  @JavaMethod
  open fn getOffsetAfter() -> ZoneOffset!

  @JavaMethod
  open fn getDateTimeBefore() -> LocalDateTime!

  @JavaMethod
  open fn isValidOffset(_ arg0: ZoneOffset?) -> Boolean
}
extension JavaClass<ZoneOffsetTransition> {
  @JavaStaticMethod
  public fn of(_ arg0: LocalDateTime?, _ arg1: ZoneOffset?, _ arg2: ZoneOffset?) -> ZoneOffsetTransition!
}
