//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitCollection
import JavaRuntime

@JavaClass("java.time.format.DateTimeFormatterBuilder")
open class DateTimeFormatterBuilder: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn append(_ arg0: DateTimeFormatter?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn parseStrict() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendZoneText(_ arg0: TextStyle?, _ arg1: JavaSet<ZoneId>?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendZoneText(_ arg0: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn toFormatter() -> DateTimeFormatter!

  @JavaMethod
  open fn appendChronologyText(_ arg0: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendPattern(_ arg0: String) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendLocalized(_ arg0: String) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendLocalized(_ arg0: FormatStyle?, _ arg1: FormatStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendValue(_ arg0: TemporalField?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendValue(_ arg0: TemporalField?, _ arg1: Int32, _ arg2: Int32, _ arg3: SignStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendValue(_ arg0: TemporalField?, _ arg1: Int32) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendLiteral(_ arg0: String) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendLiteral(_ arg0: UInt16) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn parseCaseInsensitive() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendOffsetId() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn optionalStart() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendFraction(_ arg0: TemporalField?, _ arg1: Int32, _ arg2: Int32, _ arg3: Boolean) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn parseLenient() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn parseCaseSensitive() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendZoneRegionId() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendInstant() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendInstant(_ arg0: Int32) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendOffset(_ arg0: String, _ arg1: String) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendText(_ arg0: TemporalField?, _ arg1: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendText(_ arg0: TemporalField?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn optionalEnd() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn padNext(_ arg0: Int32) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn padNext(_ arg0: Int32, _ arg1: UInt16) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendZoneId() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendGenericZoneText(_ arg0: TextStyle?, _ arg1: JavaSet<ZoneId>?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendGenericZoneText(_ arg0: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendLocalizedOffset(_ arg0: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendDayPeriodText(_ arg0: TextStyle?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendValueReduced(_ arg0: TemporalField?, _ arg1: Int32, _ arg2: Int32, _ arg3: Int32) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendValueReduced(_ arg0: TemporalField?, _ arg1: Int32, _ arg2: Int32, _ arg3: ChronoLocalDate?) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn parseDefaulting(_ arg0: TemporalField?, _ arg1: Int64) -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendZoneOrOffsetId() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendChronologyId() -> DateTimeFormatterBuilder!

  @JavaMethod
  open fn appendOptional(_ arg0: DateTimeFormatter?) -> DateTimeFormatterBuilder!
}
