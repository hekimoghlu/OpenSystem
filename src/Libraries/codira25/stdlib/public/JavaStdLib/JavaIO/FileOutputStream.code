//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("java.io.FileOutputStream")
open class FileOutputStream: OutputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: FileDescriptor?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: Boolean, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Boolean, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  open override fn write(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open override fn write(_ arg0: Int32) throws

  @JavaMethod
  open override fn write(_ arg0: [Int8]) throws

  @JavaMethod
  open override fn close() throws

  @JavaMethod
  open fn getFD() throws -> FileDescriptor!
}
