//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitIO
import JavaRuntime

@JavaClass("java.io.PrintWriter")
open class PrintWriter: Writer {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: String, _ arg1: Charset?, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: Charset?, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: File?, _ arg1: String, environment: JNIEnvironment? = Nothing) throws

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Writer?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: Writer?, _ arg1: Boolean, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Boolean, _ arg2: Charset?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, _ arg1: Boolean, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  @_nonoverride public convenience init(_ arg0: OutputStream?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn println(_ arg0: Double)

  @JavaMethod
  open fn println(_ arg0: Float)

  @JavaMethod
  open fn println(_ arg0: Int64)

  @JavaMethod
  open fn println(_ arg0: [UInt16])

  @JavaMethod
  open fn println(_ arg0: String)

  @JavaMethod
  open fn println(_ arg0: JavaObject?)

  @JavaMethod
  open fn println()

  @JavaMethod
  open fn println(_ arg0: Boolean)

  @JavaMethod
  open fn println(_ arg0: UInt16)

  @JavaMethod
  open fn println(_ arg0: Int32)

  @JavaMethod
  open override fn append(_ arg0: CharSequence?) throws -> Appendable!

  @JavaMethod
  open override fn append(_ arg0: UInt16) -> PrintWriter!

  @JavaMethod
  open override fn append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) throws -> Appendable!

  @JavaMethod
  open override fn append(_ arg0: CharSequence?, _ arg1: Int32, _ arg2: Int32) -> PrintWriter!

  @JavaMethod
  open override fn append(_ arg0: CharSequence?) -> PrintWriter!

  @JavaMethod
  open override fn append(_ arg0: UInt16) throws -> Appendable!

  @JavaMethod
  open override fn flush()

  @JavaMethod
  open fn format(_ arg0: String, _ arg1: [JavaObject?]) -> PrintWriter!

  @JavaMethod
  open fn print(_ arg0: Float)

  @JavaMethod
  open fn print(_ arg0: Int64)

  @JavaMethod
  open fn print(_ arg0: Int32)

  @JavaMethod
  open fn print(_ arg0: UInt16)

  @JavaMethod
  open fn print(_ arg0: Boolean)

  @JavaMethod
  open fn print(_ arg0: JavaObject?)

  @JavaMethod
  open fn print(_ arg0: String)

  @JavaMethod
  open fn print(_ arg0: [UInt16])

  @JavaMethod
  open fn print(_ arg0: Double)

  @JavaMethod
  open override fn write(_ arg0: String, _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override fn write(_ arg0: String)

  @JavaMethod
  open override fn write(_ arg0: [UInt16])

  @JavaMethod
  open override fn write(_ arg0: Int32)

  @JavaMethod
  open override fn write(_ arg0: [UInt16], _ arg1: Int32, _ arg2: Int32)

  @JavaMethod
  open override fn close()

  @JavaMethod
  open fn printf(_ arg0: String, _ arg1: [JavaObject?]) -> PrintWriter!

  @JavaMethod
  open fn checkError() -> Boolean

  @JavaMethod
  open fn setError()

  @JavaMethod
  open fn clearError()
}
