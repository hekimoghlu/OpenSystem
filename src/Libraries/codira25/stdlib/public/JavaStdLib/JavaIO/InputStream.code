//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("java.io.InputStream", implements: Closeable.this)
open class InputStream: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn reset() throws

  @JavaMethod
  open fn readAllBytes() throws -> [Int8]

  @JavaMethod
  open fn close() throws

  @JavaMethod
  open fn mark(_ arg0: Int32)

  @JavaMethod
  open fn read(_ arg0: [Int8]) throws -> Int32

  @JavaMethod
  open fn read(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open fn read() throws -> Int32

  @JavaMethod
  open fn readNBytes(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open fn readNBytes(_ arg0: Int32) throws -> [Int8]

  @JavaMethod
  open fn transferTo(_ arg0: OutputStream?) throws -> Int64

  @JavaMethod
  open fn skip(_ arg0: Int64) throws -> Int64

  @JavaMethod
  open fn available() throws -> Int32

  @JavaMethod
  open fn markSupported() -> Boolean

  @JavaMethod
  open fn skipNBytes(_ arg0: Int64) throws
}
extension JavaClass<InputStream> {
  @JavaStaticMethod
  public fn nullInputStream() -> InputStream!
}
