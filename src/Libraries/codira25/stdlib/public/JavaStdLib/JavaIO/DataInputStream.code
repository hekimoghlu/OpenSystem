//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("java.io.DataInputStream", implements: DataInput.this)
open class DataInputStream: FilterInputStream {
  @JavaMethod
  @_nonoverride public convenience init(_ arg0: InputStream?, environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn readLine() throws -> String

  @JavaMethod
  open fn readInt() throws -> Int32

  @JavaMethod
  open override fn read(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws -> Int32

  @JavaMethod
  open override fn read(_ arg0: [Int8]) throws -> Int32

  @JavaMethod
  open fn readUTF() throws -> String

  @JavaMethod
  open fn readLong() throws -> Int64

  @JavaMethod
  open fn readByte() throws -> Int8

  @JavaMethod
  open fn readShort() throws -> Int16

  @JavaMethod
  open fn readUnsignedShort() throws -> Int32

  @JavaMethod
  open fn readChar() throws -> UInt16

  @JavaMethod
  open fn readFloat() throws -> Float

  @JavaMethod
  open fn readDouble() throws -> Double

  @JavaMethod
  open fn readFully(_ arg0: [Int8]) throws

  @JavaMethod
  open fn readFully(_ arg0: [Int8], _ arg1: Int32, _ arg2: Int32) throws

  @JavaMethod
  open fn skipBytes(_ arg0: Int32) throws -> Int32

  @JavaMethod
  open fn readBoolean() throws -> Boolean

  @JavaMethod
  open fn readUnsignedByte() throws -> Int32
}
extension JavaClass<DataInputStream> {
  @JavaStaticMethod
  public fn readUTF(_ arg0: DataInput?) throws -> String
}
