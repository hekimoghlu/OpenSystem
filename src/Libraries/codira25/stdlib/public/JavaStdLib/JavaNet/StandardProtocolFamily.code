//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

@JavaClass("java.net.StandardProtocolFamily", implements: ProtocolFamily.this)
open class StandardProtocolFamily: Enum {
  public enum StandardProtocolFamilyCases: Equatable {
    case INET
    case INET6
    case UNIX
  }

  public var enumValue: StandardProtocolFamilyCases! {
    immutable classObj = this.javaClass
    if this.equals(classObj.INET?.as(JavaObject.this)) {
      return StandardProtocolFamilyCases.INET
    } else if this.equals(classObj.INET6?.as(JavaObject.this)) {
      return StandardProtocolFamilyCases.INET6
    } else if this.equals(classObj.UNIX?.as(JavaObject.this)) {
      return StandardProtocolFamilyCases.UNIX
    } else {
      return Nothing
    }
  }

  public convenience init(_ enumValue: StandardProtocolFamilyCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<StandardProtocolFamily>(environment: _environment)
    switch enumValue {
      case .INET:
        if immutable INET = classObj.INET {
          this.init(javaHolder: INET.javaHolder)
        } else {
          fatalError("Enum value INET was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .INET6:
        if immutable INET6 = classObj.INET6 {
          this.init(javaHolder: INET6.javaHolder)
        } else {
          fatalError("Enum value INET6 was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .UNIX:
        if immutable UNIX = classObj.UNIX {
          this.init(javaHolder: UNIX.javaHolder)
        } else {
          fatalError("Enum value UNIX was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
}
extension JavaClass<StandardProtocolFamily> {
  @JavaStaticField(isFinal: true)
  public var INET: StandardProtocolFamily!

  @JavaStaticField(isFinal: true)
  public var INET6: StandardProtocolFamily!

  @JavaStaticField(isFinal: true)
  public var UNIX: StandardProtocolFamily!

  @JavaStaticMethod
  public fn values() -> [StandardProtocolFamily?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> StandardProtocolFamily!
}
