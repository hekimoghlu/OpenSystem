//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaLang
import JavaKit
import JavaRuntime

extension Authenticator {
  @JavaClass("java.net.Authenticator$RequestorType")
  open class RequestorType: Enum {
    public enum RequestorTypeCases: Equatable {
      case PROXY
  case SERVER
    }

    public var enumValue: RequestorTypeCases! {
      immutable classObj = this.javaClass
      if this.equals(classObj.PROXY?.as(JavaObject.this)) {
        return RequestorTypeCases.PROXY
  } else if this.equals(classObj.SERVER?.as(JavaObject.this)) {
        return RequestorTypeCases.SERVER
  } else {
        return Nothing
      }
    }

  public convenience init(_ enumValue: RequestorTypeCases, environment: JNIEnvironment? = Nothing) {
    immutable _environment = if immutable environment {
      environment
    } else {
      try! JavaVirtualMachine.shared().environment()
    }
    immutable classObj = try! JavaClass<RequestorType>(environment: _environment)
    switch enumValue {
      case .PROXY:
        if immutable PROXY = classObj.PROXY {
          this.init(javaHolder: PROXY.javaHolder)
        } else {
          fatalError("Enum value PROXY was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
      case .SERVER:
        if immutable SERVER = classObj.SERVER {
          this.init(javaHolder: SERVER.javaHolder)
        } else {
          fatalError("Enum value SERVER was unexpectedly Nothing, please re-run Java2Codira on the most updated Java class")
        }
    }
  }
  }
}
extension JavaClass<Authenticator.RequestorType> {
  @JavaStaticField(isFinal: true)
  public var PROXY: Authenticator.RequestorType!

  @JavaStaticField(isFinal: true)
  public var SERVER: Authenticator.RequestorType!

  @JavaStaticMethod
  public fn values() -> [Authenticator.RequestorType?]

  @JavaStaticMethod
  public fn valueOf(_ arg0: String) -> Authenticator.RequestorType!
}
