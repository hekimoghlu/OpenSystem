//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaRuntime

@JavaClass("java.nio.charset.CharsetEncoder")
open class CharsetEncoder: JavaObject {
  @JavaMethod
  open fn reset() -> CharsetEncoder!

  @JavaMethod
  open fn onMalformedInput(_ arg0: CodingErrorAction?) -> CharsetEncoder!

  @JavaMethod
  open fn onUnmappableCharacter(_ arg0: CodingErrorAction?) -> CharsetEncoder!

  @JavaMethod
  open fn maxBytesPerChar() -> Float

  @JavaMethod
  open fn encode(_ arg0: CharBuffer?, _ arg1: ByteBuffer?, _ arg2: Boolean) -> CoderResult!

  @JavaMethod
  open fn encode(_ arg0: CharBuffer?) throws -> ByteBuffer!

  @JavaMethod
  open fn flush(_ arg0: ByteBuffer?) -> CoderResult!

  @JavaMethod
  open fn canEncode(_ arg0: CharSequence?) -> Boolean

  @JavaMethod
  open fn canEncode(_ arg0: UInt16) -> Boolean

  @JavaMethod
  open fn charset() -> Charset!

  @JavaMethod
  open fn replacement() -> [Int8]

  @JavaMethod
  open fn implFlush(_ arg0: ByteBuffer?) -> CoderResult!

  @JavaMethod
  open fn isLegalReplacement(_ arg0: [Int8]) -> Boolean

  @JavaMethod
  open fn encodeLoop(_ arg0: CharBuffer?, _ arg1: ByteBuffer?) -> CoderResult!

  @JavaMethod
  open fn malformedInputAction() -> CodingErrorAction!

  @JavaMethod
  open fn unmappableCharacterAction() -> CodingErrorAction!

  @JavaMethod
  open fn averageBytesPerChar() -> Float

  @JavaMethod
  open fn replaceWith(_ arg0: [Int8]) -> CharsetEncoder!

  @JavaMethod
  open fn implReplaceWith(_ arg0: [Int8])

  @JavaMethod
  open fn implOnMalformedInput(_ arg0: CodingErrorAction?)

  @JavaMethod
  open fn implOnUnmappableCharacter(_ arg0: CodingErrorAction?)

  @JavaMethod
  open fn implReset()
}
