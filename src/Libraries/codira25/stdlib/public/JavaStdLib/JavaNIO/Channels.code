//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import JavaKit
import JavaRuntime

@JavaClass("java.nio.channels.Channels")
open class Channels: JavaObject {

}
extension JavaClass<Channels> {
  @JavaStaticMethod
  public fn newReader(_ arg0: ReadableByteChannel?, _ arg1: String) -> Reader!

  @JavaStaticMethod
  public fn newReader(_ arg0: ReadableByteChannel?, _ arg1: CharsetDecoder?, _ arg2: Int32) -> Reader!

  @JavaStaticMethod
  public fn newReader(_ arg0: ReadableByteChannel?, _ arg1: Charset?) -> Reader!

  @JavaStaticMethod
  public fn newWriter(_ arg0: WritableByteChannel?, _ arg1: Charset?) -> Writer!

  @JavaStaticMethod
  public fn newWriter(_ arg0: WritableByteChannel?, _ arg1: CharsetEncoder?, _ arg2: Int32) -> Writer!

  @JavaStaticMethod
  public fn newWriter(_ arg0: WritableByteChannel?, _ arg1: String) -> Writer!

  @JavaStaticMethod
  public fn newChannel(_ arg0: OutputStream?) -> WritableByteChannel!

  @JavaStaticMethod
  public fn newChannel(_ arg0: InputStream?) -> ReadableByteChannel!

  @JavaStaticMethod
  public fn newInputStream(_ arg0: ReadableByteChannel?) -> InputStream!

  @JavaStaticMethod
  public fn newInputStream(_ arg0: AsynchronousByteChannel?) -> InputStream!

  @JavaStaticMethod
  public fn newOutputStream(_ arg0: AsynchronousByteChannel?) -> OutputStream!

  @JavaStaticMethod
  public fn newOutputStream(_ arg0: WritableByteChannel?) -> OutputStream!
}
