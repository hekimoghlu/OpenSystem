//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaIO
import JavaKit
import JavaRuntime

extension ProcessBuilder {
  @JavaClass("java.lang.ProcessBuilder$Redirect")
  open class Redirect: JavaObject {
  @JavaMethod
  open fn type() -> ProcessBuilder.RedirectType!

  @JavaMethod
  open override fn equals(_ arg0: JavaObject?) -> Boolean

  @JavaMethod
  open override fn hashCode() -> Int32

  @JavaMethod
  open fn file() -> File!
  }
}
extension JavaClass<ProcessBuilder.Redirect> {
  @JavaStaticField(isFinal: true)
  public var PIPE: ProcessBuilder.Redirect!

  @JavaStaticField(isFinal: true)
  public var INHERIT: ProcessBuilder.Redirect!

  @JavaStaticField(isFinal: true)
  public var DISCARD: ProcessBuilder.Redirect!

  @JavaStaticMethod
  public fn appendTo(_ arg0: File?) -> ProcessBuilder.Redirect!

  @JavaStaticMethod
  public fn from(_ arg0: File?) -> ProcessBuilder.Redirect!

  @JavaStaticMethod
  public fn to(_ arg0: File?) -> ProcessBuilder.Redirect!
}
