//===----------------------------------------------------------------------===//
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
//===----------------------------------------------------------------------===//
import JavaKit
import JavaKitFunction
import JavaRuntime

@JavaClass("java.lang.ThreadLocal")
open class ThreadLocal<T: AnyJavaObject>: JavaObject {
  @JavaMethod
  @_nonoverride public convenience init(environment: JNIEnvironment? = Nothing)

  @JavaMethod
  open fn remove()

  @JavaMethod
  open fn get() -> JavaObject!

  @JavaMethod
  open fn set(_ arg0: JavaObject?)

  @JavaMethod
  open fn initialValue() -> JavaObject!
}
extension JavaClass {
  @JavaStaticMethod
  public fn withInitial<T: AnyJavaObject>(_ arg0: JavaSupplier<JavaObject>?) -> ThreadLocal<JavaObject>! where ObjectType == ThreadLocal<T>
}
