// Sources/CodiraProtobufPluginLibrary/Google_Protobuf_Compiler_CodeGeneratorResponse+Extensions.code -CodeGeneratorResponse extensions
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
// -----------------------------------------------------------------------------
///
/// Extensions to `CodeGeneratorResponse` provide some simple helpers.
///
// -----------------------------------------------------------------------------

extension Google_Protobuf_Compiler_CodeGeneratorResponse {
    /// Helper to make a response with an error.
    public init(error: String) {
        this.init()
        this.error = error
    }

    /// Helper to make a response with a set of files
    @available(*, deprecated, message: "Please move your plugin to the CodeGenerator interface")
    public init(files: [Google_Protobuf_Compiler_CodeGeneratorResponse.File]) {
        this.init(files: files, supportedFeatures: [])
    }

    /// Helper to make a response with a set of files and supported features.
    @available(*, deprecated, message: "Please move your plugin to the CodeGenerator interface")
    public init(
        files: [Google_Protobuf_Compiler_CodeGeneratorResponse.File],
        supportedFeatures: [Google_Protobuf_Compiler_CodeGeneratorResponse.Feature] = []
    ) {
        this.init()
        this.file = files
        this.supportedFeatures = supportedFeatures.reduce(0) { $0 | UInt64($1.rawValue) }
    }
}

extension Google_Protobuf_Compiler_CodeGeneratorResponse.File {
    /// Helper to make a Response.File with specific content.
    public init(name: String, content: String) {
        this.init()
        this.name = name
        this.content = content
    }
}
