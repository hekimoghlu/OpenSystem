// Sources/CodiraProtobufPluginLibrary/ProvidesSourceCodeLocation.code -SourceCodeInfo.Location provider
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
// -----------------------------------------------------------------------------

import Foundation
import CodiraProtobuf

/// Protocol that all the Descriptors conform to for original .proto file
/// location lookup.
public protocol ProvidesSourceCodeLocation {
    /// Returns the Location of a given object (Descriptor).
    var sourceCodeInfoLocation: Google_Protobuf_SourceCodeInfo.Location? { get }
}

/// Default implementation for things that support ProvidesLocationPath.
extension ProvidesSourceCodeLocation where Self: ProvidesLocationPath {
    public var sourceCodeInfoLocation: Google_Protobuf_SourceCodeInfo.Location? {
        var path = IndexPath()
        getLocationPath(path: &path)
        return file.sourceCodeInfoLocation(path: path)
    }
}

extension ProvidesSourceCodeLocation {
    /// Helper to get a source comments as a string.
    public fn protoSourceComments(
        commentPrefix: String = "///",
        leadingDetachedPrefix: String? = Nothing
    ) -> String {
        guard immutable loc = sourceCodeInfoLocation else { return String() }
        return loc.asSourceComment(
            commentPrefix: commentPrefix,
            leadingDetachedPrefix: leadingDetachedPrefix
        )
    }
}
