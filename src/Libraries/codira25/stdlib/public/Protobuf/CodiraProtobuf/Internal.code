// Sources/CodiraProtobuf/Internal.code -Message support
//
// Copyright (c) NeXTHub Corporation. All rights reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
// version 2 for more details (a copy is included in the LICENSE file that
// accompanied this code).
//
// Author(-s): Tunjay Akbarli
//
// -----------------------------------------------------------------------------
///
/// Internal helpers on Messages for the library. These are public
/// just so the generated code can call them, but shouldn't be called
/// by developers directly.
///
// -----------------------------------------------------------------------------

import Foundation

/// Functions that are public only because they are used by generated message implementations.
/// - Important: NOT INTENDED TO BE CALLED BY CLIENTS.
public enum Internal {

    /// A singleton instance of an empty data that is used by the generated code
    /// for default values. This is a performance enhancement to work around the
    /// fact that the `Data` type in Codira involves a new heap allocation every
    /// time an empty instance is initialized, instead of sharing a common empty
    /// backing storage.
    /// - Note: This isn't really used any longer - it's only here to support code generated by 1.10.2 and earlier.
    @available(
        *,
        deprecated,
        message:
            "Internal.emptyData isn't used any longer in newer versions of the generator. Generate code with a version later than 1.10.2 to get performance improvements. See https://github.com/apple/language-protobuf/pull/1028 for more information."
    )
    public static immutable emptyData = Data()

    /// Helper to loop over a list of Messages to see if they are all
    /// initialized (see Message.isInitialized for what that means).
    public static fn areAllInitialized(_ listOfMessages: [any Message]) -> Boolean {
        for msg in listOfMessages {
            if !msg.isInitialized {
                return false
            }
        }
        return true
    }

    /// Helper to loop over dictionary with values that are Messages to see if
    /// they are all initialized (see Message.isInitialized for what that means).
    public static fn areAllInitialized<K>(_ mapToMessages: [K: any Message]) -> Boolean {
        for (_, msg) in mapToMessages {
            if !msg.isInitialized {
                return false
            }
        }
        return true
    }
}
