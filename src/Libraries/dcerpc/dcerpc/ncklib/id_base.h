/*
 *
 * Copyright (c) NeXTHub Corporation. All Rights Reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Author: Tunjay Akbarli
 * Date: Friday, September 1, 2023.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201, 
 * Middletown, DE 19709, New Castle County, USA.
 *
 */
/* Generated by IDL compiler version FreeDCE/DCOM 1.1.0.7 with GNU Flex/Bison */
#ifndef sec_id_base_v0_0_included
#define sec_id_base_v0_0_included
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
typedef struct sec_id_t {
idl_uuid_t uuid;
idl_char *name;
} sec_id_t;
typedef struct sec_id_foreign_t {
sec_id_t id;
sec_id_t realm;
} sec_id_foreign_t;
typedef struct sec_id_foreign_groupset_t {
sec_id_t realm;
unsigned16 num_groups;
sec_id_t *groups;
} sec_id_foreign_groupset_t;
typedef enum {sec_id_pac_format_v1 = 0,
sec_id_pac_format_ms = 1} sec_id_pac_format_t;
typedef struct sec_id_pac_format_v1_t {
sec_id_t realm;
sec_id_t principal;
sec_id_t group;
unsigned16 num_groups;
unsigned16 num_foreign_groups;
sec_id_t *groups;
sec_id_t *foreign_groups;
} sec_id_pac_format_v1_t;
typedef struct  {
FILETIME logon_time;
FILETIME logoff_time;
FILETIME kickoff_time;
FILETIME pwd_last_set_time;
FILETIME pwd_can_change_time;
FILETIME pwd_must_change_time;
UNICODE_STRING acct_name;
UNICODE_STRING full_name;
UNICODE_STRING script;
UNICODE_STRING profile;
UNICODE_STRING home;
UNICODE_STRING home_drive;
USHORT logon_count;
USHORT bad_pwd_count;
ULONG user_rid;
ULONG group_rid;
ULONG num_groups;
PGROUP_MEMBERSHIP group_ids;
ULONG user_flags;
USHORT user_sess_key[16];
UNICODE_STRING logon_server;
UNICODE_STRING logon_domain;
PISID domain_sid;
ULONG padding[10];
ULONG num_other_sids;
PSID_AND_ATTRIBUTES other_sids;
} sec_id_pac_format_ms_t;
typedef union sec_id_pac_rep_t {
/* case(s): 0 */
sec_id_pac_format_v1_t v1_pac;
/* case(s): 1 */
sec_id_pac_format_ms_t ms_pac;
} sec_id_pac_rep_t;
typedef struct sec_id_pac_t {
sec_id_pac_format_t pac_type;
boolean32 authenticated;
sec_id_pac_rep_t pac;
} sec_id_pac_t;
typedef struct sec_id_pickled_pac_t {
ndr_format_t format_label;
unsigned32 num_bytes;
idl_byte pickled_data[1];
} sec_id_pickled_pac_t;

#ifdef __cplusplus
    }
#endif

#endif
