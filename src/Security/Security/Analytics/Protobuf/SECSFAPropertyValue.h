/*
 *
 * Copyright (c) NeXTHub Corporation. All Rights Reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Author: Tunjay Akbarli
 * Date: Tuesday, February 25, 2025.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201, 
 * Middletown, DE 19709, New Castle County, USA.
 *
 */

// This file was automatically generated by protocompiler
// DO NOT EDIT!
// Compiled from SFACollection.proto

#import <Foundation/Foundation.h>
#import <ProtocolBuffer/PBCodable.h>

typedef NS_ENUM(int32_t, SECSFAPropertyValue_Property) {
    SECSFAPropertyValue_Property_PBUNSET = 0,
    SECSFAPropertyValue_Property_Integer = 1,
    SECSFAPropertyValue_Property_String = 2,
};
#ifdef __OBJC__
NS_INLINE NSString *SECSFAPropertyValue_PropertyAsString(SECSFAPropertyValue_Property value)
{
    switch (value)
    {
        case SECSFAPropertyValue_Property_PBUNSET: return @"PBUNSET";
        case SECSFAPropertyValue_Property_Integer: return @"integer";
        case SECSFAPropertyValue_Property_String: return @"string";
        default: return [NSString stringWithFormat:@"(unknown: %i)", value];
    }
}
#endif /* __OBJC__ */
#ifdef __OBJC__
NS_INLINE SECSFAPropertyValue_Property StringAsSECSFAPropertyValue_Property(NSString *value)
{
    if ([value isEqualToString:@"PBUNSET"]) return SECSFAPropertyValue_Property_PBUNSET;
    if ([value isEqualToString:@"integer"]) return SECSFAPropertyValue_Property_Integer;
    if ([value isEqualToString:@"string"]) return SECSFAPropertyValue_Property_String;
    return SECSFAPropertyValue_Property_PBUNSET;
}
#endif /* __OBJC__ */

#ifdef __cplusplus
#define SECSFAPROPERTYVALUE_FUNCTION extern "C" __attribute__((visibility("hidden")))
#else
#define SECSFAPROPERTYVALUE_FUNCTION extern __attribute__((visibility("hidden")))
#endif

__attribute__((visibility("hidden")))
@interface SECSFAPropertyValue : PBCodable <NSCopying>
{
    int64_t _integer;
    SECSFAPropertyValue_Property _property;
    NSString *_string;
    struct {
        uint integer:1;
        uint property:1;
    } _has;
}


- (void)clearOneofValuesForProperty;
@property (nonatomic) BOOL hasInteger;
@property (nonatomic) int64_t integer;

@property (nonatomic, readonly) BOOL hasString;
@property (nonatomic, retain) NSString *string;

@property (nonatomic) BOOL hasProperty;
@property (nonatomic) SECSFAPropertyValue_Property property;
- (NSString *)propertyAsString:(SECSFAPropertyValue_Property)value;
- (SECSFAPropertyValue_Property)StringAsProperty:(NSString *)str;

// Performs a shallow copy into other
- (void)copyTo:(SECSFAPropertyValue *)other;

// Performs a deep merge from other into self
// If set in other, singular values in self are replaced in self
// Singular composite values are recursively merged
// Repeated values from other are appended to repeated values in self
- (void)mergeFrom:(SECSFAPropertyValue *)other;

SECSFAPROPERTYVALUE_FUNCTION BOOL SECSFAPropertyValueReadFrom(__unsafe_unretained SECSFAPropertyValue *self, __unsafe_unretained PBDataReader *reader);

@end

