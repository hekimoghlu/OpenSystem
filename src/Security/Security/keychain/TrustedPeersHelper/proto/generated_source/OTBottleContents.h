/*
 *
 * Copyright (c) NeXTHub Corporation. All Rights Reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
 *
 * Author: Tunjay Akbarli
 * Date: Saturday, December 10, 2022.
 *
 * Licensed under the Apache License, Version 2.0 (the ""License"");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an ""AS IS"" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Please contact NeXTHub Corporation, 651 N Broad St, Suite 201, 
 * Middletown, DE 19709, New Castle County, USA.
 *
 */

// This file was automatically generated by protocompiler
// DO NOT EDIT!
// Compiled from OTBottleContents.proto

#import <Foundation/Foundation.h>
#import <ProtocolBuffer/PBCodable.h>

@class OTPrivateKey;

#ifdef __cplusplus
#define OTBOTTLECONTENTS_FUNCTION extern "C" __attribute__((visibility("hidden")))
#else
#define OTBOTTLECONTENTS_FUNCTION extern __attribute__((visibility("hidden")))
#endif

__attribute__((visibility("hidden")))
@interface OTBottleContents : PBCodable <NSCopying>
{
    OTPrivateKey *_peerEncryptionPrivKey;
    OTPrivateKey *_peerSigningPrivKey;
    NSData *_reserved1;
    NSData *_reserved2;
}


@property (nonatomic, readonly) BOOL hasReserved1;
/** tags 1 and 2 were briefly used during development for the raw private key data, with nothing to specify the key type. */
@property (nonatomic, retain) NSData *reserved1;

@property (nonatomic, readonly) BOOL hasReserved2;
@property (nonatomic, retain) NSData *reserved2;

@property (nonatomic, readonly) BOOL hasPeerSigningPrivKey;
@property (nonatomic, retain) OTPrivateKey *peerSigningPrivKey;

@property (nonatomic, readonly) BOOL hasPeerEncryptionPrivKey;
@property (nonatomic, retain) OTPrivateKey *peerEncryptionPrivKey;

// Performs a shallow copy into other
- (void)copyTo:(OTBottleContents *)other;

// Performs a deep merge from other into self
// If set in other, singular values in self are replaced in self
// Singular composite values are recursively merged
// Repeated values from other are appended to repeated values in self
- (void)mergeFrom:(OTBottleContents *)other;

OTBOTTLECONTENTS_FUNCTION BOOL OTBottleContentsReadFrom(__unsafe_unretained OTBottleContents *self, __unsafe_unretained PBDataReader *reader);

@end

