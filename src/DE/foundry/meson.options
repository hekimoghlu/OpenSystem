option('gnome_sdk_version',
       type: 'string',
       value: 'master',
       description: 'The GNOME SDK release to use for templates')
option('freedesktop_sdk_version',
       type: 'string',
       value: '25.08',
       description: 'The Freedesktop SDK release to use for templates')

option('development',
       type: 'boolean',
       value: false,
       description: 'For development build, enables extra debugging routines')
option('safe_path',
       type: 'string',
       value: '',
       description: 'PATH variable to run build commands (default: platform-specific)')
option('docs',
       type: 'boolean',
       value: false,
       description: 'Build reference manual (requires gi-doc and gobject-introspection)')
option('introspection',
       type: 'feature',
       value: 'enabled',
       description: 'Generate gir data (requires gobject-introspection)')

# Feature Flags
option('feature-dap',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with debug-adapter-protocol support')
option('feature-debugger',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with debugger support')
option('feature-docs',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with documentation support')
option('feature-flatpak',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with Flatpak support')
option('feature-git',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with Git support (requires feature-vcs)')
option('feature-llm',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with LLM support')
option('feature-lsp',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with LSP support')
option('feature-text',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with text editing support')
option('feature-terminal',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with terminal support')
option('feature-templates',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with template support')
option('feature-vcs',
       type: 'boolean',
       value: true,
       description: 'Build libfoundry with version control support')

# Build GTK library
option('gtk',
       type: 'boolean', value: true,
       description: 'Build and install libfoundry-gtk library')
option('webkit',
       type: 'boolean', value: true,
       description: 'Allow libfoundry-gtk to link against webkit')
option('commonmark',
       type: 'boolean', value: true,
       description: 'Allow libfoundry-gtk to link against commonmark')

# Build libadwaita (GNOME) library
option('adwaita',
       type: 'boolean', value: true,
       description: 'Build and install libfoundry-adw library')

# Device Integration
option('plugin-deviced',
       type: 'boolean',
       value: false,
       description: 'Provide integration with deviced enabled devices')
option('plugin-qemu',
       type: 'boolean',
       value: true,
       description: 'Provide integration with qemu-user-static')

# Containers
option('plugin-jhbuild',
       type: 'boolean',
       value: true,
       description: 'Allows using the jhbuild build tool as a SDK')
option('plugin-podman',
       type: 'boolean',
       value: true,
       description: 'Allows using podman containers as a SDK')

# Linters
option('plugin-codespell',
       type: 'boolean',
       value: true,
       description: 'Provide integration with codespell diagnostics')
option('plugin-flake8',
       type: 'boolean',
       value: true,
       description: 'Diagnostics for flake8')
option('plugin-eslint',
       type: 'boolean',
       value: true,
       description: 'Diagnostics for eslint')
option('plugin-gdiagnose',
       type: 'boolean',
       value: true,
       description: 'Diagnostics for GObject code')
option('plugin-gettext',
       type: 'boolean',
       value: true,
       description: 'Diagnostics for gettext')
option('plugin-sarif',
       type: 'boolean',
       value: true,
       description: 'Integration with SARIF tool format')
option('plugin-shellcheck',
       type: 'boolean',
       value: true,
       description: 'Diagnostics for shellcheck')

# Build Systems
option('plugin-autotools',
       type: 'boolean',
       value: true,
       description: 'Provide integration with autotools')
option('plugin-buildstream',
       type: 'boolean',
       value: true,
       description: 'Provide integration with buildstream')
option('plugin-cargo',
       type: 'boolean',
       value: true,
       description: 'Provide integration with cargo build system')
option('plugin-cmake',
       type: 'boolean',
       value: true,
       description: 'Provide integration with cmake build system')
option('plugin-dub',
       type: 'boolean',
       value: true,
       description: 'Provide integration with dub build system')
option('plugin-go',
       type: 'boolean',
       value: true,
       description: 'Provide integration with go build system')
option('plugin-gradle',
       type: 'boolean',
       value: true,
       description: 'Allows building with gradle')
option('plugin-make',
       type: 'boolean',
       value: true,
       description: 'Allows building with make')
option('plugin-maven',
       type: 'boolean',
       value: true,
       description: 'Allows building with maven')
option('plugin-meson',
       type: 'boolean',
       value: true,
       description: 'Allows using the meson build system')
option('plugin-npm',
       type: 'boolean',
       value: true,
       description: 'Provide integration with npm build system')
option('plugin-phpize',
       type: 'boolean',
       value: true,
       description: 'Provide integration with phpize')
option('plugin-waf',
       type: 'boolean',
       value: true,
       description: 'Allows using the waf build system')

# Language Servers
option('plugin-astro-ls',
       type: 'boolean',
       value: true,
       description: 'Provide integration with astro language server')
option('plugin-clangd',
       type: 'boolean',
       value: true,
       description: 'Provide integration with clangd language server')
option('plugin-bash-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with bash-language-server')
option('plugin-blueprint',
       type: 'boolean',
       value: true,
       description: 'Provide integration with blueprint')
option('plugin-elixir-ls',
       type: 'boolean',
       value: true,
       description: 'Provide integration with elixir-ls')
option('plugin-glsl-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with glsl-language-server')
option('plugin-gopls',
       type: 'boolean',
       value: true,
       description: 'Provide integration with gopls')
option('plugin-intelephense',
       type: 'boolean',
       value: true,
       description: 'Provide integration with intelephense')
option('plugin-jdtls',
       type: 'boolean',
       value: true,
       description: 'Provide integration with jdtls')
option('plugin-jedi-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with jedi-language-server')
option('plugin-lua-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with lua-language-server')
option('plugin-mesonlsp',
       type: 'boolean',
       value: true,
       description: 'Provide integration with mesonlsp')
option('plugin-pylsp',
       type: 'boolean',
       value: true,
       description: 'Provide integration with pylsp language server')
option('plugin-pyrefly',
       type: 'boolean',
       value: true,
       description: 'Provide integration with pyrefly language server')
option('plugin-ruff',
       type: 'boolean',
       value: true,
       description: 'Provide integration with ruff LSP')
option('plugin-rust-analyzer',
       type: 'boolean',
       value: true,
       description: 'Provide integration with rust-analyzer')
option('plugin-serve-d',
       type: 'boolean',
       value: true,
       description: 'Provide integration with serve-d')
option('plugin-sourcekit-lsp',
       type: 'boolean',
       value: true,
       description: 'Provide integration with sourcekit-lsp')
option('plugin-ts-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with ts-language-server')
option('plugin-ty',
       type: 'boolean',
       value: true,
       description: 'Provide integration with ty LSP')
option('plugin-vala-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with vala-language-server')
option('plugin-vhdl-language-server',
       type: 'boolean',
       value: true,
       description: 'Provide integration with vhdl-language-server')
option('plugin-zls',
       type: 'boolean',
       value: true,
       description: 'Provide integration with zls')

# Code Search and Indexing
option('plugin-file-search',
       type: 'boolean',
       value: true,
       description: 'Search for files by file-name')
option('plugin-codesearch',
       type: 'boolean',
       value: true,
       description: 'Indexes source code for searching')

# Project Support
option('plugin-doap',
       type: 'boolean',
       value: true,
       description: 'Parse DOAP files for project information')

# Documentation
option('plugin-devhelp',
       type: 'boolean',
       value: true,
       description: 'Extract documentation from devhelp documentation format')

# Debuggers
option('plugin-gdb',
       type: 'boolean',
       value: true,
       description: 'GDB debugger integration')
option('plugin-lldb',
       type: 'boolean',
       value: true,
       description: 'LLDB debugger integration')

# Symbol Providers
option('plugin-ctags',
       type: 'boolean',
       value: true,
       description: 'Integration with universal CTags')

# LLM Providers
option('plugin-ollama',
       type: 'boolean',
       value: true,
       description: 'Integrate with ollama LLM provider')

# Spellcheck
option('plugin-spellcheck',
       type: 'boolean',
       value: true,
       description: 'Spellcheck for FoundrySourceView')
option('plugin-word-completion',
       type: 'boolean',
       value: true,
       description: 'Word completion for FoundrySourceView')

# Templates
option('plugin-make-templates',
       type: 'boolean',
       value: true,
       description: 'Make project templates')
option('plugin-meson-templates',
       type: 'boolean',
       value: true,
       description: 'Meson project templates')
option('plugin-simple-templates',
       type: 'boolean',
       value: true,
       description: 'Simple file templates within projects')

# Text Settings
option('plugin-editorconfig',
       type: 'boolean',
       value: true,
       description: 'Editorconfig text settings integration')
option('plugin-modelines',
       type: 'boolean',
       value: true,
       description: 'Modeline text settings integration')
