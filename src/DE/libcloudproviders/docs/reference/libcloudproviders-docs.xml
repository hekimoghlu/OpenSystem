<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd" [
<!ENTITY version SYSTEM "version.xml">
]>
<book id="index" xmlns:xi="http://www.w3.org/2003/XInclude">
  <bookinfo>
    <title>CloudProviders Reference Manual</title>
    <releaseinfo>Cloudproviders &version;</releaseinfo>
    <authorgroup>
      <author>
        <firstname>Julius</firstname>
        <surname>Härtl</surname>
        <affiliation>
          <address>
            <email>jus@bitgrid.net</email>
          </address>
        </affiliation>
      </author>
      <author>
        <firstname>Carlos</firstname>
        <surname>Soriano</surname>
        <affiliation>
          <address>
            <email>csoriano@gnome.org</email>
          </address>
        </affiliation>
      </author>
    </authorgroup>
    <copyright>
      <year>2017</year>
      <holder>Julius Härtl</holder>
      <year>2017</year>
      <holder>Carlos Soriano</holder>
    </copyright>
  </bookinfo>

  <part id="libcloudproviders">
    <title>libcloudproviders library</title>
    <partintro>
      <para>
          This part documents libcloudproviders library. The library is meant to be used
          as a C interface with their respective language bindings through introspection.
          However, it can also be used with raw DBus management. If that's the
          case, make sure it implements the DBus interfaces explained at
          <link linkend="cloudproviders-dbus">cloudproviders-dbus</link>.
      </para>
    </partintro>
    <xi:include href="xml/cloudproviderscollector.xml"/>
    <xi:include href="xml/cloudprovidersproviderexporter.xml"/>
    <xi:include href="xml/cloudprovidersaccountexporter.xml"/>
    <xi:include href="xml/cloudprovidersaccount.xml"/>
    <xi:include href="xml/cloudprovidersprovider.xml"/>
  </part>

  <part id="libcloudproviders-integration">
    <title>Integrating libcloudproviders</title>
    <xi:include href="integration-server.xml" />
    <xi:include href="integration-client.xml" />
  </part>

  <part id="cloudproviders-dbus">
    <title>DBus Interfaces</title>
    <partintro>
      <para>
    cloud provider accounts using <link linkend="cloud_providers_collector_get_providers()">cloud_providers_collector_get_providers()</link>. This function returns
          cloud-providers-collector-get-providers()
         #CloudProvidersCollector.signals
          cloudprovidersprovider
         <link href="glib-Hash-Tables">Hash Tables</link>
         <link href="#CloudProvidersProvider.signals">Hash Tables</link>
         <link href="CloudProvidersCollector.html#cloud-providers-collector-get-providers">Hash Tables</link>
          The DBus object that is passed to cloud_providers_provider_exporter_new() will implement the <ulink
          url="http://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager">org.freedesktop.DBus.ObjectManager</ulink>
          interface, and that can be used by clients to discover and query
          objects like the provider properties itself or the accounts associated
          with your provider.
      </para>
    </partintro>
    <xi:include href="generated-docs-org.freedesktop.CloudProviders.Account.xml"/>
    <xi:include href="generated-docs-org.freedesktop.CloudProviders.Provider.xml"/>
  </part>
  <index id="index-all">
    <title>Index of all symbols</title>
  </index>
  <xi:include href="xml/annotation-glossary.xml"><xi:fallback/></xi:include>

</book>
