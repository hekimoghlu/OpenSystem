include:
  - remote: "https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/b61a03cabbf308e81289f7aaaf0b5a80a34ffb99/templates/ci-fairy.yml"
  - remote: 'https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/b61a03cabbf308e81289f7aaaf0b5a80a34ffb99/templates/alpine.yml'
  - remote: 'https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/b61a03cabbf308e81289f7aaaf0b5a80a34ffb99/templates/fedora.yml'
  - remote: 'https://gitlab.gnome.org/Infrastructure/freedesktop-ci-templates/-/raw/b61a03cabbf308e81289f7aaaf0b5a80a34ffb99/templates/debian.yml'
  - component: gitlab.gnome.org/GNOME/citemplates/release-service@master
    inputs:
      job-stage: "deploy"
      dist-job-name: "test-dist"
      tarball-artifact-path: "build/meson-dist/$CI_PROJECT_NAME-$CI_COMMIT_TAG.tar.xz"

variables:
  MESON_TEST_TIMEOUT_MULTIPLIER: 3
  # These can be used to see verbose log output from the functional-tests.
  # See HACKING.md for more information.
  G_MESSAGES_DEBUG: ""
  LOCALSEARCH_DEBUG: "statistics"

  # This can be used when debugging test failures that only occur within GitLab CI.
  MESON_TEST_EXTRA_ARGS: ""

  TRACKER_TESTS_AWAIT_TIMEOUT: 60

stages:
  - check
  - review
  - prepare
  - code-review
  - build
  - test
  - sandbox
  - analysis
  - deploy

workflow:
  rules:
    # Allow to switch from branch pipelines to MR pipelines seamlessly
    # https://docs.gitlab.com/ee/ci/jobs/job_control.html#avoid-duplicate-pipelines
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Don't trigger a branch pipeline if there is an open MR
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'

.manual-pipeline-guard:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH =~ /^tracker-miners-[0-9-]\.[0-9-]+$/'
    - if: '$CI_COMMIT_BRANCH =~ /^localsearch-[0-9-]\.[0-9-]+$/'
    # Avoid catchall `when: manual` rule which might
    # cause duplicate pipelines to be triggered.
    # https://docs.gitlab.com/ee/ci/jobs/job_control.html#avoid-duplicate-pipelines
    #
    # Also make it so pipelines without MR need to be started
    # manually, since their state will most likely be WIP
    - if: '$CI_COMMIT_BRANCH'
      when: 'manual'

.check-template: &check
  extends:
    - .fdo.ci-fairy
  artifacts:
    expire_in: 1 week
    paths:
      - check-junit-report.xml
    reports:
      junit: check-junit-report.xml

repo-sanity:
  stage: check
  script:
    - >
      if [[ -z "$CI_REGISTRY_IMAGE" ]] ;
      then
        .gitlab-ci/simple-junit-report.sh check-junit-report.xml \
          repo-sanity "The container registry should be enabled in the project general settings panel at $CI_PROJECT_URL/edit" ;
        exit 1 ;
      fi
  rules:
    - !reference [.manual-pipeline-guard, rules]
  <<: *check

check-commit-log:
  variables:
    GIT_DEPTH: "100"
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-commits --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

check-merge-request:
  variables:
    GIT_STRATEGY: none
  stage: review
  script:
    - if [[ x"$CI_MERGE_REQUEST_TARGET_BRANCH_NAME" != "x" ]] ;
      then
        ci-fairy check-merge-request --require-allow-collaboration --junit-xml=check-junit-report.xml ;
      else
        echo "Not a merge request" ;
      fi
  <<: *check

.tracker-miners.fedora@common:
  variables:
    BASE_TAG: '2025-09-02.2'
    FDO_UPSTREAM_REPO: GNOME/localsearch
    FDO_DISTRIBUTION_PACKAGES: 'clang clang-analyzer python3-dbusmock git libasan libubsan python3-gobject python3-pip umockdev-devel xmlto uncrustify patch diffutils gstreamer1-plugins-good redhat-rpm-config man-db'
    FDO_DISTRIBUTION_EXEC: |
      dnf install -y 'dnf5-command(builddep)' 'dnf5-command(download)';
      dnf install -y --nogpgcheck ffmpeg-free-devel &&
      (dnf builddep -y tracker tracker-miners --setopt=install_weak_deps=False || dnf builddep -y tinysparql localsearch --setopt=install_weak_deps=False) &&
      dnf clean all &&
      pip3 install beautifulsoup4 mkdocs mkdocs-cinder tap.py gcovr meson

.tracker-miners.alpine@common:
  variables:
    BASE_TAG: '2025-09-02.0'
    FDO_UPSTREAM_REPO: GNOME/localsearch
    FDO_DISTRIBUTION_PACKAGES: 'alpine-sdk bash-completion dbus py3-dbusmock git json-glib-dev libsoup3-dev py3-gobject3 py3-setuptools py3-tappy py3-pip mandoc asciidoc dbus-dev enca-dev exempi-dev ffmpeg-dev flac-dev gexiv2-dev giflib-dev glib-dev gobject-introspection-dev gst-plugins-good gst-plugins-base-dev gstreamer-dev icu-dev libcue-dev libexif-dev libgsf-dev libgudev-dev libiptcdata-dev libjpeg-turbo-dev libosinfo-dev libpng-dev libseccomp-dev libvorbis-dev libxml2-dev meson poppler-dev shared-mime-info taglib-dev tiff-dev tinysparql tinysparql-dev totem-pl-parser-dev tzdata upower-dev zlib-dev'
    FDO_DISTRIBUTION_EXEC: |
      pip3 install gcovr &&
      rm -f /usr/share/polkit-1/rules.d/50-default.rules

.tracker-miners.debian@common:
  variables:
    BASE_TAG: '2025-09-02.0'
    FDO_UPSTREAM_REPO: GNOME/localsearch
    FDO_DISTRIBUTION_PACKAGES: 'ca-certificates python3-dbusmock python3-tap python3-pip umockdev libumockdev-dev upower asciidoc-base git libavcodec-dev libavformat-dev libavutil-dev man-db'
    FDO_DISTRIBUTION_EXEC: |
      export DEBIAN_FRONTEND=noninteractive &&
      sed -i 's/^Types: deb$/Types: deb deb-src/' /etc/apt/sources.list.d/debian.sources &&
      apt-get -yq update && apt-get -yq upgrade &&
      apt-get -yq build-dep tracker tracker-miners &&
      pip3 install gcovr

.tracker-miners.fedora:latest@x86_64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: latest
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

.tracker-miners.fedora:rawhide@x86_64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: rawhide
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

.tracker-miners.fedora:latest@aarch64:
  extends: .tracker-miners.fedora@common
  variables:
    FDO_DISTRIBUTION_VERSION: latest
    FDO_DISTRIBUTION_TAG: "aarch64-${BASE_TAG}"
  tags:
    - aarch64

.tracker-miners.alpine:latest@x86_64:
  extends: .tracker-miners.alpine@common
  variables:
    FDO_DISTRIBUTION_VERSION: latest
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

.tracker-miners.debian:stable@x86_64:
  extends: .tracker-miners.debian@common
  variables:
    FDO_DISTRIBUTION_VERSION: stable
    FDO_DISTRIBUTION_TAG: "x86_64-${BASE_TAG}"

build-fedora-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:latest@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  needs:
    - check-commit-log
    - check-merge-request

build-fedora-rawhide-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  allow_failure: true
  needs:
    - check-commit-log
    - check-merge-request

build-fedora-container@aarch64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:latest@aarch64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  allow_failure: true
  needs:
    - check-commit-log
    - check-merge-request

build-alpine-container@x86_64:
  extends:
    - .fdo.container-build@alpine
    - .tracker-miners.alpine:latest@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  needs:
    - check-commit-log
    - check-merge-request

build-debian-container@x86_64:
  extends:
    - .fdo.container-build@debian
    - .tracker-miners.debian:stable@x86_64
  stage: prepare
  variables:
    GIT_STRATEGY: none
  allow_failure: true
  needs:
    - check-commit-log
    - check-merge-request

check-code-style:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  needs:
    - build-fedora-container@x86_64
  stage: code-review
  script:
    - git fetch origin main;
      export common_parent_sha=$(diff --old-line-format='' --new-line-format='' <(git rev-list --first-parent "origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:-${CI_DEFAULT_BRANCH}}") <(git rev-list --first-parent HEAD) | head -1) ;
      python3 -u ./check-style.py --dry-run --sha $common_parent_sha ;
  allow_failure: true

.build-template: &build
  stage: build
  script:
    - mkdir build
    - cd build
    - meson setup .. --prefix=/usr -Db_lto=true -Dtests_tap_protocol=true -Dtinysparql-3.0:docs=false --auto-features=enabled -Dtinysparql-3.0:avahi=disabled ${BUILD_ARGS}
    - ninja
  artifacts:
    expire_in: 1 day
    paths:
      - build

build-fedora@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  needs:
    - build-fedora-container@x86_64
  <<: *build

build-fedora-rawhide@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  needs:
    - build-fedora-rawhide-container@x86_64
  allow_failure: true
  <<: *build

build-fedora@aarch64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@aarch64
  needs:
    - build-fedora-container@aarch64
  allow_failure: true
  <<: *build

build-alpine-latest@x86_64:
  extends:
    - .fdo.distribution-image@alpine
    - .tracker-miners.alpine:latest@x86_64
  needs:
    - build-alpine-container@x86_64
  variables:
    BUILD_ARGS: '-Dxps=disabled -Dsystemd_user_services=false'
  <<: *build

build-debian-stable@x86_64:
  extends:
    - .fdo.distribution-image@debian
    - .tracker-miners.debian:stable@x86_64
  needs:
    - build-debian-container@x86_64
  allow_failure: true
  <<: *build

.test_template: &test
  stage: test

  script:
    - cd build
    - ninja clean
    - meson configure -Db_coverage=true -Dseccomp=false -Dlandlock=disabled
    - ninja
    - |
      # Remove the many "CI_" variables from the environment. Meson dumps the
      # whole environment for every failed test, and that gives a whole
      # screenful of junk each time unless we strip these.
      unset $(env|grep -o '^CI_[^=]*')
      meson devenv dbus-run-session -- env LANG=C.UTF-8 LC_ALL=C.UTF-8 meson test --suite localsearch --print-errorlogs --num-processes 4 ${MESON_TEST_EXTRA_ARGS}

  after_script:
    - pushd build
    - gcovr --root=.. --exclude=../build --exclude=./build
        --exclude=../tests --exclude=./subprojects --exclude=../subprojects
        --json --print-summary --output=../coverage-${CI_JOB_NAME}.json
    - popd
    - |
      echo "Distribution: "
      echo
      grep -e '^NAME=' -e '^VERSION=' /etc/os-release
      echo
      echo "Test suite settings:"
      echo
      echo "G_MESSAGES_DEBUG: ${G_MESSAGES_DEBUG}"
      echo "LOCALSEARCH_DEBUG: ${LOCALSEARCH_DEBUG}"
      echo "MESON_TEST_EXTRA_ARGS: ${MESON_TEST_EXTRA_ARGS}"
      echo
      echo "These values can be set at https://gitlab.gnome.org/GNOME/localsearch/pipelines/new"

  artifacts:
    expire_in: 1 day
    when: always
    paths:
    - build/meson-logs/*.txt
    - coverage-*.json
    reports:
      junit: "build/meson-logs/testlog.junit.xml"

test-fedora@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  needs:
    - build-fedora@x86_64
  <<: *test

test-fedora-rawhide@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  needs:
    - build-fedora-rawhide@x86_64
  allow_failure: true
  <<: *test

test-fedora@aarch64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@aarch64
  needs:
    - build-fedora@aarch64
  allow_failure: true
  <<: *test

test-alpine@x86_64:
  extends:
    - .fdo.distribution-image@alpine
    - .tracker-miners.alpine:latest@x86_64
  needs:
    - build-alpine-latest@x86_64
  <<: *test

test-debian@x86_64:
  extends:
    - .fdo.distribution-image@debian
    - .tracker-miners.debian:stable@x86_64
  needs:
    - build-debian-stable@x86_64
  allow_failure: true
  <<: *test

test-docs:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  stage: test
  script:
    - ./docs/reference/build.py --output=website --man-pages ./docs/man1/localsearch-*.txt
  artifacts:
    expose_as: 'Documentation'
    paths:
      - website
      - website/index.html
  needs:
    - build-fedora-container@x86_64

test-dist:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  needs:
    - build-fedora-container@x86_64
  stage: test
  script:
    - |
      git clone https://gitlab.gnome.org/GNOME/tinysparql.git
      pushd tinysparql; meson setup build --libdir lib64 --prefix=/usr -Ddocs=false; ninja -C build install; popd
      meson setup --wipe build
      meson compile -C build
      meson devenv -C build dbus-run-session meson dist
  artifacts:
    expose_as: 'Tarball'
    paths:
      - build/meson-dist/

.sandbox_template: &sandbox
  stage: sandbox

  script:
    - cd build
    - |
      # Remove the many "CI_" variables from the environment. Meson dumps the
      # whole environment for every failed test, and that gives a whole
      # screenful of junk each time unless we strip these.
      unset $(env|grep -o '^CI_[^=]*')
      meson devenv dbus-run-session -- env LANG=C.UTF-8 LC_ALL=C.UTF-8 meson test --suite localsearch --print-errorlogs --num-processes 4 ${MESON_TEST_EXTRA_ARGS}

  artifacts:
    expire_in: 1 day
    when: always
    paths:
    - build/meson-logs/*.txt
    reports:
      junit: "build/meson-logs/testlog.junit.xml"

sandbox-fedora@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  needs:
    - build-fedora@x86_64
  <<: *sandbox

sandbox-fedora-rawhide@x86_64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  needs:
    - build-fedora-rawhide@x86_64
  allow_failure: true
  <<: *sandbox

sandbox-fedora@aarch64:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@aarch64
  needs:
    - build-fedora@aarch64
  allow_failure: true
  <<: *sandbox

sandbox-alpine@x86_64:
  extends:
    - .fdo.distribution-image@alpine
    - .tracker-miners.alpine:latest@x86_64
  needs:
    - build-alpine-latest@x86_64
  allow_failure: true
  <<: *sandbox

sandbox-debian@x86_64:
  extends:
    - .fdo.distribution-image@debian
    - .tracker-miners.debian:stable@x86_64
  needs:
    - build-debian-stable@x86_64
  allow_failure: true
  <<: *sandbox

coverage:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  stage: analysis
  allow_failure: true
  script:
    - mkdir coveragereport
    - gcovr --add-tracefile 'coverage-*.json'
        --exclude=build
        --html-details --print-summary --output coveragereport/index.html
    - gcovr --add-tracefile 'coverage-*.json'
        --exclude=build
        --xml --output coveragereport/coverage.xml
  coverage: '/^lines: (\d+\.\d+\%)/'
  artifacts:
    expose_as: 'Coverage'
    when: always
    paths:
    - coveragereport
    - coveragereport/index.html
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coveragereport/coverage.xml
  needs:
    - test-fedora@x86_64
    - test-fedora@aarch64
    - test-fedora-rawhide@x86_64
    - test-alpine@x86_64
    # Currently breaks gcovr
    #- test-debian@x86_64

coverity:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  stage: analysis
  allow_failure: true
  script:
    # Build tracker, we must go out the subproject route as we don't want
    # tinysparql code to be included in the coverity reports for localsearch.
    - export INSTALL=`pwd`/install
    - git clone https://gitlab.gnome.org/GNOME/tinysparql.git
    - pushd tinysparql; meson build --libdir lib --prefix $INSTALL -Ddocs=false; ninja -C build install; popd
    - curl https://scan.coverity.com/download/linux64 --data "token=$COVERITY_TOKEN&project=tracker-miners" --output /tmp/coverity_tool.tgz
    - tar zxf /tmp/coverity_tool.tgz
    - mkdir coverity-build
    - export CC=clang
    - pushd coverity-build
    - meson --pkg-config-path=$INSTALL/lib/pkgconfig ..
    - ../cov-analysis-linux64-*/bin/cov-build --dir cov-int ninja
    - tar czf cov-int.tar.gz cov-int
    - popd
    - curl https://scan.coverity.com/builds?project=tracker-miners
      --form token=$COVERITY_TOKEN --form email=carlosg@gnome.org
      --form file=@coverity-build/cov-int.tar.gz --form version="`git describe --tags`"
      --form description="gitlab CI build"
  only:
    - main

pages:
  extends:
    - .fdo.distribution-image@fedora
    - .tracker-miners.fedora:latest@x86_64
  stage: deploy
  script:
    - mv website public
  artifacts:
    paths:
      - public
  needs:
    - test-docs
  only:
    - main

# Triggered from a scheduled job

.container_rebuild_template: &container_rebuild
  only:
    variables:
      - $CI_PIPELINE_SOURCE == "schedule" && $CRON_TASK == "REBUILD_CI_CONTAINERS"
  variables:
    GIT_STRATEGY: none # no need to pull the whole tree for rebuilding the image
    FDO_FORCE_REBUILD: 1 # Force rebuilding the image

rebuild-fedora-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:latest@x86_64
  <<: *container_rebuild

rebuild-fedora-rawhide-container@x86_64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:rawhide@x86_64
  <<: *container_rebuild

rebuild-fedora-container@aarch64:
  extends:
    - .fdo.container-build@fedora
    - .tracker-miners.fedora:latest@aarch64
  <<: *container_rebuild

rebuild-debian-container@x86_64:
  extends:
    - .fdo.container-build@debian
    - .tracker-miners.debian:stable@x86_64
  <<: *container_rebuild
