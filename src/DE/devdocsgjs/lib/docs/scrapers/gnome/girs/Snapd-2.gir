<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GObject" version="2.0"/>
  <include name="Gio" version="2.0"/>
  <package name="snapd-glib"/>
  <c:include name="snapd-glib/snapd-glib.h"/>
  <namespace name="Snapd"
             version="2"
             shared-library="libsnapd-glib-2.so.1"
             c:identifier-prefixes="Snapd"
             c:symbol-prefixes="snapd">
    <class name="Alias"
           c:symbol-prefix="alias"
           c:type="SnapdAlias"
           version="1.8"
           parent="GObject.Object"
           glib:type-name="SnapdAlias"
           glib:get-type="snapd_alias_get_type"
           glib:type-struct="AliasClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-alias.c"
           line="24">#SnapdAlias contains alias information for a Snap.

Aliases are used to provide alternative binary names for Snap apps.</doc>
      <source-position filename="snapd-glib/snapd-alias.h" line="23"/>
      <method name="get_app"
              c:identifier="snapd_alias_get_app"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="59">Get the app this is an alias for.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_alias_get_app_manual() or snapd_alias_get_app_auto().</doc-deprecated>
        <source-position filename="snapd-glib/snapd-alias.h" line="48"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="65">an app name or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="61">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_app_auto"
              c:identifier="snapd_alias_get_app_auto"
              glib:get-property="app-auto"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="77">Get the app this alias has been automatically set to (status is %SNAPD_ALIAS_STATUS_AUTO).
Can be overridden when status is %SNAPD_ALIAS_STATUS_MANUAL.</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="50"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="84">an app name or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="79">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_app_manual"
              c:identifier="snapd_alias_get_app_manual"
              glib:get-property="app-manual"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="95">Get the app this alias has been manually set to (status is %SNAPD_ALIAS_STATUS_MANUAL).
This overrides the app from snapd_alias_get_app_auto().</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="54"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="102">an app name or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="97">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_command"
              c:identifier="snapd_alias_get_command"
              glib:get-property="command"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="113">Get the command this alias runs.</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="119">a command.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="115">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_alias_get_name"
              glib:get-property="name"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="130">Get the name of this alias.</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="136">an alias name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="132">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_alias_get_snap"
              glib:get-property="snap"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="147">Get the snap this alias is for.</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="153">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="149">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="snapd_alias_get_status"
              glib:get-property="status"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.c"
             line="164">Get the status of this alias.</doc>
        <source-position filename="snapd-glib/snapd-alias.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-alias.c"
               line="170">a #SnapdAliasStatus.</doc>
          <type name="AliasStatus" c:type="SnapdAliasStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-alias.c"
                 line="166">a #SnapdAlias.</doc>
            <type name="Alias" c:type="SnapdAlias*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="app-auto"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_app_auto">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="app-manual"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_app_manual">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="command"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_command">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="status"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_status">
        <type name="AliasStatus"/>
      </property>
    </class>
    <record name="AliasClass"
            c:type="SnapdAliasClass"
            glib:is-gtype-struct-for="Alias">
      <source-position filename="snapd-glib/snapd-alias.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="AliasStatus"
                 version="1.8"
                 glib:type-name="SnapdAliasStatus"
                 glib:get-type="snapd_alias_status_get_type"
                 c:type="SnapdAliasStatus">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-alias.h"
           line="25">Status of an alias.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_ALIAS_STATUS_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_ALIAS_STATUS_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="27">the alias status is unknown.</doc>
      </member>
      <member name="default"
              value="1"
              c:identifier="SNAPD_ALIAS_STATUS_DEFAULT"
              glib:nick="default"
              glib:name="SNAPD_ALIAS_STATUS_DEFAULT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="28">deprecated, do not use.</doc>
      </member>
      <member name="enabled"
              value="2"
              c:identifier="SNAPD_ALIAS_STATUS_ENABLED"
              glib:nick="enabled"
              glib:name="SNAPD_ALIAS_STATUS_ENABLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="29">deprecated, do not use.</doc>
      </member>
      <member name="disabled"
              value="3"
              c:identifier="SNAPD_ALIAS_STATUS_DISABLED"
              glib:nick="disabled"
              glib:name="SNAPD_ALIAS_STATUS_DISABLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="30">the alias is disabled.</doc>
      </member>
      <member name="auto"
              value="4"
              c:identifier="SNAPD_ALIAS_STATUS_AUTO"
              glib:nick="auto"
              glib:name="SNAPD_ALIAS_STATUS_AUTO">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="31">the alias is automatically enabled.</doc>
      </member>
      <member name="manual"
              value="5"
              c:identifier="SNAPD_ALIAS_STATUS_MANUAL"
              glib:nick="manual"
              glib:name="SNAPD_ALIAS_STATUS_MANUAL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-alias.h"
             line="32">the alias is manually enabled.</doc>
      </member>
    </enumeration>
    <class name="App"
           c:symbol-prefix="app"
           c:type="SnapdApp"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdApp"
           glib:get-type="snapd_app_get_type"
           glib:type-struct="AppClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-app.c"
           line="24">#SnapdApp contains information about an app in a Snap.

Snaps can contain apps which is a single binary executable.</doc>
      <source-position filename="snapd-glib/snapd-app.h" line="23"/>
      <method name="get_active"
              c:identifier="snapd_app_get_active"
              glib:get-property="active"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="78">Get if this service is active.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="84">%TRUE if active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="80">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_aliases"
              c:identifier="snapd_app_get_aliases"
              glib:get-property="aliases"
              version="1.7"
              deprecated="1"
              deprecated-version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="95">Get the aliases for this app.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="101">the alias names.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="97">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_common_id"
              c:identifier="snapd_app_get_common_id"
              glib:get-property="common-id"
              version="1.41">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="113">Get the common ID associated with this app.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="56"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="119">an ID or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="115">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_daemon_type"
              c:identifier="snapd_app_get_daemon_type"
              glib:get-property="daemon-type"
              version="1.9">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="130">Get the daemon type for this app.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="58"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="136">the daemon type or %NULL.</doc>
          <type name="DaemonType" c:type="SnapdDaemonType"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="132">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_desktop_file"
              c:identifier="snapd_app_get_desktop_file"
              glib:get-property="desktop-file"
              version="1.14">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="147">Get the path to the desktop file for this app.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="60"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="153">a path or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="149">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="snapd_app_get_enabled"
              glib:get-property="enabled"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="164">Get if this service is enabled.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="170">%TRUE if enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="166">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_app_get_name"
              glib:get-property="name"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="61">Get the name of this app.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="67">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="63">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_app_get_snap"
              glib:get-property="snap"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.c"
             line="181">Get the snap this app is associated with.</doc>
        <source-position filename="snapd-glib/snapd-app.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-app.c"
               line="187">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-app.c"
                 line="183">a #SnapdApp.</doc>
            <type name="App" c:type="SnapdApp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="active"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_active">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="aliases"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_aliases">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="common-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_common_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="daemon-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_daemon_type">
        <type name="DaemonType"/>
      </property>
      <property name="desktop-file"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_desktop_file">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="enabled"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_enabled">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AppClass"
            c:type="SnapdAppClass"
            glib:is-gtype-struct-for="App">
      <source-position filename="snapd-glib/snapd-app.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Assertion"
           c:symbol-prefix="assertion"
           c:type="SnapdAssertion"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdAssertion"
           glib:get-type="snapd_assertion_get_type"
           glib:type-struct="AssertionClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-assertion.c"
           line="28">#SnapdAssertion contains information about a Snap assertion.

Assertions are digitally signed documents that allow Snaps to have secure
trust and control features.</doc>
      <source-position filename="snapd-glib/snapd-assertion.h" line="23"/>
      <constructor name="new" c:identifier="snapd_assertion_new" version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-assertion.c"
             line="54">Create a new assertion.</doc>
        <source-position filename="snapd-glib/snapd-assertion.h" line="25"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-assertion.c"
               line="60">a new #SnapdAssertion</doc>
          <type name="Assertion" c:type="SnapdAssertion*"/>
        </return-value>
        <parameters>
          <parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="56">the text content of the assertion.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_body"
              c:identifier="snapd_assertion_get_body"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-assertion.c"
             line="202">Get the body of the assertion.</doc>
        <source-position filename="snapd-glib/snapd-assertion.h" line="32"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-assertion.c"
               line="208">assertion body or %NULL.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="assertion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="204">a #SnapdAssertion.</doc>
            <type name="Assertion" c:type="SnapdAssertion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header"
              c:identifier="snapd_assertion_get_header"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-assertion.c"
             line="146">Get a header from an assertion.</doc>
        <source-position filename="snapd-glib/snapd-assertion.h" line="29"/>
        <return-value transfer-ownership="full" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-assertion.c"
               line="153">header value or %NULL if undefined.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="assertion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="148">a #SnapdAssertion.</doc>
            <type name="Assertion" c:type="SnapdAssertion*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="149">name of the header.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_headers"
              c:identifier="snapd_assertion_get_headers"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-assertion.c"
             line="114">Get the headers provided by this assertion.</doc>
        <source-position filename="snapd-glib/snapd-assertion.h" line="27"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-assertion.c"
               line="120">array of header names.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="assertion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="116">a #SnapdAssertion.</doc>
            <type name="Assertion" c:type="SnapdAssertion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_signature"
              c:identifier="snapd_assertion_get_signature"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-assertion.c"
             line="224">Get the signature of the assertion.</doc>
        <source-position filename="snapd-glib/snapd-assertion.h" line="34"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-assertion.c"
               line="230">assertion signature.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="assertion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-assertion.c"
                 line="226">a #SnapdAssertion.</doc>
            <type name="Assertion" c:type="SnapdAssertion*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="content"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AssertionClass"
            c:type="SnapdAssertionClass"
            glib:is-gtype-struct-for="Assertion">
      <source-position filename="snapd-glib/snapd-assertion.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="AuthData"
           c:symbol-prefix="auth_data"
           c:type="SnapdAuthData"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdAuthData"
           glib:get-type="snapd_auth_data_get_type"
           glib:type-struct="AuthDataClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-auth-data.c"
           line="27">#SnapdAuthData contains authorization data used to communicate with snapd.

The authorization data is in the form of a [Macaroon](https://research.google.com/pubs/pub41892.html).</doc>
      <source-position filename="snapd-glib/snapd-auth-data.h" line="23"/>
      <constructor name="new" c:identifier="snapd_auth_data_new" version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-auth-data.c"
             line="54">Create some authorization data.</doc>
        <source-position filename="snapd-glib/snapd-auth-data.h" line="25"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-auth-data.c"
               line="61">a new #SnapdAuthData</doc>
          <type name="AuthData" c:type="SnapdAuthData*"/>
        </return-value>
        <parameters>
          <parameter name="macaroon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-auth-data.c"
                 line="56">serialized macaroon used to authorize access to snapd.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="discharges" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-auth-data.c"
                 line="57">serialized discharges.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_discharges"
              c:identifier="snapd_auth_data_get_discharges"
              glib:get-property="discharges"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-auth-data.c"
             line="92">Get the discharges that this authorization uses.</doc>
        <source-position filename="snapd-glib/snapd-auth-data.h" line="30"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-auth-data.c"
               line="98">the discharges as serialized strings.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="auth_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-auth-data.c"
                 line="94">a #SnapdAuthData.</doc>
            <type name="AuthData" c:type="SnapdAuthData*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_macaroon"
              c:identifier="snapd_auth_data_get_macaroon"
              glib:get-property="macaroon"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-auth-data.c"
             line="75">Get the Macaroon that this authorization uses.</doc>
        <source-position filename="snapd-glib/snapd-auth-data.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-auth-data.c"
               line="81">the serialized Macaroon used to authorize access to snapd.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="auth_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-auth-data.c"
                 line="77">a #SnapdAuthData.</doc>
            <type name="AuthData" c:type="SnapdAuthData*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="discharges"
                writable="1"
                transfer-ownership="none"
                getter="get_discharges">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="macaroon"
                writable="1"
                transfer-ownership="none"
                getter="get_macaroon">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AuthDataClass"
            c:type="SnapdAuthDataClass"
            glib:is-gtype-struct-for="AuthData">
      <source-position filename="snapd-glib/snapd-auth-data.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Change"
           c:symbol-prefix="change"
           c:type="SnapdChange"
           version="1.5"
           parent="GObject.Object"
           glib:type-name="SnapdChange"
           glib:get-type="snapd_change_get_type"
           glib:type-struct="ChangeClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-change.c"
           line="23">#SnapdChange contains information on a current Snap transaction.</doc>
      <source-position filename="snapd-glib/snapd-change.h" line="23"/>
      <method name="get_error"
              c:identifier="snapd_change_get_error"
              glib:get-property="error"
              version="1.30">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="198">Gets the error string associated with this change.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="204">an error string or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="200">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="snapd_change_get_id"
              glib:get-property="id"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="62">Get the unique ID for this change.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="68">an ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="64">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="snapd_change_get_kind"
              glib:get-property="kind"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="79">Gets the kind of change this is.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="85">the kind of change.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="81">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ready"
              c:identifier="snapd_change_get_ready"
              glib:get-property="ready"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="147">Get if this change is completed.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="153">%TRUE if this change is complete.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="149">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ready_time"
              c:identifier="snapd_change_get_ready_time"
              glib:get-property="ready-time"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="181">Get the time this task completed or %NULL if not yet completed.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="39"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="187">a #GDateTime or %NULL.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="183">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spawn_time"
              c:identifier="snapd_change_get_spawn_time"
              glib:get-property="spawn-time"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="164">Get the time this change started.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="170">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="166">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="snapd_change_get_status"
              glib:get-property="status"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="113">Get the status of the change.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="119">a status string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="115">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="snapd_change_get_summary"
              glib:get-property="summary"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="96">Get a human readable description of the change.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="102">a string describing the change.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="98">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tasks"
              c:identifier="snapd_change_get_tasks"
              glib:get-property="tasks"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-change.c"
             line="130">Get the tasks that are in this change.</doc>
        <source-position filename="snapd-glib/snapd-change.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-change.c"
               line="136">an array of #SnapdTask.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Task"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="change" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-change.c"
                 line="132">a #SnapdChange.</doc>
            <type name="Change" c:type="SnapdChange*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="error"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_error">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kind"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_kind">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="ready"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_ready">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ready-time"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_ready_time">
        <type name="GLib.DateTime"/>
      </property>
      <property name="spawn-time"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_spawn_time">
        <type name="GLib.DateTime"/>
      </property>
      <property name="status"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_status">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_summary">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tasks"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_tasks">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
    </class>
    <record name="ChangeClass"
            c:type="SnapdChangeClass"
            glib:is-gtype-struct-for="Change">
      <source-position filename="snapd-glib/snapd-change.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ChangeFilter"
                 version="1.29"
                 glib:type-name="SnapdChangeFilter"
                 glib:get-type="snapd_change_filter_get_type"
                 c:type="SnapdChangeFilter">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="47">Filter to apply to changes.</doc>
      <member name="all"
              value="0"
              c:identifier="SNAPD_CHANGE_FILTER_ALL"
              glib:nick="all"
              glib:name="SNAPD_CHANGE_FILTER_ALL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="49">Return all changes.</doc>
      </member>
      <member name="in_progress"
              value="1"
              c:identifier="SNAPD_CHANGE_FILTER_IN_PROGRESS"
              glib:nick="in-progress"
              glib:name="SNAPD_CHANGE_FILTER_IN_PROGRESS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="51">Return only changes that are in-progress.</doc>
      </member>
      <member name="ready"
              value="2"
              c:identifier="SNAPD_CHANGE_FILTER_READY"
              glib:nick="ready"
              glib:name="SNAPD_CHANGE_FILTER_READY">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="50">Return only changes that are ready.</doc>
      </member>
    </enumeration>
    <class name="Channel"
           c:symbol-prefix="channel"
           c:type="SnapdChannel"
           version="1.22"
           parent="GObject.Object"
           glib:type-name="SnapdChannel"
           glib:get-type="snapd_channel_get_type"
           glib:type-struct="ChannelClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-channel.c"
           line="22">#SnapdChannel is an opaque data structure and can only be accessed
using the provided functions.</doc>
      <source-position filename="snapd-glib/snapd-channel.h" line="23"/>
      <method name="get_branch"
              c:identifier="snapd_channel_get_branch"
              version="1.31">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="61">Get the branch this channel is tracking.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="44"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="67">a branch name or %NULL if not a branch.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="63">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_confinement"
              c:identifier="snapd_channel_get_confinement"
              glib:get-property="confinement"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="78">Get the confinement this snap is using, e.g. %SNAPD_CONFINEMENT_STRICT.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="84">a #SnapdConfinement.</doc>
          <type name="Confinement" c:type="SnapdConfinement"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="80">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_epoch"
              c:identifier="snapd_channel_get_epoch"
              glib:get-property="epoch"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="95">Get the epoch used on this channel, e.g. "1".</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="101">an epoch.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="97">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_channel_get_name"
              glib:get-property="name"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="112">Get the name of this channel, e.g. "stable".

Channel names are in the form `track/risk/branch`

`track` is the name of the feature track. Defaults to `latest` and is implied
        if the track is not present.
`risk` is the risk of the channel, one of `stable`, `candidate`, `beta` or `edge`.
`branch` is an optional branch name.

Example names:
`beta` (alias to `latest/beta`)
`xenial/stable` (stable release on xenial track)
`latest/stable/red-button` (red button feature branch)</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="130">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="114">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_released_at"
              c:identifier="snapd_channel_get_released_at"
              glib:get-property="released-at"
              version="1.46">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="141">Get the date this revision was released into the channel or %NULL if unknown.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="54"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="147">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="143">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_revision"
              c:identifier="snapd_channel_get_revision"
              glib:get-property="revision"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="158">Get the revision for this snap. The format of the string is undefined.
See also snapd_channel_get_version().</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="165">a revision string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="160">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_risk"
              c:identifier="snapd_channel_get_risk"
              version="1.31">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="176">Get the risk this channel is on, one of `stable`, `candidate`, `beta` or `edge`.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="182">a risk name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="178">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="snapd_channel_get_size"
              glib:get-property="size"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="193">Get the download size of this snap.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="199">a byte count.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="195">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_track"
              c:identifier="snapd_channel_get_track"
              version="1.31">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="210">Get the track this channel is on.</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="216">a track name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="212">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="snapd_channel_get_version"
              glib:get-property="version"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.c"
             line="227">Get the version for this snap. The format of the string is undefined.
See also snapd_channel_get_revision().</doc>
        <source-position filename="snapd-glib/snapd-channel.h" line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-channel.c"
               line="234">a version string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-channel.c"
                 line="229">a #SnapdChannel.</doc>
            <type name="Channel" c:type="SnapdChannel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="confinement"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_confinement">
        <type name="Confinement"/>
      </property>
      <property name="epoch"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_epoch">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="released-at"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_released_at">
        <type name="GLib.DateTime"/>
      </property>
      <property name="revision"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_revision">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="size"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_size">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_version">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ChannelClass"
            c:type="SnapdChannelClass"
            glib:is-gtype-struct-for="Channel">
      <source-position filename="snapd-glib/snapd-channel.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Client"
           c:symbol-prefix="client"
           c:type="SnapdClient"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdClient"
           glib:get-type="snapd_client_get_type"
           glib:type-struct="ClientClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.c"
           line="68">#SnapdClient contains connection state with snapd.</doc>
      <source-position filename="snapd-glib/snapd-client.h" line="45"/>
      <constructor name="new" c:identifier="snapd_client_new" version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="4109">Create a new client to talk to snapd.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="247"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="4114">a new #SnapdClient</doc>
          <type name="Client" c:type="SnapdClient*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_socket"
                   c:identifier="snapd_client_new_from_socket"
                   version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="4124">Create a new client to talk on an existing socket.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="249"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="4130">a new #SnapdClient</doc>
          <type name="Client" c:type="SnapdClient*"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4126">A #GSocket that is connected to snapd.</doc>
            <type name="Gio.Socket" c:type="GSocket*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="abort_change_async"
              c:identifier="snapd_client_abort_change_async"
              version="1.30">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1386">Asynchronously abort a change.
See snapd_client_abort_change_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="369"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1388">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1389">a change ID to abort.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1390">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1391">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1392">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="abort_change_finish"
              c:identifier="snapd_client_abort_change_finish"
              version="1.30"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1411">Complete request started with snapd_client_abort_change_async().
See snapd_client_abort_change_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="375"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1420">a #SnapdChange or %NULL on error.</doc>
          <type name="Change" c:type="SnapdChange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1413">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1414">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="abort_change_sync"
              c:identifier="snapd_client_abort_change_sync"
              version="1.30"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="228">Get information on a change.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="364"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="237">a #SnapdChange or %NULL on error.</doc>
          <type name="Change" c:type="SnapdChange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="230">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="231">a change ID to abort.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="232">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_assertions_async"
              c:identifier="snapd_client_add_assertions_async"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1971">Asynchronously add an assertion.
See snapd_client_add_assertions_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="530"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1973">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="assertions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1974">assertions to add.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1975">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1976">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1977">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_assertions_finish"
              c:identifier="snapd_client_add_assertions_finish"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1996">Complete request started with snapd_client_add_assertions_async().
See snapd_client_add_assertions_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="535"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2005">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1998">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1999">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_assertions_sync"
              c:identifier="snapd_client_add_assertions_sync"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="563">Add an assertion.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="526"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="572">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="565">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="assertions" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="566">assertions to add.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="567">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="alias_async"
              c:identifier="snapd_client_alias_async"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3507">Asynchronously create an alias to an app.
See snapd_client_alias_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1002"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3509">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3510">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3511">an app in the snap to make the alias to.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3512">the name of the alias (i.e. the command that will run this app).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3513">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3514">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3515">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3516">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3517">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="alias_finish"
              c:identifier="snapd_client_alias_finish"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3537">Complete request started with snapd_client_alias_async().
See snapd_client_alias_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1011"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3546">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3539">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3540">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="alias_sync"
              c:identifier="snapd_client_alias_sync"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1417">Create an alias to an app.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="994"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1419">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1420">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="app" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1421">an app in the snap to make the alias to.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="alias" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1422">the name of the alias (i.e. the command that will run this app).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1423">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1424">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1425">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="buy_async"
              c:identifier="snapd_client_buy_async"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3198">Asynchronously buy a snap from the store.
See snapd_client_buy_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="924"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3200">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3201">id of snap to buy.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="amount" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3202">amount of currency to spend, e.g. 0.99.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="currency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3203">the currency to buy with as an ISO 4217 currency code, e.g. "NZD".</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3204">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3205">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3206">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="buy_finish"
              c:identifier="snapd_client_buy_finish"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3226">Complete request started with snapd_client_buy_async().
See snapd_client_buy_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="931"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3235">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3228">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3229">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="buy_sync"
              c:identifier="snapd_client_buy_sync"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1250">Buy a snap from the store. Once purchased, this snap can be installed with
snapd_client_install2_sync().</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="918"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1263">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1252">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1253">id of snap to buy.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="amount" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1254">amount of currency to spend, e.g. 0.99.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="currency" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1255">the currency to buy with as an ISO 4217 currency code, e.g. "NZD".</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1256">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_buy_async"
              c:identifier="snapd_client_check_buy_async"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3154">Asynchronously check if able to buy snaps.
See snapd_client_check_buy_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="910"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3156">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3157">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3158">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3159">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_buy_finish"
              c:identifier="snapd_client_check_buy_finish"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3176">Complete request started with snapd_client_check_buy_async().
See snapd_client_check_buy_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="914"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3185">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3178">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3179">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_buy_sync"
              c:identifier="snapd_client_check_buy_sync"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1224">Check if able to buy snaps.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="907"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1233">%TRUE if able to buy snaps or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1226">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1227">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_themes_async"
              c:identifier="snapd_client_check_themes_async"
              version="1.60">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3994">Asynchronously check for snaps providing the requested desktop themes.
See snapd_client_check_themes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3996">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="gtk_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3997">a list of GTK theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="icon_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3998">a list of icon theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="sound_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3999">a list of sound theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4000">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4001">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4002">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_themes_finish"
              c:identifier="snapd_client_check_themes_finish"
              version="1.60"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="4024">Complete request started with snapd_client_check_themes_async().
See snapd_client_check_themes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="4036">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4026">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4027">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="gtk_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4028">status of GTK themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
          <parameter name="icon_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4029">status of icon themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
          <parameter name="sound_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4030">status of sound themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="check_themes_sync"
              c:identifier="snapd_client_check_themes_sync"
              version="1.60"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1700">Check the status of snap packaged versions of named desktop
themes. For each theme, it will determine whether it is already
installed, uninstalled but available on the store, or unavailable.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1164"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1702">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="gtk_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1703">a list of GTK theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="icon_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1704">a list of icon theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="sound_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1705">a list of sound theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="gtk_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1706">status of GTK themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
          <parameter name="icon_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1707">status of icon themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
          <parameter name="sound_theme_status"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1708">status of sound themes.</doc>
            <type name="GLib.HashTable" c:type="GHashTable**">
              <type name="utf8"/>
              <type name="ThemeStatus"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1709">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_async"
              c:identifier="snapd_client_connect_async"
              version="1.3"
              deprecated="1"
              deprecated-version="1.24">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="895">This method is no longer required and does nothing, snapd-glib now connects on demand.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="897">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="898">a #GCancellable or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="899">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="900">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="snapd_client_connect_finish"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="917">Complete request started with snapd_client_connect_async().
See snapd_client_connect_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="260"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="926">%TRUE if successfully connected to snapd.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="919">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="920">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_interface_async"
              c:identifier="snapd_client_connect_interface_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2257">Asynchronously connect two interfaces together.
See snapd_client_connect_interface_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="622"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2259">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="plug_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2260">name of snap containing plug.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="plug_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2261">name of plug to connect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2262">name of snap containing socket.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2263">name of slot to connect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2264">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2265">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2266">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="8">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2267">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2268">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_interface_finish"
              c:identifier="snapd_client_connect_interface_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2288">Complete request started with snapd_client_connect_interface_async().
See snapd_client_connect_interface_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="632"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2297">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2290">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2291">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_interface_sync"
              c:identifier="snapd_client_connect_interface_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="724">Connect two interfaces together.
An asynchronous version of this function is snapd_client_connect_interface_async().</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="613"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="739">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="726">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="plug_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="727">name of snap containing plug.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="plug_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="728">name of plug to connect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="729">name of snap containing socket.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="730">name of slot to connect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="731">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="732">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="733">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_sync"
              c:identifier="snapd_client_connect_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="54">This method is no longer required and does nothing, snapd-glib now connects on demand.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="251"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="62">%TRUE if successfully connected to snapd.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="56">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="57">a #GCancellable or %NULL</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_user_async"
              c:identifier="snapd_client_create_user_async"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3248">Asynchronously create a local user account.
See snapd_client_create_user_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="940"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3250">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3251">the email of the user to create.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3252">a set of #SnapdCreateUserFlags to control how the user account is created.</doc>
            <type name="CreateUserFlags" c:type="SnapdCreateUserFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3253">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3254">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3255">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_user_finish"
              c:identifier="snapd_client_create_user_finish"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3278">Complete request started with snapd_client_create_user_async().
See snapd_client_create_user_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="946"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3287">a #SnapdUserInformation or %NULL on error.</doc>
          <type name="UserInformation" c:type="SnapdUserInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3280">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3281">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_user_sync"
              c:identifier="snapd_client_create_user_sync"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1283">Create a local user account for the given user.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="935"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1294">a #SnapdUserInformation or %NULL on error.</doc>
          <type name="UserInformation" c:type="SnapdUserInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1285">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1286">the email of the user to create.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1287">a set of #SnapdCreateUserFlags to control how the user account is created.</doc>
            <type name="CreateUserFlags" c:type="SnapdCreateUserFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1288">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_users_async"
              c:identifier="snapd_client_create_users_async"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3304">Asynchronously create local user accounts using the system-user assertions that are valid for this device.
See snapd_client_create_users_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="953"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3306">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3307">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3308">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3309">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_users_finish"
              c:identifier="snapd_client_create_users_finish"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3326">Complete request started with snapd_client_create_users_async().
See snapd_client_create_users_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="957"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3335">an array of #SnapdUserInformation or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="UserInformation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3328">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3329">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_users_sync"
              c:identifier="snapd_client_create_users_sync"
              version="1.3"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1313">Create local user accounts using the system-user assertions that are valid for this device.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="950"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1322">an array of #SnapdUserInformation or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="UserInformation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1315">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1316">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_aliases_async"
              c:identifier="snapd_client_disable_aliases_async"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3708">Asynchronously change the state of aliases.
See snapd_client_disable_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_unalias_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1077"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3710">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3711">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3712">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3713">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3714">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3715">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3716">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3717">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_aliases_finish"
              c:identifier="snapd_client_disable_aliases_finish"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3737">Complete request started with snapd_client_disable_aliases_async().
See snapd_client_disable_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_unalias_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1085"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3746">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3739">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3740">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_aliases_sync"
              c:identifier="snapd_client_disable_aliases_sync"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1540">Change the state of aliases.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_unalias_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1070"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1553">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1542">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1543">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1544">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1545">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1546">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1547">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_async"
              c:identifier="snapd_client_disable_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3052">Asynchronously disable an installed snap.
See snapd_client_disable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="877"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3054">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3055">name of snap to disable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3056">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3057">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3058">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3059">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3060">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_finish"
              c:identifier="snapd_client_disable_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3080">Complete request started with snapd_client_disable_async().
See snapd_client_disable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="884"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3089">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3082">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3083">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disable_sync"
              c:identifier="snapd_client_disable_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1161">Disable an installed snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="871"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1172">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1163">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1164">name of snap to disable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1165">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1166">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1167">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect_interface_async"
              c:identifier="snapd_client_disconnect_interface_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2311">Asynchronously disconnect two interfaces.
See snapd_client_disconnect_interface_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="645"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2313">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="plug_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2314">name of snap containing plug.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="plug_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2315">name of plug to disconnect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2316">name of snap containing socket.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2317">name of slot to disconnect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2318">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2319">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2320">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="8">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2321">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2322">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect_interface_finish"
              c:identifier="snapd_client_disconnect_interface_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2342">Complete request started with snapd_client_disconnect_interface_async().
See snapd_client_disconnect_interface_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="655"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2351">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2344">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2345">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect_interface_sync"
              c:identifier="snapd_client_disconnect_interface_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="759">Disconnect two interfaces.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="636"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="773">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="761">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="plug_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="762">name of snap containing plug.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="plug_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="763">name of plug to disconnect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="764">name of snap containing socket.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="slot_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="765">name of slot to disconnect.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="766">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="767">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="768">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_async"
              c:identifier="snapd_client_download_async"
              version="1.54">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3940">Asynchronously download a snap.
See snapd_client_download_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3942">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3943">name of snap to download.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3944">channel to download from.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="revision"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3945">revision to download.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3946">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3947">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3948">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_finish"
              c:identifier="snapd_client_download_finish"
              version="1.54"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3967">Complete request started with snapd_client_download_async().
See snapd_client_download_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1160"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3976">the snap contents or %NULL on error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3969">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3970">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="download_sync"
              c:identifier="snapd_client_download_sync"
              version="1.54"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1669">Download the given snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1147"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1681">the snap contents or %NULL on error.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1671">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1672">name of snap to download.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1673">channel to download from.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="revision"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1674">revision to download.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1675">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_aliases_async"
              c:identifier="snapd_client_enable_aliases_async"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3656">Asynchronously change the state of aliases.
See snapd_client_enable_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_alias_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1058"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3658">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3659">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3660">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3661">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3662">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3663">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3664">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3665">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_aliases_finish"
              c:identifier="snapd_client_enable_aliases_finish"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3685">Complete request started with snapd_client_enable_aliases_async().
See snapd_client_enable_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_unalias_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1066"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3694">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3687">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3688">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_aliases_sync"
              c:identifier="snapd_client_enable_aliases_sync"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1512">Change the state of aliases.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_alias_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1051"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1525">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1514">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1515">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1516">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1517">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1518">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1519">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_async"
              c:identifier="snapd_client_enable_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3002">Asynchronously enable an installed snap.
See snapd_client_enable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="860"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3004">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3005">name of snap to enable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3006">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3007">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3008">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3009">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3010">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_finish"
              c:identifier="snapd_client_enable_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3030">Complete request started with snapd_client_enable_async().
See snapd_client_enable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="867"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3039">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3032">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3033">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enable_sync"
              c:identifier="snapd_client_enable_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1130">Enable an installed snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="854"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1141">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1132">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1133">name of snap to enable.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1134">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1135">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1136">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_async"
              c:identifier="snapd_client_find_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2365">Asynchronously find snaps in the store.
See snapd_client_find_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="665"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2367">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2368">a set of #SnapdFindFlags to control how the find is performed.</doc>
            <type name="FindFlags" c:type="SnapdFindFlags"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2369">query string to send or %NULL to return featured snaps.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2370">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2371">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2372">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_finish"
              c:identifier="snapd_client_find_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2388">Complete request started with snapd_client_find_async().
See snapd_client_find_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="671"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2398">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2390">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2391">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="suggested_currency"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2392">location to store the ISO 4217 currency that is suggested to purchase with.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_refreshable_async"
              c:identifier="snapd_client_find_refreshable_async"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2477">Asynchronously find snaps in store that are newer revisions than locally installed versions.
See snapd_client_find_refreshable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="698"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2479">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2480">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2481">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2482">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_refreshable_finish"
              c:identifier="snapd_client_find_refreshable_finish"
              version="1.5"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2500">Complete request started with snapd_client_find_refreshable_async().
See snapd_client_find_refreshable_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="702"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2509">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2502">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2503">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_refreshable_sync"
              c:identifier="snapd_client_find_refreshable_sync"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="848">Find snaps in store that are newer revisions than locally installed versions.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="695"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="856">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="850">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="851">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_section_async"
              c:identifier="snapd_client_find_section_async"
              version="1.7">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2408">Asynchronously find snaps in the store.
See snapd_client_find_section_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="683"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2410">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2411">a set of #SnapdFindFlags to control how the find is performed.</doc>
            <type name="FindFlags" c:type="SnapdFindFlags"/>
          </parameter>
          <parameter name="section"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2412">store section to search in or %NULL to search in all sections.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2413">query string to send or %NULL to get all snaps from the given section.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2414">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2415">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2416">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_section_finish"
              c:identifier="snapd_client_find_section_finish"
              version="1.7"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2447">Complete request started with snapd_client_find_async().
See snapd_client_find_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="690"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2457">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2449">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2450">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="suggested_currency"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2451">location to store the ISO 4217 currency that is suggested to purchase with.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_section_sync"
              c:identifier="snapd_client_find_section_sync"
              version="1.7"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="817">Find snaps in the store.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="676"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="829">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="819">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="820">a set of #SnapdFindFlags to control how the find is performed.</doc>
            <type name="FindFlags" c:type="SnapdFindFlags"/>
          </parameter>
          <parameter name="section"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="821">store section to search in or %NULL to search in all sections.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="822">query string to send or %NULL to get all snaps from the given section.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="suggested_currency"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="823">location to store the ISO 4217 currency that is suggested to purchase with.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="824">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_sync"
              c:identifier="snapd_client_find_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="793">Find snaps in the store.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="659"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="804">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="795">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="796">a set of #SnapdFindFlags to control how the find is performed.</doc>
            <type name="FindFlags" c:type="SnapdFindFlags"/>
          </parameter>
          <parameter name="query"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="797">query string to send or %NULL to return featured snaps.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="suggested_currency"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="798">location to store the ISO 4217 currency that is suggested to purchase with.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="799">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_aliases_async"
              c:identifier="snapd_client_get_aliases_async"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3448">Asynchronously get the available aliases.
See snapd_client_get_aliases_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="986"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3450">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3451">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3452">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3453">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_aliases_finish"
              c:identifier="snapd_client_get_aliases_finish"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3470">Complete request started with snapd_client_get_aliases_async().
See snapd_client_get_aliases_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="990"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3479">an array of #SnapdAlias or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Alias"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3472">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3473">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_aliases_sync"
              c:identifier="snapd_client_get_aliases_sync"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1391">Get the available aliases.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="983"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1400">an array of #SnapdAlias or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Alias"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1393">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1394">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allow_interaction"
              c:identifier="snapd_client_get_allow_interaction"
              version="1.19">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1058">Get whether snapd operations are allowed to interact with the user.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="277"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1064">%TRUE if interaction is allowed.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1060">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_apps2_async"
              c:identifier="snapd_client_get_apps2_async"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1722">Asynchronously get information on installed apps.
See snapd_client_get_apps2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="490"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1724">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1725">a set of #SnapdGetAppsFlags to control what results are returned.</doc>
            <type name="GetAppsFlags" c:type="SnapdGetAppsFlags"/>
          </parameter>
          <parameter name="snaps"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1726">A list of snap names to return results for. If %NULL or empty then apps for all installed snaps are returned.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1727">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1728">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1729">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apps2_finish"
              c:identifier="snapd_client_get_apps2_finish"
              version="1.45"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1750">Complete request started with snapd_client_get_apps2_async().
See snapd_client_get_apps2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="496"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1759">an array of #SnapdApp or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="App"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1752">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1753">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apps2_sync"
              c:identifier="snapd_client_get_apps2_sync"
              version="1.45"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="416">Get information on installed apps.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="485"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="426">an array of #SnapdApp or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="App"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="418">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="419">a set of #SnapdGetAppsFlags to control what results are returned.</doc>
            <type name="GetAppsFlags" c:type="SnapdGetAppsFlags"/>
          </parameter>
          <parameter name="snaps"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="420">A list of snap names to return results for. If %NULL or empty then apps for all installed snaps are returned.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="421">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apps_async"
              c:identifier="snapd_client_get_apps_async"
              version="1.25"
              deprecated="1"
              deprecated-version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1680">Asynchronously get information on installed apps.
See snapd_client_get_apps_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_apps2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="476"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1682">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1683">a set of #SnapdGetAppsFlags to control what results are returned.</doc>
            <type name="GetAppsFlags" c:type="SnapdGetAppsFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1684">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1685">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1686">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apps_finish"
              c:identifier="snapd_client_get_apps_finish"
              version="1.25"
              deprecated="1"
              deprecated-version="1.45"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1702">Complete request started with snapd_client_get_apps_async().
See snapd_client_get_apps_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_apps2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="481"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1711">an array of #SnapdApp or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="App"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1704">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1705">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_apps_sync"
              c:identifier="snapd_client_get_apps_sync"
              version="1.25"
              deprecated="1"
              deprecated-version="1.45"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="394">Get information on installed apps.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_apps2_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="472"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="403">an array of #SnapdApp or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="App"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="396">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="397">a set of #SnapdGetAppsFlags to control what results are returned.</doc>
            <type name="GetAppsFlags" c:type="SnapdGetAppsFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="398">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_assertions_async"
              c:identifier="snapd_client_get_assertions_async"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1920">Asynchronously get assertions.
See snapd_client_get_assertions_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="517"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1922">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1923">assertion type to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1924">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1925">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1926">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_assertions_finish"
              c:identifier="snapd_client_get_assertions_finish"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1945">Complete request started with snapd_client_get_assertions_async().
See snapd_client_get_assertions_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="522"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1954">an array of assertions or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1947">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1948">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_assertions_sync"
              c:identifier="snapd_client_get_assertions_sync"
              version="1.8"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="536">Get assertions.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="513"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="545">an array of assertions or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="538">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="539">assertion type to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="540">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auth_data"
              c:identifier="snapd_client_get_auth_data"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1252">Get the authorization data that is used for requests.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="330"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1258">a #SnapdAuthData or %NULL.</doc>
          <type name="AuthData" c:type="SnapdAuthData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1254">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_change_async"
              c:identifier="snapd_client_get_change_async"
              version="1.29">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1335">Asynchronously get information on a change.
See snapd_client_get_change_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="354"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1337">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1338">a change ID to get information on.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1339">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1340">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1341">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_change_finish"
              c:identifier="snapd_client_get_change_finish"
              version="1.29"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1360">Complete request started with snapd_client_get_change_async().
See snapd_client_get_change_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="360"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1369">a #SnapdChange or %NULL on error.</doc>
          <type name="Change" c:type="SnapdChange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1362">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1363">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_change_sync"
              c:identifier="snapd_client_get_change_sync"
              version="1.29"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="199">Get information on a change.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="349"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="208">a #SnapdChange or %NULL on error.</doc>
          <type name="Change" c:type="SnapdChange*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="201">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="202">a change ID to get information on.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="203">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_changes_async"
              c:identifier="snapd_client_get_changes_async"
              version="1.29">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1270">Asynchronously get changes that have occurred / are occurring on the snap daemon.
See snapd_client_get_changes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="338"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1272">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1273">changes to filter on.</doc>
            <type name="ChangeFilter" c:type="SnapdChangeFilter"/>
          </parameter>
          <parameter name="snap_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1274">name of snap to filter on or %NULL for changes for any snap.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1275">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1276">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1277">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_changes_finish"
              c:identifier="snapd_client_get_changes_finish"
              version="1.29"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1309">Complete request started with snapd_client_get_changes_async().
See snapd_client_get_changes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="345"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1318">an array of #SnapdChange or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Change"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1311">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1312">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_changes_sync"
              c:identifier="snapd_client_get_changes_sync"
              version="1.29"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="170">Get changes that have occurred / are occurring on the snap daemon.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="332"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="180">an array of #SnapdChange or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Change"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="172">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="173">changes to filter on.</doc>
            <type name="ChangeFilter" c:type="SnapdChangeFilter"/>
          </parameter>
          <parameter name="snap_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="174">name of snap to filter on or %NULL for changes for any snap.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="175">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections2_async"
              c:identifier="snapd_client_get_connections2_async"
              version="1.49">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2187">Asynchronously get the installed snap connections.
See snapd_client_get_connections_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="598"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2189">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2190">a set of #SnapdGetConnectionsFlags to control what results are returned.</doc>
            <type name="GetConnectionsFlags"
                  c:type="SnapdGetConnectionsFlags"/>
          </parameter>
          <parameter name="snap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2191">the name of the snap to get connections for or %NULL for all snaps.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="interface"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2192">the name of the interface to get connections for or %NULL for all interfaces.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2193">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2194">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2195">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections2_finish"
              c:identifier="snapd_client_get_connections2_finish"
              version="1.49"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2216">Complete request started with snapd_client_get_connections_async().
See snapd_client_get_connections_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="605"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2229">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2218">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2219">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="established"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2220">the location to store the array of connections or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="undesired"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2221">the location to store the array of auto-connected connections that have been manually disconnected or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2222">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2223">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections2_sync"
              c:identifier="snapd_client_get_connections2_sync"
              version="1.49"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="689">Get the installed snap connections.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="588"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="704">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="691">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="692">a set of #SnapdGetConnectionsFlags to control what results are returned.</doc>
            <type name="GetConnectionsFlags"
                  c:type="SnapdGetConnectionsFlags"/>
          </parameter>
          <parameter name="snap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="693">the name of the snap to get connections for or %NULL for all snaps.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="interface"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="694">the name of the interface to get connections for or %NULL for all interfaces.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="established"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="695">the location to store the array of connections or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="undesired"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="696">the location to store the array of auto-connected connections that have been manually disconnected or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="697">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="698">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="699">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections_async"
              c:identifier="snapd_client_get_connections_async"
              version="1.48"
              deprecated="1"
              deprecated-version="1.49">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2140">Asynchronously get the installed snap connections.
See snapd_client_get_connections_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="576"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2142">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2143">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2144">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2145">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections_finish"
              c:identifier="snapd_client_get_connections_finish"
              version="1.48"
              deprecated="1"
              deprecated-version="1.49"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2160">Complete request started with snapd_client_get_connections_async().
See snapd_client_get_connections_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="580"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2173">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2162">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2163">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="established"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2164">the location to store the array of connections or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="undesired"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2165">the location to store the array of auto-connected connections that have been manually disconnected or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2166">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2167">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_connections_sync"
              c:identifier="snapd_client_get_connections_sync"
              version="1.48"
              deprecated="1"
              deprecated-version="1.49"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="653">Get the installed snap connections.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections2_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="569"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="665">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="655">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="established"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="656">the location to store the array of connections or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="undesired"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="657">the location to store the array of auto-connected connections that have been manually disconnected or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Connection"/>
            </array>
          </parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="658">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="659">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="660">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_async"
              c:identifier="snapd_client_get_icon_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1776">Asynchronously get the icon for an installed snap.
See snapd_client_get_icon_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="504"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1778">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1779">name of snap to get icon for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1780">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1781">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1782">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_finish"
              c:identifier="snapd_client_get_icon_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1800">Complete request started with snapd_client_get_icon_async().
See snapd_client_get_icon_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="509"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1809">a #SnapdIcon or %NULL on error.</doc>
          <type name="Icon" c:type="SnapdIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1802">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1803">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_icon_sync"
              c:identifier="snapd_client_get_icon_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="445">Get the icon for an installed snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="500"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="454">a #SnapdIcon or %NULL on error.</doc>
          <type name="Icon" c:type="SnapdIcon*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="447">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="448">name of snap to get icon for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="449">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces2_async"
              c:identifier="snapd_client_get_interfaces2_async"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2076">Asynchronously get the installed snap interfaces.
See snapd_client_get_interfaces2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="559"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2078">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2079">a set of #SnapdGetInterfacesFlags to control what information is returned about the interfaces.</doc>
            <type name="GetInterfacesFlags" c:type="SnapdGetInterfacesFlags"/>
          </parameter>
          <parameter name="names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2080">a null-terminated array of interface names or %NULL.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2081">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2082">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2083">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces2_finish"
              c:identifier="snapd_client_get_interfaces2_finish"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2112">Complete request started with snapd_client_get_interfaces2_async().
See snapd_client_get_interfaces2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="565"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2121">an array of #SnapdInterface or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Interface"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2114">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2115">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces2_sync"
              c:identifier="snapd_client_get_interfaces2_sync"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="624">Get information about the available snap interfaces.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="554"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="634">the available interfaces.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Interface"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="626">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="627">a set of #SnapdGetInterfacesFlags to control what information is returned about the interfaces.</doc>
            <type name="GetInterfacesFlags" c:type="SnapdGetInterfacesFlags"/>
          </parameter>
          <parameter name="names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="628">a null-terminated array of interface names or %NULL.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="629">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces_async"
              c:identifier="snapd_client_get_interfaces_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2018">Asynchronously get the installed snap interfaces.
See snapd_client_get_interfaces_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="544"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2020">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2021">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2022">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2023">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces_finish"
              c:identifier="snapd_client_get_interfaces_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2041">Complete request started with snapd_client_get_interfaces_async().
See snapd_client_get_interfaces_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="548"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2052">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2043">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2044">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2045">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2046">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_interfaces_sync"
              c:identifier="snapd_client_get_interfaces_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="591">Get the installed snap interfaces.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_connections_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="539"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="601">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="593">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="plugs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="594">the location to store the array of #SnapdPlug or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Plug"/>
            </array>
          </parameter>
          <parameter name="slots"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="container"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="595">the location to store the array of #SnapdSlot or %NULL.</doc>
            <array name="GLib.PtrArray" c:type="GPtrArray**">
              <type name="Slot"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="596">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_maintenance"
              c:identifier="snapd_client_get_maintenance"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1039">Get the maintenance information reported by snapd or %NULL if no maintenance is in progress.
This information is updated after every request.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="279"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1046">a #SnapdMaintenance or %NULL.</doc>
          <type name="Maintenance" c:type="SnapdMaintenance*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1041">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sections_async"
              c:identifier="snapd_client_get_sections_async"
              version="1.7">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3400">Asynchronously get the store sections.
See snapd_client_get_sections_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="975"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3402">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3403">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3404">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3405">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sections_finish"
              c:identifier="snapd_client_get_sections_finish"
              version="1.7"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3422">Complete request started with snapd_client_get_sections_async().
See snapd_client_get_sections_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="979"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3431">an array of section names or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3424">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3425">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sections_sync"
              c:identifier="snapd_client_get_sections_sync"
              version="1.7"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1365">Get the store sections.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="972"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1374">an array of section names or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1367">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1368">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_async"
              c:identifier="snapd_client_get_snap_async"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1527">Asynchronously get information of a single installed snap.
See snapd_client_get_snap_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="433"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1529">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1530">name of snap to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1531">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1532">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1533">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_conf_async"
              c:identifier="snapd_client_get_snap_conf_async"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1577">Asynchronously get configuration for a snap.
See snapd_client_get_snap_conf_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="447"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1579">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1580">name of snap to get configuration from.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="keys"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1581">keys to returns or %NULL to return all.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1582">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1583">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1584">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_conf_finish"
              c:identifier="snapd_client_get_snap_conf_finish"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1604">Complete request started with snapd_client_get_snap_conf_async().
See snapd_client_get_snap_conf_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="453"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1613">a table of configuration values or %NULL on error.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="GLib.Variant"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1606">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1607">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_conf_sync"
              c:identifier="snapd_client_get_snap_conf_sync"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="333">Get configuration for a snap. System configuration is stored using the name "system".</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="442"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="343">a table of configuration values or %NULL on error.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <type name="GLib.Variant"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="335">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="336">name of snap to get configuration from.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="keys"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="337">keys to returns or %NULL to return all.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="338">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_finish"
              c:identifier="snapd_client_get_snap_finish"
              version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1551">Complete request started with snapd_client_get_snap_async().
See snapd_client_get_snap_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="438"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1560">a #SnapdSnap or %NULL on error.</doc>
          <type name="Snap" c:type="SnapdSnap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1553">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1554">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap_sync"
              c:identifier="snapd_client_get_snap_sync"
              version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="306">Get information of a single installed snap. If the snap does not exist an error occurs.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="429"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="315">a #SnapdSnap or %NULL on error.</doc>
          <type name="Snap" c:type="SnapdSnap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="308">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="309">name of snap to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="310">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snaps_async"
              c:identifier="snapd_client_get_snaps_async"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1866">Asynchronously get information on installed snaps.
See snapd_client_get_snaps_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="406"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1868">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1869">a set of #SnapdGetSnapsFlags to control what results are returned.</doc>
            <type name="GetSnapsFlags" c:type="SnapdGetSnapsFlags"/>
          </parameter>
          <parameter name="names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1870">A list of snap names to return results for. If %NULL or empty then all installed snaps are returned.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1871">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1872">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1873">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snaps_finish"
              c:identifier="snapd_client_get_snaps_finish"
              version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1894">Complete request started with snapd_client_get_snaps_async().
See snapd_client_get_snaps_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="412"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1903">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1896">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1897">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snaps_sync"
              c:identifier="snapd_client_get_snaps_sync"
              version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="503">Get information on installed snaps (snaps with status %SNAPD_SNAP_STATUS_ACTIVE).
If @flags contains %SNAPD_GET_SNAPS_FLAGS_INCLUDE_INACTIVE then also return snaps
with status %SNAPD_SNAP_STATUS_INSTALLED.

If @names is not %NULL and contains at least one name only snaps that match these names are
returned. If a snap is not installed it is not returned (no error is generated).</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="401"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="518">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="505">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="506">a set of #SnapdGetSnapsFlags to control what results are returned.</doc>
            <type name="GetSnapsFlags" c:type="SnapdGetSnapsFlags"/>
          </parameter>
          <parameter name="names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="507">A list of snap names or %NULL.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="508">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_socket_path"
              c:identifier="snapd_client_get_socket_path"
              version="1.24">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="963">Get the unix socket path to connect to snapd with.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="969">socket path.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="965">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_system_information_async"
              c:identifier="snapd_client_get_system_information_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1437">Request system information asynchronously from snapd.
See snapd_client_get_system_information_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="382"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1439">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1440">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1441">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1442">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_system_information_finish"
              c:identifier="snapd_client_get_system_information_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1459">Complete request started with snapd_client_get_system_information_async().
See snapd_client_get_system_information_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="386"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1468">a #SnapdSystemInformation or %NULL on error.</doc>
          <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1461">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1462">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_system_information_sync"
              c:identifier="snapd_client_get_system_information_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="257">Request system information from snapd.
While this blocks, snapd is expected to return the information quickly.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="379"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="266">a #SnapdSystemInformation or %NULL on error.</doc>
          <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="259">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="260">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_user_agent"
              c:identifier="snapd_client_get_user_agent"
              version="1.16">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1002">Get the HTTP user-agent that is sent with each request to snapd.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="272"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1008">user agent or %NULL if none set.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1004">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_users_async"
              c:identifier="snapd_client_get_users_async"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3352">Asynchronously get user accounts that are valid for this device.
See snapd_client_get_users_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="964"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3354">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3355">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3356">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3357">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_users_finish"
              c:identifier="snapd_client_get_users_finish"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3374">Complete request started with snapd_client_get_users_async().
See snapd_client_get_users_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="968"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3383">an array of #SnapdUserInformation or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="UserInformation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3376">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3377">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_users_sync"
              c:identifier="snapd_client_get_users_sync"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1339">Get user accounts that are valid for this device.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="961"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1348">an array of #SnapdUserInformation or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="UserInformation"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1341">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1342">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install2_async"
              c:identifier="snapd_client_install2_async"
              version="1.12">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2573">Asynchronously install a snap from the store.
See snapd_client_install2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="734"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2575">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2576">a set of #SnapdInstallFlags to control install options.</doc>
            <type name="InstallFlags" c:type="SnapdInstallFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2577">name of snap to install.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2578">channel to install from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="revision"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2579">revision to install or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2580">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2581">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2582">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="8">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2583">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2584">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install2_finish"
              c:identifier="snapd_client_install2_finish"
              version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2615">Complete request started with snapd_client_install2_async().
See snapd_client_install2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="744"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2624">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2617">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2618">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install2_sync"
              c:identifier="snapd_client_install2_sync"
              version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="899">Install a snap from the store.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="725"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="913">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="901">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="902">a set of #SnapdInstallFlags to control install options.</doc>
            <type name="InstallFlags" c:type="SnapdInstallFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="903">name of snap to install.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="904">channel to install from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="revision"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="905">revision to install or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="906">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="907">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="908">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_async"
              c:identifier="snapd_client_install_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2527">Asynchronously install a snap from the store.
See snapd_client_install_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_install2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="713"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2529">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2530">name of snap to install.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2531">channel to install from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2532">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2533">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2534">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2535">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2536">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_finish"
              c:identifier="snapd_client_install_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2553">Complete request started with snapd_client_install_async().
See snapd_client_install_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_install2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="721"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2562">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2555">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2556">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_stream_async"
              c:identifier="snapd_client_install_stream_async"
              version="1.9">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2689">Asynchronously install a snap.
See snapd_client_install_stream_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="755"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2691">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2692">a set of #SnapdInstallFlags to control install options.</doc>
            <type name="InstallFlags" c:type="SnapdInstallFlags"/>
          </parameter>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2693">a #GInputStream containing the snap file contents to install.</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2694">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2695">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2696">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2697">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2698">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_stream_finish"
              c:identifier="snapd_client_install_stream_finish"
              version="1.9"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2727">Complete request started with snapd_client_install_stream_async().
See snapd_client_install_stream_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="763"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2736">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2729">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2730">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_stream_sync"
              c:identifier="snapd_client_install_stream_sync"
              version="1.9"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="934">Install a snap. The snap contents are provided in the form of an input stream.
To install from a local file, do the following:

|[
g_autoptr(GFile) file = g_file_new_for_path (path_to_snap_file);
g_autoptr(GInputStream) stream = g_file_read (file, cancellable, &amp;error);
snapd_client_install_stream_sync (self, stream, progress_cb, NULL, cancellable, &amp;error);
\]

Or if you have the file in memory you can use:

|[
g_autoptr(GInputStream) stream = g_memory_input_stream_new_from_data (data, data_length, free_data);
snapd_client_install_stream_sync (self, stream, progress_cb, NULL, cancellable, &amp;error);
\]</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="748"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="960">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="936">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="937">a set of #SnapdInstallFlags to control install options.</doc>
            <type name="InstallFlags" c:type="SnapdInstallFlags"/>
          </parameter>
          <parameter name="stream" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="938">a #GInputStream containing the snap file contents to install.</doc>
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="939">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="940">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="941">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_sync"
              c:identifier="snapd_client_install_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="873">Install a snap from the store.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_install2_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="706"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="885">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="875">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="876">name of snap to install.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="877">channel to install from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="878">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="879">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="880">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_themes_async"
              c:identifier="snapd_client_install_themes_async"
              version="1.60">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="4061">Asynchronously install snaps that provide the requested desktop themes.
See snapd_client_install_themes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4063">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="gtk_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4064">a list of GTK theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="icon_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4065">a list of icon theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="sound_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4066">a list of sound theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4067">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4068">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4069">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="7">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4070">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4071">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_themes_finish"
              c:identifier="snapd_client_install_themes_finish"
              version="1.60"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="4087">Complete request started with snapd_client_install_themes_async().
See snapd_client_install_themes_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1204"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="4096">%TRUE on success.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4089">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="4090">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_themes_sync"
              c:identifier="snapd_client_install_themes_sync"
              version="1.60"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1730">Install snaps that provide the named desktop themes. If all the
named themes are in the "installed" or "unavailable" states, then
an error will be returned.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1187"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1732">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="gtk_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1733">a list of GTK theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="icon_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1734">a list of icon theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="sound_theme_names"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1735">a list of sound theme names.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1736">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1737">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1738">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_async"
              c:identifier="snapd_client_list_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1826">Asynchronously get information on all installed snaps.
See snapd_client_list_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snaps_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="393"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1828">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1829">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1830">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1831">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_finish"
              c:identifier="snapd_client_list_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1846">Complete request started with snapd_client_list_async().
See snapd_client_list_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snaps_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="397"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1855">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1848">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1849">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_one_async"
              c:identifier="snapd_client_list_one_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1485">Asynchronously get information of a single installed snap.
See snapd_client_list_one_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snap_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="420"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1487">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1488">name of snap to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1489">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1490">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1491">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_one_finish"
              c:identifier="snapd_client_list_one_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1507">Complete request started with snapd_client_list_one_async().
See snapd_client_list_one_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snap_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="425"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1516">a #SnapdSnap or %NULL on error.</doc>
          <type name="Snap" c:type="SnapdSnap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1509">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1510">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_one_sync"
              c:identifier="snapd_client_list_one_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="284">Get information of a single installed snap.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snap_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="416"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="293">a #SnapdSnap or %NULL on error.</doc>
          <type name="Snap" c:type="SnapdSnap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="286">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="287">name of snap to get.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="288">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_sync"
              c:identifier="snapd_client_list_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="472">Get information on all installed snaps.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_get_snaps_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="390"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="480">an array of #SnapdSnap or %NULL on error.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Snap"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="474">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="475">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="login2_async"
              c:identifier="snapd_client_login2_async"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1126">Asynchronously get authorization to install/remove snaps.
See snapd_client_login2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="304"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1128">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1129">email address to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1130">password to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="otp"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1131">response to one-time password challenge.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1132">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1133">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1134">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="login2_finish"
              c:identifier="snapd_client_login2_finish"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1152">Complete request started with snapd_client_login2_async().
See snapd_client_login2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="311"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1161">a #SnapdUserInformation or %NULL on error.</doc>
          <type name="UserInformation" c:type="SnapdUserInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1154">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1155">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="login2_sync"
              c:identifier="snapd_client_login2_sync"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="110">Log in to snapd and get authorization to install/remove snaps.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="298"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="121">a #SnapdUserInformation or %NULL on error.</doc>
          <type name="UserInformation" c:type="SnapdUserInformation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="112">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="113">email address to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="114">password to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="otp"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="115">response to one-time password challenge.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="116">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="login_async"
              c:identifier="snapd_client_login_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1076">Asynchronously get authorization to install/remove snaps.
See snapd_client_login_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_login2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1078">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1079">email address to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1080">password to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="otp"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1081">response to one-time password challenge.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1082">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1083">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1084">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="login_finish"
              c:identifier="snapd_client_login_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1100">Complete request started with snapd_client_login_async().
See snapd_client_login_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_login2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="294"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1109">a #SnapdAuthData or %NULL on error.</doc>
          <type name="AuthData" c:type="SnapdAuthData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1102">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1103">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="login_sync"
              c:identifier="snapd_client_login_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="73">Log in to snapd and get authorization to install/remove snaps.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_login2_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="281"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="84">a #SnapdAuthData or %NULL on error.</doc>
          <type name="AuthData" c:type="SnapdAuthData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="75">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="email" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="76">email address to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="77">password to log in with.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="otp"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="78">response to one-time password challenge.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="79">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout_async"
              c:identifier="snapd_client_logout_async"
              version="1.55">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1178">Asynchronously log out from the snap store.
See snapd_client_logout_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="319"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1180">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1181">login ID to use.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1182">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1183">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1184">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout_finish"
              c:identifier="snapd_client_logout_finish"
              version="1.55"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1202">Complete request started with snapd_client_logout_async().
See snapd_client_logout_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="324"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1211">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1204">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1205">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="logout_sync"
              c:identifier="snapd_client_logout_sync"
              version="1.55"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="142">Log out from snapd.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="315"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="151">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="144">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="145">login ID to use.</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="146">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prefer_async"
              c:identifier="snapd_client_prefer_async"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3608">Asynchronously ???.
See snapd_client_prefer_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1040"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3610">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3611">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3612">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3613">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3614">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3615">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3616">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="prefer_finish"
              c:identifier="snapd_client_prefer_finish"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3634">Complete request started with snapd_client_prefer_async().
See snapd_client_prefer_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1047"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3643">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3636">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3637">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="prefer_sync"
              c:identifier="snapd_client_prefer_sync"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1482">???</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1034"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1484">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1485">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1486">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1487">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1488">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_all_async"
              c:identifier="snapd_client_refresh_all_async"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2851">Asynchronously ensure all snaps are updated to their latest versions.
See snapd_client_refresh_all_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="808"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2853">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2854">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2855">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2856">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2857">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2858">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_all_finish"
              c:identifier="snapd_client_refresh_all_finish"
              version="1.5"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2876">Complete request started with snapd_client_refresh_all_async().
See snapd_client_refresh_all_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="814"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2885">a %NULL-terminated array of the snap names refreshed or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2878">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2879">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_all_sync"
              c:identifier="snapd_client_refresh_all_sync"
              version="1.5"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1044">Update all installed snaps to their latest version.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="803"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1054">a %NULL-terminated array of the snap names refreshed or %NULL on error.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1046">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1047">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1048">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1049">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_async"
              c:identifier="snapd_client_refresh_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2799">Asynchronously ensure an installed snap is at the latest version.
See snapd_client_refresh_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="791"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2801">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2802">name of snap to refresh.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2803">channel to refresh from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2804">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2805">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2806">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2807">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2808">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_finish"
              c:identifier="snapd_client_refresh_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2829">Complete request started with snapd_client_refresh_async().
See snapd_client_refresh_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="799"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2838">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2831">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2832">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="refresh_sync"
              c:identifier="snapd_client_refresh_sync"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1012">Ensure an installed snap is at the latest version.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="784"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1024">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1014">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1015">name of snap to refresh.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1016">channel to refresh from or %NULL for default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1017">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1018">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1019">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove2_async"
              c:identifier="snapd_client_remove2_async"
              version="1.50">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2948">Asynchronously uninstall a snap.
See snapd_client_remove2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="842"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2950">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2951">a set of #SnapdRemoveFlags to control remove options.</doc>
            <type name="RemoveFlags" c:type="SnapdRemoveFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2952">name of snap to remove.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2953">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2954">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2955">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2956">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2957">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove2_finish"
              c:identifier="snapd_client_remove2_finish"
              version="1.50"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2980">Complete request started with snapd_client_remove2_async().
See snapd_client_remove2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="850"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2989">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2982">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2983">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove2_sync"
              c:identifier="snapd_client_remove2_sync"
              version="1.50"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1097">Uninstall a snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="835"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1109">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1099">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1100">a set of #SnapdRemoveFlags to control remove options.</doc>
            <type name="RemoveFlags" c:type="SnapdRemoveFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1101">name of snap to remove.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1102">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1103">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1104">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_async"
              c:identifier="snapd_client_remove_async"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2903">Asynchronously uninstall a snap.
See snapd_client_remove_sync() for more information.</doc>
        <doc-version xml:space="preserve">
Deprecated 1.50: Use snapd_client_remove2_async()</doc-version>
        <source-position filename="snapd-glib/snapd-client.h" line="824"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2905">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2906">name of snap to remove.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2907">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2908">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2909">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2910">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2911">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_finish"
              c:identifier="snapd_client_remove_finish"
              version="1.0"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2928">Complete request started with snapd_client_remove_async().
See snapd_client_remove_sync() for more information.</doc>
        <doc-version xml:space="preserve">
Deprecated 1.50: Use snapd_client_remove2_finish()</doc-version>
        <source-position filename="snapd-glib/snapd-client.h" line="831"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2937">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2930">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2931">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_sync"
              c:identifier="snapd_client_remove_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.50"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1072">Uninstall a snap.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_remove2_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="818"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1083">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1074">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1075">name of snap to remove.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1076">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1077">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1078">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_aliases_async"
              c:identifier="snapd_client_reset_aliases_async"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3760">Asynchronously change the state of aliases.
See snapd_client_reset_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_disable_aliases_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1096"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3762">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3763">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3764">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3765">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3766">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3767">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3768">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3769">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_aliases_finish"
              c:identifier="snapd_client_reset_aliases_finish"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3789">Complete request started with snapd_client_reset_aliases_async().
See snapd_client_reset_aliases_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_disable_aliases_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3798">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3791">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3792">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_aliases_sync"
              c:identifier="snapd_client_reset_aliases_sync"
              version="1.8"
              deprecated="1"
              deprecated-version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1568">Change the state of aliases.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_disable_aliases_sync()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1089"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1581">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1570">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1571">the name of the snap to modify.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="aliases" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1572">the aliases to modify.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1573">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1574">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1575">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl2_async"
              c:identifier="snapd_client_run_snapctl2_async"
              version="1.59">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3867">Asynchronously run a snapctl command.
See snapd_client_run_snapctl_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3869">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="context_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3870">context for this call.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3871">the arguments to pass to snapctl.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3872">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3873">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3874">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl2_finish"
              c:identifier="snapd_client_run_snapctl2_finish"
              version="1.59"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3894">Complete request started with snapd_client_run_snapctl2_async().
See snapd_client_run_snapctl2_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3906">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3896">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3897">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="stdout_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3898">the location to write the stdout from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="stderr_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3899">the location to write the stderr from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="exit_code"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3900">the location to write the exit code of the command or %NULL.</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl2_sync"
              c:identifier="snapd_client_run_snapctl2_sync"
              version="1.59"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1633">Run a snapctl command.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1647">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1635">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="context_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1636">context for this call.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1637">the arguments to pass to snapctl.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="stdout_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1638">the location to write the stdout from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="stderr_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1639">the location to write the stderr from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="exit_code"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1640">the location to write the exit code of the command or %NULL.</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1641">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl_async"
              c:identifier="snapd_client_run_snapctl_async"
              version="1.8"
              deprecated="1"
              deprecated-version="1.59">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3812">Asynchronously run a snapctl command.
See snapd_client_run_snapctl_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_run_snapctl2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3814">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="context_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3815">context for this call.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3816">the arguments to pass to snapctl.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3817">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3818">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3819">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl_finish"
              c:identifier="snapd_client_run_snapctl_finish"
              version="1.8"
              deprecated="1"
              deprecated-version="1.59"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3835">Complete request started with snapd_client_run_snapctl_async().
See snapd_client_run_snapctl_sync() for more information.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_run_snapctl2_finish()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3846">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3837">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3838">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="stdout_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3839">the location to write the stdout from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="stderr_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3840">the location to write the stderr from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
        </parameters>
      </method>
      <method name="run_snapctl_sync"
              c:identifier="snapd_client_run_snapctl_sync"
              version="1.8"
              deprecated="1"
              deprecated-version="1.59"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1596">Run a snapctl command.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_client_run_snapctl2_async()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-client.h" line="1108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1609">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1598">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="context_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1599">context for this call.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="args" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1600">the arguments to pass to snapctl.</doc>
            <array c:type="GStrv">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="stdout_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1601">the location to write the stdout from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="stderr_output"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1602">the location to write the stderr from the command or %NULL.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1603">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_interaction"
              c:identifier="snapd_client_set_allow_interaction"
              version="1.19">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1020">Set whether snapd operations are allowed to interact with the user.
This affects operations that use polkit authorisation.
Defaults to TRUE.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="274"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1022">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="allow_interaction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1023">whether to allow interaction.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_auth_data"
              c:identifier="snapd_client_set_auth_data"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1228">Set the authorization data to use for requests. Authorization data can be
obtained by:

- Logging into snapd using snapd_client_login_sync()

- Using an existing authorization with snapd_auth_data_new().</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="328"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1230">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="auth_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1231">a #SnapdAuthData or %NULL.</doc>
            <type name="AuthData" c:type="SnapdAuthData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snap_conf_async"
              c:identifier="snapd_client_set_snap_conf_async"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1630">Asynchronously set configuration for a snap.
See snapd_client_set_snap_conf_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="462"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1632">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1633">name of snap to set configuration for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1634">Keys to set.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GLib.Variant"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1635">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="4">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1636">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1637">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snap_conf_finish"
              c:identifier="snapd_client_set_snap_conf_finish"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="1658">Complete request started with snapd_client_set_snap_conf_async().
See snapd_client_set_snap_conf_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="1667">%TRUE if configuration successfully applied.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1660">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="1661">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snap_conf_sync"
              c:identifier="snapd_client_set_snap_conf_sync"
              version="1.48"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="363">Set configuration for a snap. System configuration is stored using the name "system".</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="457"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="373">%TRUE if configuration successfully applied.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="365">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="366">name of snap to set configuration for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="367">Keys to set.</doc>
            <type name="GLib.HashTable" c:type="GHashTable*">
              <type name="utf8"/>
              <type name="GLib.Variant"/>
            </type>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="368">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_socket_path"
              c:identifier="snapd_client_set_socket_path"
              version="1.24">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="939">Set the Unix socket path to connect to snapd with.
Defaults to the system socket.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="941">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="socket_path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="942">a socket path or %NULL to reset to the default.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_agent"
              c:identifier="snapd_client_set_user_agent"
              version="1.16">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="981">Set the HTTP user-agent that is sent with each request to snapd.
Defaults to "snapd-glib/VERSION".</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="983">a #SnapdClient</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="user_agent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="984">a user agent or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="switch_async"
              c:identifier="snapd_client_switch_async"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3102">Asynchronously set the tracking channel on an installed snap.
See snapd_client_switch_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="895"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3104">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3105">name of snap to switch channel.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3106">channel to track.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3107">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3108">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3109">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3110">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3111">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="switch_finish"
              c:identifier="snapd_client_switch_finish"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3132">Complete request started with snapd_client_switch_async().
See snapd_client_switch_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="903"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3141">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3134">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3135">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="switch_sync"
              c:identifier="snapd_client_switch_sync"
              version="1.26"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1192">Set the tracking channel on an installed snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="888"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="1204">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1194">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1195">name of snap to switch channel.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1196">channel to track.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1197">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1198">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1199">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_async"
              c:identifier="snapd_client_try_async"
              version="1.9">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2749">Asynchronously try a snap.
See snapd_client_try_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="773"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2751">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2752">path to snap directory to try.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2753">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2754">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2755">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2756">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2757">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_finish"
              c:identifier="snapd_client_try_finish"
              version="1.9"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="2777">Complete request started with snapd_client_try_async().
See snapd_client_try_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="780"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="2786">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2779">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="2780">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="try_sync"
              c:identifier="snapd_client_try_sync"
              version="1.9"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="981">Try a snap.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="767"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client-sync.c"
               line="992">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="983">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="984">path to snap directory to try.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="2">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="985">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="986">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="987">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unalias_async"
              c:identifier="snapd_client_unalias_async"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3559">Asynchronously remove an alias from an app.
See snapd_client_unalias_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1022"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3561">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3562">the name of the snap to modify or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="alias"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3563">the name of the alias to remove or %NULL to remove all aliases for the given snap.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3564">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3565">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3566">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3567">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3568">the data to pass to callback function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unalias_finish"
              c:identifier="snapd_client_unalias_finish"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.c"
             line="3586">Complete request started with snapd_client_unalias_async().
See snapd_client_unalias_sync() for more information.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1030"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.c"
               line="3595">%TRUE on success or %FALSE on error.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3588">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client.c"
                 line="3589">a #GAsyncResult.</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unalias_sync"
              c:identifier="snapd_client_unalias_sync"
              version="1.25"
              throws="1">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client-sync.c"
             line="1451">Remove an alias from an app.</doc>
        <source-position filename="snapd-glib/snapd-client.h" line="1015"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="client" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1453">a #SnapdClient.</doc>
            <type name="Client" c:type="SnapdClient*"/>
          </instance-parameter>
          <parameter name="snap"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1454">the name of the snap to modify or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="alias"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1455">the name of the alias to remove or %NULL to remove all aliases for the given snap.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call"
                     closure="3">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1456">function to callback with progress.</doc>
            <type name="ProgressCallback" c:type="SnapdProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1457">user data to pass to @progress_callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-client-sync.c"
                 line="1458">a #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ClientClass"
            c:type="SnapdClientClass"
            glib:is-gtype-struct-for="Client">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.c"
           line="76">Class structure for #SnapdClient.</doc>
      <source-position filename="snapd-glib/snapd-client.h" line="45"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_snapd_reserved1" introspectable="0">
        <callback name="_snapd_reserved1">
          <source-position filename="snapd-glib/snapd-client.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_snapd_reserved2" introspectable="0">
        <callback name="_snapd_reserved2">
          <source-position filename="snapd-glib/snapd-client.h" line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_snapd_reserved3" introspectable="0">
        <callback name="_snapd_reserved3">
          <source-position filename="snapd-glib/snapd-client.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_snapd_reserved4" introspectable="0">
        <callback name="_snapd_reserved4">
          <source-position filename="snapd-glib/snapd-client.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="Confinement"
                 version="1.0"
                 glib:type-name="SnapdConfinement"
                 glib:get-type="snapd_confinement_get_type"
                 c:type="SnapdConfinement">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-channel.h"
           line="25">Confinement used by a snap.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_CONFINEMENT_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_CONFINEMENT_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.h"
             line="27">the confinement of the snap is unknown.</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="SNAPD_CONFINEMENT_STRICT"
              glib:nick="strict"
              glib:name="SNAPD_CONFINEMENT_STRICT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.h"
             line="28">the snap is using confinement.</doc>
      </member>
      <member name="devmode"
              value="2"
              c:identifier="SNAPD_CONFINEMENT_DEVMODE"
              glib:nick="devmode"
              glib:name="SNAPD_CONFINEMENT_DEVMODE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.h"
             line="29">the snap is in dev mode (i.e. unconfined).</doc>
      </member>
      <member name="classic"
              value="3"
              c:identifier="SNAPD_CONFINEMENT_CLASSIC"
              glib:nick="classic"
              glib:name="SNAPD_CONFINEMENT_CLASSIC">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-channel.h"
             line="30">the snap is using classic confinement.</doc>
      </member>
    </enumeration>
    <class name="Connection"
           c:symbol-prefix="connection"
           c:type="SnapdConnection"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdConnection"
           glib:get-type="snapd_connection_get_type"
           glib:type-struct="ConnectionClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-connection.c"
           line="23">#SnapdConnection contains the state of Snap a interface connection.</doc>
      <source-position filename="snapd-glib/snapd-connection.h" line="25"/>
      <method name="get_gadget"
              c:identifier="snapd_connection_get_gadget"
              glib:get-property="gadget"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="132">Get if this connection was made by the gadget snap.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="138">%TRUE if connection was made by the gadget snap.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="134">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface"
              c:identifier="snapd_connection_get_interface"
              glib:get-property="interface"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="98">Get the interface this connections uses.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="104">an interface name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="100">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_manual"
              c:identifier="snapd_connection_get_manual"
              glib:get-property="manual"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="115">Get if this connection was made manually.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="121">%TRUE if connection was made manually.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="117">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_connection_get_name"
              glib:get-property="name"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="283">Get the name of this connection (i.e. a slot or plug name).</doc>
        <doc-deprecated xml:space="preserve">Use snapd_plug_ref_get_plug() or snapd_slot_ref_get_slot()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-connection.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="289">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="285">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plug"
              c:identifier="snapd_connection_get_plug"
              glib:get-property="plug"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="81">Get the plug this connection is made with.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="87">a reference to a plug.</doc>
          <type name="PlugRef" c:type="SnapdPlugRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="83">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plug_attribute"
              c:identifier="snapd_connection_get_plug_attribute"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="265">Get an attribute for connected plug.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="52"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="272">an attribute value or %NULL if not set.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="267">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="268">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_plug_attribute_names"
              c:identifier="snapd_connection_get_plug_attribute_names"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="216">Get the names of the attributes the connected plug has.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="46"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="223">a string array of attribute names. Free with g_strfreev().</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="218">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="219">location to write number of attributes or %NULL if not required.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_slot"
              c:identifier="snapd_connection_get_slot"
              glib:get-property="slot"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="64">Get the slot this connection is made with.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="70">a reference to a slot.</doc>
          <type name="SlotRef" c:type="SnapdSlotRef*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="66">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_slot_attribute"
              c:identifier="snapd_connection_get_slot_attribute"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="198">Get an attribute for connected slot.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="205">an attribute value or %NULL if not set.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="200">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="201">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_slot_attribute_names"
              c:identifier="snapd_connection_get_slot_attribute_names"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="149">Get the names of the attributes the connected slot has.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="156">a string array of attribute names. Free with g_strfreev().</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="151">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="152">location to write number of attributes or %NULL if not required.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_connection_get_snap"
              glib:get-property="snap"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="301">Get the snap this connection is on.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_plug_ref_get_snap() or snapd_slot_ref_get_snap()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-connection.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="307">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="303">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_plug_attribute"
              c:identifier="snapd_connection_has_plug_attribute"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="247">Check if the connected plug has an attribute.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="254">%TRUE if this attribute exists.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="249">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="250">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_slot_attribute"
              c:identifier="snapd_connection_has_slot_attribute"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-connection.c"
             line="180">Check if the connected slot has an attribute.</doc>
        <source-position filename="snapd-glib/snapd-connection.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-connection.c"
               line="187">%TRUE if this attribute exists.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="182">a #SnapdConnection.</doc>
            <type name="Connection" c:type="SnapdConnection*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-connection.c"
                 line="183">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="gadget"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_gadget">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interface"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_interface">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="manual"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_manual">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="plug"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_plug">
        <type name="PlugRef"/>
      </property>
      <property name="plug-attrs"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <property name="slot"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_slot">
        <type name="SlotRef"/>
      </property>
      <property name="slot-attrs"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="ConnectionClass"
            c:type="SnapdConnectionClass"
            glib:is-gtype-struct-for="Connection">
      <source-position filename="snapd-glib/snapd-connection.h" line="25"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <bitfield name="CreateUserFlags"
              version="1.3"
              glib:type-name="SnapdCreateUserFlags"
              glib:get-type="snapd_create_user_flags_get_type"
              c:type="SnapdCreateUserFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="172">Flag to control when a user accounts is created.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_CREATE_USER_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_CREATE_USER_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="174">No flags, default behaviour.</doc>
      </member>
      <member name="sudo"
              value="1"
              c:identifier="SNAPD_CREATE_USER_FLAGS_SUDO"
              glib:nick="sudo"
              glib:name="SNAPD_CREATE_USER_FLAGS_SUDO">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="175">Gives sudo access to created user.</doc>
      </member>
      <member name="known"
              value="2"
              c:identifier="SNAPD_CREATE_USER_FLAGS_KNOWN"
              glib:nick="known"
              glib:name="SNAPD_CREATE_USER_FLAGS_KNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="176">Use the local system-user assertions to create the user.</doc>
      </member>
    </bitfield>
    <enumeration name="DaemonType"
                 version="1.9"
                 glib:type-name="SnapdDaemonType"
                 glib:get-type="snapd_daemon_type_get_type"
                 c:type="SnapdDaemonType">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-app.h"
           line="25">Type of daemon.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_DAEMON_TYPE_NONE"
              glib:nick="none"
              glib:name="SNAPD_DAEMON_TYPE_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="27">Not a daemon</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="SNAPD_DAEMON_TYPE_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_DAEMON_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="28">Unknown daemon type</doc>
      </member>
      <member name="simple"
              value="2"
              c:identifier="SNAPD_DAEMON_TYPE_SIMPLE"
              glib:nick="simple"
              glib:name="SNAPD_DAEMON_TYPE_SIMPLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="29">Simple daemon</doc>
      </member>
      <member name="forking"
              value="3"
              c:identifier="SNAPD_DAEMON_TYPE_FORKING"
              glib:nick="forking"
              glib:name="SNAPD_DAEMON_TYPE_FORKING">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="30">Forking daemon</doc>
      </member>
      <member name="oneshot"
              value="4"
              c:identifier="SNAPD_DAEMON_TYPE_ONESHOT"
              glib:nick="oneshot"
              glib:name="SNAPD_DAEMON_TYPE_ONESHOT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="31">One-shot daemon</doc>
      </member>
      <member name="dbus"
              value="5"
              c:identifier="SNAPD_DAEMON_TYPE_DBUS"
              glib:nick="dbus"
              glib:name="SNAPD_DAEMON_TYPE_DBUS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="32">D-Bus daemon</doc>
      </member>
      <member name="notify"
              value="6"
              c:identifier="SNAPD_DAEMON_TYPE_NOTIFY"
              glib:nick="notify"
              glib:name="SNAPD_DAEMON_TYPE_NOTIFY">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-app.h"
             line="33">Notify daemon</doc>
      </member>
    </enumeration>
    <enumeration name="Error"
                 version="1.0"
                 glib:type-name="SnapdError"
                 glib:get-type="snapd_error_get_type"
                 c:type="SnapdError"
                 glib:error-domain="snapd-error-quark">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-error.h"
           line="21">Error codes returned by snapd operations.</doc>
      <member name="connection_failed"
              value="0"
              c:identifier="SNAPD_ERROR_CONNECTION_FAILED"
              glib:nick="connection-failed"
              glib:name="SNAPD_ERROR_CONNECTION_FAILED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="23">not able to connect to snapd.</doc>
      </member>
      <member name="write_failed"
              value="1"
              c:identifier="SNAPD_ERROR_WRITE_FAILED"
              glib:nick="write-failed"
              glib:name="SNAPD_ERROR_WRITE_FAILED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="24">an error occurred while writing to snapd.</doc>
      </member>
      <member name="read_failed"
              value="2"
              c:identifier="SNAPD_ERROR_READ_FAILED"
              glib:nick="read-failed"
              glib:name="SNAPD_ERROR_READ_FAILED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="25">an error occurred while reading from snapd.</doc>
      </member>
      <member name="bad_request"
              value="3"
              c:identifier="SNAPD_ERROR_BAD_REQUEST"
              glib:nick="bad-request"
              glib:name="SNAPD_ERROR_BAD_REQUEST">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="26">snapd did not understand the request that was sent.</doc>
      </member>
      <member name="bad_response"
              value="4"
              c:identifier="SNAPD_ERROR_BAD_RESPONSE"
              glib:nick="bad-response"
              glib:name="SNAPD_ERROR_BAD_RESPONSE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="27">the response received from snapd was not
    understood.</doc>
      </member>
      <member name="auth_data_required"
              value="5"
              c:identifier="SNAPD_ERROR_AUTH_DATA_REQUIRED"
              glib:nick="auth-data-required"
              glib:name="SNAPD_ERROR_AUTH_DATA_REQUIRED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="29">the requested operation requires
    authorization data.</doc>
      </member>
      <member name="auth_data_invalid"
              value="6"
              c:identifier="SNAPD_ERROR_AUTH_DATA_INVALID"
              glib:nick="auth-data-invalid"
              glib:name="SNAPD_ERROR_AUTH_DATA_INVALID">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="31">the provided authorization data is invalid.</doc>
      </member>
      <member name="two_factor_required"
              value="7"
              c:identifier="SNAPD_ERROR_TWO_FACTOR_REQUIRED"
              glib:nick="two-factor-required"
              glib:name="SNAPD_ERROR_TWO_FACTOR_REQUIRED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="32">login requires a two factor code.</doc>
      </member>
      <member name="two_factor_invalid"
              value="8"
              c:identifier="SNAPD_ERROR_TWO_FACTOR_INVALID"
              glib:nick="two-factor-invalid"
              glib:name="SNAPD_ERROR_TWO_FACTOR_INVALID">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="33">the two factor code provided at login is
    invalid.</doc>
      </member>
      <member name="permission_denied"
              value="9"
              c:identifier="SNAPD_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied"
              glib:name="SNAPD_ERROR_PERMISSION_DENIED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="35">this user account is not permitted to perform
    the requested operation.</doc>
      </member>
      <member name="failed"
              value="10"
              c:identifier="SNAPD_ERROR_FAILED"
              glib:nick="failed"
              glib:name="SNAPD_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="37">an unspecified error occurred while communicating
    with snapd.</doc>
      </member>
      <member name="terms_not_accepted"
              value="11"
              c:identifier="SNAPD_ERROR_TERMS_NOT_ACCEPTED"
              glib:nick="terms-not-accepted"
              glib:name="SNAPD_ERROR_TERMS_NOT_ACCEPTED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="39">this user has not accepted the store's terms
    of service.</doc>
      </member>
      <member name="payment_not_setup"
              value="12"
              c:identifier="SNAPD_ERROR_PAYMENT_NOT_SETUP"
              glib:nick="payment-not-setup"
              glib:name="SNAPD_ERROR_PAYMENT_NOT_SETUP">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="41">this user has not configured a payment
    method.</doc>
      </member>
      <member name="payment_declined"
              value="13"
              c:identifier="SNAPD_ERROR_PAYMENT_DECLINED"
              glib:nick="payment-declined"
              glib:name="SNAPD_ERROR_PAYMENT_DECLINED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="43">this user has had their payment method
    declined by the payment provider.</doc>
      </member>
      <member name="already_installed"
              value="14"
              c:identifier="SNAPD_ERROR_ALREADY_INSTALLED"
              glib:nick="already-installed"
              glib:name="SNAPD_ERROR_ALREADY_INSTALLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="45">the requested snap is already installed.</doc>
      </member>
      <member name="not_installed"
              value="15"
              c:identifier="SNAPD_ERROR_NOT_INSTALLED"
              glib:nick="not-installed"
              glib:name="SNAPD_ERROR_NOT_INSTALLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="46">the requested snap is not installed.</doc>
      </member>
      <member name="no_update_available"
              value="16"
              c:identifier="SNAPD_ERROR_NO_UPDATE_AVAILABLE"
              glib:nick="no-update-available"
              glib:name="SNAPD_ERROR_NO_UPDATE_AVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="47">no update is available for this snap.</doc>
      </member>
      <member name="password_policy_error"
              value="17"
              c:identifier="SNAPD_ERROR_PASSWORD_POLICY_ERROR"
              glib:nick="password-policy-error"
              glib:name="SNAPD_ERROR_PASSWORD_POLICY_ERROR">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="48">provided password is not valid.</doc>
      </member>
      <member name="needs_devmode"
              value="18"
              c:identifier="SNAPD_ERROR_NEEDS_DEVMODE"
              glib:nick="needs-devmode"
              glib:name="SNAPD_ERROR_NEEDS_DEVMODE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="49">this snap needs to be installed using devmode.</doc>
      </member>
      <member name="needs_classic"
              value="19"
              c:identifier="SNAPD_ERROR_NEEDS_CLASSIC"
              glib:nick="needs-classic"
              glib:name="SNAPD_ERROR_NEEDS_CLASSIC">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="50">this snap needs to be installed using classic
    mode.</doc>
      </member>
      <member name="needs_classic_system"
              value="20"
              c:identifier="SNAPD_ERROR_NEEDS_CLASSIC_SYSTEM"
              glib:nick="needs-classic-system"
              glib:name="SNAPD_ERROR_NEEDS_CLASSIC_SYSTEM">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="52">a classic system is required to install
   this snap.</doc>
      </member>
      <member name="bad_query"
              value="21"
              c:identifier="SNAPD_ERROR_BAD_QUERY"
              glib:nick="bad-query"
              glib:name="SNAPD_ERROR_BAD_QUERY">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="54">a bad query was provided.</doc>
      </member>
      <member name="network_timeout"
              value="22"
              c:identifier="SNAPD_ERROR_NETWORK_TIMEOUT"
              glib:nick="network-timeout"
              glib:name="SNAPD_ERROR_NETWORK_TIMEOUT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="55">A timeout occurred during the request.</doc>
      </member>
      <member name="not_found"
              value="23"
              c:identifier="SNAPD_ERROR_NOT_FOUND"
              glib:nick="not-found"
              glib:name="SNAPD_ERROR_NOT_FOUND">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="56">the requested snap couldn't be found.</doc>
      </member>
      <member name="not_in_store"
              value="24"
              c:identifier="SNAPD_ERROR_NOT_IN_STORE"
              glib:nick="not-in-store"
              glib:name="SNAPD_ERROR_NOT_IN_STORE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="57">the requested snap is not in the store.</doc>
      </member>
      <member name="auth_cancelled"
              value="25"
              c:identifier="SNAPD_ERROR_AUTH_CANCELLED"
              glib:nick="auth-cancelled"
              glib:name="SNAPD_ERROR_AUTH_CANCELLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="58">authentication was cancelled by the user.</doc>
      </member>
      <member name="not_classic"
              value="26"
              c:identifier="SNAPD_ERROR_NOT_CLASSIC"
              glib:nick="not-classic"
              glib:name="SNAPD_ERROR_NOT_CLASSIC">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="59">snap not compatible with classic mode.</doc>
      </member>
      <member name="revision_not_available"
              value="27"
              c:identifier="SNAPD_ERROR_REVISION_NOT_AVAILABLE"
              glib:nick="revision-not-available"
              glib:name="SNAPD_ERROR_REVISION_NOT_AVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="60">requested snap revision not available.</doc>
      </member>
      <member name="channel_not_available"
              value="28"
              c:identifier="SNAPD_ERROR_CHANNEL_NOT_AVAILABLE"
              glib:nick="channel-not-available"
              glib:name="SNAPD_ERROR_CHANNEL_NOT_AVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="61">requested snap channel not available.</doc>
      </member>
      <member name="not_a_snap"
              value="29"
              c:identifier="SNAPD_ERROR_NOT_A_SNAP"
              glib:nick="not-a-snap"
              glib:name="SNAPD_ERROR_NOT_A_SNAP">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="62">the given snap or directory does not look like a snap.</doc>
      </member>
      <member name="dns_failure"
              value="30"
              c:identifier="SNAPD_ERROR_DNS_FAILURE"
              glib:nick="dns-failure"
              glib:name="SNAPD_ERROR_DNS_FAILURE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="63">A hostname failed to resolve during the request.</doc>
      </member>
      <member name="option_not_found"
              value="31"
              c:identifier="SNAPD_ERROR_OPTION_NOT_FOUND"
              glib:nick="option-not-found"
              glib:name="SNAPD_ERROR_OPTION_NOT_FOUND">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="64">A requested configuration option is not set.</doc>
      </member>
      <member name="unsuccessful"
              value="32"
              c:identifier="SNAPD_ERROR_UNSUCCESSFUL"
              glib:nick="unsuccessful"
              glib:name="SNAPD_ERROR_UNSUCCESSFUL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.h"
             line="65">A snapctl command was unsuccessful.</doc>
      </member>
      <function name="quark" c:identifier="snapd_error_quark" version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.c"
             line="20">Gets the Snapd Error Quark.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-error.c"
               line="25">a #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="FindFlags"
              version="1.0"
              glib:type-name="SnapdFindFlags"
              glib:get-type="snapd_find_flags_get_type"
              c:type="SnapdFindFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="109">Flag to change how a find is performed.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_FIND_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_FIND_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="111">No flags, default behaviour.</doc>
      </member>
      <member name="match_name"
              value="1"
              c:identifier="SNAPD_FIND_FLAGS_MATCH_NAME"
              glib:nick="match-name"
              glib:name="SNAPD_FIND_FLAGS_MATCH_NAME">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="112">Search for snaps whose name matches the given
    string. The match is exact unless the string ends in *.</doc>
      </member>
      <member name="select_private"
              value="2"
              c:identifier="SNAPD_FIND_FLAGS_SELECT_PRIVATE"
              glib:nick="select-private"
              glib:name="SNAPD_FIND_FLAGS_SELECT_PRIVATE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="116">Search private snaps.</doc>
      </member>
      <member name="select_refresh"
              value="4"
              c:identifier="SNAPD_FIND_FLAGS_SELECT_REFRESH"
              glib:nick="select-refresh"
              glib:name="SNAPD_FIND_FLAGS_SELECT_REFRESH">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="117">Deprecated, do not use.</doc>
      </member>
      <member name="scope_wide"
              value="8"
              c:identifier="SNAPD_FIND_FLAGS_SCOPE_WIDE"
              glib:nick="scope-wide"
              glib:name="SNAPD_FIND_FLAGS_SCOPE_WIDE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="118">Search for snaps from any architecture or branch.</doc>
      </member>
      <member name="match_common_id"
              value="16"
              c:identifier="SNAPD_FIND_FLAGS_MATCH_COMMON_ID"
              glib:nick="match-common-id"
              glib:name="SNAPD_FIND_FLAGS_MATCH_COMMON_ID">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="114">Search for snaps whose common ID matches
    the given string.</doc>
      </member>
    </bitfield>
    <bitfield name="GetAppsFlags"
              version="1.25"
              glib:type-name="SnapdGetAppsFlags"
              glib:get-type="snapd_get_apps_flags_get_type"
              c:type="SnapdGetAppsFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="79">Flag to change which apps are returned.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_GET_APPS_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_GET_APPS_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="81">No flags, default behaviour.</doc>
      </member>
      <member name="select_services"
              value="1"
              c:identifier="SNAPD_GET_APPS_FLAGS_SELECT_SERVICES"
              glib:nick="select-services"
              glib:name="SNAPD_GET_APPS_FLAGS_SELECT_SERVICES">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="82">Select services only.</doc>
      </member>
    </bitfield>
    <bitfield name="GetConnectionsFlags"
              version="1.49"
              glib:type-name="SnapdGetConnectionsFlags"
              glib:get-type="snapd_get_connections_flags_get_type"
              c:type="SnapdGetConnectionsFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="94">Flag to change how connections are returned.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_GET_CONNECTIONS_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_GET_CONNECTIONS_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="96">No flags, default behaviour.</doc>
      </member>
      <member name="select_all"
              value="1"
              c:identifier="SNAPD_GET_CONNECTIONS_FLAGS_SELECT_ALL"
              glib:nick="select-all"
              glib:name="SNAPD_GET_CONNECTIONS_FLAGS_SELECT_ALL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="97">Select all connections, not just connected ones.</doc>
      </member>
    </bitfield>
    <bitfield name="GetInterfacesFlags"
              version="1.48"
              glib:type-name="SnapdGetInterfacesFlags"
              glib:get-type="snapd_get_interfaces_flags_get_type"
              c:type="SnapdGetInterfacesFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="189">Flags to control how interface information is returned.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_GET_INTERFACES_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_GET_INTERFACES_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="191">No flags, default behaviour.</doc>
      </member>
      <member name="include_docs"
              value="1"
              c:identifier="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_DOCS"
              glib:nick="include-docs"
              glib:name="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_DOCS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="192">Include interface documentation.</doc>
      </member>
      <member name="include_plugs"
              value="2"
              c:identifier="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_PLUGS"
              glib:nick="include-plugs"
              glib:name="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_PLUGS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="193">Include associated plugs.</doc>
      </member>
      <member name="include_slots"
              value="4"
              c:identifier="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_SLOTS"
              glib:nick="include-slots"
              glib:name="SNAPD_GET_INTERFACES_FLAGS_INCLUDE_SLOTS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="194">Include associated slots.</doc>
      </member>
      <member name="only_connected"
              value="8"
              c:identifier="SNAPD_GET_INTERFACES_FLAGS_ONLY_CONNECTED"
              glib:nick="only-connected"
              glib:name="SNAPD_GET_INTERFACES_FLAGS_ONLY_CONNECTED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="195">Only return connected interfaces.</doc>
      </member>
    </bitfield>
    <bitfield name="GetSnapsFlags"
              version="1.42"
              glib:type-name="SnapdGetSnapsFlags"
              glib:get-type="snapd_get_snaps_flags_get_type"
              c:type="SnapdGetSnapsFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="64">Flag to change which snaps are returned.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_GET_SNAPS_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_GET_SNAPS_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="66">No flags, default behaviour.</doc>
      </member>
      <member name="include_inactive"
              value="1"
              c:identifier="SNAPD_GET_SNAPS_FLAGS_INCLUDE_INACTIVE"
              glib:nick="include-inactive"
              glib:name="SNAPD_GET_SNAPS_FLAGS_INCLUDE_INACTIVE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="67">Return snaps that are installed but not active.</doc>
      </member>
    </bitfield>
    <class name="Icon"
           c:symbol-prefix="icon"
           c:type="SnapdIcon"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdIcon"
           glib:get-type="snapd_icon_get_type"
           glib:type-struct="IconClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-icon.c"
           line="23">#SnapdIcon contains icon data.</doc>
      <source-position filename="snapd-glib/snapd-icon.h" line="23"/>
      <method name="get_data"
              c:identifier="snapd_icon_get_data"
              glib:get-property="data"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-icon.c"
             line="65">Get the binary data for this icon.</doc>
        <source-position filename="snapd-glib/snapd-icon.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-icon.c"
               line="71">the binary data.</doc>
          <type name="GLib.Bytes" c:type="GBytes*"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-icon.c"
                 line="67">a #SnapdIcon.</doc>
            <type name="Icon" c:type="SnapdIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mime_type"
              c:identifier="snapd_icon_get_mime_type"
              glib:get-property="mime-type"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-icon.c"
             line="48">Get the mime-type for this icon, e.g. "image/png".</doc>
        <source-position filename="snapd-glib/snapd-icon.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-icon.c"
               line="54">a MIME type.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="icon" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-icon.c"
                 line="50">a #SnapdIcon.</doc>
            <type name="Icon" c:type="SnapdIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="data"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_data">
        <type name="GLib.Bytes"/>
      </property>
      <property name="mime-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_mime_type">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="IconClass"
            c:type="SnapdIconClass"
            glib:is-gtype-struct-for="Icon">
      <source-position filename="snapd-glib/snapd-icon.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <bitfield name="InstallFlags"
              version="1.12"
              glib:type-name="SnapdInstallFlags"
              glib:get-type="snapd_install_flags_get_type"
              c:type="SnapdInstallFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="134">Flags to control install options.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_INSTALL_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_INSTALL_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="136">No flags, default behaviour.</doc>
      </member>
      <member name="classic"
              value="1"
              c:identifier="SNAPD_INSTALL_FLAGS_CLASSIC"
              glib:nick="classic"
              glib:name="SNAPD_INSTALL_FLAGS_CLASSIC">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="137">Put snap in classic mode and disable security confinement.</doc>
      </member>
      <member name="dangerous"
              value="2"
              c:identifier="SNAPD_INSTALL_FLAGS_DANGEROUS"
              glib:nick="dangerous"
              glib:name="SNAPD_INSTALL_FLAGS_DANGEROUS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="138">Install the given snap file even if there are
   no pre-acknowledged signatures for it, meaning it was not verified and
   could be dangerous (implied by #SNAPD_INSTALL_FLAGS_DEVMODE).</doc>
      </member>
      <member name="devmode"
              value="4"
              c:identifier="SNAPD_INSTALL_FLAGS_DEVMODE"
              glib:nick="devmode"
              glib:name="SNAPD_INSTALL_FLAGS_DEVMODE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="141">Put snap in development mode and disable security confinement.</doc>
      </member>
      <member name="jailmode"
              value="8"
              c:identifier="SNAPD_INSTALL_FLAGS_JAILMODE"
              glib:nick="jailmode"
              glib:name="SNAPD_INSTALL_FLAGS_JAILMODE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="142">Put snap in enforced confinement mode.</doc>
      </member>
    </bitfield>
    <class name="Interface"
           c:symbol-prefix="interface"
           c:type="SnapdInterface"
           version="1.48"
           parent="GObject.Object"
           glib:type-name="SnapdInterface"
           glib:get-type="snapd_interface_get_type"
           glib:type-struct="InterfaceClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-interface.c"
           line="27">#SnapdInterface contains information about a Snap interface.</doc>
      <source-position filename="snapd-glib/snapd-interface.h" line="23"/>
      <method name="get_doc_url"
              c:identifier="snapd_interface_get_doc_url"
              glib:get-property="doc-url"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="91">Get the documentation URL of this interface.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="97">a URL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="93">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_interface_get_name"
              glib:get-property="name"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="57">Get the name of this interface.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="63">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="59">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plugs"
              c:identifier="snapd_interface_get_plugs"
              glib:get-property="plugs"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="108">Get the plugs matching this interface type.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="114">an array of #SnapdPlug.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Plug"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="110">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_slots"
              c:identifier="snapd_interface_get_slots"
              glib:get-property="slots"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="125">Get the slots matching this interface type.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="131">an array of #SnapdSlot.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Slot"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="127">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="snapd_interface_get_summary"
              glib:get-property="summary"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="74">Get the summary of this interface.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="80">a summary.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="76">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="make_label"
              c:identifier="snapd_interface_make_label"
              version="1.57">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-interface.c"
             line="142">Make a label for this interface suitable for a user interface.</doc>
        <source-position filename="snapd-glib/snapd-interface.h" line="35"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-interface.c"
               line="148">a newly allocated label string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interface" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-interface.c"
                 line="144">a #SnapdInterface</doc>
            <type name="Interface" c:type="SnapdInterface*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="doc-url"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_doc_url">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="plugs"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_plugs">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="slots"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_slots">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="summary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_summary">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="InterfaceClass"
            c:type="SnapdInterfaceClass"
            glib:is-gtype-struct-for="Interface">
      <source-position filename="snapd-glib/snapd-interface.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Maintenance"
           c:symbol-prefix="maintenance"
           c:type="SnapdMaintenance"
           version="1.45"
           parent="GObject.Object"
           glib:type-name="SnapdMaintenance"
           glib:get-type="snapd_maintenance_get_type"
           glib:type-struct="MaintenanceClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-maintenance.c"
           line="24">#SnapdMaintenance contains maintenance information.</doc>
      <source-position filename="snapd-glib/snapd-maintenance.h" line="23"/>
      <method name="get_kind"
              c:identifier="snapd_maintenance_get_kind"
              glib:get-property="kind"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-maintenance.c"
             line="49">Get the kind of maintenance kind, e.g. %SNAPD_MAINTENANCE_KIND_DAEMON_RESTART.</doc>
        <source-position filename="snapd-glib/snapd-maintenance.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-maintenance.c"
               line="55">a #SnapdMaintenanceKind.</doc>
          <type name="MaintenanceKind" c:type="SnapdMaintenanceKind"/>
        </return-value>
        <parameters>
          <instance-parameter name="maintenance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-maintenance.c"
                 line="51">a #SnapdMaintenance.</doc>
            <type name="Maintenance" c:type="SnapdMaintenance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_message"
              c:identifier="snapd_maintenance_get_message"
              glib:get-property="message"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-maintenance.c"
             line="66">Get the user readable message associate with the maintenance state.</doc>
        <source-position filename="snapd-glib/snapd-maintenance.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-maintenance.c"
               line="72">message text.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="maintenance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-maintenance.c"
                 line="68">a #SnapdMaintenance.</doc>
            <type name="Maintenance" c:type="SnapdMaintenance*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="kind"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_kind">
        <type name="MaintenanceKind"/>
      </property>
      <property name="message"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_message">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="MaintenanceClass"
            c:type="SnapdMaintenanceClass"
            glib:is-gtype-struct-for="Maintenance">
      <source-position filename="snapd-glib/snapd-maintenance.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="MaintenanceKind"
                 version="1.45"
                 glib:type-name="SnapdMaintenanceKind"
                 glib:get-type="snapd_maintenance_kind_get_type"
                 c:type="SnapdMaintenanceKind">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-maintenance.h"
           line="25">Type of snap.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_MAINTENANCE_KIND_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_MAINTENANCE_KIND_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-maintenance.h"
             line="27">an unknown maintenance kind is occurring.</doc>
      </member>
      <member name="daemon_restart"
              value="1"
              c:identifier="SNAPD_MAINTENANCE_KIND_DAEMON_RESTART"
              glib:nick="daemon-restart"
              glib:name="SNAPD_MAINTENANCE_KIND_DAEMON_RESTART">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-maintenance.h"
             line="28">the daemon is restarting.</doc>
      </member>
      <member name="system_restart"
              value="2"
              c:identifier="SNAPD_MAINTENANCE_KIND_SYSTEM_RESTART"
              glib:nick="system-restart"
              glib:name="SNAPD_MAINTENANCE_KIND_SYSTEM_RESTART">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-maintenance.h"
             line="29">the system is restarting.</doc>
      </member>
    </enumeration>
    <class name="MarkdownNode"
           c:symbol-prefix="markdown_node"
           c:type="SnapdMarkdownNode"
           version="1.48"
           parent="GObject.Object"
           glib:type-name="SnapdMarkdownNode"
           glib:get-type="snapd_markdown_node_get_type"
           glib:type-struct="MarkdownNodeClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-node.c"
           line="23">#SnapdMarkdownNode is an opaque data structure and can only be accessed
using the provided functions.</doc>
      <source-position filename="snapd-glib/snapd-markdown-node.h" line="23"/>
      <method name="get_children"
              c:identifier="snapd_markdown_node_get_children"
              glib:get-property="children"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.c"
             line="178">Get the child nodes of this node.</doc>
        <source-position filename="snapd-glib/snapd-markdown-node.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-node.c"
               line="184">child nodes or %NULL if none.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="MarkdownNode"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-node.c"
                 line="180">a #SnapdMarkdownNode.</doc>
            <type name="MarkdownNode" c:type="SnapdMarkdownNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node_type"
              c:identifier="snapd_markdown_node_get_node_type"
              glib:get-property="node-type"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.c"
             line="143">Get the type of node this is.</doc>
        <source-position filename="snapd-glib/snapd-markdown-node.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-node.c"
               line="149">a #SnapdMarkdownNodeType</doc>
          <type name="MarkdownNodeType" c:type="SnapdMarkdownNodeType"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-node.c"
                 line="145">a #SnapdMarkdownNode.</doc>
            <type name="MarkdownNode" c:type="SnapdMarkdownNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="snapd_markdown_node_get_text"
              glib:get-property="text"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.c"
             line="160">Gets the text associated with this node. This is only present for nodes of type
%SNAPD_MARKDOWN_NODE_TYPE_TEXT.</doc>
        <source-position filename="snapd-glib/snapd-markdown-node.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-node.c"
               line="167">a UTF-8 string or %NULL if none in this node.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-node.c"
                 line="162">a #SnapdMarkdownNode.</doc>
            <type name="MarkdownNode" c:type="SnapdMarkdownNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="children"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_children">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="node-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_node_type">
        <type name="MarkdownNodeType"/>
      </property>
      <property name="text"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_text">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="MarkdownNodeClass"
            c:type="SnapdMarkdownNodeClass"
            glib:is-gtype-struct-for="MarkdownNode">
      <source-position filename="snapd-glib/snapd-markdown-node.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="MarkdownNodeType"
                 version="1.48"
                 glib:type-name="SnapdMarkdownNodeType"
                 glib:get-type="snapd_markdown_node_type_get_type"
                 c:type="SnapdMarkdownNodeType">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-node.h"
           line="25">Type of markdown node.</doc>
      <member name="text"
              value="0"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_TEXT"
              glib:nick="text"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_TEXT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="27">a piece of text.</doc>
      </member>
      <member name="paragraph"
              value="1"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_PARAGRAPH"
              glib:nick="paragraph"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_PARAGRAPH">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="28">a paragraph.</doc>
      </member>
      <member name="unordered_list"
              value="2"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_UNORDERED_LIST"
              glib:nick="unordered-list"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_UNORDERED_LIST">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="29">an unordered list.</doc>
      </member>
      <member name="list_item"
              value="3"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_LIST_ITEM"
              glib:nick="list-item"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_LIST_ITEM">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="30">a list item.</doc>
      </member>
      <member name="code_block"
              value="4"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_CODE_BLOCK"
              glib:nick="code-block"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_CODE_BLOCK">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="31">a code block.</doc>
      </member>
      <member name="code_span"
              value="5"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_CODE_SPAN"
              glib:nick="code-span"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_CODE_SPAN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="32">a code span.</doc>
      </member>
      <member name="emphasis"
              value="6"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_EMPHASIS"
              glib:nick="emphasis"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_EMPHASIS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="33">emphasised text.</doc>
      </member>
      <member name="strong_emphasis"
              value="7"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_STRONG_EMPHASIS"
              glib:nick="strong-emphasis"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_STRONG_EMPHASIS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="34">strongly emphasised text.</doc>
      </member>
      <member name="url"
              value="8"
              c:identifier="SNAPD_MARKDOWN_NODE_TYPE_URL"
              glib:nick="url"
              glib:name="SNAPD_MARKDOWN_NODE_TYPE_URL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-node.h"
             line="35">a URL.</doc>
      </member>
    </enumeration>
    <class name="MarkdownParser"
           c:symbol-prefix="markdown_parser"
           c:type="SnapdMarkdownParser"
           version="1.48"
           parent="GObject.Object"
           glib:type-name="SnapdMarkdownParser"
           glib:get-type="snapd_markdown_parser_get_type"
           glib:type-struct="MarkdownParserClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-parser.c"
           line="37">#SnapdMarkdownParser is an opaque data structure and can only be accessed
using the provided functions.</doc>
      <source-position filename="snapd-glib/snapd-markdown-parser.h"
                       line="36"/>
      <constructor name="new"
                   c:identifier="snapd_markdown_parser_new"
                   version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-parser.c"
             line="820">Create an object to parse markdown text.</doc>
        <source-position filename="snapd-glib/snapd-markdown-parser.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-parser.c"
               line="826">a new #SnapdMarkdownParser</doc>
          <type name="MarkdownParser" c:type="SnapdMarkdownParser*"/>
        </return-value>
        <parameters>
          <parameter name="version" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="822">version supported by the client.</doc>
            <type name="MarkdownVersion" c:type="SnapdMarkdownVersion"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_preserve_whitespace"
              c:identifier="snapd_markdown_parser_get_preserve_whitespace"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-parser.c"
             line="855">Check if paragraph whitespace will be kept intact.</doc>
        <source-position filename="snapd-glib/snapd-markdown-parser.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-parser.c"
               line="861">%TRUE if paragraph whitespace is preserved.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="857">a #SnapdMarkdownParser.</doc>
            <type name="MarkdownParser" c:type="SnapdMarkdownParser*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="parse"
              c:identifier="snapd_markdown_parser_parse"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-parser.c"
             line="872">Convert text in snapd markdown format to markup.</doc>
        <source-position filename="snapd-glib/snapd-markdown-parser.h"
                         line="45"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-markdown-parser.c"
               line="879">Text split into blocks.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="MarkdownNode"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="874">a #SnapdMarkdownParser.</doc>
            <type name="MarkdownParser" c:type="SnapdMarkdownParser*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="875">text to parse.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_preserve_whitespace"
              c:identifier="snapd_markdown_parser_set_preserve_whitespace"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-parser.c"
             line="836">Consecutive paragraph whitespace (space, tabs, newlines) is automatically
combined into a single space character. This renders the paragraphs in the
form that HTML uses. If you need the original whitespace that the markdown
author wrote then set this to %FALSE.</doc>
        <source-position filename="snapd-glib/snapd-markdown-parser.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="parser" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="838">a #SnapdMarkdownParser.</doc>
            <type name="MarkdownParser" c:type="SnapdMarkdownParser*"/>
          </instance-parameter>
          <parameter name="preserve_whitespace" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-markdown-parser.c"
                 line="839">%TRUE if the parse should keep paragraph whitespace intact.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="MarkdownParserClass"
            c:type="SnapdMarkdownParserClass"
            glib:is-gtype-struct-for="MarkdownParser">
      <source-position filename="snapd-glib/snapd-markdown-parser.h"
                       line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="MarkdownVersion"
                 version="1.48"
                 glib:type-name="SnapdMarkdownVersion"
                 glib:get-type="snapd_markdown_version_get_type"
                 c:type="SnapdMarkdownVersion">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-parser.h"
           line="23">Version of markdown to parse. Picking a version will ensure only nodes of the expected type are decoded.</doc>
      <member name="0"
              value="0"
              c:identifier="SNAPD_MARKDOWN_VERSION_0"
              glib:nick="0"
              glib:name="SNAPD_MARKDOWN_VERSION_0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-markdown-parser.h"
             line="25">the initial version of Snap markdown.</doc>
      </member>
    </enumeration>
    <class name="Media"
           c:symbol-prefix="media"
           c:type="SnapdMedia"
           version="1.45"
           parent="GObject.Object"
           glib:type-name="SnapdMedia"
           glib:get-type="snapd_media_get_type"
           glib:type-struct="MediaClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-media.c"
           line="21">#SnapdMedia contains media information.</doc>
      <source-position filename="snapd-glib/snapd-media.h" line="23"/>
      <method name="get_height"
              c:identifier="snapd_media_get_height"
              glib:get-property="height"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-media.c"
             line="107">Get the height of the media in pixels or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-media.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-media.c"
               line="113">a height</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-media.c"
                 line="109">a #SnapdMedia.</doc>
            <type name="Media" c:type="SnapdMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media_type"
              c:identifier="snapd_media_get_media_type"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-media.c"
             line="56">Get the type for this media, e.g. "icon" or "screenshot".</doc>
        <source-position filename="snapd-glib/snapd-media.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-media.c"
               line="62">a type name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-media.c"
                 line="58">a #SnapdMedia.</doc>
            <type name="Media" c:type="SnapdMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="snapd_media_get_url"
              glib:get-property="url"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-media.c"
             line="73">Get the URL for this media, e.g. "http://example.com/media.png"</doc>
        <source-position filename="snapd-glib/snapd-media.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-media.c"
               line="79">a URL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-media.c"
                 line="75">a #SnapdMedia.</doc>
            <type name="Media" c:type="SnapdMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="snapd_media_get_width"
              glib:get-property="width"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-media.c"
             line="90">Get the width of the media in pixels or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-media.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-media.c"
               line="96">a width</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="media" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-media.c"
                 line="92">a #SnapdMedia.</doc>
            <type name="Media" c:type="SnapdMedia*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="height"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_height">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="url"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_url">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_width">
        <type name="guint" c:type="guint"/>
      </property>
    </class>
    <record name="MediaClass"
            c:type="SnapdMediaClass"
            glib:is-gtype-struct-for="Media">
      <source-position filename="snapd-glib/snapd-media.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Plug"
           c:symbol-prefix="plug"
           c:type="SnapdPlug"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdPlug"
           glib:get-type="snapd_plug_get_type"
           glib:type-struct="PlugClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-plug.c"
           line="28">#SnapdPlug contains information about a Snap plug.</doc>
      <source-position filename="snapd-glib/snapd-plug.h" line="23"/>
      <method name="get_attribute"
              c:identifier="snapd_plug_get_attribute"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="163">Get an attribute for this interface.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="170">an attribute value or %NULL if not set.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="165">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="166">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_names"
              c:identifier="snapd_plug_get_attribute_names"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="113">Get the names of the attributes this plug has.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="120">a string array of attribute names. Free with g_strfreev().</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="115">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="116">location to write number of attributes or %NULL if not required.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connected_slots"
              c:identifier="snapd_plug_get_connected_slots"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="231">Get the slots connected to this plug.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="237">an array of #SnapdSlotRef.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="SlotRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="233">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_connections"
              c:identifier="snapd_plug_get_connections"
              glib:get-property="connections"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="198">Get the connections being made with this plug.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_plug_get_connected_slots()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-plug.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="204">an array of #SnapdConnection.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Connection"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="200">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface"
              c:identifier="snapd_plug_get_interface"
              glib:get-property="interface"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="96">Get the name of the interface this plug provides.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="102">an interface name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="98">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="snapd_plug_get_label"
              glib:get-property="label"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="181">Get a human readable label for this plug.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="187">a label.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="183">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_plug_get_name"
              glib:get-property="name"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="62">Get the name of this plug.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="68">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="64">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_plug_get_snap"
              glib:get-property="snap"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="79">Get the snap this plug is on.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="85">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="81">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_attribute"
              c:identifier="snapd_plug_has_attribute"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug.c"
             line="145">Check if this plug has an attribute.</doc>
        <source-position filename="snapd-glib/snapd-plug.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug.c"
               line="152">%TRUE if this attribute exists.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="147">a #SnapdPlug.</doc>
            <type name="Plug" c:type="SnapdPlug*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug.c"
                 line="148">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="attributes"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <property name="connections"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_connections">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="interface"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_interface">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_label">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="PlugClass"
            c:type="SnapdPlugClass"
            glib:is-gtype-struct-for="Plug">
      <source-position filename="snapd-glib/snapd-plug.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="PlugRef"
           c:symbol-prefix="plug_ref"
           c:type="SnapdPlugRef"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdPlugRef"
           glib:get-type="snapd_plug_ref_get_type"
           glib:type-struct="PlugRefClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-plug-ref.c"
           line="22">#SnapdPlugRef contains the state of Snap a interface plug_ref.</doc>
      <source-position filename="snapd-glib/snapd-plug-ref.h" line="23"/>
      <method name="get_plug"
              c:identifier="snapd_plug_ref_get_plug"
              glib:get-property="plug"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug-ref.c"
             line="47">Get the name of the plug.</doc>
        <source-position filename="snapd-glib/snapd-plug-ref.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug-ref.c"
               line="53">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug-ref.c"
                 line="49">a #SnapdPlugRef.</doc>
            <type name="PlugRef" c:type="SnapdPlugRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_plug_ref_get_snap"
              glib:get-property="snap"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-plug-ref.c"
             line="64">Get the snap this plug is on.</doc>
        <source-position filename="snapd-glib/snapd-plug-ref.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-plug-ref.c"
               line="70">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="plug_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-plug-ref.c"
                 line="66">a #SnapdPlugRef.</doc>
            <type name="PlugRef" c:type="SnapdPlugRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="plug"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_plug">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="PlugRefClass"
            c:type="SnapdPlugRefClass"
            glib:is-gtype-struct-for="PlugRef">
      <source-position filename="snapd-glib/snapd-plug-ref.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Price"
           c:symbol-prefix="price"
           c:type="SnapdPrice"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdPrice"
           glib:get-type="snapd_price_get_type"
           glib:type-struct="PriceClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-price.c"
           line="22">#SnapdPrice contains pricing information.</doc>
      <source-position filename="snapd-glib/snapd-price.h" line="23"/>
      <method name="get_amount"
              c:identifier="snapd_price_get_amount"
              glib:get-property="amount"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-price.c"
             line="47">Get the currency amount for this price, e.g. 0.99.</doc>
        <source-position filename="snapd-glib/snapd-price.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-price.c"
               line="53">a currency amount.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="price" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-price.c"
                 line="49">a #SnapdPrice.</doc>
            <type name="Price" c:type="SnapdPrice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_currency"
              c:identifier="snapd_price_get_currency"
              glib:get-property="currency"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-price.c"
             line="64">Get the currency this price is in, e.g. "NZD".</doc>
        <source-position filename="snapd-glib/snapd-price.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-price.c"
               line="70">an ISO 4217 currency code.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="price" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-price.c"
                 line="66">a #SnapdPrice.</doc>
            <type name="Price" c:type="SnapdPrice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="amount"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_amount">
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="currency"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_currency">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="PriceClass"
            c:type="SnapdPriceClass"
            glib:is-gtype-struct-for="Price">
      <source-position filename="snapd-glib/snapd-price.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <callback name="ProgressCallback"
              c:type="SnapdProgressCallback"
              version="1.0">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="227">Signature for callback function used in
snapd_client_connect_interface_sync(),
snapd_client_disconnect_interface_async(),
snapd_client_install2_sync(),
snapd_client_refresh_sync(),
snapd_client_remove2_sync(),
snapd_client_enable_sync() and
snapd_client_disable_sync().</doc>
      <source-position filename="snapd-glib/snapd-client.h" line="245"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.h"
               line="229">a #SnapdClient</doc>
          <type name="Client" c:type="SnapdClient*"/>
        </parameter>
        <parameter name="change" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.h"
               line="230">a #SnapdChange describing the change in progress</doc>
          <type name="Change" c:type="SnapdChange*"/>
        </parameter>
        <parameter name="deprecated"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.h"
               line="231">A deprecated field that is no longer used.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="3">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-client.h"
               line="232">user data passed to the callback</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="PublisherValidation"
                 version="1.42"
                 glib:type-name="SnapdPublisherValidation"
                 glib:get-type="snapd_publisher_validation_get_type"
                 c:type="SnapdPublisherValidation">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-snap.h"
           line="75">State of validation for a publisher.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_PUBLISHER_VALIDATION_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_PUBLISHER_VALIDATION_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="77">the validation state of the publisher is unknown.</doc>
      </member>
      <member name="unproven"
              value="1"
              c:identifier="SNAPD_PUBLISHER_VALIDATION_UNPROVEN"
              glib:nick="unproven"
              glib:name="SNAPD_PUBLISHER_VALIDATION_UNPROVEN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="78">the publisher has not proven their identity.</doc>
      </member>
      <member name="verified"
              value="2"
              c:identifier="SNAPD_PUBLISHER_VALIDATION_VERIFIED"
              glib:nick="verified"
              glib:name="SNAPD_PUBLISHER_VALIDATION_VERIFIED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="79">the publisher is a star developer.</doc>
      </member>
      <member name="starred"
              value="3"
              c:identifier="SNAPD_PUBLISHER_VALIDATION_STARRED"
              glib:nick="starred"
              glib:name="SNAPD_PUBLISHER_VALIDATION_STARRED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="80">the publisher has had their identity verified.</doc>
      </member>
    </enumeration>
    <bitfield name="RemoveFlags"
              version="1.50"
              glib:type-name="SnapdRemoveFlags"
              glib:get-type="snapd_remove_flags_get_type"
              c:type="SnapdRemoveFlags">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="157">Flags to control remove options.</doc>
      <member name="none"
              value="0"
              c:identifier="SNAPD_REMOVE_FLAGS_NONE"
              glib:nick="none"
              glib:name="SNAPD_REMOVE_FLAGS_NONE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="159">No flags, default behaviour.</doc>
      </member>
      <member name="purge"
              value="1"
              c:identifier="SNAPD_REMOVE_FLAGS_PURGE"
              glib:nick="purge"
              glib:name="SNAPD_REMOVE_FLAGS_PURGE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="160">Don't save a snapshot the snap's data when removing.</doc>
      </member>
    </bitfield>
    <class name="Screenshot"
           c:symbol-prefix="screenshot"
           c:type="SnapdScreenshot"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdScreenshot"
           glib:get-type="snapd_screenshot_get_type"
           glib:type-struct="ScreenshotClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-screenshot.c"
           line="21">#SnapdScreenshot contains screenshot information.</doc>
      <source-position filename="snapd-glib/snapd-screenshot.h" line="23"/>
      <method name="get_height"
              c:identifier="snapd_screenshot_get_height"
              glib:get-property="height"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-screenshot.c"
             line="88">Get the height of the screenshot in pixels or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-screenshot.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-screenshot.c"
               line="94">a height</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-screenshot.c"
                 line="90">a #SnapdScreenshot.</doc>
            <type name="Screenshot" c:type="SnapdScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url"
              c:identifier="snapd_screenshot_get_url"
              glib:get-property="url"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-screenshot.c"
             line="54">Get the URL for this screenshot, e.g. "http://example.com/screenshot.png"</doc>
        <source-position filename="snapd-glib/snapd-screenshot.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-screenshot.c"
               line="60">a URL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-screenshot.c"
                 line="56">a #SnapdScreenshot.</doc>
            <type name="Screenshot" c:type="SnapdScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="snapd_screenshot_get_width"
              glib:get-property="width"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-screenshot.c"
             line="71">Get the width of the screenshot in pixels or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-screenshot.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-screenshot.c"
               line="77">a width</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="screenshot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-screenshot.c"
                 line="73">a #SnapdScreenshot.</doc>
            <type name="Screenshot" c:type="SnapdScreenshot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="height"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_height">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="url"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_url">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_width">
        <type name="guint" c:type="guint"/>
      </property>
    </class>
    <record name="ScreenshotClass"
            c:type="SnapdScreenshotClass"
            glib:is-gtype-struct-for="Screenshot">
      <source-position filename="snapd-glib/snapd-screenshot.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Slot"
           c:symbol-prefix="slot"
           c:type="SnapdSlot"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdSlot"
           glib:get-type="snapd_slot_get_type"
           glib:type-struct="SlotClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-slot.c"
           line="28">#SnapdSlot contains information about a Snap slot.</doc>
      <source-position filename="snapd-glib/snapd-slot.h" line="23"/>
      <method name="get_attribute"
              c:identifier="snapd_slot_get_attribute"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="163">Get an attribute for this interface.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="170">an attribute value or %NULL if not set.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="165">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="166">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_names"
              c:identifier="snapd_slot_get_attribute_names"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="113">Get the names of the attributes this slot has.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="120">a string array of attribute names. Free with g_strfreev().</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="115">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="116">location to write number of attributes or %NULL if not required.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_connected_plugs"
              c:identifier="snapd_slot_get_connected_plugs"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="231">Get the plugs connected to this slot.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="237">an array of #SnapdPlugRef.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="PlugRef"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="233">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_connections"
              c:identifier="snapd_slot_get_connections"
              glib:get-property="connections"
              version="1.0"
              deprecated="1"
              deprecated-version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="198">Get the connections being made with this slot.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_slot_get_connected_plugs()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-slot.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="204">an array of #SnapdConnection.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Connection"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="200">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interface"
              c:identifier="snapd_slot_get_interface"
              glib:get-property="interface"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="96">Get the name of the interface this slot accepts.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="102">an interface name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="98">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_label"
              c:identifier="snapd_slot_get_label"
              glib:get-property="label"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="181">Get a human readable label for this slot.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="187">a label.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="183">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_slot_get_name"
              glib:get-property="name"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="62">Get the name of this slot.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="68">a name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="64">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_slot_get_snap"
              glib:get-property="snap"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="79">Get the snap this slot is on.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="85">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="81">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_attribute"
              c:identifier="snapd_slot_has_attribute"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot.c"
             line="145">Check if this slot has an attribute.</doc>
        <source-position filename="snapd-glib/snapd-slot.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot.c"
               line="152">%TRUE if this attribute exists.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="147">a #SnapdSlot.</doc>
            <type name="Slot" c:type="SnapdSlot*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot.c"
                 line="148">an attribute name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="attributes"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.HashTable">
          <type name="gpointer" c:type="gpointer"/>
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </property>
      <property name="connections"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_connections">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="interface"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_interface">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="label"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_label">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="SlotClass"
            c:type="SnapdSlotClass"
            glib:is-gtype-struct-for="Slot">
      <source-position filename="snapd-glib/snapd-slot.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SlotRef"
           c:symbol-prefix="slot_ref"
           c:type="SnapdSlotRef"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdSlotRef"
           glib:get-type="snapd_slot_ref_get_type"
           glib:type-struct="SlotRefClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-slot-ref.c"
           line="22">#SnapdSlotRef contains the state of Snap a interface slot_ref.</doc>
      <source-position filename="snapd-glib/snapd-slot-ref.h" line="23"/>
      <method name="get_slot"
              c:identifier="snapd_slot_ref_get_slot"
              glib:get-property="slot"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot-ref.c"
             line="47">Get the name of the slot.</doc>
        <source-position filename="snapd-glib/snapd-slot-ref.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot-ref.c"
               line="53">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot-ref.c"
                 line="49">a #SnapdSlotRef.</doc>
            <type name="SlotRef" c:type="SnapdSlotRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap"
              c:identifier="snapd_slot_ref_get_snap"
              glib:get-property="snap"
              version="1.48">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-slot-ref.c"
             line="64">Get the snap this slot is on.</doc>
        <source-position filename="snapd-glib/snapd-slot-ref.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-slot-ref.c"
               line="70">a snap name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="slot_ref" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-slot-ref.c"
                 line="66">a #SnapdSlotRef.</doc>
            <type name="SlotRef" c:type="SnapdSlotRef*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="slot"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_slot">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="snap"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="SlotRefClass"
            c:type="SnapdSlotRefClass"
            glib:is-gtype-struct-for="SlotRef">
      <source-position filename="snapd-glib/snapd-slot-ref.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Snap"
           c:symbol-prefix="snap"
           c:type="SnapdSnap"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdSnap"
           glib:get-type="snapd_snap_get_type"
           glib:type-struct="SnapClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-snap.c"
           line="23">#SnapdSnap contains Snap metadata.</doc>
      <source-position filename="snapd-glib/snapd-snap.h" line="25"/>
      <method name="get_apps"
              c:identifier="snapd_snap_get_apps"
              glib:get-property="apps"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="121">Get the apps this snap provides.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="127">an array of #SnapdApp.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="App"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="123">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_base"
              c:identifier="snapd_snap_get_base"
              glib:get-property="base"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="138">Get the base snap this snap uses.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="96"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="144">a snap name or %NULL if not set.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="140">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_broken"
              c:identifier="snapd_snap_get_broken"
              glib:get-property="broken"
              version="1.25">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="155">Get the reason this snap is broken.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="98"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="161">an error string or %NULL if not broken.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="157">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_channel"
              c:identifier="snapd_snap_get_channel"
              glib:get-property="channel"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="172">Get the channel this snap is from, e.g. "stable".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="178">a channel name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="174">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_channels"
              c:identifier="snapd_snap_get_channels"
              glib:get-property="channels"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="189">Gets the available channels for this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="195">an array of #SnapdChannel.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Channel"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="191">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_common_ids"
              c:identifier="snapd_snap_get_common_ids"
              glib:get-property="common-ids"
              version="1.41">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="267">Get common IDs associated with this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="273">an array of common ids.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="269">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_confinement"
              c:identifier="snapd_snap_get_confinement"
              glib:get-property="confinement"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="284">Get the confinement this snap is using, e.g. %SNAPD_CONFINEMENT_STRICT.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="290">a #SnapdConfinement.</doc>
          <type name="Confinement" c:type="SnapdConfinement"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="286">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_contact"
              c:identifier="snapd_snap_get_contact"
              glib:get-property="contact"
              version="1.13">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="301">Get the means of contacting the snap developer, e.g. "mailto:developer@example.com".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="307">a contact URL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="303">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="snapd_snap_get_description"
              glib:get-property="description"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="318">Get a multi-line description of this snap. The description is formatted using
a subset of Markdown. To parse this use a #SnapdMarkdownParser.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="325">description text.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="320">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_developer"
              c:identifier="snapd_snap_get_developer"
              glib:get-property="developer"
              version="1.0"
              deprecated="1"
              deprecated-version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="336">Get the developer who created this snap.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_snap_get_publisher_username()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-snap.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="342">a developer name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="338">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_devmode"
              c:identifier="snapd_snap_get_devmode"
              glib:get-property="devmode"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="354">Get if this snap is running in developer mode.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="360">%TRUE if this snap is running in devmode.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="356">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_download_size"
              c:identifier="snapd_snap_get_download_size"
              glib:get-property="download-size"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="371">Get the download size of this snap or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="377">a byte count.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="373">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon"
              c:identifier="snapd_snap_get_icon"
              glib:get-property="icon"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="388">Get the icon for this Snap, either a URL or an absolute path to retrieve it
from snapd directly.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="395">a URL or path.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="390">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="snapd_snap_get_id"
              glib:get-property="id"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="406">Gets the unique ID for this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="412">an ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="408">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_install_date"
              c:identifier="snapd_snap_get_install_date"
              glib:get-property="install-date"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="423">Get the date this snap was installed or %NULL if unknown.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="125"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="429">a #GDateTime or %NULL.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="425">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_installed_size"
              c:identifier="snapd_snap_get_installed_size"
              glib:get-property="installed-size"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="440">Get the installed size of this snap or 0 if unknown.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="446">a byte count.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="442">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_jailmode"
              c:identifier="snapd_snap_get_jailmode"
              glib:get-property="jailmode"
              version="1.8">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="457">Get if this snap is running in enforced confinement (jail) mode.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="463">%TRUE if this snap is running in jailmode.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="459">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_license"
              c:identifier="snapd_snap_get_license"
              glib:get-property="license"
              version="1.19">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="474">Gets the SPDX license expression for this snap, e.g. "GPL-3.0+".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="131"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="480">an SPDX license expression or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="476">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_media"
              c:identifier="snapd_snap_get_media"
              glib:get-property="media"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="491">Get media that is associated with this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="497">an array of #SnapdMedia.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Media"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="493">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mounted_from"
              c:identifier="snapd_snap_get_mounted_from"
              glib:get-property="mounted-from"
              version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="508">Gets the path this snap is mounted from, which is a .snap file for installed
snaps and a directory for snaps in try mode.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="135"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="515">a file path or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="510">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="snapd_snap_get_name"
              glib:get-property="name"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="543">Get the name of this snap. This is used to reference this snap, e.g. for
installing / removing.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="550">a name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="545">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_prices"
              c:identifier="snapd_snap_get_prices"
              glib:get-property="prices"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="561">Get the prices that this snap can be purchased at.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="139"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="567">an array of #SnapdPrice.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Price"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="563">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_private"
              c:identifier="snapd_snap_get_private"
              glib:get-property="private"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="578">Get if this snap is only available to the developer.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="584">%TRUE if this is a private snap.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="580">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_publisher_display_name"
              c:identifier="snapd_snap_get_publisher_display_name"
              glib:get-property="publisher-display-name"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="595">Get the display name of the publisher who created this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="601">a publisher display name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="597">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_publisher_id"
              c:identifier="snapd_snap_get_publisher_id"
              glib:get-property="publisher-id"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="612">Get the ID of the publisher who created this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="618">a publisher ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="614">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_publisher_username"
              c:identifier="snapd_snap_get_publisher_username"
              glib:get-property="publisher-username"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="629">Get the username of the publisher who created this snap.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="635">a publisher username.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="631">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_publisher_validation"
              c:identifier="snapd_snap_get_publisher_validation"
              glib:get-property="publisher-validation"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="646">Get the validation for the snap publisher, e.g. %SNAPD_PUBLISHER_VALIDATION_VERIFIED</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="652">a #SnapdPublisherValidation.</doc>
          <type name="PublisherValidation" c:type="SnapdPublisherValidation"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="648">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_revision"
              c:identifier="snapd_snap_get_revision"
              glib:get-property="revision"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="663">Get the revision for this snap. The format of the string is undefined.
See also snapd_snap_get_version().</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="670">a revision string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="665">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_screenshots"
              c:identifier="snapd_snap_get_screenshots"
              glib:get-property="screenshots"
              version="1.0"
              deprecated="1"
              deprecated-version="1.45">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="681">Get the screenshots that are available for this snap.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_snap_get_media()</doc-deprecated>
        <source-position filename="snapd-glib/snapd-snap.h" line="153"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="687">an array of #SnapdScreenshot.</doc>
          <array name="GLib.PtrArray" c:type="GPtrArray*">
            <type name="Screenshot"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="683">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap_type"
              c:identifier="snapd_snap_get_snap_type"
              glib:get-property="snap-type"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="699">Get the type of snap, e.g. %SNAPD_SNAP_TYPE_APP</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="705">a #SnapdSnapType.</doc>
          <type name="SnapType" c:type="SnapdSnapType"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="701">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="snapd_snap_get_status"
              glib:get-property="status"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="716">Get the current status of this snap, e.g. SNAPD_SNAP_STATUS_INSTALLED.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="722">a #SnapdSnapStatus.</doc>
          <type name="SnapStatus" c:type="SnapdSnapStatus"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="718">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_store_url"
              c:identifier="snapd_snap_get_store_url"
              glib:get-property="store-url"
              version="1.60">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="733">Get a URL to the web snap store, e.g. "https://snapcraft.io/example"</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="159"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="739">a URL or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="735">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="snapd_snap_get_summary"
              glib:get-property="summary"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="750">Get a single line summary for this snap, e.g. "Best app ever!".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="756">a summary string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="752">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="snapd_snap_get_title"
              glib:get-property="title"
              version="1.14">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="526">Get the title for this snap. If not available use the snap name instead.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="163"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="532">a title or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="528">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tracking_channel"
              c:identifier="snapd_snap_get_tracking_channel"
              glib:get-property="tracking-channel"
              version="1.7">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="767">Get the channel that updates will be installed from, e.g. "stable".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="773">a channel name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="769">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tracks"
              c:identifier="snapd_snap_get_tracks"
              glib:get-property="tracks"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="784">Get the tracks that are available.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="167"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="790">an ordered array of track names.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="786">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_trymode"
              c:identifier="snapd_snap_get_trymode"
              glib:get-property="trymode"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="801">Get if this snap is running in try mode (installed locally and able to be
directly modified).</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="808">%TRUE if using trymode.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="803">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="snapd_snap_get_version"
              glib:get-property="version"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="819">Get the version for this snap. The format of the string is undefined.
See also snapd_snap_get_revision().</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="826">a version string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="821">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_website"
              c:identifier="snapd_snap_get_website"
              glib:get-property="website"
              version="1.50">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="837">Get the website of the snap developer, e.g. "http://example.com".</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="843">a website URL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="839">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="match_channel"
              c:identifier="snapd_snap_match_channel"
              version="1.22">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.c"
             line="221">Finds the available channel that best matches the given name.
If none matches %NULL is returned.</doc>
        <source-position filename="snapd-glib/snapd-snap.h" line="104"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-snap.c"
               line="229">an #SnapdChannel or %NULL.</doc>
          <type name="Channel" c:type="SnapdChannel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="snap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="223">a #SnapdSnap.</doc>
            <type name="Snap" c:type="SnapdSnap*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-snap.c"
                 line="224">a channel name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="apps"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_apps">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="base"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_base">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="broken"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_broken">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="channel"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_channel">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="channels"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_channels">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="common-ids"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_common_ids">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="confinement"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_confinement">
        <type name="Confinement"/>
      </property>
      <property name="contact"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_contact">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="description"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_description">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="developer"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_developer">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="devmode"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_devmode">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="download-size"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_download_size">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="icon"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_icon">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="install-date"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_install_date">
        <type name="GLib.DateTime"/>
      </property>
      <property name="installed-size"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_installed_size">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="jailmode"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_jailmode">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="license"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_license">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="media"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_media">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="mounted-from"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_mounted_from">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="prices"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_prices">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="private"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_private">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="publisher-display-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_publisher_display_name">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="publisher-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_publisher_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="publisher-username"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_publisher_username">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="publisher-validation"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_publisher_validation">
        <type name="PublisherValidation"/>
      </property>
      <property name="revision"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_revision">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="screenshots"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_screenshots">
        <array name="GLib.PtrArray">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </property>
      <property name="snap-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_snap_type">
        <type name="SnapType"/>
      </property>
      <property name="status"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_status">
        <type name="SnapStatus"/>
      </property>
      <property name="store-url"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_store_url">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_summary">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_title">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tracking-channel"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_tracking_channel">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="tracks"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_tracks">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="trymode"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_trymode">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_version">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="website"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_website">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="SnapClass"
            c:type="SnapdSnapClass"
            glib:is-gtype-struct-for="Snap">
      <source-position filename="snapd-glib/snapd-snap.h" line="25"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="SnapStatus"
                 version="1.0"
                 glib:type-name="SnapdSnapStatus"
                 glib:get-type="snapd_snap_status_get_type"
                 c:type="SnapdSnapStatus">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-snap.h"
           line="54">The current state of a snap.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_SNAP_STATUS_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_SNAP_STATUS_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="56">the snap state is unknown.</doc>
      </member>
      <member name="available"
              value="1"
              c:identifier="SNAPD_SNAP_STATUS_AVAILABLE"
              glib:nick="available"
              glib:name="SNAPD_SNAP_STATUS_AVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="57">the snap is available for installation.</doc>
      </member>
      <member name="priced"
              value="2"
              c:identifier="SNAPD_SNAP_STATUS_PRICED"
              glib:nick="priced"
              glib:name="SNAPD_SNAP_STATUS_PRICED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="58">the snap is available for purchase.</doc>
      </member>
      <member name="installed"
              value="3"
              c:identifier="SNAPD_SNAP_STATUS_INSTALLED"
              glib:nick="installed"
              glib:name="SNAPD_SNAP_STATUS_INSTALLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="59">the snap is installed but not active.</doc>
      </member>
      <member name="active"
              value="4"
              c:identifier="SNAPD_SNAP_STATUS_ACTIVE"
              glib:nick="active"
              glib:name="SNAPD_SNAP_STATUS_ACTIVE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="60">the snap is installed and active.</doc>
      </member>
    </enumeration>
    <enumeration name="SnapType"
                 version="1.0"
                 glib:type-name="SnapdSnapType"
                 glib:get-type="snapd_snap_type_get_type"
                 c:type="SnapdSnapType">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-snap.h"
           line="27">Type of snap.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_SNAP_TYPE_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_SNAP_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="29">the type of snap is unknown.</doc>
      </member>
      <member name="app"
              value="1"
              c:identifier="SNAPD_SNAP_TYPE_APP"
              glib:nick="app"
              glib:name="SNAPD_SNAP_TYPE_APP">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="30">the snap is an application.</doc>
      </member>
      <member name="kernel"
              value="2"
              c:identifier="SNAPD_SNAP_TYPE_KERNEL"
              glib:nick="kernel"
              glib:name="SNAPD_SNAP_TYPE_KERNEL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="31">the snap is a kernel.</doc>
      </member>
      <member name="gadget"
              value="3"
              c:identifier="SNAPD_SNAP_TYPE_GADGET"
              glib:nick="gadget"
              glib:name="SNAPD_SNAP_TYPE_GADGET">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="32">the snapd is a gadget.</doc>
      </member>
      <member name="os"
              value="4"
              c:identifier="SNAPD_SNAP_TYPE_OS"
              glib:nick="os"
              glib:name="SNAPD_SNAP_TYPE_OS">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="33">the snap is an operating system.</doc>
      </member>
      <member name="core"
              value="5"
              c:identifier="SNAPD_SNAP_TYPE_CORE"
              glib:nick="core"
              glib:name="SNAPD_SNAP_TYPE_CORE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="34">the snap is a core snap.</doc>
      </member>
      <member name="base"
              value="6"
              c:identifier="SNAPD_SNAP_TYPE_BASE"
              glib:nick="base"
              glib:name="SNAPD_SNAP_TYPE_BASE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="35">the snap is a base snap.</doc>
      </member>
      <member name="snapd"
              value="7"
              c:identifier="SNAPD_SNAP_TYPE_SNAPD"
              glib:nick="snapd"
              glib:name="SNAPD_SNAP_TYPE_SNAPD">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-snap.h"
             line="36">the snap is the snap daemon.</doc>
      </member>
    </enumeration>
    <enumeration name="SystemConfinement"
                 version="1.15"
                 glib:type-name="SnapdSystemConfinement"
                 glib:get-type="snapd_system_confinement_get_type"
                 c:type="SnapdSystemConfinement">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-system-information.h"
           line="25">Confinement used by a snap.</doc>
      <member name="unknown"
              value="0"
              c:identifier="SNAPD_SYSTEM_CONFINEMENT_UNKNOWN"
              glib:nick="unknown"
              glib:name="SNAPD_SYSTEM_CONFINEMENT_UNKNOWN">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.h"
             line="27">the confinement of the system is unknown.</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="SNAPD_SYSTEM_CONFINEMENT_STRICT"
              glib:nick="strict"
              glib:name="SNAPD_SYSTEM_CONFINEMENT_STRICT">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.h"
             line="28">the system supports strict confinement.</doc>
      </member>
      <member name="partial"
              value="2"
              c:identifier="SNAPD_SYSTEM_CONFINEMENT_PARTIAL"
              glib:nick="partial"
              glib:name="SNAPD_SYSTEM_CONFINEMENT_PARTIAL">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.h"
             line="29">the system supports partial confinement.</doc>
      </member>
    </enumeration>
    <class name="SystemInformation"
           c:symbol-prefix="system_information"
           c:type="SnapdSystemInformation"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdSystemInformation"
           glib:get-type="snapd_system_information_get_type"
           glib:type-struct="SystemInformationClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-system-information.c"
           line="22">#SnapdSystemInformation contains information about the system snapd is running on.</doc>
      <source-position filename="snapd-glib/snapd-system-information.h"
                       line="23"/>
      <method name="get_binaries_directory"
              c:identifier="snapd_system_information_get_binaries_directory"
              glib:get-property="binaries-directory"
              version="1.11">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="79">Get the directory snap binaries are stored, e.g. "/snap/bin".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="85">a directory.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="81">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_build_id"
              c:identifier="snapd_system_information_get_build_id"
              glib:get-property="build-id"
              version="1.40">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="96">Gets the unique build ID for the snap build, e.g. "efdd0b5e69b0742fa5e5bad0771df4d1df2459d1"</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="102">a build ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="98">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_confinement"
              c:identifier="snapd_system_information_get_confinement"
              glib:get-property="confinement"
              version="1.15">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="113">Get the level of confinement the system supports, e.g. %SNAPD_SYSTEM_CONFINEMENT_STRICT.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="119">a #SnapdSystemConfinement.</doc>
          <type name="SystemConfinement" c:type="SnapdSystemConfinement"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="115">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kernel_version"
              c:identifier="snapd_system_information_get_kernel_version"
              glib:get-property="kernel-version"
              version="1.11">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="130">Get the version of the kernel snapd is running on, e.g. "4.10.0-15-generic".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="136">a version string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="132">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_managed"
              c:identifier="snapd_system_information_get_managed"
              glib:get-property="managed"
              version="1.7">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="147">Get if snapd is running on a managed system.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="153">%TRUE if running on a managed system.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="149">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mount_directory"
              c:identifier="snapd_system_information_get_mount_directory"
              glib:get-property="mount-directory"
              version="1.11">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="164">Get the directory snaps are mounted, e.g. "/snap".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="170">a directory.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="166">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_on_classic"
              c:identifier="snapd_system_information_get_on_classic"
              glib:get-property="on-classic"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="181">Get if this system is a classic system.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="187">%TRUE if running on a classic system.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="183">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_id"
              c:identifier="snapd_system_information_get_os_id"
              glib:get-property="os-id"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="198">Get the operating system ID, e.g. "ubuntu".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="204">an operating system ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="200">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_os_version"
              c:identifier="snapd_system_information_get_os_version"
              glib:get-property="os-version"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="215">Get the operating system version, e.g. "16.04".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="221">a version string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="217">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_hold"
              c:identifier="snapd_system_information_get_refresh_hold"
              glib:get-property="refresh-hold"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="232">Get the time refreshes will be applied at, or %NULL if they are applied immediately.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="60"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="238">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="234">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_last"
              c:identifier="snapd_system_information_get_refresh_last"
              glib:get-property="refresh-last"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="249">Get the time the last refresh occurred, or %NULL if has not occurred.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="62"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="255">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="251">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_next"
              c:identifier="snapd_system_information_get_refresh_next"
              glib:get-property="refresh-next"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="266">Get the time the next refresh is scheduled for, or %NULL if none has been scheduled.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="64"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="272">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="268">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_schedule"
              c:identifier="snapd_system_information_get_refresh_schedule"
              glib:get-property="refresh-schedule"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="283">Get the schedule when snap refreshes will occur.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="66"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="289">a Snap refresh schedule string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="285">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_refresh_timer"
              c:identifier="snapd_system_information_get_refresh_timer"
              glib:get-property="refresh-timer"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="300">Get the timer that refreshes are running to.</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="306">a Snap refresh timer string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="302">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_sandbox_features"
              c:identifier="snapd_system_information_get_sandbox_features"
              glib:get-property="sandbox-features"
              version="1.42">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="317">Gets the sandbox features that snapd provides. Each backend in snapd provides
a list of features that it supports. For example, the "confinement-options"
backend may provide "classic", "devmode" and "strict".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="325">a hash table of string arrays keyed by backend name.</doc>
          <type name="GLib.HashTable" c:type="GHashTable*">
            <type name="utf8"/>
            <array>
              <type name="utf8"/>
            </array>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="319">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_series"
              c:identifier="snapd_system_information_get_series"
              glib:get-property="series"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="336">Get the series of snapd running, e.g. "16".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="342">a series string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="338">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_store"
              c:identifier="snapd_system_information_get_store"
              glib:get-property="store"
              version="1.7">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="353">Get the store being used by snapd, e.g. "Ubuntu"</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="74"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="359">a store id or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="355">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_version"
              c:identifier="snapd_system_information_get_version"
              glib:get-property="version"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-system-information.c"
             line="370">Get the version of snapd running, e.g. "2.11+ppa174-1".</doc>
        <source-position filename="snapd-glib/snapd-system-information.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-system-information.c"
               line="376">a version string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="system_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-system-information.c"
                 line="372">a #SnapdSystemInformation.</doc>
            <type name="SystemInformation" c:type="SnapdSystemInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="binaries-directory"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_binaries_directory">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="build-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_build_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="confinement"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_confinement">
        <type name="SystemConfinement"/>
      </property>
      <property name="kernel-version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_kernel_version">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="managed"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_managed">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mount-directory"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_mount_directory">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="on-classic"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_on_classic">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="os-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_os_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="os-version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_os_version">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="refresh-hold"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_refresh_hold">
        <type name="GLib.DateTime"/>
      </property>
      <property name="refresh-last"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_refresh_last">
        <type name="GLib.DateTime"/>
      </property>
      <property name="refresh-next"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_refresh_next">
        <type name="GLib.DateTime"/>
      </property>
      <property name="refresh-schedule"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_refresh_schedule">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="refresh-timer"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_refresh_timer">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="sandbox-features"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_sandbox_features">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="series"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_series">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="store"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_store">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="version"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_version">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="SystemInformationClass"
            c:type="SnapdSystemInformationClass"
            glib:is-gtype-struct-for="SystemInformation">
      <source-position filename="snapd-glib/snapd-system-information.h"
                       line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Task"
           c:symbol-prefix="task"
           c:type="SnapdTask"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="SnapdTask"
           glib:get-type="snapd_task_get_type"
           glib:type-struct="TaskClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-task.c"
           line="23">#SnapdTask contains progress information for a task in a Snap transaction.</doc>
      <source-position filename="snapd-glib/snapd-task.h" line="23"/>
      <method name="get_id"
              c:identifier="snapd_task_get_id"
              glib:get-property="id"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="63">Get the unique ID for this task.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="69">an ID.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="65">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kind"
              c:identifier="snapd_task_get_kind"
              glib:get-property="kind"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="84">Gets the kind of task this is.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="90">the kind of task.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="86">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress_done"
              c:identifier="snapd_task_get_progress_done"
              glib:get-property="progress-done"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="190">Get the the number of items completed in this task.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="196">a count.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="192">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress_label"
              c:identifier="snapd_task_get_progress_label"
              glib:get-property="progress-label"
              version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="169">Get the the label associated with the progress.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="175">a label string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="171">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress_total"
              c:identifier="snapd_task_get_progress_total"
              glib:get-property="progress-total"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="211">Get the the total number of items to be completed in this task.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="217">a count.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="213">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ready"
              c:identifier="snapd_task_get_ready"
              glib:get-property="ready"
              version="1.0"
              deprecated="1"
              deprecated-version="1.5">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="147">Get if this task is completed.</doc>
        <doc-deprecated xml:space="preserve">Use snapd_change_get_ready() instead.</doc-deprecated>
        <source-position filename="snapd-glib/snapd-task.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="155">%TRUE if this task is complete.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="149">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ready_time"
              c:identifier="snapd_task_get_ready_time"
              glib:get-property="ready-time"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="253">Get the time this task completed or %NULL if not yet completed.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="44"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="259">a #GDateTime or %NULL.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="255">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spawn_time"
              c:identifier="snapd_task_get_spawn_time"
              glib:get-property="spawn-time"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="232">Get the time this task started.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="238">a #GDateTime.</doc>
          <type name="GLib.DateTime" c:type="GDateTime*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="234">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status"
              c:identifier="snapd_task_get_status"
              glib:get-property="status"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="126">Get the status of the task.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="132">a status string.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="128">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_summary"
              c:identifier="snapd_task_get_summary"
              glib:get-property="summary"
              version="1.0">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-task.c"
             line="105">Get a human readable description of the task.</doc>
        <source-position filename="snapd-glib/snapd-task.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-task.c"
               line="111">a string describing the task.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="task" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-task.c"
                 line="107">a #SnapdTask.</doc>
            <type name="Task" c:type="SnapdTask*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="kind"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_kind">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="progress-done"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_progress_done">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="progress-label"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_progress_label">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="progress-total"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_progress_total">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="ready"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_ready">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ready-time"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_ready_time">
        <type name="GLib.DateTime"/>
      </property>
      <property name="spawn-time"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_spawn_time">
        <type name="GLib.DateTime"/>
      </property>
      <property name="status"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_status">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="summary"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_summary">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="TaskClass"
            c:type="SnapdTaskClass"
            glib:is-gtype-struct-for="Task">
      <source-position filename="snapd-glib/snapd-task.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ThemeStatus"
                 version="1.60"
                 glib:type-name="SnapdThemeStatus"
                 glib:get-type="snapd_theme_status_get_type"
                 c:type="SnapdThemeStatus">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.h"
           line="210">The status of a snap-packaged desktop theme.</doc>
      <member name="installed"
              value="1"
              c:identifier="SNAPD_THEME_STATUS_INSTALLED"
              glib:nick="installed"
              glib:name="SNAPD_THEME_STATUS_INSTALLED">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="212">the theme is installed.</doc>
      </member>
      <member name="available"
              value="2"
              c:identifier="SNAPD_THEME_STATUS_AVAILABLE"
              glib:nick="available"
              glib:name="SNAPD_THEME_STATUS_AVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="213">the theme is not installed but a package is available.</doc>
      </member>
      <member name="unavailable"
              value="3"
              c:identifier="SNAPD_THEME_STATUS_UNAVAILABLE"
              glib:nick="unavailable"
              glib:name="SNAPD_THEME_STATUS_UNAVAILABLE">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-client.h"
             line="214">the theme is not available.</doc>
      </member>
    </enumeration>
    <class name="UserInformation"
           c:symbol-prefix="user_information"
           c:type="SnapdUserInformation"
           version="1.3"
           parent="GObject.Object"
           glib:type-name="SnapdUserInformation"
           glib:get-type="snapd_user_information_get_type"
           glib:type-struct="UserInformationClass">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-user-information.c"
           line="22">#SnapdUserInformation contains information about a user account on the system
snapd is running on.</doc>
      <source-position filename="snapd-glib/snapd-user-information.h"
                       line="25"/>
      <method name="get_auth_data"
              c:identifier="snapd_user_information_get_auth_data"
              glib:get-property="auth-data"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-user-information.c"
             line="122">Get the email address for this account.</doc>
        <source-position filename="snapd-glib/snapd-user-information.h"
                         line="35"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-user-information.c"
               line="128">a #SnapdAuthData or %NULL if not set.</doc>
          <type name="AuthData" c:type="SnapdAuthData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-user-information.c"
                 line="124">a #SnapdUserInformation.</doc>
            <type name="UserInformation" c:type="SnapdUserInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_email"
              c:identifier="snapd_user_information_get_email"
              glib:get-property="email"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-user-information.c"
             line="88">Get the email address for this account.</doc>
        <source-position filename="snapd-glib/snapd-user-information.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-user-information.c"
               line="94">a email address.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-user-information.c"
                 line="90">a #SnapdUserInformation.</doc>
            <type name="UserInformation" c:type="SnapdUserInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_id"
              c:identifier="snapd_user_information_get_id"
              glib:get-property="id"
              version="1.26">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-user-information.c"
             line="54">Get the id for this account.</doc>
        <source-position filename="snapd-glib/snapd-user-information.h"
                         line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-user-information.c"
               line="60">a user id.</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-user-information.c"
                 line="56">a #SnapdUserInformation.</doc>
            <type name="UserInformation" c:type="SnapdUserInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ssh_keys"
              c:identifier="snapd_user_information_get_ssh_keys"
              glib:get-property="ssh-keys"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-user-information.c"
             line="105">Get the SSH keys added to this account.</doc>
        <source-position filename="snapd-glib/snapd-user-information.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-user-information.c"
               line="111">the names of the SSH keys.</doc>
          <array c:type="GStrv">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="user_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-user-information.c"
                 line="107">a #SnapdUserInformation.</doc>
            <type name="UserInformation" c:type="SnapdUserInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_username"
              c:identifier="snapd_user_information_get_username"
              glib:get-property="username"
              version="1.3">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-user-information.c"
             line="71">Get the local username for this account.</doc>
        <source-position filename="snapd-glib/snapd-user-information.h"
                         line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-user-information.c"
               line="77">a username.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="user_information"
                              transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="snapd-glib/snapd-user-information.c"
                 line="73">a #SnapdUserInformation.</doc>
            <type name="UserInformation" c:type="SnapdUserInformation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="auth-data"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_auth_data">
        <type name="AuthData"/>
      </property>
      <property name="email"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_email">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_id">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="ssh-keys"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_ssh_keys">
        <array>
          <type name="utf8"/>
        </array>
      </property>
      <property name="username"
                writable="1"
                construct-only="1"
                transfer-ownership="none"
                getter="get_username">
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="UserInformationClass"
            c:type="SnapdUserInformationClass"
            glib:is-gtype-struct-for="UserInformation">
      <source-position filename="snapd-glib/snapd-user-information.h"
                       line="25"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function name="error_quark"
              c:identifier="snapd_error_quark"
              moved-to="Error.quark"
              version="1.0">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-error.c"
           line="20">Gets the Snapd Error Quark.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-error.c"
             line="25">a #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="login_async"
              c:identifier="snapd_login_async"
              version="1.0"
              deprecated="1"
              deprecated-version="1.34">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-login.c"
           line="69">Asynchronously get authorization to install/remove snaps.
See snapd_login_sync() for more information.</doc>
      <doc-deprecated xml:space="preserve">Use snapd_client_login2_async()</doc-deprecated>
      <source-position filename="snapd-glib/snapd-login.h" line="31"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="username" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="71">username to log in with.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="password" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="72">password to log in with.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="otp"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="73">response to one-time password challenge.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="cancellable"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="74">a #GCancellable or %NULL.</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   scope="async"
                   closure="5">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="75">a #GAsyncReadyCallback to call when the request is satisfied.</doc>
          <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="76">the data to pass to callback function.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="login_finish"
              c:identifier="snapd_login_finish"
              version="1.0"
              deprecated="1"
              deprecated-version="1.34"
              throws="1">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-login.c"
           line="96">Complete login started with snapd_login_async().
See snapd_login_sync() for more information.</doc>
      <doc-deprecated xml:space="preserve">Use snapd_client_login2_finish()</doc-deprecated>
      <source-position filename="snapd-glib/snapd-login.h" line="38"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-login.c"
             line="104">a #SnapdAuthData or %NULL on error.</doc>
        <type name="AuthData" c:type="SnapdAuthData*"/>
      </return-value>
      <parameters>
        <parameter name="result" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="98">a #GAsyncResult.</doc>
          <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="login_sync"
              c:identifier="snapd_login_sync"
              version="1.0"
              deprecated="1"
              deprecated-version="1.34"
              throws="1">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-login.c"
           line="24">This call used to contact a D-Bus service to perform snapd authentication using
Polkit. This now just creates a #SnapdClient and does the call directly.</doc>
      <doc-deprecated xml:space="preserve">Use snapd_client_login2_sync()</doc-deprecated>
      <source-position filename="snapd-glib/snapd-login.h" line="25"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="snapd-glib/snapd-login.c"
             line="36">a #SnapdAuthData or %NULL on error.</doc>
        <type name="AuthData" c:type="SnapdAuthData*"/>
      </return-value>
      <parameters>
        <parameter name="username" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="26">username to log in with.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="password" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="27">password to log in with.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="otp"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="28">response to one-time password challenge.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="cancellable"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="snapd-glib/snapd-login.c"
               line="29">a #GCancellable or %NULL.</doc>
          <type name="Gio.Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="snapd-alias">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-alias.c"
           line="13">A #SnapdAlias represents an optional alias that can be used for an app.
Aliases can be queried using snapd_client_get_aliases_sync() and are used in
snapd_client_enable_aliases_sync(), snapd_client_disable_aliases_sync() and
snapd_client_reset_aliases_sync().</doc>
    </docsection>
    <docsection name="snapd-app">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-app.c"
           line="15">A #SnapdApp contains information about an application that snapd provides.
Apps are retrieved using snapd_snap_get_apps().</doc>
    </docsection>
    <docsection name="snapd-assertion">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-assertion.c"
           line="16">A #SnapdAssertion represents an digitally signed documents that express a
fact or policy by a particular authority about a particular object in the
snap universe. Assertions can be queried using
snapd_client_get_assertions_sync(). New assertions can be provided using
snapd_client_add_assertions_sync().</doc>
    </docsection>
    <docsection name="snapd-auth-data">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-auth-data.c"
           line="12">A #SnapdAuthData contains authorization data to communicate with snapd.
Authenticating with snapd_login_sync() or snapd_client_login_sync() returns
authorization data that can be used for requests by calling
snapd_client_set_auth_data().

It is recommended that the data is securely stored between sessions so
authentication is not required to be repeated. The authorization data is
made up of printable strings that can be easily written to a file/database.</doc>
    </docsection>
    <docsection name="snapd-change">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-change.c"
           line="14">A #SnapdChange contains information on how a request is progressing. Progress
information is returned in a #SnapdProgressCallback.</doc>
    </docsection>
    <docsection name="snapd-channel">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-channel.c"
           line="13">A #SnapdChannel contains the metadata for a given snap channel as returned
using snapd_snap_get_channels().</doc>
    </docsection>
    <docsection name="snapd-client">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.c"
           line="54">A #SnapdClient is the means of talking to snapd.

To communicate with snapd create a client with snapd_client_new() then
send requests.

Some requests require authorization which can be set with
snapd_client_set_auth_data().</doc>
    </docsection>
    <docsection name="snapd-connection">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-connection.c"
           line="14">A #SnapdConnection contains information about how a #SnapdPlug is connected
to a #SnapdSlot. Connections are queried using snapd_client_get_connections_sync().</doc>
    </docsection>
    <docsection name="snapd-error">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-error.c"
           line="12">Error code definitions for various snapd operations.</doc>
    </docsection>
    <docsection name="snapd-icon">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-icon.c"
           line="14">A #SnapdIcon contains the icon data for a given snap. Icons can be requested
using snapd_client_get_icon_sync().</doc>
    </docsection>
    <docsection name="snapd-interface">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-interface.c"
           line="14">A #SnapdInterface represents information about a particular
interface type and the related plugs and slots provided by snaps on
the system.

Available interfaces can be queried using
snapd_client_get_interfaces2_sync().</doc>
    </docsection>
    <docsection name="snapd-login">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-login.c"
           line="16">Deprecated methods of authenticating with snapd.</doc>
    </docsection>
    <docsection name="snapd-maintenance">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-maintenance.c"
           line="15">A #SnapdMaintenance contains maintenance information for the snapd daemon.
The current maintenance information can be retrieved using snapd_client_get_maintenance ().</doc>
    </docsection>
    <docsection name="snapd-markdown-node">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-node.c"
           line="15">A #SnapdMarkdownNode represents a markdown node extracted from text. See #SnapdMarkdownParser for more information.</doc>
    </docsection>
    <docsection name="snapd-markdown-parser">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-markdown-parser.c"
           line="16">A #SnapdMarkdownParser parses text formatted in markdown; for example the text returned by snapd_snap_get_description ().

Snap supports the following subset of CommonMark (https://commonmark.org):
- Indented Code Blocks
- Paragraphs
- Blank Lines
- Unordered Lists
- Backslash escapes
- Code spans

In addition text that contains URLs are converted into links.

Use snapd_markdown_parser_parse () to convert text into a tree of
#SnapdMarkdownNode that you can then process to display in your client.</doc>
    </docsection>
    <docsection name="snapd-media">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-media.c"
           line="12">A #SnapdMedia represents media (icons, screenshots etc) that are associated with a snap.
Snap media can be queried using snapd_snap_get_media().</doc>
    </docsection>
    <docsection name="snapd-plug">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-plug.c"
           line="16">A #SnapdPlug represents a part of a snap that can be connected to a
#SnapdSlot on another snap. Available plugs can be queried using
snapd_client_get_interfaces_sync(). Plugs can be connected / disconnected
using snapd_client_connect_interface_sync() and
snapd_client_disconnect_interface_sync().</doc>
    </docsection>
    <docsection name="snapd-plug-ref">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-plug-ref.c"
           line="14">A #SnapdPlugRef contains a reference to a plug.</doc>
    </docsection>
    <docsection name="snapd-price">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-price.c"
           line="12">A #SnapdPrice represents an amount of money required to purchase a snap.
Prices can be queried using snapd_snap_get_prices() and are used in
snapd_client_buy_sync().</doc>
    </docsection>
    <docsection name="snapd-screenshot">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-screenshot.c"
           line="12">A #SnapdScreenshot represents a screenshot that shows a snap.
Screenshots can be queried using snapd_snap_get_screenshots().</doc>
    </docsection>
    <docsection name="snapd-slot">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-slot.c"
           line="16">A #SnapdSlot represents a part of a snap that can be connected to by one or
more #SnapdPlug from other snaps. Available slots can be queried using
snapd_client_get_interfaces_sync(). Plugs can be connected / disconnected
using snapd_client_connect_interface_sync() and
snapd_client_disconnect_interface_sync().</doc>
    </docsection>
    <docsection name="snapd-slot-ref">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-slot-ref.c"
           line="14">A #SnapdSlotRef contains a reference to a slot.</doc>
    </docsection>
    <docsection name="snapd-snap">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-snap.c"
           line="13">A #SnapdSnap contains the metadata for a given snap. Snap metadata can be
retrieved using snapd_client_list_sync(), snapd_client_list_one_sync() or
snapd_client_find_sync().</doc>
    </docsection>
    <docsection name="snapd-system-information">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-system-information.c"
           line="13">A #SnapdSystemInformation object contains the system information returned
from snapd. It is requested using snapd_client_get_system_information_sync().</doc>
    </docsection>
    <docsection name="snapd-task">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-task.c"
           line="15">A #SnapdTask contains information on a task in a #SnapdChange.</doc>
    </docsection>
    <docsection name="snapd-user-information">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-user-information.c"
           line="12">A #SnapdUserInformation object contains the information about local users
created using snapd_client_create_user_sync() and
snapd_client_create_users_sync().</doc>
    </docsection>
    <docsection name="snapd-version">
      <doc xml:space="preserve"
           filename="snapd-glib/snapd-client.c"
           line="82">Programs can check if snapd-glib feature is enabled by checking for the
existence of a define called SNAPD_GLIB_VERSION_&amp;lt;version&amp;gt;, i.e.

|[&lt;!-- language="C" --&gt;
#ifdef SNAPD_GLIB_VERSION_1_14
confinement = snapd_system_information_get_confinement (info);
#endif
]|</doc>
    </docsection>
  </namespace>
</repository>
