<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Atk" version="1.0"/>
  <include name="Cogl" version="6"/>
  <include name="CoglPango" version="6"/>
  <include name="GL" version="1.0"/>
  <include name="GObject" version="2.0"/>
  <include name="Json" version="1.0"/>
  <include name="cairo" version="1.0"/>
  <package name="mutter-clutter-6"/>
  <c:include name="clutter/clutter.h"/>
  <namespace name="Clutter"
             version="6"
             shared-library="libmutter-clutter-6.so.0"
             c:identifier-prefixes="Clutter"
             c:symbol-prefixes="clutter">
    <alias name="Matrix" c:type="ClutterMatrix">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="105">A type representing a 4x4 matrix.

It is identicaly to #CoglMatrix.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="93"/>
      <type name="Cogl.Matrix" c:type="CoglMatrix"/>
    </alias>
    <function-macro name="ACTION"
                    c:identifier="CLUTTER_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTION_CLASS"
                    c:identifier="CLUTTER_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTION_GET_CLASS"
                    c:identifier="CLUTTER_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR"
                    c:identifier="CLUTTER_ACTOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="48"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_BOX_INIT"
                    c:identifier="CLUTTER_ACTOR_BOX_INIT"
                    version="1.10"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="149">A simple macro for initializing a #ClutterActorBox when declaring
it, e.g.:

|[
  ClutterActorBox box = CLUTTER_ACTOR_BOX_INIT (0, 0, 400, 600);
]|</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="165"/>
      <parameters>
        <parameter name="x_1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="151">the X coordinate of the top left corner</doc>
        </parameter>
        <parameter name="y_1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="152">the Y coordinate of the top left corner</doc>
        </parameter>
        <parameter name="x_2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="153">the X coordinate of the bottom right corner</doc>
        </parameter>
        <parameter name="y_2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="154">the Y coordinate of the bottom right corner</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_CLASS"
                    c:identifier="CLUTTER_ACTOR_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="49"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_GET_CLASS"
                    c:identifier="CLUTTER_ACTOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="52"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_IS_MAPPED"
                    c:identifier="CLUTTER_ACTOR_IS_MAPPED"
                    version="0.2"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.c"
           line="530">Evaluates to %TRUE if the %CLUTTER_ACTOR_MAPPED flag is set.

The mapped state is set when the actor is visible and all its parents up
to a top-level (e.g. a #ClutterStage) are visible, realized, and mapped.

This check can be used to see if an actor is going to be painted, as only
actors with the %CLUTTER_ACTOR_MAPPED flag set are going to be painted.

The %CLUTTER_ACTOR_MAPPED flag is managed by Clutter itself, and it should
not be checked directly; instead, the recommended usage is to connect a
handler on the #GObject::notify signal for the #ClutterActor:mapped
property of #ClutterActor, and check the presence of
the %CLUTTER_ACTOR_MAPPED flag on state changes.

It is also important to note that Clutter may delay the changes of
the %CLUTTER_ACTOR_MAPPED flag on top-levels due to backend-specific
limitations, or during the reparenting of an actor, to optimize
unnecessary (and potentially expensive) state changes.</doc>
      <doc-deprecated xml:space="preserve">Use clutter_actor_is_mapped() or the #ClutterActor:mapped
  property instead of this macro.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="84"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="532">a #ClutterActor</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_IS_REACTIVE"
                    c:identifier="CLUTTER_ACTOR_IS_REACTIVE"
                    version="0.6"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.c"
           line="601">Evaluates to %TRUE if the %CLUTTER_ACTOR_REACTIVE flag is set.

Only reactive actors will receive event-related signals.</doc>
      <doc-deprecated xml:space="preserve">Use clutter_actor_get_reactive() or the
  #ClutterActor:reactive property instead of this macro.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="96"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="603">a #ClutterActor</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_IS_REALIZED"
                    c:identifier="CLUTTER_ACTOR_IS_REALIZED"
                    version="0.2"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.c"
           line="559">Evaluates to %TRUE if the %CLUTTER_ACTOR_REALIZED flag is set.

The realized state has an actor-dependant interpretation. If an
actor wants to delay allocating resources until it is attached to a
stage, it may use the realize state to do so. However it is
perfectly acceptable for an actor to allocate Cogl resources before
being realized because there is only one drawing context used by Clutter
so any resources will work on any stage.  If an actor is mapped it
must also be realized, but an actor can be realized and unmapped
(this is so hiding an actor temporarily doesn't do an expensive
unrealize/realize).

To be realized an actor must be inside a stage, and all its parents
must be realized.</doc>
      <doc-deprecated xml:space="preserve">Use clutter_actor_is_realized() or the #ClutterActor:realized
  property instead of this macro.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="88"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="561">a #ClutterActor</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_IS_VISIBLE"
                    c:identifier="CLUTTER_ACTOR_IS_VISIBLE"
                    version="0.2"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.c"
           line="584">Evaluates to %TRUE if the actor has been shown, %FALSE if it's hidden.
Equivalent to the ClutterActor::visible object property.

Note that an actor is only painted onscreen if it's mapped, which
means it's visible, and all its parents are visible, and one of the
parents is a toplevel stage; see also %CLUTTER_ACTOR_IS_MAPPED.</doc>
      <doc-deprecated xml:space="preserve">Use clutter_actor_is_visible() or the #ClutterActor:visible
  property instead of this macro.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="92"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="586">a #ClutterActor</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_META"
                    c:identifier="CLUTTER_ACTOR_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_META_CLASS"
                    c:identifier="CLUTTER_ACTOR_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_META_GET_CLASS"
                    c:identifier="CLUTTER_ACTOR_META_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_NODE"
                    c:identifier="CLUTTER_ACTOR_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="147"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_SET_FLAGS"
                    c:identifier="CLUTTER_ACTOR_SET_FLAGS"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="54">Sets the given flags on a #ClutterActor</doc>
      <doc-deprecated xml:space="preserve">Changing flags directly is heavily discouraged in
  newly written code. #ClutterActor will take care of setting the
  internal state.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="65"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="56">a #ClutterActor</doc>
        </parameter>
        <parameter name="f">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="57">the #ClutterActorFlags to set</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ACTOR_UNSET_FLAGS"
                    c:identifier="CLUTTER_ACTOR_UNSET_FLAGS"
                    introspectable="0"
                    deprecated="1"
                    deprecated-version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="69">Unsets the given flags on a #ClutterActor</doc>
      <doc-deprecated xml:space="preserve">Changing flags directly is heavily discouraged in
  newly written code. #ClutterActor will take care of unsetting the
  internal state.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="80"/>
      <parameters>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="71">a #ClutterActor</doc>
        </parameter>
        <parameter name="f">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="72">the #ClutterActorFlags to unset</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ALIGN_CONSTRAINT"
                    c:identifier="CLUTTER_ALIGN_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ALPHA"
                    c:identifier="CLUTTER_ALPHA"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ALPHA_CLASS"
                    c:identifier="CLUTTER_ALPHA_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ALPHA_GET_CLASS"
                    c:identifier="CLUTTER_ALPHA_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANIMATION"
                    c:identifier="CLUTTER_ANIMATION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANIMATION_CLASS"
                    c:identifier="CLUTTER_ANIMATION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ANIMATION_GET_CLASS"
                    c:identifier="CLUTTER_ANIMATION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Action"
           c:symbol-prefix="action"
           c:type="ClutterAction"
           version="1.4"
           parent="ActorMeta"
           abstract="1"
           glib:type-name="ClutterAction"
           glib:get-type="clutter_action_get_type"
           glib:type-struct="ActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-action.h"
           line="45">The #ClutterAction structure contains only private data and
should be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="79"/>
      <field name="parent_instance" readable="0" private="1">
        <type name="ActorMeta" c:type="ClutterActorMeta"/>
      </field>
    </class>
    <record name="ActionClass"
            c:type="ClutterActionClass"
            glib:is-gtype-struct-for="Action"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-action.h"
           line="59">The ClutterActionClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="79"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorMetaClass" c:type="ClutterActorMetaClass"/>
      </field>
      <field name="_clutter_action1" introspectable="0">
        <callback name="_clutter_action1">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action2" introspectable="0">
        <callback name="_clutter_action2">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="72"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action3" introspectable="0">
        <callback name="_clutter_action3">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action4" introspectable="0">
        <callback name="_clutter_action4">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action5" introspectable="0">
        <callback name="_clutter_action5">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action6" introspectable="0">
        <callback name="_clutter_action6">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action7" introspectable="0">
        <callback name="_clutter_action7">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_action8" introspectable="0">
        <callback name="_clutter_action8">
          <source-position filename="../clutter/clutter/clutter-action.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="Actor"
           c:symbol-prefix="actor"
           c:type="ClutterActor"
           parent="GObject.InitiallyUnowned"
           glib:type-name="ClutterActor"
           glib:get-type="clutter_actor_get_type"
           glib:type-struct="ActorClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="121">Base class for actors.</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="307"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new" c:identifier="clutter_actor_new" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8887">Creates a new #ClutterActor.

A newly created actor has a floating reference, which will be sunk
when it is added to another actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="334"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8895">the newly created #ClutterActor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <virtual-method name="allocate" invoker="allocate" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10318">Assigns the size of a #ClutterActor from the given @box.

This function should only be called on the children of an actor when
overriding the #ClutterActorClass.allocate() virtual function.

This function will adjust the stored allocation to take into account
the alignment flags set in the #ClutterActor:x-align and
#ClutterActor:y-align properties, as well as the margin values set in
the #ClutterActor:margin-top, #ClutterActor:margin-right,
#ClutterActor:margin-bottom, and #ClutterActor:margin-left properties.

This function will respect the easing state of the #ClutterActor and
interpolate between the current allocation and the new one if the
easing state duration is a positive value.

Actors can know from their allocation box whether they have moved
with respect to their parent actor. The @flags parameter describes
additional information about the allocation, for instance whether
the parent has moved with respect to the stage, for example because
a grandparent's origin has moved.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="255"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10320">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10321">new allocation of the actor, in parent-relative coordinates</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10322">flags that control the allocation</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="apply_transform">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="260"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type name="Matrix" c:type="ClutterMatrix*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="button_press_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="266"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="ButtonEvent" c:type="ClutterButtonEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="button_release_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="268"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="ButtonEvent" c:type="ClutterButtonEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="captured_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="282"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="destroy" invoker="destroy">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8905">Destroys an actor.  When an actor is destroyed, it will break any
references it holds to other objects.  If the actor is inside a
container, the actor will be removed.

When you destroy a container, its children will be destroyed as well.

Note: you cannot destroy the #ClutterStage returned by
clutter_stage_get_default().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="238"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8907">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enter_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="278"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="CrossingEvent" c:type="ClutterCrossingEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="264"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_accessible" invoker="get_accessible">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6288">Returns the accessible object that describes the actor to an
assistive technology.

If no class-specific #AtkObject implementation is available for the
actor instance in question, it will inherit an #AtkObject
implementation from the first ancestor class for which such an
implementation is defined.

The documentation of the &lt;ulink
url="http://developer.gnome.org/doc/API/2.0/atk/index.html"&gt;ATK&lt;/ulink&gt;
library contains more information about accessible objects and
their uses.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="290"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="6305">the #AtkObject associated with @actor</doc>
          <type name="Atk.Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="6290">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_paint_volume">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="292"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="volume" transfer-ownership="none">
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferred_height"
                      invoker="get_preferred_height"
                      version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9923">Computes the requested minimum and natural heights for an actor,
or if they are already computed, returns the cached values.

An actor may not get its request - depending on the layout
manager that's in effect.

A request should not incorporate the actor's scale or anchor point;
those transformations do not affect layout, only rendering.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="251"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9925">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="for_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9926">available width to assume in computing desired height,
  or a negative value to indicate that no width is defined</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9928">return location for minimum height,
  or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9930">return location for natural
  height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferred_width"
                      invoker="get_preferred_width"
                      version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9757">Computes the requested minimum and natural widths for an actor,
optionally depending on the specified height, or if they are
already computed, returns the cached values.

An actor may not get its request - depending on the layout
manager that's in effect.

A request should not incorporate the actor's scale or anchor point;
those transformations do not affect layout, only rendering.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9759">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="for_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9760">available height when computing the preferred width,
  or a negative value to indicate that no height is defined</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9762">return location for minimum width,
  or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9764">return location for the natural
  width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="has_accessible" invoker="has_accessible">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="302"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="has_overlaps" invoker="has_overlaps" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17946">Asks the actor's implementation whether it may contain overlapping
primitives.

For example; Clutter may use this to determine whether the painting
should be redirected to an offscreen buffer to correctly implement
the opacity property.

Custom actors can override the default response by implementing the
#ClutterActorClass.has_overlaps() virtual function. See
clutter_actor_set_offscreen_redirect() for more information.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="295"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17961">%TRUE if the actor may have overlapping primitives, and
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17948">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide" invoker="hide">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2007">Flags an actor to be hidden. A hidden actor will not be
rendered on the stage.

Actors are visible by default.

If this function is called on an actor without a parent, the
#ClutterActor:show-on-set-parent property will be set to %FALSE
as a side-effect.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="227"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2009">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide_all">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="key_focus_in">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="284"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="key_focus_out">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="285"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="key_press_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="272"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="KeyEvent" c:type="ClutterKeyEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="key_release_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="274"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="KeyEvent" c:type="ClutterKeyEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="leave_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="280"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="CrossingEvent" c:type="ClutterCrossingEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="map" invoker="map" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1663">Sets the %CLUTTER_ACTOR_MAPPED flag on the actor and possibly maps
and realizes its children if they are visible. Does nothing if the
actor is not visible.

Calling this function is strongly disencouraged: the default
implementation of #ClutterActorClass.map() will map all the children
of an actor when mapping its parent.

When overriding map, it is mandatory to chain up to the parent
implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="231"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1665">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="motion_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="276"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="MotionEvent" c:type="ClutterMotionEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint" invoker="paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="3934">Renders the actor to display.

This function should not be called directly by applications.
Call clutter_actor_queue_redraw() to queue paints, instead.

This function is context-aware, and will either cause a
regular paint or a pick paint.

This function will emit the #ClutterActor::paint signal or
the #ClutterActor::pick signal, depending on the context.

This function does not paint the actor if the actor is set to 0,
unless it is performing a pick paint.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="233"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3936">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint_node">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="297"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="root" transfer-ownership="none">
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parent_set">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="old_parent" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pick" invoker="pick">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4245">Asks @actor to perform a pick.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="239"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4247">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="queue_redraw">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="242"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="leaf_that_queued" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="paint_volume" transfer-ownership="none">
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="queue_relayout"
                      invoker="queue_relayout"
                      version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9366">Indicates that the actor's size request or other layout-affecting
properties may have changed. This function is used inside #ClutterActor
subclass implementations, not by applications directly.

Queueing a new layout automatically queues a redraw as well.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="287"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9368">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="realize"
                      invoker="realize"
                      deprecated="1"
                      deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2069">Realization informs the actor that it is attached to a stage. It
can use this to allocate resources if it wanted to delay allocation
until it would be rendered. However it is perfectly acceptable for
an actor to create resources before being realized because Clutter
only ever has a single rendering context so that actor is free to
be moved from one stage to another.

This function does nothing if the actor is already realized.

Because a realized actor must have realized parent actors, calling
clutter_actor_realize() will also realize all parents of the actor.

This function does not realize child actors, except in the special
case that realizing the stage, when the stage is visible, will
suddenly map (and thus realize) the children of the stage.</doc>
        <doc-deprecated xml:space="preserve">Actors are automatically realized, and nothing
  requires explicit realization.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2071">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="scroll_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="270"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="ScrollEvent" c:type="ClutterScrollEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show" invoker="show">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1881">Flags an actor to be displayed. An actor that isn't shown will not
be rendered on the stage.

Actors are visible by default.

If this function is called on an actor without a parent, the
#ClutterActor:show-on-set-parent will be set to %TRUE as a side
effect.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="225"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1883">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_all"
                      invoker="show_all"
                      version="0.2"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1961">Calls clutter_actor_show() on all children of an actor (if any).</doc>
        <doc-deprecated xml:space="preserve">Actors are visible by default</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="226"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1963">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="touch_event">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="300"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="TouchEvent" c:type="ClutterTouchEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmap" invoker="unmap" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1764">Unsets the %CLUTTER_ACTOR_MAPPED flag on the actor and possibly
unmaps its children if they were mapped.

Calling this function is not encouraged: the default #ClutterActor
implementation of #ClutterActorClass.unmap() will also unmap any
eventual children by default when their parent is unmapped.

When overriding #ClutterActorClass.unmap(), it is mandatory to
chain up to the parent implementation.

It is important to note that the implementation of the
#ClutterActorClass.unmap() virtual function may be called after
the #ClutterActorClass.destroy() or the #GObjectClass.dispose()
implementation, but it is guaranteed to be called before the
#GObjectClass.finalize() implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1766">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unrealize"
                      invoker="unrealize"
                      deprecated="1"
                      deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2178">Unrealization informs the actor that it may be being destroyed or
moved to another stage. The actor may want to destroy any
underlying graphics resources at this point. However it is
perfectly acceptable for it to retain the resources until the actor
is destroyed because Clutter only ever uses a single rendering
context and all of the graphics resources are valid on any stage.

Because mapped actors must be realized, actors may not be
unrealized if they are mapped. This function hides the actor to be
sure it isn't mapped, an application-visible side effect that you
may not be expecting.

This function should not be called by application code.

This function should not really be in the public API, because
there isn't a good reason to call it. ClutterActor will already
unrealize things for you when it's important to do so.

If you were using clutter_actor_unrealize() in a dispose
implementation, then don't, just chain up to ClutterActor's
dispose.

If you were using clutter_actor_unrealize() to implement
unrealizing children of your container, then don't, ClutterActor
will already take care of that.</doc>
        <doc-deprecated xml:space="preserve">Actors are automatically unrealized, and nothing
  requires explicit realization.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="230"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2180">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_action"
              c:identifier="clutter_actor_add_action"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16744">Adds @action to the list of actions applied to @self

A #ClutterAction can only belong to one actor at a time

The #ClutterActor will hold a reference on @action until either
clutter_actor_remove_action() or clutter_actor_clear_actions()
is called</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16746">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16747">a #ClutterAction</doc>
            <type name="Action" c:type="ClutterAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_action_with_name"
              c:identifier="clutter_actor_add_action_with_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16781">A convenience function for setting the name of a #ClutterAction
while adding it to the list of actions applied to @self

This function is the logical equivalent of:

|[&lt;!-- language="C" --&gt;
  clutter_actor_meta_set_name (CLUTTER_ACTOR_META (action), name);
  clutter_actor_add_action (self, action);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16783">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16784">the name to set on the action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16785">a #ClutterAction</doc>
            <type name="Action" c:type="ClutterAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_child"
              c:identifier="clutter_actor_add_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13287">Adds @child to the children of @self.

This function will acquire a reference on @child that will only
be released when calling clutter_actor_remove_child().

This function will take into consideration the #ClutterActor:depth
of @child, and will keep the list of children sorted.

This function will emit the #ClutterContainer::actor-added signal
on @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="683"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13289">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13290">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_constraint"
              c:identifier="clutter_actor_add_constraint"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16949">Adds @constraint to the list of #ClutterConstraint&lt;!-- --&gt;s applied
to @self

The #ClutterActor will hold a reference on the @constraint until
either clutter_actor_remove_constraint() or
clutter_actor_clear_constraints() is called.</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16951">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16952">a #ClutterConstraint</doc>
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_constraint_with_name"
              c:identifier="clutter_actor_add_constraint_with_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16987">A convenience function for setting the name of a #ClutterConstraint
while adding it to the list of constraints applied to @self

This function is the logical equivalent of:

|[&lt;!-- language="C" --&gt;
  clutter_actor_meta_set_name (CLUTTER_ACTOR_META (constraint), name);
  clutter_actor_add_constraint (self, constraint);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16989">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16990">the name to set on the constraint</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16991">a #ClutterConstraint</doc>
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_effect"
              c:identifier="clutter_actor_add_effect"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17210">Adds @effect to the list of #ClutterEffect&lt;!-- --&gt;s applied to @self

The #ClutterActor will hold a reference on the @effect until either
clutter_actor_remove_effect() or clutter_actor_clear_effects() is
called.</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17212">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17213">a #ClutterEffect</doc>
            <type name="Effect" c:type="ClutterEffect*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_effect_with_name"
              c:identifier="clutter_actor_add_effect_with_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17237">A convenience function for setting the name of a #ClutterEffect
while adding it to the list of effectss applied to @self

This function is the logical equivalent of:

|[&lt;!-- language="C" --&gt;
  clutter_actor_meta_set_name (CLUTTER_ACTOR_META (effect), name);
  clutter_actor_add_effect (self, effect);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17239">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17240">the name to set on the effect</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17241">a #ClutterEffect</doc>
            <type name="Effect" c:type="ClutterEffect*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_transition"
              c:identifier="clutter_actor_add_transition"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19641">Adds a @transition to the #ClutterActor's list of animations.

The @name string is a per-actor unique identifier of the @transition: only
one #ClutterTransition can be associated to the specified @name.

The @transition will be started once added.

This function will take a reference on the @transition.

This function is usually called implicitly when modifying an animatable
property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="869"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19643">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19644">the name of the transition to add</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19645">the #ClutterTransition to add</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate"
              c:identifier="clutter_actor_allocate"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10318">Assigns the size of a #ClutterActor from the given @box.

This function should only be called on the children of an actor when
overriding the #ClutterActorClass.allocate() virtual function.

This function will adjust the stored allocation to take into account
the alignment flags set in the #ClutterActor:x-align and
#ClutterActor:y-align properties, as well as the margin values set in
the #ClutterActor:margin-top, #ClutterActor:margin-right,
#ClutterActor:margin-bottom, and #ClutterActor:margin-left properties.

This function will respect the easing state of the #ClutterActor and
interpolate between the current allocation and the new one if the
easing state duration is a positive value.

Actors can know from their allocation box whether they have moved
with respect to their parent actor. The @flags parameter describes
additional information about the allocation, for instance whether
the parent has moved with respect to the stage, for example because
a grandparent's origin has moved.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="417"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10320">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10321">new allocation of the actor, in parent-relative coordinates</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10322">flags that control the allocation</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate_align_fill"
              c:identifier="clutter_actor_allocate_align_fill"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15642">Allocates @self by taking into consideration the available allocation
area; an alignment factor on either axis; and whether the actor should
fill the allocation on either axis.

The @box should contain the available allocation width and height;
if the x1 and y1 members of #ClutterActorBox are not set to 0, the
allocation will be offset by their value.

This function takes into consideration the geometry request specified by
the #ClutterActor:request-mode property, and the text direction.

This function is useful for fluid layout managers using legacy alignment
flags. Newly written layout managers should use the #ClutterActor:x-align
and #ClutterActor:y-align properties, instead, and just call
clutter_actor_allocate() inside their #ClutterActorClass.allocate()
implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="431"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15644">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15645">a #ClutterActorBox, containing the available width and height</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="x_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15646">the horizontal alignment, between 0 and 1</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="y_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15647">the vertical alignment, between 0 and 1</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="x_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15648">whether the actor should fill horizontally</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="y_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15649">whether the actor should fill vertically</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15650">allocation flags to be passed to clutter_actor_allocate()</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate_available_size"
              c:identifier="clutter_actor_allocate_available_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15453">Allocates @self taking into account the #ClutterActor's
preferred size, but limiting it to the maximum available width
and height provided.

This function will do the right thing when dealing with the
actor's request mode.

The implementation of this function is equivalent to:

|[&lt;!-- language="C" --&gt;
  if (request_mode == CLUTTER_REQUEST_HEIGHT_FOR_WIDTH)
    {
      clutter_actor_get_preferred_width (self, available_height,
                                         &amp;min_width,
                                         &amp;natural_width);
      width = CLAMP (natural_width, min_width, available_width);

      clutter_actor_get_preferred_height (self, width,
                                          &amp;min_height,
                                          &amp;natural_height);
      height = CLAMP (natural_height, min_height, available_height);
    }
  else if (request_mode == CLUTTER_REQUEST_WIDTH_FOR_HEIGHT)
    {
      clutter_actor_get_preferred_height (self, available_width,
                                          &amp;min_height,
                                          &amp;natural_height);
      height = CLAMP (natural_height, min_height, available_height);

      clutter_actor_get_preferred_width (self, height,
                                         &amp;min_width,
                                         &amp;natural_width);
      width = CLAMP (natural_width, min_width, available_width);
    }
  else if (request_mode == CLUTTER_REQUEST_CONTENT_SIZE)
    {
      clutter_content_get_preferred_size (content, &amp;natural_width, &amp;natural_height);

      width = CLAMP (natural_width, 0, available_width);
      height = CLAMP (natural_height, 0, available_height);
    }

  box.x1 = x; box.y1 = y;
  box.x2 = box.x1 + available_width;
  box.y2 = box.y1 + available_height;
  clutter_actor_allocate (self, &amp;box, flags);
]|

This function can be used by fluid layout managers to allocate
an actor's preferred size without making it bigger than the area
available for the container.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="424"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15455">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15456">the actor's X coordinate</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15457">the actor's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="available_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15458">the maximum available width, or -1 to use the
  actor's natural width</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="available_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15460">the maximum available height, or -1 to use the
  actor's natural height</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15462">flags controlling the allocation</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="allocate_preferred_size"
              c:identifier="clutter_actor_allocate_preferred_size"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15583">Allocates the natural size of @self.

This function is a utility call for #ClutterActor implementations
that allocates the actor's preferred natural size. It can be used
by fixed layout managers (like #ClutterGroup or so called
'composite actors') inside the ClutterActor::allocate
implementation to give each child exactly how much space it
requires, regardless of the size of the parent.

This function is not meant to be used by applications. It is also
not meant to be used outside the implementation of the
#ClutterActorClass.allocate virtual function.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="421"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15585">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15586">flags controlling the allocation</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="animate"
              c:identifier="clutter_actor_animate"
              version="1.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1612">Animates the given list of properties of @actor between the current
value for each property and a new final value. The animation has a
definite duration and a speed given by the @mode.

For example, this:

|[&lt;!-- language="C" --&gt;
  clutter_actor_animate (rectangle, CLUTTER_LINEAR, 250,
                         "width", 100.0,
                         "height", 100.0,
                         NULL);
]|

will make width and height properties of the #ClutterActor "rectangle"
grow linearly between the current value and 100 pixels, in 250 milliseconds.

The animation @mode is a logical id, either from the #ClutterAnimationMode
enumeration of from clutter_alpha_register_func().

All the properties specified will be animated between the current value
and the final value. If a property should be set at the beginning of
the animation but not updated during the animation, it should be prefixed
by the "fixed::" string, for instance:

|[&lt;!-- language="C" --&gt;
  clutter_actor_animate (actor, CLUTTER_EASE_IN_SINE, 100,
                         "rotation-angle-z", 360.0,
                         "fixed::rotation-center-z", &amp;center,
                         NULL);
]|

Will animate the "rotation-angle-z" property between the current value
and 360 degrees, and set the "rotation-center-z" property to the fixed
value of the #graphene_point3d_t "center".

This function will implicitly create a #ClutterAnimation object which
will be assigned to the @actor and will be returned to the developer
to control the animation or to know when the animation has been
completed.

If a name argument starts with "signal::", "signal-after::",
"signal-swapped::" or "signal-swapped-after::" the two following arguments
are used as callback function and data for a signal handler installed on
the #ClutterAnimation object for the specified signal name, for instance:

|[&lt;!-- language="C" --&gt;
  static void
  on_animation_completed (ClutterAnimation *animation,
                          ClutterActor     *actor)
  {
    clutter_actor_hide (actor);
  }

  clutter_actor_animate (actor, CLUTTER_EASE_IN_CUBIC, 100,
                         "opacity", 0,
                         "signal::completed", on_animation_completed, actor,
                         NULL);
]|

or, to automatically destroy an actor at the end of the animation:

|[&lt;!-- language="C" --&gt;
  clutter_actor_animate (actor, CLUTTER_EASE_IN_CUBIC, 100,
                         "opacity", 0,
                         "signal-swapped-after::completed",
                           clutter_actor_destroy,
                           actor,
                         NULL);
]|

The "signal::" modifier is the equivalent of using g_signal_connect();
the "signal-after::" modifier is the equivalent of using
g_signal_connect_after() or g_signal_connect_data() with the
%G_CONNECT_AFTER; the "signal-swapped::" modifier is the equivalent
of using g_signal_connect_swapped() or g_signal_connect_data() with the
%G_CONNECT_SWAPPED flah; finally, the "signal-swapped-after::" modifier
is the equivalent of using g_signal_connect_data() with both the
%G_CONNECT_AFTER and %G_CONNECT_SWAPPED flags. The clutter_actor_animate()
function will not keep track of multiple connections to the same signal,
so it is your responsability to avoid them when calling
clutter_actor_animate() multiple times on the same actor.

Calling this function on an actor that is already being animated
will cause the current animation to change with the new final values,
the new easing mode and the new duration - that is, this code:

|[&lt;!-- language="C" --&gt;
  clutter_actor_animate (actor, CLUTTER_LINEAR, 250,
                         "width", 100.0,
                         "height", 100.0,
                         NULL);
  clutter_actor_animate (actor, CLUTTER_EASE_IN_CUBIC, 500,
                         "x", 100.0,
                         "y", 100.0,
                         "width", 200.0,
                         NULL);
]|

is the equivalent of:

|[&lt;!-- language="C" --&gt;
  clutter_actor_animate (actor, CLUTTER_EASE_IN_CUBIC, 500,
                         "x", 100.0,
                         "y", 100.0,
                         "width", 200.0,
                         "height", 100.0,
                         NULL);
]|

Unless the animation is looping, the #ClutterAnimation created by
clutter_actor_animate() will become invalid as soon as it is
complete.

Since the created #ClutterAnimation instance attached to @actor
is guaranteed to be valid throughout the #ClutterAnimation::completed
signal emission chain, you will not be able to create a new animation
using clutter_actor_animate() on the same @actor from within the
#ClutterAnimation::completed signal handler unless you use
g_signal_connect_after() to connect the callback function, for instance:

|[&lt;!-- language="C" --&gt;
  static void
  on_animation_completed (ClutterAnimation *animation,
                          ClutterActor     *actor)
  {
    clutter_actor_animate (actor, CLUTTER_EASE_OUT_CUBIC, 250,
                           "x", 500.0,
                           "y", 500.0,
                           NULL);
  }

    ...
    animation = clutter_actor_animate (actor, CLUTTER_EASE_IN_CUBIC, 250,
                                       "x", 100.0,
                                       "y", 100.0,
                                       NULL);
    g_signal_connect (animation, "completed",
                      G_CALLBACK (on_animation_completed),
                      actor);
    ...
]|</doc>
        <doc-deprecated xml:space="preserve">Use the implicit transition for animatable properties
  in #ClutterActor instead. See clutter_actor_save_easing_state(),
  clutter_actor_set_easing_mode(), clutter_actor_set_easing_duration(),
  clutter_actor_set_easing_delay(), and clutter_actor_restore_easing_state().</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1763">a #ClutterAnimation object. The object is
  owned by the #ClutterActor and should not be unreferenced with
  g_object_unref()</doc>
          <type name="Animation" c:type="ClutterAnimation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1614">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1615">an animation mode logical id</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1616">duration of the animation, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1617">the name of a property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1618">a %NULL terminated list of property names and
  property values</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="animate_with_timeline"
              c:identifier="clutter_actor_animate_with_timeline"
              version="1.0"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1557">Animates the given list of properties of @actor between the current
value for each property and a new final value. The animation has a
definite duration given by @timeline and a speed given by the @mode.

See clutter_actor_animate() for further details.

This function is useful if you want to use an existing timeline
to animate @actor.</doc>
        <doc-deprecated xml:space="preserve">Use the implicit transition for animatable properties
  in #ClutterActor instead. See clutter_actor_save_easing_state(),
  clutter_actor_set_easing_mode(), clutter_actor_set_easing_duration(),
  clutter_actor_set_easing_delay(), and clutter_actor_restore_easing_state().</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1575">a #ClutterAnimation object. The object is
   owned by the #ClutterActor and should not be unreferenced with
   g_object_unref()</doc>
          <type name="Animation" c:type="ClutterAnimation*"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1559">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1560">an animation mode logical id</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
          <parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1561">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1562">the name of a property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1563">a %NULL terminated list of property names and
  property values</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="apply_relative_transform_to_point"
              c:identifier="clutter_actor_apply_relative_transform_to_point"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2920">Transforms @point in coordinates relative to the actor into
ancestor-relative coordinates using the relevant transform
stack (i.e. scale, rotation, etc).

If @ancestor is %NULL the ancestor will be the #ClutterStage. In
this case, the coordinates returned will be the coordinates on
the stage before the projection is applied. This is different from
the behaviour of clutter_actor_apply_transform_to_point().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="840"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2922">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="ancestor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2923">A #ClutterActor ancestor, or %NULL to use the
  default #ClutterStage</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2925">A point as #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="const graphene_point3d_t*"/>
          </parameter>
          <parameter name="vertex"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2926">The translated #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="apply_transform_to_point"
              c:identifier="clutter_actor_apply_transform_to_point"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="3012">Transforms @point in coordinates relative to the actor
into screen-relative coordinates with the current actor
transformation (i.e. scale, rotation, etc)</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="836"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3014">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3015">A point as #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="const graphene_point3d_t*"/>
          </parameter>
          <parameter name="vertex"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3016">The translated #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_model"
              c:identifier="clutter_actor_bind_model"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="21128">Binds a #GListModel to a #ClutterActor.

If the #ClutterActor was already bound to a #GListModel, the previous
binding is destroyed.

The existing children of #ClutterActor are destroyed when setting a
model, and new children are created and added, representing the contents
of the @model. The #ClutterActor is updated whenever the @model changes.
If @model is %NULL, the #ClutterActor is left empty.

When a #ClutterActor is bound to a model, adding and removing children
directly is undefined behaviour.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="912"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21130">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21131">a #GListModel</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="create_child_func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21132">a function that creates #ClutterActor instances
  from the contents of the @model</doc>
            <type name="ActorCreateChildFunc"
                  c:type="ClutterActorCreateChildFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21134">user data passed to @create_child_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21135">function called when unsetting the @model</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_model_with_properties"
              c:identifier="clutter_actor_bind_model_with_properties"
              version="1.24"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="21245">Binds a #GListModel to a #ClutterActor.

Unlike clutter_actor_bind_model(), this function automatically creates
a child #ClutterActor of type @child_type, and binds properties on the
items inside the @model to the corresponding properties on the child,
for instance:

|[&lt;!-- language="C" --&gt;
  clutter_actor_bind_model_with_properties (actor, model,
                                            MY_TYPE_CHILD_VIEW,
                                            "label", "text", G_BINDING_DEFAULT | G_BINDING_SYNC_CREATE,
                                            "icon", "image", G_BINDING_DEFAULT | G_BINDING_SYNC_CREATE,
                                            "selected", "selected", G_BINDING_BIDIRECTIONAL,
                                            "active", "active", G_BINDING_BIDIRECTIONAL,
                                            NULL);
]|

is the equivalent of calling clutter_actor_bind_model() with a
#ClutterActorCreateChildFunc of:

|[&lt;!-- language="C" --&gt;
  ClutterActor *res = g_object_new (MY_TYPE_CHILD_VIEW, NULL);

  g_object_bind_property (item, "label", res, "text", G_BINDING_DEFAULT | G_BINDING_SYNC_CREATE);
  g_object_bind_property (item, "icon", res, "image", G_BINDING_DEFAULT | G_BINDING_SYNC_CREATE);
  g_object_bind_property (item, "selected", res, "selected", G_BINDING_BIDIRECTIONAL);
  g_object_bind_property (item, "active", res, "active", G_BINDING_BIDIRECTIONAL);

  return res;
]|

If the #ClutterActor was already bound to a #GListModel, the previous
binding is destroyed.

When a #ClutterActor is bound to a model, adding and removing children
directly is undefined behaviour.

See also: clutter_actor_bind_model()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="918"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21247">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="model" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21248">a #GListModel</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="child_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21249">the type of #ClutterActor to use when creating
  children mapping to items inside the @model</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="first_model_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21251">the first property of @model to bind</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21252">tuples of property names on the @model, on the child, and the
  #GBindingFlags used to bind them, terminated by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_actions"
              c:identifier="clutter_actor_clear_actions"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16930">Clears the list of actions applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16932">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_constraints"
              c:identifier="clutter_actor_clear_constraints"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17138">Clears the list of constraints applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17140">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="clear_effects"
              c:identifier="clutter_actor_clear_effects"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17380">Clears the list of effects applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17382">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="contains"
              c:identifier="clutter_actor_contains"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13735">Determines if @descendant is contained inside @self (either as an
immediate child, or as a deeper descendant). If @self and
@descendant point to the same actor then it will also return %TRUE.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="726"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="13744">whether @descendent is contained within @self</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13737">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="descendant" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13738">A #ClutterActor, possibly contained in @self</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="continue_paint"
              c:identifier="clutter_actor_continue_paint"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4148">Run the next stage of the paint sequence. This function should only
be called within the implementation of the ‘run’ virtual of a
#ClutterEffect. It will cause the run method of the next effect to
be applied, or it will paint the actual actor if the current effect
is the last effect in the chain.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="360"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4150">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="continue_pick" c:identifier="clutter_actor_continue_pick">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4326">Run the next stage of the pick sequence. This function should only
be called within the implementation of the ‘pick’ virtual of a
#ClutterEffect. It will cause the run method of the next effect to
be applied, or it will pick the actual actor if the current effect
is the last effect in the chain.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="366"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4328">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_pango_context"
              c:identifier="clutter_actor_create_pango_context"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15910">Creates a #PangoContext for the given actor. The #PangoContext
is already configured using the appropriate font map, resolution
and font options.

See also clutter_actor_get_pango_context().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="671"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15920">the newly created #PangoContext.
  Use g_object_unref() on the returned value to deallocate its
  resources</doc>
          <type name="Pango.Context" c:type="PangoContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15912">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="create_pango_layout"
              c:identifier="clutter_actor_create_pango_layout"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15941">Creates a new #PangoLayout from the same #PangoContext used
by the #ClutterActor. The #PangoLayout is already configured
with the font map, resolution and font options, and the
given @text.

If you want to keep around a #PangoLayout created by this
function you will have to connect to the #ClutterBackend::font-changed
and #ClutterBackend::resolution-changed signals, and call
pango_layout_context_changed() in response to them.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="673"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15956">the newly created #PangoLayout.
  Use g_object_unref() when done</doc>
          <type name="Pango.Layout" c:type="PangoLayout*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15943">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15944">the text to set on the #PangoLayout, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy" c:identifier="clutter_actor_destroy">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8905">Destroys an actor.  When an actor is destroyed, it will break any
references it holds to other objects.  If the actor is inside a
container, the actor will be removed.

When you destroy a container, its children will be destroyed as well.

Note: you cannot destroy the #ClutterStage returned by
clutter_stage_get_default().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="376"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8907">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="destroy_all_children"
              c:identifier="clutter_actor_destroy_all_children"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13584">Destroys all children of @self.

This function releases the reference added by inserting a child
actor in the list of children of @self, and ensures that the
#ClutterActor::destroy signal is emitted on each child of the
actor.

By default, #ClutterActor will emit the #ClutterActor::destroy signal
when its reference count drops to 0; the default handler of the
#ClutterActor::destroy signal will destroy all the children of an
actor. This function ensures that all children are destroyed, instead
of just removed from @self, unlike clutter_actor_remove_all_children()
which will merely release the reference and remove each child.

Unless you acquired an additional reference on each child of @self
prior to calling clutter_actor_remove_all_children() and want to reuse
the actors, you should use clutter_actor_destroy_all_children() in
order to make sure that children are destroyed and signal handlers
are disconnected even in cases where circular references prevent this
from automatically happening through reference counting alone.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="707"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13586">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="event" c:identifier="clutter_actor_event" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13906">This function is used to emit an event on the main stage.
You should rarely need to use this function, except for
synthetising events.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="661"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="13916">the return value from the signal emission: %TRUE
  if the actor handled the event, or %FALSE if the event was
  not handled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13908">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13909">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
          <parameter name="capture" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13910">%TRUE if event in in capture phase, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_abs_allocation_vertices"
              c:identifier="clutter_actor_get_abs_allocation_vertices"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="3189">Calculates the transformed screen coordinates of the four corners of
the actor; the returned vertices relate to the #ClutterActorBox
coordinates  as follows:

 - v[0] contains (x1, y1)
 - v[1] contains (x2, y1)
 - v[2] contains (x1, y2)
 - v[3] contains (x2, y2)</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="833"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3191">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="verts"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3192">Pointer to a location of an array
  of 4 #graphene_point3d_t where to store the result.</doc>
            <array zero-terminated="0"
                   c:type="graphene_point3d_t*"
                   fixed-size="4">
              <type name="Graphene.Point3D" c:type="graphene_point3d_t"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_accessible"
              c:identifier="clutter_actor_get_accessible">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6288">Returns the accessible object that describes the actor to an
assistive technology.

If no class-specific #AtkObject implementation is available for the
actor instance in question, it will inherit an #AtkObject
implementation from the first ancestor class for which such an
implementation is defined.

The documentation of the &lt;ulink
url="http://developer.gnome.org/doc/API/2.0/atk/index.html"&gt;ATK&lt;/ulink&gt;
library contains more information about accessible objects and
their uses.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="383"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="6305">the #AtkObject associated with @actor</doc>
          <type name="Atk.Object" c:type="AtkObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="6290">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action"
              c:identifier="clutter_actor_get_action"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16903">Retrieves the #ClutterAction with the given name in the list
of actions applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16911">a #ClutterAction for the given
  name, or %NULL. The returned #ClutterAction is owned by the
  actor and it should not be unreferenced directly</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16905">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16906">the name of the action to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_actions"
              c:identifier="clutter_actor_get_actions"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16879">Retrieves the list of actions applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="102"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16885">a copy
  of the list of #ClutterAction&lt;!-- --&gt;s. The contents of the list are
  owned by the #ClutterActor. Use g_list_free() to free the resources
  allocated by the returned #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Action"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16881">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_allocation_box"
              c:identifier="clutter_actor_get_allocation_box"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10087">Gets the layout box an actor has been assigned. The allocation can
only be assumed valid inside a paint() method; anywhere else, it
may be out-of-date.

An allocation does not incorporate the actor's scale or anchor point;
those transformations do not affect layout, only rendering.

Do not call any of the clutter_actor_get_allocation_*() family
of functions inside the implementation of the get_preferred_width()
or get_preferred_height() virtual functions.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="443"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10089">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10090">the function fills this in with the actor's allocation</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allocation_vertices"
              c:identifier="clutter_actor_get_allocation_vertices"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="3099">Calculates the transformed coordinates of the four corners of the
actor in the plane of @ancestor. The returned vertices relate to
the #ClutterActorBox coordinates as follows:

 - @verts[0] contains (x1, y1)
 - @verts[1] contains (x2, y1)
 - @verts[2] contains (x1, y2)
 - @verts[3] contains (x2, y2)

If @ancestor is %NULL the ancestor will be the #ClutterStage. In
this case, the coordinates returned will be the coordinates on
the stage before the projection is applied. This is different from
the behaviour of clutter_actor_get_abs_allocation_vertices().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="446"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3101">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="ancestor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3102">A #ClutterActor to calculate the vertices
  against, or %NULL to use the #ClutterStage</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="verts"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3104">return
  location for an array of 4 #graphene_point3d_t in which to store the result</doc>
            <array zero-terminated="0"
                   c:type="graphene_point3d_t*"
                   fixed-size="4">
              <type name="Graphene.Point3D" c:type="graphene_point3d_t"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_anchor_point_gravity"
              c:identifier="clutter_actor_get_anchor_point_gravity"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14179">Retrieves the anchor position expressed as a #ClutterGravity. If
the anchor point was specified using pixels or units this will
return %CLUTTER_GRAVITY_NONE.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="14187">the #ClutterGravity used by the anchor point</doc>
          <type name="Gravity" c:type="ClutterGravity"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14181">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_background_color"
              c:identifier="clutter_actor_get_background_color"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18882">Retrieves the color set using clutter_actor_set_background_color().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="640"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18884">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18885">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_at_index"
              c:identifier="clutter_actor_get_child_at_index"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18058">Retrieves the actor at the given @index_ inside the list of
children of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="713"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18066">a pointer to a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18060">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18061">the position in the list of children</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_transform"
              c:identifier="clutter_actor_get_child_transform"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20930">Retrieves the child transformation matrix set using
clutter_actor_set_child_transform(); if none is currently set,
the @transform matrix will be initialized to the identity matrix.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="816"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20932">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="transform"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20933">a #ClutterMatrix</doc>
            <type name="Matrix" c:type="ClutterMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="clutter_actor_get_children"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12784">Retrieves the list of children of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="709"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12790">A newly
  allocated #GList of #ClutterActor&lt;!-- --&gt;s. Use g_list_free() when
  done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Actor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12786">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_clip"
              c:identifier="clutter_actor_get_clip"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12739">Gets the clip area for @self, if any is set.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="570"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12741">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="xoff"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12742">return location for the X offset of
  the clip rectangle, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="yoff"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12744">return location for the Y offset of
  the clip rectangle, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12746">return location for the width of
  the clip rectangle, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12748">return location for the height of
  the clip rectangle, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_clip_to_allocation"
              c:identifier="clutter_actor_get_clip_to_allocation"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17192">Retrieves the value set using clutter_actor_set_clip_to_allocation()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="579"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17198">%TRUE if the #ClutterActor is clipped to its allocation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17194">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_constraint"
              c:identifier="clutter_actor_get_constraint"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17111">Retrieves the #ClutterConstraint with the given name in the list
of constraints applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17119">a #ClutterConstraint for the given
  name, or %NULL. The returned #ClutterConstraint is owned by the
  actor and it should not be unreferenced directly</doc>
          <type name="Constraint" c:type="ClutterConstraint*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17113">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17114">the name of the constraint to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_constraints"
              c:identifier="clutter_actor_get_constraints"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17087">Retrieves the list of constraints applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="125"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17093">a copy
  of the list of #ClutterConstraint&lt;!-- --&gt;s. The contents of the list are
  owned by the #ClutterActor. Use g_list_free() to free the resources
  allocated by the returned #GList</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Constraint"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17089">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content"
              c:identifier="clutter_actor_get_content"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20138">Retrieves the contents of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="614"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20144">a pointer to the #ClutterContent instance,
  or %NULL if none was set</doc>
          <type name="Content" c:type="ClutterContent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20140">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_box"
              c:identifier="clutter_actor_get_content_box"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20220">Retrieves the bounding box for the #ClutterContent of @self.

The bounding box is relative to the actor's allocation.

If no #ClutterContent is set for @self, or if @self has not been
allocated yet, then the result is undefined.

The content box is guaranteed to be, at most, as big as the allocation
of the #ClutterActor.

If the #ClutterContent used by the actor has a preferred size, then
it is possible to modify the content box by using the
#ClutterActor:content-gravity property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="634"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20222">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20223">the return location for the bounding
  box for the #ClutterContent</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_content_gravity"
              c:identifier="clutter_actor_get_content_gravity"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20200">Retrieves the content gravity as set using
clutter_actor_set_content_gravity().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="619"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20207">the content gravity</doc>
          <type name="ContentGravity" c:type="ClutterContentGravity"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20202">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_repeat"
              c:identifier="clutter_actor_get_content_repeat"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20794">Retrieves the repeat policy for a #ClutterActor set by
clutter_actor_set_content_repeat().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="632"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20801">the content repeat policy</doc>
          <type name="ContentRepeat" c:type="ClutterContentRepeat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20796">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_content_scaling_filters"
              c:identifier="clutter_actor_get_content_scaling_filters"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20472">Retrieves the values set using clutter_actor_set_content_scaling_filters().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="625"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20474">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="min_filter"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20475">return location for the minification
  filter, or %NULL</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter*"/>
          </parameter>
          <parameter name="mag_filter"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20477">return location for the magnification
  filter, or %NULL</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_default_paint_volume"
              c:identifier="clutter_actor_get_default_paint_volume"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6465">Retrieves the default paint volume for @self.

This function provides the same #ClutterPaintVolume that would be
computed by the default implementation inside #ClutterActor of the
#ClutterActorClass.get_paint_volume() virtual function.

This function should only be used by #ClutterActor subclasses that
cannot chain up to the parent implementation when computing their
paint volume.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="648"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="6479">a pointer to the default
  #ClutterPaintVolume, relative to the #ClutterActor, or %NULL if
  the actor could not compute a valid paint volume. The returned value
  is not guaranteed to be stable across multiple frames, so if you
  want to retain it, you will need to copy it using
  clutter_paint_volume_copy().</doc>
          <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="6467">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_depth"
              c:identifier="clutter_actor_get_depth"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12447">Retrieves the depth of @self.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_z_position() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12453">the depth of the actor</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12449">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_delay"
              c:identifier="clutter_actor_get_easing_delay"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19909">Retrieves the delay that should be applied when tweening animatable
properties.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="864"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19916">a delay, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19911">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_duration"
              c:identifier="clutter_actor_get_easing_duration"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19793">Retrieves the duration of the tweening for animatable
properties of @self for the current easing state.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="859"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19800">the duration of the tweening, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19795">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_mode"
              c:identifier="clutter_actor_get_easing_mode"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19852">Retrieves the easing mode for the tweening of animatable properties
of @self for the current easing state.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="854"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19859">an easing mode</doc>
          <type name="AnimationMode" c:type="ClutterAnimationMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19854">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_effect"
              c:identifier="clutter_actor_get_effect"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17353">Retrieves the #ClutterEffect with the given name in the list
of effects applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17361">a #ClutterEffect for the given
  name, or %NULL. The returned #ClutterEffect is owned by the
  actor and it should not be unreferenced directly</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17355">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17356">the name of the effect to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_effects"
              c:identifier="clutter_actor_get_effects"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17325">Retrieves the #ClutterEffect&lt;!-- --&gt;s applied on @self, if any</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="123"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17331">a list
  of #ClutterEffect&lt;!-- --&gt;s, or %NULL. The elements of the returned
  list are owned by Clutter and they should not be freed. You should
  free the returned list using g_list_free() when done</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Effect"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17327">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_first_child"
              c:identifier="clutter_actor_get_first_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18947">Retrieves the first child of @self.

The returned pointer is only valid until the scene graph changes; it
is not safe to modify the list of children of @self while iterating
it.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="720"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18957">a pointer to a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18949">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_fixed_position_set"
              c:identifier="clutter_actor_get_fixed_position_set"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10623">Checks whether an actor has a fixed position set (and will thus be
unaffected by any layout manager).</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="468"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="10630">%TRUE if the fixed position is set on the actor</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10625">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="clutter_actor_get_flags"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16292">Retrieves the flags set on @self</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="343"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16298">a bitwise or of #ClutterActorFlags or 0</doc>
          <type name="ActorFlags" c:type="ClutterActorFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16294">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height" c:identifier="clutter_actor_get_height">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11373">Retrieves the height of a #ClutterActor.

If the actor has a valid allocation, this function will return the
height of the allocated area given to the actor.

If the actor does not have a valid allocation, this function will
return the actor's natural height, that is the preferred height of
the actor.

If you care whether you get the preferred height or the height that
has been assigned to the actor, you should probably call a different
function like clutter_actor_get_allocation_box() to retrieve the
allocated size or clutter_actor_get_preferred_height() to retrieve the
preferred height.

If an actor has a fixed height, for instance a height that has been
assigned using clutter_actor_set_height(), the height returned will
be the same value.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="481"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11396">the height of the actor, in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11375">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_last_child"
              c:identifier="clutter_actor_get_last_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18969">Retrieves the last child of @self.

The returned pointer is only valid until the scene graph changes; it
is not safe to modify the list of children of @self while iterating
it.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="722"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18979">a pointer to a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18971">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layout_manager"
              c:identifier="clutter_actor_get_layout_manager"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18331">Retrieves the #ClutterLayoutManager used by @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="507"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18337">a pointer to the #ClutterLayoutManager,
  or %NULL</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18333">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_margin"
              c:identifier="clutter_actor_get_margin"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18601">Retrieves all the components of the margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="542"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18603">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18604">return location for a #ClutterMargin</doc>
            <type name="Margin" c:type="ClutterMargin*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_margin_bottom"
              c:identifier="clutter_actor_get_margin_bottom"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18702">Retrieves the bottom margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="527"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18708">the bottom margin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18704">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_margin_left"
              c:identifier="clutter_actor_get_margin_left"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18750">Retrieves the left margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="532"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18756">the left margin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18752">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_margin_right"
              c:identifier="clutter_actor_get_margin_right"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18798">Retrieves the right margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="537"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18804">the right margin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18800">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_margin_top"
              c:identifier="clutter_actor_get_margin_top"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18654">Retrieves the top margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="522"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18660">the top margin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18656">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_children"
              c:identifier="clutter_actor_get_n_children"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18040">Retrieves the number of children of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="711"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18046">the number of children of an actor</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18042">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name" c:identifier="clutter_actor_get_name">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12211">Retrieves the name of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="381"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12217">the name of the actor, or %NULL. The returned string is
  owned by the actor and should not be modified or freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12213">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_next_sibling"
              c:identifier="clutter_actor_get_next_sibling"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18924">Retrieves the sibling of @self that comes after it in the list
of children of @self's parent.

The returned pointer is only valid until the scene graph changes; it
is not safe to modify the list of children of @self while iterating
it.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="718"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18935">a pointer to a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18926">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offscreen_redirect"
              c:identifier="clutter_actor_get_offscreen_redirect"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12172">Retrieves whether to redirect the actor to an offscreen buffer, as
set by clutter_actor_set_offscreen_redirect().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="593"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12179">the value of the offscreen-redirect property of the actor</doc>
          <type name="OffscreenRedirect" c:type="ClutterOffscreenRedirect"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12174">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_opacity" c:identifier="clutter_actor_get_opacity">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12058">Retrieves the opacity value of an actor, as set by
clutter_actor_set_opacity().

For retrieving the absolute opacity of the actor inside a paint
virtual function, see clutter_actor_get_paint_opacity().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="584"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12068">the opacity of the actor</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12060">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_opacity_override"
              c:identifier="clutter_actor_get_opacity_override"
              version="1.22"
              stability="Unstable">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16008">See clutter_actor_set_opacity_override()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="885"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16014">the override value for the actor's opacity, or -1 if no override
  is set.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16010">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_paint_box"
              c:identifier="clutter_actor_get_paint_box"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17703">Retrieves the paint volume of the passed #ClutterActor, and
transforms it into a 2D bounding box in stage coordinates.

This function is useful to determine the on screen area occupied by
the actor. The box is only an approximation and may often be
considerably larger due to the optimizations used to calculate the
box. The box is never smaller though, so it can reliably be used
for culling.

There are times when a 2D paint box can't be determined, e.g.
because the actor isn't yet parented under a stage or because
the actor is unable to determine a paint volume.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="599"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17721">%TRUE if a 2D paint box could be determined, else
%FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17705">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17706">return location for a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_paint_opacity"
              c:identifier="clutter_actor_get_paint_opacity"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12034">Retrieves the absolute opacity of the actor, as it appears on the stage.

This function traverses the hierarchy chain and composites the opacity of
the actor with that of its parents.

This function is intended for subclasses to use in the paint virtual
function, to paint themselves with the correct opacity.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="586"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12046">The actor opacity value.</doc>
          <type name="guint8" c:type="guint8"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12036">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_paint_visibility"
              c:identifier="clutter_actor_get_paint_visibility"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13493">Retrieves the 'paint' visibility of an actor recursively checking for non
visible parents.

This is by definition the same as %CLUTTER_ACTOR_IS_MAPPED.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="588"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="13502">%TRUE if the actor is visibile and will be painted.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13495">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_paint_volume"
              c:identifier="clutter_actor_get_paint_volume"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17612">Retrieves the paint volume of the passed #ClutterActor, or %NULL
when a paint volume can't be determined.

The paint volume is defined as the 3D space occupied by an actor
when being painted.

This function will call the #ClutterActorClass.get_paint_volume()
virtual function of the #ClutterActor class. Sub-classes of #ClutterActor
should not usually care about overriding the default implementation,
unless they are, for instance: painting outside their allocation, or
actors with a depth factor (not in terms of #ClutterActor:depth but real
3D depth).

Note: 2D actors overriding #ClutterActorClass.get_paint_volume()
should ensure that their volume has a depth of 0. (This will be true
as long as you don't call clutter_paint_volume_set_depth().)</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="643"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17633">a pointer to a #ClutterPaintVolume,
  or %NULL if no volume could be determined. The returned pointer
  is not guaranteed to be valid across multiple frames; if you want
  to keep it, you will need to copy it using clutter_paint_volume_copy().</doc>
          <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17614">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pango_context"
              c:identifier="clutter_actor_get_pango_context"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15861">Retrieves the #PangoContext for @self. The actor's #PangoContext
is already configured using the appropriate font map, resolution
and font options.

Unlike clutter_actor_create_pango_context(), this context is owend
by the #ClutterActor and it will be updated each time the options
stored by the #ClutterBackend change.

You can use the returned #PangoContext to create a #PangoLayout
and render text using cogl_pango_show_layout() to reuse the
glyphs cache also used by Clutter.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="669"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15877">the #PangoContext for a #ClutterActor.
  The returned #PangoContext is owned by the actor and should not be
  unreferenced by the application code</doc>
          <type name="Pango.Context" c:type="PangoContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15863">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_parent" c:identifier="clutter_actor_get_parent">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13476">Retrieves the parent of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="724"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="13482">The #ClutterActor parent, or %NULL
 if no parent is set</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13478">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pivot_point"
              c:identifier="clutter_actor_get_pivot_point"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12349">Retrieves the coordinates of the #ClutterActor:pivot-point.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="768"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12351">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pivot_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12352">return location for the normalized X
  coordinate of the pivot point, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="pivot_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12354">return location for the normalized Y
  coordinate of the pivot point, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pivot_point_z"
              c:identifier="clutter_actor_get_pivot_point_z"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12405">Retrieves the Z component of the #ClutterActor:pivot-point.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="775"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12407">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="clutter_actor_get_position"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11157">This function tries to "do what you mean" and tell you where the
actor is, prior to any transformations. Retrieves the fixed
position of an actor in pixels, if one has been set; otherwise, if
the allocation is valid, returns the actor's allocated position;
otherwise, returns 0,0.

The returned position is in pixels.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="464"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11159">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11160">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11161">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_height"
              c:identifier="clutter_actor_get_preferred_height"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9923">Computes the requested minimum and natural heights for an actor,
or if they are already computed, returns the cached values.

An actor may not get its request - depending on the layout
manager that's in effect.

A request should not incorporate the actor's scale or anchor point;
those transformations do not affect layout, only rendering.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="406"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9925">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="for_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9926">available width to assume in computing desired height,
  or a negative value to indicate that no width is defined</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9928">return location for minimum height,
  or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9930">return location for natural
  height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_size"
              c:identifier="clutter_actor_get_preferred_size"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9387">Computes the preferred minimum and natural size of an actor, taking into
account the actor's geometry management (either height-for-width
or width-for-height).

The width and height used to compute the preferred height and preferred
width are the actor's natural ones.

If you need to control the height for the preferred width, or the width for
the preferred height, you should use clutter_actor_get_preferred_width()
and clutter_actor_get_preferred_height(), and check the actor's preferred
geometry management using the #ClutterActor:request-mode property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="411"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9389">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="min_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9390">return location for the minimum
  width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="min_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9392">return location for the minimum
  height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9394">return location for the natural
  width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9396">return location for the natural
  height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_width"
              c:identifier="clutter_actor_get_preferred_width"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9757">Computes the requested minimum and natural widths for an actor,
optionally depending on the specified height, or if they are
already computed, returns the cached values.

An actor may not get its request - depending on the layout
manager that's in effect.

A request should not incorporate the actor's scale or anchor point;
those transformations do not affect layout, only rendering.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="401"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9759">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="for_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9760">available height when computing the preferred width,
  or a negative value to indicate that no height is defined</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9762">return location for minimum width,
  or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="natural_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9764">return location for the natural
  width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_previous_sibling"
              c:identifier="clutter_actor_get_previous_sibling"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18901">Retrieves the sibling of @self that comes before it in the list
of children of @self's parent.

The returned pointer is only valid until the scene graph changes; it
is not safe to modify the list of children of @self while iterating
it.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="716"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18912">a pointer to a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18903">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reactive"
              c:identifier="clutter_actor_get_reactive"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14096">Checks whether @actor is marked as reactive.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="655"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="14102">%TRUE if the actor is reactive</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14098">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_request_mode"
              c:identifier="clutter_actor_get_request_mode"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10979">Retrieves the geometry request mode of @self</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="399"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="10985">the request mode for the actor</doc>
          <type name="RequestMode" c:type="ClutterRequestMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10981">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resource_scale"
              c:identifier="clutter_actor_get_resource_scale">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17913">Retrieves the resource scale for this actor, if available.

The resource scale refers to the scale the actor should use for its resources.
For example if an actor draws a a picture of size 100 x 100 in the stage
coordinate space, it should use a texture of twice the size (i.e. 200 x 200)
if the resource scale is 2.

The resource scale is determined by calculating the highest #ClutterStageView
scale the actor will get painted on.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="603"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17928">TRUE if resource scale is set for the actor, otherwise FALSE</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17915">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="resource_scale"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17916">return location for the resource scale</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rotation"
              c:identifier="clutter_actor_get_rotation"
              version="0.8"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12562">Retrieves the angle and center of rotation on the given axis,
set using clutter_actor_set_rotation().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_rotation_angle() and
  clutter_actor_get_pivot_point() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12573">the angle of rotation</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12564">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12565">the axis of rotation</doc>
            <type name="RotateAxis" c:type="ClutterRotateAxis"/>
          </parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12566">return value for the X coordinate of the center of rotation</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12567">return value for the Y coordinate of the center of rotation</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="z"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12568">return value for the Z coordinate of the center of rotation</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_rotation_angle"
              c:identifier="clutter_actor_get_rotation_angle"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4969">Retrieves the angle of rotation set by clutter_actor_set_rotation_angle().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="781"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="4976">the angle of rotation, in degrees</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4971">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4972">the axis of the rotation</doc>
            <type name="RotateAxis" c:type="ClutterRotateAxis"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scale"
              c:identifier="clutter_actor_get_scale"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11838">Retrieves an actors scale factors.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="788"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11840">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="scale_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11841">Location to store horizonal
  scale factor, or %NULL.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="scale_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11843">Location to store vertical
  scale factor, or %NULL.</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scale_center"
              c:identifier="clutter_actor_get_scale_center"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11887">Retrieves the scale center coordinate in pixels relative to the top
left corner of the actor. If the scale center was specified using a
#ClutterGravity this will calculate the pixel offset using the
current size of the actor.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_pivot_point() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11889">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="center_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11890">Location to store the X position
  of the scale center, or %NULL.</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="center_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11892">Location to store the Y position
  of the scale center, or %NULL.</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scale_gravity"
              c:identifier="clutter_actor_get_scale_gravity"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11921">Retrieves the scale center as a compass direction. If the scale
center was specified in pixels or units this will return
%CLUTTER_GRAVITY_NONE.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_pivot_point() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11929">the scale gravity</doc>
          <type name="Gravity" c:type="ClutterGravity"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11923">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scale_z"
              c:identifier="clutter_actor_get_scale_z"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11868">Retrieves the scaling factor along the Z axis, as set using
clutter_actor_set_scale_z().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="795"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11875">the scaling factor along the Z axis</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11870">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="clutter_actor_get_size"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11125">This function tries to "do what you mean" and return
the size an actor will have. If the actor has a valid
allocation, the allocation will be returned; otherwise,
the actors natural size request will be returned.

If you care whether you get the request vs. the allocation, you
should probably call a different function like
clutter_actor_get_allocation_box() or
clutter_actor_get_preferred_width().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="456"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11127">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11128">return location for the width, or %NULL.</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11129">return location for the height, or %NULL.</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_stage"
              c:identifier="clutter_actor_get_stage"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15434">Retrieves the #ClutterStage where @actor is contained.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="729"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15440">the stage
  containing the actor, or %NULL</doc>
          <type name="Stage" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15436">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text_direction"
              c:identifier="clutter_actor_get_text_direction"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16660">Retrieves the value set using clutter_actor_set_text_direction()

If no text direction has been previously set, the default text
direction, as returned by clutter_get_default_text_direction(), will
be returned instead</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="679"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16670">the #ClutterTextDirection for the actor</doc>
          <type name="TextDirection" c:type="ClutterTextDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16662">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transform"
              c:identifier="clutter_actor_get_transform"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16492">Retrieves the current transformation matrix of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="810"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16494">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="transform"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16495">a #ClutterMatrix</doc>
            <type name="Matrix" c:type="ClutterMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transformed_paint_volume"
              c:identifier="clutter_actor_get_transformed_paint_volume"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17648">Retrieves the 3D paint volume of an actor like
clutter_actor_get_paint_volume() does (Please refer to the
documentation of clutter_actor_get_paint_volume() for more
details.) and it additionally transforms the paint volume into the
coordinate space of @relative_to_ancestor. (Or the stage if %NULL
is passed for @relative_to_ancestor)

This can be used by containers that base their paint volume on
the volume of their children. Such containers can query the
transformed paint volume of all of its children and union them
together using clutter_paint_volume_union().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="645"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17666">a pointer to a #ClutterPaintVolume,
  or %NULL if no volume could be determined. The returned pointer is
  not guaranteed to be valid across multiple frames; if you wish to
  keep it, you will have to copy it using clutter_paint_volume_copy().</doc>
          <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17650">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="relative_to_ancestor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17651">A #ClutterActor that is an ancestor of @self
   (or %NULL for the stage)</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transformed_position"
              c:identifier="clutter_actor_get_transformed_position"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11187">Gets the absolute position of an actor, in pixels relative to the stage.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="819"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11189">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11190">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11191">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transformed_size"
              c:identifier="clutter_actor_get_transformed_size"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11215">Gets the absolute size of an actor in pixels, taking into account the
scaling factors.

If the actor has a valid allocation, the allocated size will be used.
If the actor has not a valid allocation then the preferred size will
be transformed and returned.

If you want the transformed allocation, see
clutter_actor_get_abs_allocation_vertices() instead.

When the actor (or one of its ancestors) is rotated around the
X or Y axis, it no longer appears as on the stage as a rectangle, but
as a generic quadrangle; in that case this function returns the size
of the smallest rectangle that encapsulates the entire quad. Please
note that in this case no assumptions can be made about the relative
position of this envelope to the absolute position of the actor, as
returned by clutter_actor_get_transformed_position(); if you need this
information, you need to use clutter_actor_get_abs_allocation_vertices()
to get the coords of the actual quadrangle.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="823"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11217">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11218">return location for the width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11219">return location for the height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transition"
              c:identifier="clutter_actor_get_transition"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19935">Retrieves the #ClutterTransition of a #ClutterActor by using the
transition @name.

Transitions created for animatable properties use the name of the
property itself, for instance the code below:

|[&lt;!-- language="C" --&gt;
  clutter_actor_set_easing_duration (actor, 1000);
  clutter_actor_set_rotation (actor, CLUTTER_Y_AXIS, 360.0, x, y, z);

  transition = clutter_actor_get_transition (actor, "rotation-angle-y");
  g_signal_connect (transition, "stopped",
                    G_CALLBACK (on_transition_stopped),
                    actor);
]|

will call the `on_transition_stopped` callback when the transition
is finished.

If you just want to get notifications of the completion of a transition,
you should use the #ClutterActor::transition-stopped signal, using the
transition name as the signal detail.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="866"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19963">a #ClutterTransition, or %NULL is none
  was found to match the passed name; the returned instance is owned
  by Clutter and it should not be freed</doc>
          <type name="Transition" c:type="ClutterTransition*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19937">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19938">the name of the transition</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_translation"
              c:identifier="clutter_actor_get_translation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4845">Retrieves the translation set using clutter_actor_set_translation().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="802"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4847">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="translate_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4848">return location for the X component
  of the translation, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="translate_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4850">return location for the Y component
  of the translation, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="translate_z"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4852">return location for the Z component
  of the translation, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_width" c:identifier="clutter_actor_get_width">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11311">Retrieves the width of a #ClutterActor.

If the actor has a valid allocation, this function will return the
width of the allocated area given to the actor.

If the actor does not have a valid allocation, this function will
return the actor's natural width, that is the preferred width of
the actor.

If you care whether you get the preferred width or the width that
has been assigned to the actor, you should probably call a different
function like clutter_actor_get_allocation_box() to retrieve the
allocated size or clutter_actor_get_preferred_width() to retrieve the
preferred width.

If an actor has a fixed width, for instance a width that has been
assigned using clutter_actor_set_width(), the width returned will
be the same value.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="479"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11334">the width of the actor, in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11313">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x" c:identifier="clutter_actor_get_x">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11653">Retrieves the X coordinate of a #ClutterActor.

This function tries to "do what you mean", by returning the
correct value depending on the actor's state.

If the actor has a valid allocation, this function will return
the X coordinate of the origin of the allocation box.

If the actor has any fixed coordinate set using clutter_actor_set_x(),
clutter_actor_set_position(), this function will return that coordinate.

If both the allocation and a fixed position are missing, this function
will return 0.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="489"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11671">the X coordinate, in pixels, ignoring any
  transformation (i.e. scaling, rotation)</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11655">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x_align"
              c:identifier="clutter_actor_get_x_align"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18476">Retrieves the horizontal alignment policy set using
clutter_actor_set_x_align().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="512"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18483">the horizontal alignment policy.</doc>
          <type name="ActorAlign" c:type="ClutterActorAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18478">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x_expand"
              c:identifier="clutter_actor_get_x_expand"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20572">Retrieves the value set with clutter_actor_set_x_expand().

See also: clutter_actor_needs_expand()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="548"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20580">%TRUE if the actor has been set to expand</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20574">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y" c:identifier="clutter_actor_get_y">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11700">Retrieves the Y coordinate of a #ClutterActor.

This function tries to "do what you mean", by returning the
correct value depending on the actor's state.

If the actor has a valid allocation, this function will return
the Y coordinate of the origin of the allocation box.

If the actor has any fixed coordinate set using clutter_actor_set_y(),
clutter_actor_set_position(), this function will return that coordinate.

If both the allocation and a fixed position are missing, this function
will return 0.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="491"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="11718">the Y coordinate, in pixels, ignoring any
  transformation (i.e. scaling, rotation)</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11702">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y_align"
              c:identifier="clutter_actor_get_y_align"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18527">Retrieves the vertical alignment policy set using
clutter_actor_set_y_align().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="517"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18534">the vertical alignment policy.</doc>
          <type name="ActorAlign" c:type="ClutterActorAlign"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18529">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y_expand"
              c:identifier="clutter_actor_get_y_expand"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20631">Retrieves the value set with clutter_actor_set_y_expand().

See also: clutter_actor_needs_expand()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="553"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20639">%TRUE if the actor has been set to expand</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20633">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_z_position"
              c:identifier="clutter_actor_get_z_position"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12300">Retrieves the actor's position on the Z axis.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="502"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12306">the position on the Z axis.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12302">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_z_rotation_gravity"
              c:identifier="clutter_actor_get_z_rotation_gravity"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12623">Retrieves the center for the rotation around the Z axis as a
compass direction. If the center was specified in pixels or units
this will return %CLUTTER_GRAVITY_NONE.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:pivot-point instead of
  a #ClutterGravity</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12631">the Z rotation center</doc>
          <type name="Gravity" c:type="ClutterGravity"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12625">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="grab_key_focus"
              c:identifier="clutter_actor_grab_key_focus"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15797">Sets the key focus of the #ClutterStage including @self
to this #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="659"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15799">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_accessible"
              c:identifier="clutter_actor_has_accessible">
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="385"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_actions"
              c:identifier="clutter_actor_has_actions"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18018">Returns whether the actor has any actions applied.</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18024">%TRUE if the actor has any actions,
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18020">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_allocation"
              c:identifier="clutter_actor_has_allocation"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16711">Checks if the actor has an up-to-date allocation assigned to
it. This means that the actor should have an allocation: it's
visible and has a parent. It also means that there is no
outstanding relayout request in progress for the actor or its
children (There might be other outstanding layout requests in
progress that will cause the actor to get a new allocation
when the stage is laid out, however).

If this function returns %FALSE, then the actor will normally
be allocated before it is next drawn on the screen.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="450"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16726">%TRUE if the actor has an up-to-date allocation</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16713">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_clip"
              c:identifier="clutter_actor_has_clip"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12721">Determines whether the actor has a clip area set or not.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="568"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="12727">%TRUE if the actor has a clip area set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12723">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_constraints"
              c:identifier="clutter_actor_has_constraints"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17996">Returns whether the actor has any constraints applied.</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="18002">%TRUE if the actor has any constraints,
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17998">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_damage" c:identifier="clutter_actor_has_damage">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_effects"
              c:identifier="clutter_actor_has_effects"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17974">Returns whether the actor has any effects applied.</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17980">%TRUE if the actor has any effects,
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17976">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_key_focus"
              c:identifier="clutter_actor_has_key_focus"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17401">Checks whether @self is the #ClutterActor that has key focus</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="657"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17407">%TRUE if the actor has key focus, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17403">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_mapped_clones"
              c:identifier="clutter_actor_has_mapped_clones"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="21055">Returns whether a #ClutterActor has any mapped clones.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="880"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="21061">%TRUE if the actor has mapped clones, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="21057">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_overlaps"
              c:identifier="clutter_actor_has_overlaps"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17946">Asks the actor's implementation whether it may contain overlapping
primitives.

For example; Clutter may use this to determine whether the painting
should be redirected to an offscreen buffer to correctly implement
the opacity property.

Custom actors can override the default response by implementing the
#ClutterActorClass.has_overlaps() virtual function. See
clutter_actor_set_offscreen_redirect() for more information.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="607"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="17961">%TRUE if the actor may have overlapping primitives, and
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17948">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_pointer"
              c:identifier="clutter_actor_has_pointer"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16691">Checks whether an actor contains the pointer of a
#ClutterInputDevice</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="665"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16698">%TRUE if the actor contains the pointer, and
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16693">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="clutter_actor_hide">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2007">Flags an actor to be hidden. A hidden actor will not be
rendered on the stage.

Actors are visible by default.

If this function is called on an actor without a parent, the
#ClutterActor:show-on-set-parent property will be set to %FALSE
as a side-effect.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="347"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2009">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="inhibit_culling"
              c:identifier="clutter_actor_inhibit_culling">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16029">Increases the culling inhibitor counter. Inhibiting culling
forces the actor to be painted even when outside the visible
bounds of the stage view.

This is usually necessary when an actor is being painted on
another paint context.

Pair with clutter_actor_uninhibit_culling() when the actor doesn't
need to be painted anymore.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="888"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16031">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_child_above"
              c:identifier="clutter_actor_insert_child_above"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13357">Inserts @child into the list of children of @self, above another
child of @self or, if @sibling is %NULL, above all the children
of @self.

This function will acquire a reference on @child that will only
be released when calling clutter_actor_remove_child().

This function will not take into consideration the #ClutterActor:depth
of @child.

This function will emit the #ClutterContainer::actor-added signal
on @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="690"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13359">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13360">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13361">a child of @self, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_child_at_index"
              c:identifier="clutter_actor_insert_child_at_index"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13320">Inserts @child into the list of children of @self, using the
given @index_. If @index_ is greater than the number of children
in @self, or is less than 0, then the new child is added at the end.

This function will acquire a reference on @child that will only
be released when calling clutter_actor_remove_child().

This function will not take into consideration the #ClutterActor:depth
of @child.

This function will emit the #ClutterContainer::actor-added signal
on @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="686"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13322">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13323">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13324">the index</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_child_below"
              c:identifier="clutter_actor_insert_child_below"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13398">Inserts @child into the list of children of @self, below another
child of @self or, if @sibling is %NULL, below all the children
of @self.

This function will acquire a reference on @child that will only
be released when calling clutter_actor_remove_child().

This function will not take into consideration the #ClutterActor:depth
of @child.

This function will emit the #ClutterContainer::actor-added signal
on @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="694"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13400">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13401">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13402">a child of @self, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_in_clone_paint"
              c:identifier="clutter_actor_is_in_clone_paint"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16520">Checks whether @self is being currently painted by a #ClutterClone

This function is useful only inside the ::paint virtual function
implementations or within handlers for the #ClutterActor::paint
signal

This function should not be used by applications</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="597"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="16532">%TRUE if the #ClutterActor is currently being painted
  by a #ClutterClone, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16522">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_mapped"
              c:identifier="clutter_actor_is_mapped"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1694">Checks whether a #ClutterActor has been set as mapped.

See also %CLUTTER_ACTOR_IS_MAPPED and #ClutterActor:mapped</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="390"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="1702">%TRUE if the actor is mapped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1696">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_realized"
              c:identifier="clutter_actor_is_realized"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2100">Checks whether a #ClutterActor is realized.

See also %CLUTTER_ACTOR_IS_REALIZED and #ClutterActor:realized.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="392"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="2108">%TRUE if the actor is realized</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2102">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_rotated"
              c:identifier="clutter_actor_is_rotated"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15375">Checks whether any rotation is applied to the actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="760"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15381">%TRUE if the actor is rotated.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15377">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_scaled"
              c:identifier="clutter_actor_is_scaled"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15400">Checks whether the actor is scaled in either dimension.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="762"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15406">%TRUE if the actor is scaled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15402">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible"
              c:identifier="clutter_actor_is_visible"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1941">Checks whether an actor is marked as visible.

See also %CLUTTER_ACTOR_IS_VISIBLE and #ClutterActor:visible.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="388"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="1949">%TRUE if the actor visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1943">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="map" c:identifier="clutter_actor_map" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1663">Sets the %CLUTTER_ACTOR_MAPPED flag on the actor and possibly maps
and realizes its children if they are visible. Does nothing if the
actor is not visible.

Calling this function is strongly disencouraged: the default
implementation of #ClutterActorClass.map() will map all the children
of an actor when mapping its parent.

When overriding map, it is mandatory to chain up to the parent
implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="353"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1665">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move_anchor_point"
              c:identifier="clutter_actor_move_anchor_point"
              version="0.6"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14205">Sets an anchor point for the actor, and adjusts the actor postion so that
the relative position of the actor toward its parent remains the same.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point and
clutter_actor_set_translation() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14207">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="anchor_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14208">X coordinate of the anchor point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="anchor_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14209">Y coordinate of the anchor point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_anchor_point_from_gravity"
              c:identifier="clutter_actor_move_anchor_point_from_gravity"
              version="0.6"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14247">Sets an anchor point on the actor based on the given gravity, adjusting the
actor postion so that its relative position within its parent remains
unchanged.

Since version 1.0 the anchor point will be stored as a gravity so
that if the actor changes size then the anchor point will move. For
example, if you set the anchor point to %CLUTTER_GRAVITY_SOUTH_EAST
and later double the size of the actor, the anchor point will move
to the bottom right.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point and
clutter_actor_set_translation() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14249">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="gravity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14250">#ClutterGravity.</doc>
            <type name="Gravity" c:type="ClutterGravity"/>
          </parameter>
        </parameters>
      </method>
      <method name="move_by"
              c:identifier="clutter_actor_move_by"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10681">Moves an actor by the specified distance relative to its current
position in pixels.

This function modifies the fixed position of an actor and thus removes
it from any layout management. Another way to move an actor is with an
anchor point, see clutter_actor_set_anchor_point(), or with an additional
translation, using clutter_actor_set_translation().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="473"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10683">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10684">Distance to move Actor on X axis.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10685">Distance to move Actor on Y axis.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="needs_expand"
              c:identifier="clutter_actor_needs_expand"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20725">Checks whether an actor, or any of its children, is set to expand
horizontally or vertically.

This function should only be called by layout managers that can
assign extra space to their children.

If you want to know whether the actor was explicitly set to expand,
use clutter_actor_get_x_expand() or clutter_actor_get_y_expand().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="555"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="20739">%TRUE if the actor should expand</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20727">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20728">the direction of expansion</doc>
            <type name="Orientation" c:type="ClutterOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="paint" c:identifier="clutter_actor_paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="3934">Renders the actor to display.

This function should not be called directly by applications.
Call clutter_actor_queue_redraw() to queue paints, instead.

This function is context-aware, and will either cause a
regular paint or a pick paint.

This function will emit the #ClutterActor::paint signal or
the #ClutterActor::pick signal, depending on the context.

This function does not paint the actor if the actor is set to 0,
unless it is performing a pick paint.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="357"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="3936">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pick" c:identifier="clutter_actor_pick">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4245">Asks @actor to perform a pick.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="363"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4247">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pick_box" c:identifier="clutter_actor_pick_box">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1349">Logs (does a virtual paint of) a rectangle for picking. Note that @box is
in the actor's own local coordinates, so is usually {0,0,width,height}
to include the whole actor. That is unless the actor has a shaped input
region in which case you may wish to log the (multiple) smaller rectangles
that make up the input region.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="925"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1351">The #ClutterActor being "pick" painted.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pick_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1352">The #ClutterPickContext</doc>
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1353">A rectangle in the actor's own local coordinates.</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pop_internal" c:identifier="clutter_actor_pop_internal">
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_internal" c:identifier="clutter_actor_push_internal">
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="queue_redraw" c:identifier="clutter_actor_queue_redraw">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9215">Queues up a redraw of an actor and any children. The redraw occurs
once the main loop becomes idle (after the current batch of events
has been processed, roughly).

Applications rarely need to call this, as redraws are handled
automatically by modification functions.

This function will not do anything if @self is not visible, or
if the actor is inside an invisible part of the scenegraph.

Also be aware that painting is a NOP for actors with an opacity of
0

When you are implementing a custom actor you must queue a redraw
whenever some private state changes that will affect painting or
picking of your actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="369"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9217">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="queue_redraw_with_clip"
              c:identifier="clutter_actor_queue_redraw_with_clip"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9323">Queues a redraw on @self limited to a specific, actor-relative
rectangular area.

If @clip is %NULL this function is equivalent to
clutter_actor_queue_redraw().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="371"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9325">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="clip"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9326">a rectangular clip region, or %NULL</doc>
            <type name="cairo.RectangleInt"
                  c:type="const cairo_rectangle_int_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_relayout"
              c:identifier="clutter_actor_queue_relayout"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="9366">Indicates that the actor's size request or other layout-affecting
properties may have changed. This function is used inside #ClutterActor
subclass implementations, not by applications directly.

Queueing a new layout automatically queues a redraw as well.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="374"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="9368">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="realize"
              c:identifier="clutter_actor_realize"
              deprecated="1"
              deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2069">Realization informs the actor that it is attached to a stage. It
can use this to allocate resources if it wanted to delay allocation
until it would be rendered. However it is perfectly acceptable for
an actor to create resources before being realized because Clutter
only ever has a single rendering context so that actor is free to
be moved from one stage to another.

This function does nothing if the actor is already realized.

Because a realized actor must have realized parent actors, calling
clutter_actor_realize() will also realize all parents of the actor.

This function does not realize child actors, except in the special
case that realizing the stage, when the stage is visible, will
suddenly map (and thus realize) the children of the stage.</doc>
        <doc-deprecated xml:space="preserve">Actors are automatically realized, and nothing
  requires explicit realization.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="349"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2071">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_action"
              c:identifier="clutter_actor_remove_action"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16812">Removes @action from the list of actions applied to @self

The reference held by @self on the #ClutterAction will be released</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16814">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16815">a #ClutterAction</doc>
            <type name="Action" c:type="ClutterAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_action_by_name"
              c:identifier="clutter_actor_remove_action_by_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16845">Removes the #ClutterAction with the given name from the list
of actions applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-action.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16847">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16848">the name of the action to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all_children"
              c:identifier="clutter_actor_remove_all_children"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13545">Removes all children of @self.

This function releases the reference added by inserting a child actor
in the list of children of @self.

If the reference count of a child drops to zero, the child will be
destroyed. If you want to ensure the destruction of all the children
of @self, use clutter_actor_destroy_all_children().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="705"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13547">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_all_transitions"
              c:identifier="clutter_actor_remove_all_transitions"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19740">Removes all transitions associated to @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="876"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19742">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_child"
              c:identifier="clutter_actor_remove_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13514">Removes @child from the children of @self.

This function will release the reference added by
clutter_actor_add_child(), so if you want to keep using @child
you will have to acquire a referenced on it before calling this
function.

This function will emit the #ClutterContainer::actor-removed
signal on @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="702"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13516">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13517">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_clip" c:identifier="clutter_actor_remove_clip">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12700">Removes clip area from @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="566"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12702">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_constraint"
              c:identifier="clutter_actor_remove_constraint"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17018">Removes @constraint from the list of constraints applied to @self

The reference held by @self on the #ClutterConstraint will be released</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17020">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17021">a #ClutterConstraint</doc>
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_constraint_by_name"
              c:identifier="clutter_actor_remove_constraint_by_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17054">Removes the #ClutterConstraint with the given name from the list
of constraints applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17056">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17057">the name of the constraint to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_effect"
              c:identifier="clutter_actor_remove_effect"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17268">Removes @effect from the list of effects applied to @self

The reference held by @self on the #ClutterEffect will be released</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17270">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17271">a #ClutterEffect</doc>
            <type name="Effect" c:type="ClutterEffect*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_effect_by_name"
              c:identifier="clutter_actor_remove_effect_by_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17293">Removes the #ClutterEffect with the given name from the list
of effects applied to @self</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17295">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17296">the name of the effect to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_transition"
              c:identifier="clutter_actor_remove_transition"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19673">Removes the transition stored inside a #ClutterActor using @name
identifier.

If the transition is currently in progress, it will be stopped.

This function releases the reference acquired when the transition
was added to the #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="873"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19675">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19676">the name of the transition to remove</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_child"
              c:identifier="clutter_actor_replace_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13666">Replaces @old_child with @new_child in the list of children of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="698"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13668">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="old_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13669">the child of @self to replace</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="new_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13670">the #ClutterActor to replace @old_child</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="restore_easing_state"
              c:identifier="clutter_actor_restore_easing_state"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20025">Restores the easing state as it was prior to a call to
clutter_actor_save_easing_state().</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="849"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20027">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="save_easing_state"
              c:identifier="clutter_actor_save_easing_state"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19990">Saves the current easing state for animatable properties, and creates
a new state with the default values for easing mode and duration.

New transitions created after calling this function will inherit the
duration, easing mode, and delay of the new easing state; this also
applies to transitions modified in flight.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="847"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19992">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allocation"
              c:identifier="clutter_actor_set_allocation"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10465">Stores the allocation of @self as defined by @box.

This function can only be called from within the implementation of
the #ClutterActorClass.allocate() virtual function.

The allocation should have been adjusted to take into account constraints,
alignment, and margin properties. If you are implementing a #ClutterActor
subclass that provides its own layout management policy for its children
instead of using a #ClutterLayoutManager delegate, you should not call
this function on the children of @self; instead, you should call
clutter_actor_allocate(), which will adjust the allocation box for
you.

This function should only be used by subclasses of #ClutterActor
that wish to store their allocation but cannot chain up to the
parent's implementation; the default implementation of the
#ClutterActorClass.allocate() virtual function will call this
function.

It is important to note that, while chaining up was the recommended
behaviour for #ClutterActor subclasses prior to the introduction of
this function, it is recommended to call clutter_actor_set_allocation()
instead.

If the #ClutterActor is using a #ClutterLayoutManager delegate object
to handle the allocation of its children, this function will call
the clutter_layout_manager_allocate() function only if the
%CLUTTER_DELEGATE_LAYOUT flag is set on @flags, otherwise it is
expected that the subclass will call clutter_layout_manager_allocate()
by itself. For instance, the following code:

|[&lt;!-- language="C" --&gt;
static void
my_actor_allocate (ClutterActor *actor,
                   const ClutterActorBox *allocation,
                   ClutterAllocationFlags flags)
{
  ClutterActorBox new_alloc;
  ClutterAllocationFlags new_flags;

  adjust_allocation (allocation, &amp;new_alloc);

  new_flags = flags | CLUTTER_DELEGATE_LAYOUT;

  // this will use the layout manager set on the actor
  clutter_actor_set_allocation (actor, &amp;new_alloc, new_flags);
}
]|

is equivalent to this:

|[&lt;!-- language="C" --&gt;
static void
my_actor_allocate (ClutterActor *actor,
                   const ClutterActorBox *allocation,
                   ClutterAllocationFlags flags)
{
  ClutterLayoutManager *layout;
  ClutterActorBox new_alloc;

  adjust_allocation (allocation, &amp;new_alloc);

  clutter_actor_set_allocation (actor, &amp;new_alloc, flags);

  layout = clutter_actor_get_layout_manager (actor);
  clutter_layout_manager_allocate (layout,
                                   CLUTTER_CONTAINER (actor),
                                   &amp;new_alloc,
                                   flags);
}
]|</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="439"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10467">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10468">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10469">allocation flags</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_anchor_point"
              c:identifier="clutter_actor_set_anchor_point"
              version="0.6"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14114">Sets an anchor point for @self. The anchor point is a point in the
coordinate space of an actor to which the actor position within its
parent is relative; the default is (0, 0), i.e. the top-left corner
of the actor.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14116">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="anchor_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14117">X coordinate of the anchor point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="anchor_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14118">Y coordinate of the anchor point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_anchor_point_from_gravity"
              c:identifier="clutter_actor_set_anchor_point_from_gravity"
              version="0.6"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14300">Sets an anchor point on the actor, based on the given gravity (this is a
convenience function wrapping clutter_actor_set_anchor_point()).

Since version 1.0 the anchor point will be stored as a gravity so
that if the actor changes size then the anchor point will move. For
example, if you set the anchor point to %CLUTTER_GRAVITY_SOUTH_EAST
and later double the size of the actor, the anchor point will move
to the bottom right.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point and
clutter_actor_set_translation() instead. E.g. For %CLUTTER_GRAVITY_CENTER set
pivot_point to (0.5,0.5) and the translation to (width/2,height/2).</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14302">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="gravity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14303">#ClutterGravity.</doc>
            <type name="Gravity" c:type="ClutterGravity"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_background_color"
              c:identifier="clutter_actor_set_background_color"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18837">Sets the background color of a #ClutterActor.

The background color will be used to cover the whole allocation of the
actor. The default background color of an actor is transparent.

To check whether an actor has a background color, you can use the
#ClutterActor:background-color-set actor property.

The #ClutterActor:background-color property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="637"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18839">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18840">a #ClutterColor, or %NULL to unset a previously
 set color</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_above_sibling"
              c:identifier="clutter_actor_set_child_above_sibling"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13764">Sets @child to be above @sibling in the list of children of @self.

If @sibling is %NULL, @child will be the new last child of @self.

This function is logically equivalent to removing @child and using
clutter_actor_insert_child_above(), but it will not emit signals
or change state on @child.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="735"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13766">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13767">a #ClutterActor child of @self</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13768">a #ClutterActor child of @self, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_at_index"
              c:identifier="clutter_actor_set_child_at_index"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13863">Changes the index of @child in the list of children of @self.

This function is logically equivalent to removing @child and
calling clutter_actor_insert_child_at_index(), but it will not
emit signals or change state on @child.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="739"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13865">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13866">a #ClutterActor child of @self</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13867">the new index for @child</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_below_sibling"
              c:identifier="clutter_actor_set_child_below_sibling"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13816">Sets @child to be below @sibling in the list of children of @self.

If @sibling is %NULL, @child will be the new first child of @self.

This function is logically equivalent to removing @self and using
clutter_actor_insert_child_below(), but it will not emit signals
or change state on @child.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="731"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13818">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13819">a #ClutterActor child of @self</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13820">a #ClutterActor child of @self, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_transform"
              c:identifier="clutter_actor_set_child_transform"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20894">Sets the transformation matrix to be applied to all the children
of @self prior to their own transformations. The default child
transformation is the identity matrix.

If @transform is %NULL, the child transform will be unset.

The #ClutterActor:child-transform property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="813"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20896">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="transform"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20897">a #ClutterMatrix, or %NULL</doc>
            <type name="Matrix" c:type="const ClutterMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip"
              c:identifier="clutter_actor_set_clip"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12650">Sets clip area for @self. The clip area is always computed from the
upper left corner of the actor, even if the anchor point is set
otherwise.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="560"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12652">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="xoff" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12653">X offset of the clip rectangle</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="yoff" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12654">Y offset of the clip rectangle</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12655">Width of the clip rectangle</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12656">Height of the clip rectangle</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_clip_to_allocation"
              c:identifier="clutter_actor_set_clip_to_allocation"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="17159">Sets whether @self should be clipped to the same size as its
allocation</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="576"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17161">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="clip_set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17162">%TRUE to apply a clip tracking the allocation</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content"
              c:identifier="clutter_actor_set_content"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20063">Sets the contents of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="611"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20065">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="content"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20066">a #ClutterContent, or %NULL</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_gravity"
              c:identifier="clutter_actor_set_content_gravity"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20157">Sets the gravity of the #ClutterContent used by @self.

See the description of the #ClutterActor:content-gravity property for
more information.

The #ClutterActor:content-gravity property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="616"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20159">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="gravity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20160">the #ClutterContentGravity</doc>
            <type name="ContentGravity" c:type="ClutterContentGravity"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_repeat"
              c:identifier="clutter_actor_set_content_repeat"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20769">Sets the policy for repeating the #ClutterActor:content of a
#ClutterActor. The behaviour is deferred to the #ClutterContent
implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="629"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20771">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="repeat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20772">the repeat policy</doc>
            <type name="ContentRepeat" c:type="ClutterContentRepeat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_scaling_filters"
              c:identifier="clutter_actor_set_content_scaling_filters"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20417">Sets the minification and magnification filter to be applied when
scaling the #ClutterActor:content of a #ClutterActor.

The #ClutterActor:minification-filter will be used when reducing
the size of the content; the #ClutterActor:magnification-filter
will be used when increasing the size of the content.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="621"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20419">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="min_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20420">the minification filter for the content</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter"/>
          </parameter>
          <parameter name="mag_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20421">the magnification filter for the content</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_depth"
              c:identifier="clutter_actor_set_depth"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12421">Sets the Z coordinate of @self to @depth.

The unit used by @depth is dependant on the perspective setup. See
also clutter_stage_set_perspective().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_z_position() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12423">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12424">Z co-ord</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_delay"
              c:identifier="clutter_actor_set_easing_delay"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19878">Sets the delay that should be applied before tweening animatable
properties.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="861"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19880">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19881">the delay before the start of the tweening, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_duration"
              c:identifier="clutter_actor_set_easing_duration"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19762">Sets the duration of the tweening for animatable properties
of @self for the current easing state.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="856"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19764">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19765">the duration of the easing, or %NULL</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_mode"
              c:identifier="clutter_actor_set_easing_mode"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19819">Sets the easing mode for the tweening of animatable properties
of @self.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="851"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19821">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19822">an easing mode, excluding %CLUTTER_CUSTOM_MODE</doc>
            <type name="AnimationMode" c:type="ClutterAnimationMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fixed_position_set"
              c:identifier="clutter_actor_set_fixed_position_set"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10642">Sets whether an actor has a fixed position set (and will thus be
unaffected by any layout manager).</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="470"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10644">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="is_set" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10645">whether to use fixed position</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="clutter_actor_set_flags"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16310">Sets @flags on @self

This function will emit notifications for the changed properties</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="337"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16312">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16313">the flags to set</doc>
            <type name="ActorFlags" c:type="ClutterActorFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_height"
              c:identifier="clutter_actor_set_height"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11481">Forces a height on an actor, causing the actor's preferred width
and height (if any) to be ignored.

If @height is -1 the actor will use its preferred height instead of
overriding it, i.e. you can "unset" the height with -1.

This function sets both the minimum and natural size of the actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="486"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11483">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11484">Requested new height for the actor, in pixels, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout_manager"
              c:identifier="clutter_actor_set_layout_manager"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18280">Sets the #ClutterLayoutManager delegate object that will be used to
lay out the children of @self.

The #ClutterActor will take a reference on the passed @manager which
will be released either when the layout manager is removed, or when
the actor is destroyed.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="504"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18282">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="manager"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18283">a #ClutterLayoutManager, or %NULL to unset it</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_margin"
              c:identifier="clutter_actor_set_margin"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18568">Sets all the components of the margin of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="539"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18570">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18571">a #ClutterMargin</doc>
            <type name="Margin" c:type="const ClutterMargin*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_margin_bottom"
              c:identifier="clutter_actor_set_margin_bottom"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18672">Sets the margin from the bottom of a #ClutterActor.

The #ClutterActor:margin-bottom property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="524"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18674">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18675">the bottom margin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_margin_left"
              c:identifier="clutter_actor_set_margin_left"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18720">Sets the margin from the left of a #ClutterActor.

The #ClutterActor:margin-left property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="529"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18722">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18723">the left margin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_margin_right"
              c:identifier="clutter_actor_set_margin_right"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18768">Sets the margin from the right of a #ClutterActor.

The #ClutterActor:margin-right property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="534"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18770">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18771">the right margin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_margin_top"
              c:identifier="clutter_actor_set_margin_top"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18624">Sets the margin from the top of a #ClutterActor.

The #ClutterActor:margin-top property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="519"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18626">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="margin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18627">the top margin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="clutter_actor_set_name">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12191">Sets the given name to @self. The name can be used to identify
a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="378"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12193">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12194">Textual tag to apply to actor</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_offscreen_redirect"
              c:identifier="clutter_actor_set_offscreen_redirect"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12078">Defines the circumstances where the actor should be redirected into
an offscreen image. The offscreen image is used to flatten the
actor into a single image while painting for two main reasons.
Firstly, when the actor is painted a second time without any of its
contents changing it can simply repaint the cached image without
descending further down the actor hierarchy. Secondly, it will make
the opacity look correct even if there are overlapping primitives
in the actor.

Caching the actor could in some cases be a performance win and in
some cases be a performance lose so it is important to determine
which value is right for an actor before modifying this value. For
example, there is never any reason to flatten an actor that is just
a single texture (such as a #ClutterTexture) because it is
effectively already cached in an image so the offscreen would be
redundant. Also if the actor contains primitives that are far apart
with a large transparent area in the middle (such as a large
CluterGroup with a small actor in the top left and a small actor in
the bottom right) then the cached image will contain the entire
image of the large area and the paint will waste time blending all
of the transparent pixels in the middle.

The default method of implementing opacity on a container simply
forwards on the opacity to all of the children. If the children are
overlapping then it will appear as if they are two separate glassy
objects and there will be a break in the color where they
overlap. By redirecting to an offscreen buffer it will be as if the
two opaque objects are combined into one and then made transparent
which is usually what is expected.

The image below demonstrates the difference between redirecting and
not. The image shows two Clutter groups, each containing a red and
a green rectangle which overlap. The opacity on the group is set to
128 (which is 50%). When the offscreen redirect is not used, the
red rectangle can be seen through the blue rectangle as if the two
rectangles were separately transparent. When the redirect is used
the group as a whole is transparent instead so the red rectangle is
not visible where they overlap.

&lt;figure id="offscreen-redirect"&gt;
  &lt;title&gt;Sample of using an offscreen redirect for transparency&lt;/title&gt;
  &lt;graphic fileref="offscreen-redirect.png" format="PNG"/&gt;
&lt;/figure&gt;

The default value for this property is 0, so we effectively will
never redirect an actor offscreen by default. This means that there
are times that transparent actors may look glassy as described
above. The reason this is the default is because there is a
performance trade off between quality and performance here. In many
cases the default form of glassy opacity looks good enough, but if
it's not you will need to set the
%CLUTTER_OFFSCREEN_REDIRECT_AUTOMATIC_FOR_OPACITY flag to enable
redirection for opacity.

Custom actors that don't contain any overlapping primitives are
recommended to override the has_overlaps() virtual to return %FALSE
for maximum efficiency.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="590"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12080">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="redirect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12081">New offscreen redirect flags for the actor.</doc>
            <type name="OffscreenRedirect" c:type="ClutterOffscreenRedirect"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_opacity" c:identifier="clutter_actor_set_opacity">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11972">Sets the actor's opacity, with zero being completely transparent and
255 (0xff) being fully opaque.

The #ClutterActor:opacity property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="581"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11974">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11975">New opacity value for the actor.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_opacity_override"
              c:identifier="clutter_actor_set_opacity_override"
              stability="Unstable">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15979">Allows overriding the calculated paint opacity (as returned by
clutter_actor_get_paint_opacity()). This is used internally by
ClutterClone and ClutterOffscreenEffect, and should be used by
actors that need to mimick those.

In almost all cases this should not used by applications.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="882"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15981">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="opacity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15982">the override opacity value, or -1 to reset</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_parent"
              c:identifier="clutter_actor_set_parent"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13439">Sets the parent of @self to @parent.

This function will result in @parent acquiring a reference on @self,
eventually by sinking its floating reference first. The reference
will be released by clutter_actor_unparent().

This function should only be called by legacy #ClutterActor&lt;!-- --&gt;s
implementing the #ClutterContainer interface.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13441">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="parent" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13442">A new #ClutterActor parent</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pivot_point"
              c:identifier="clutter_actor_set_pivot_point"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12318">Sets the position of the #ClutterActor:pivot-point around which the
scaling and rotation transformations occur.

The pivot point's coordinates are in normalized space, with the (0, 0)
point being the top left corner of the actor, and the (1, 1) point being
the bottom right corner.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="764"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12320">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pivot_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12321">the normalized X coordinate of the pivot point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="pivot_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12322">the normalized Y coordinate of the pivot point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pivot_point_z"
              c:identifier="clutter_actor_set_pivot_point_z"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12379">Sets the component on the Z axis of the #ClutterActor:pivot-point around
which the scaling and rotation transformations occur.

The @pivot_z value is expressed as a distance along the Z axis.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="772"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12381">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="pivot_z" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12382">the Z coordinate of the actor's pivot point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_position" c:identifier="clutter_actor_set_position">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10590">Sets the actor's fixed position in pixels relative to any parent
actor.

If a layout manager is in use, this position will override the
layout manager and force a fixed position.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="460"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10592">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10593">New left position of actor in pixels.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10594">New top position of actor in pixels.</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reactive"
              c:identifier="clutter_actor_set_reactive"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="14070">Sets @actor as reactive. Reactive actors will receive events.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="652"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14072">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="reactive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="14073">whether the actor should be reactive to events</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_request_mode"
              c:identifier="clutter_actor_set_request_mode"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="10943">Sets the geometry request mode of @self.

The @mode determines the order for invoking
clutter_actor_get_preferred_width() and
clutter_actor_get_preferred_height()</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="396"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10945">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="10946">the request mode</doc>
            <type name="RequestMode" c:type="ClutterRequestMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rotation"
              c:identifier="clutter_actor_set_rotation"
              version="0.8"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12465">Sets the rotation angle of @self around the given axis.

The rotation center coordinates used depend on the value of @axis:

 - %CLUTTER_X_AXIS requires @y and @z
 - %CLUTTER_Y_AXIS requires @x and @z
 - %CLUTTER_Z_AXIS requires @x and @y

The rotation coordinates are relative to the anchor point of the
actor, set using clutter_actor_set_anchor_point(). If no anchor
point is set, the upper left corner is assumed as the origin.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_rotation_angle() and
  clutter_actor_set_pivot_point() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12467">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12468">the axis of rotation</doc>
            <type name="RotateAxis" c:type="ClutterRotateAxis"/>
          </parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12469">the angle of rotation</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12470">X coordinate of the rotation center</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12471">Y coordinate of the rotation center</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="z" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12472">Z coordinate of the rotation center</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_rotation_angle"
              c:identifier="clutter_actor_set_rotation_angle"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4915">Sets the @angle of rotation of a #ClutterActor on the given @axis.

This function is a convenience for setting the rotation properties
#ClutterActor:rotation-angle-x, #ClutterActor:rotation-angle-y,
and #ClutterActor:rotation-angle-z.

The center of rotation is established by the #ClutterActor:pivot-point
property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="777"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4917">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4918">the axis to set the angle one</doc>
            <type name="RotateAxis" c:type="ClutterRotateAxis"/>
          </parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4919">the angle of rotation, in degrees</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale"
              c:identifier="clutter_actor_set_scale"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11747">Scales an actor with the given factors.

The scale transformation is relative the the #ClutterActor:pivot-point.

The #ClutterActor:scale-x and #ClutterActor:scale-y properties are
animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="784"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11749">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="scale_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11750">double factor to scale actor by horizontally.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="scale_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11751">double factor to scale actor by vertically.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale_full"
              c:identifier="clutter_actor_set_scale_full"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11799">Scales an actor with the given factors around the given center
point. The center point is specified in pixels relative to the
anchor point (usually the top left corner of the actor).

The #ClutterActor:scale-x and #ClutterActor:scale-y properties
are animatable.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_pivot_point() to control
  the scale center</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11801">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="scale_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11802">double factor to scale actor by horizontally.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="scale_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11803">double factor to scale actor by vertically.</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="center_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11804">X coordinate of the center of the scaling</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="center_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11805">Y coordinate of the center of the scaling</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scale_z"
              c:identifier="clutter_actor_set_scale_z"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11777">Scales an actor on the Z axis by the given @scale_z factor.

The scale transformation is relative the the #ClutterActor:pivot-point.

The #ClutterActor:scale-z property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="792"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11779">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="scale_z" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11780">the scaling factor along the Z axis</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="clutter_actor_set_size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11067">Sets the actor's size request in pixels. This overrides any
"normal" size request the actor would have. For example
a text actor might normally request the size of the text;
this function would force a specific size instead.

If @width and/or @height are -1 the actor will use its
"normal" size request instead of overriding it, i.e.
you can "unset" the size with -1.

This function sets or unsets both the minimum and natural size.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="452"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11069">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11070">New width of actor in pixels, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11071">New height of actor in pixels, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text_direction"
              c:identifier="clutter_actor_set_text_direction"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16582">Sets the #ClutterTextDirection for an actor

The passed text direction must not be %CLUTTER_TEXT_DIRECTION_DEFAULT

If @self implements #ClutterContainer then this function will recurse
inside all the children of @self (including the internal ones).

Composite actors not implementing #ClutterContainer, or actors requiring
special handling when the text direction changes, should connect to
the #GObject::notify signal for the #ClutterActor:text-direction property</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="676"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16584">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="text_dir" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16585">the text direction for @self</doc>
            <type name="TextDirection" c:type="ClutterTextDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transform"
              c:identifier="clutter_actor_set_transform"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16457">Overrides the transformations of a #ClutterActor with a custom
matrix, which will be applied relative to the origin of the
actor's allocation and to the actor's pivot point.

The #ClutterActor:transform property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="807"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16459">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="transform"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16460">a #ClutterMatrix, or %NULL to
  unset a custom transformation</doc>
            <type name="Matrix" c:type="const ClutterMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_translation"
              c:identifier="clutter_actor_set_translation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="4816">Sets an additional translation transformation on a #ClutterActor,
relative to the #ClutterActor:pivot-point.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="797"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4818">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="translate_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4819">the translation along the X axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="translate_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4820">the translation along the Y axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="translate_z" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="4821">the translation along the Z axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width"
              c:identifier="clutter_actor_set_width"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11434">Forces a width on an actor, causing the actor's preferred width
and height (if any) to be ignored.

If @width is -1 the actor will use its preferred width request
instead of overriding it, i.e. you can "unset" the width with -1.

This function sets both the minimum and natural size of the actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="483"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11436">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11437">Requested new width for the actor, in pixels, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_x" c:identifier="clutter_actor_set_x" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11599">Sets the actor's X coordinate, relative to its parent, in pixels.

Overrides any layout manager and forces a fixed position for
the actor.

The #ClutterActor:x property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="493"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11601">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11602">the actor's position on the X axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_x_align"
              c:identifier="clutter_actor_set_x_align"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18444">Sets the horizontal alignment policy of a #ClutterActor, in case the
actor received extra horizontal space.

See also the #ClutterActor:x-align property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="509"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18446">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18447">the horizontal alignment policy</doc>
            <type name="ActorAlign" c:type="ClutterActorAlign"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_x_expand"
              c:identifier="clutter_actor_set_x_expand"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20533">Sets whether a #ClutterActor should expand horizontally; this means
that layout manager should allocate extra space for the actor, if
possible.

Setting an actor to expand will also make all its parent expand, so
that it's possible to build an actor tree and only set this flag on
its leaves and not on every single actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="545"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20535">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="expand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20536">whether the actor should expand horizontally</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_y" c:identifier="clutter_actor_set_y" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="11626">Sets the actor's Y coordinate, relative to its parent, in pixels.#

Overrides any layout manager and forces a fixed position for
the actor.

The #ClutterActor:y property is animatable.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="496"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11628">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="11629">the actor's position on the Y axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_y_align"
              c:identifier="clutter_actor_set_y_align"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="18495">Sets the vertical alignment policy of a #ClutterActor, in case the
actor received extra vertical space.

See also the #ClutterActor:y-align property.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="514"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18497">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="y_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="18498">the vertical alignment policy</doc>
            <type name="ActorAlign" c:type="ClutterActorAlign"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_y_expand"
              c:identifier="clutter_actor_set_y_expand"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="20592">Sets whether a #ClutterActor should expand horizontally; this means
that layout manager should allocate extra space for the actor, if
possible.

Setting an actor to expand will also make all its parent expand, so
that it's possible to build an actor tree and only set this flag on
its leaves and not on every single actor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="550"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20594">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="expand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="20595">whether the actor should expand vertically</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_z_position"
              c:identifier="clutter_actor_set_z_position"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12274">Sets the actor's position on the Z axis.

See #ClutterActor:z-position.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="499"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12276">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="z_position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12277">the position on the Z axis</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_z_rotation_from_gravity"
              c:identifier="clutter_actor_set_z_rotation_from_gravity"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="12515">Sets the rotation angle of @self around the Z axis using the center
point specified as a compass point. For example to rotate such that
the center of the actor remains static you can use
%CLUTTER_GRAVITY_CENTER. If the actor changes size the center point
will move accordingly.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_rotation_angle() and
  clutter_actor_set_pivot_point() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12517">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12518">the angle of rotation</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="gravity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="12519">the center point of the rotation</doc>
            <type name="Gravity" c:type="ClutterGravity"/>
          </parameter>
        </parameters>
      </method>
      <method name="should_pick_paint"
              c:identifier="clutter_actor_should_pick_paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2395">Should be called inside the implementation of the
#ClutterActor::pick virtual function in order to check whether
the actor should paint itself in pick mode or not.

This function should never be called directly by applications.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="595"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="2405">%TRUE if the actor should paint its silhouette,
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2397">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="clutter_actor_show">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1881">Flags an actor to be displayed. An actor that isn't shown will not
be rendered on the stage.

Actors are visible by default.

If this function is called on an actor without a parent, the
#ClutterActor:show-on-set-parent will be set to %TRUE as a side
effect.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="345"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1883">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_all"
              c:identifier="clutter_actor_show_all"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1961">Calls clutter_actor_show() on all children of an actor (if any).</doc>
        <doc-deprecated xml:space="preserve">Actors are visible by default</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1963">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="transform_stage_point"
              c:identifier="clutter_actor_transform_stage_point"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="15201">This function translates screen coordinates (@x, @y) to
coordinates relative to the actor. For example, it can be used to translate
screen events from global screen coordinates into actor-local coordinates.

The conversion can fail, notably if the transform stack results in the
actor being projected on the screen as a mere line.

The conversion should not be expected to be pixel-perfect due to the
nature of the operation. In general the error grows when the skewing
of the actor rectangle on screen increases.

This function can be computationally intensive.

This function only works when the allocation is up-to-date, i.e. inside of
the #ClutterActorClass.paint() implementation</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="827"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="15225">%TRUE if conversion was successful.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15203">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15204">x screen coordinate of the point to unproject</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15205">y screen coordinate of the point to unproject</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="x_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15206">return location for the unprojected x coordinance</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="15207">return location for the unprojected y coordinance</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninhibit_culling"
              c:identifier="clutter_actor_uninhibit_culling">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16056">Decreases the culling inhibitor counter. See clutter_actor_inhibit_culling()
for when inhibit culling is necessary.

Calling this function without a matching call to
clutter_actor_inhibit_culling() is a programming error.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="890"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16058">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unmap" c:identifier="clutter_actor_unmap" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="1764">Unsets the %CLUTTER_ACTOR_MAPPED flag on the actor and possibly
unmaps its children if they were mapped.

Calling this function is not encouraged: the default #ClutterActor
implementation of #ClutterActorClass.unmap() will also unmap any
eventual children by default when their parent is unmapped.

When overriding #ClutterActorClass.unmap(), it is mandatory to
chain up to the parent implementation.

It is important to note that the implementation of the
#ClutterActorClass.unmap() virtual function may be called after
the #ClutterActorClass.destroy() or the #GObjectClass.dispose()
implementation, but it is guaranteed to be called before the
#GObjectClass.finalize() implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="355"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="1766">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unparent"
              c:identifier="clutter_actor_unparent"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="13705">Removes the parent of @self.

This will cause the parent of @self to release the reference
acquired when calling clutter_actor_set_parent(), so if you
want to keep @self you will have to acquire a reference of
your own, through g_object_ref().

This function should only be called by legacy #ClutterActor&lt;!-- --&gt;s
implementing the #ClutterContainer interface.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_remove_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="13707">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unrealize"
              c:identifier="clutter_actor_unrealize"
              deprecated="1"
              deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="2178">Unrealization informs the actor that it may be being destroyed or
moved to another stage. The actor may want to destroy any
underlying graphics resources at this point. However it is
perfectly acceptable for it to retain the resources until the actor
is destroyed because Clutter only ever uses a single rendering
context and all of the graphics resources are valid on any stage.

Because mapped actors must be realized, actors may not be
unrealized if they are mapped. This function hides the actor to be
sure it isn't mapped, an application-visible side effect that you
may not be expecting.

This function should not be called by application code.

This function should not really be in the public API, because
there isn't a good reason to call it. ClutterActor will already
unrealize things for you when it's important to do so.

If you were using clutter_actor_unrealize() in a dispose
implementation, then don't, just chain up to ClutterActor's
dispose.

If you were using clutter_actor_unrealize() to implement
unrealizing children of your container, then don't, ClutterActor
will already take care of that.</doc>
        <doc-deprecated xml:space="preserve">Actors are automatically unrealized, and nothing
  requires explicit realization.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="351"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="2180">A #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unset_flags"
              c:identifier="clutter_actor_unset_flags"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="16371">Unsets @flags on @self

This function will emit notifications for the changed properties</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="340"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16373">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="16374">the flags to unset</doc>
            <type name="ActorFlags" c:type="ClutterActorFlags"/>
          </parameter>
        </parameters>
      </method>
      <property name="actions"
                version="1.4"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7799">Adds a #ClutterAction to the actor</doc>
        <type name="Action"/>
      </property>
      <property name="allocation" version="0.8" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6920">The allocation for the actor, in pixels

This is property is read-only, but you might monitor it to know when an
actor moves or resizes</doc>
        <type name="ActorBox"/>
      </property>
      <property name="anchor-gravity"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7563">The anchor point expressed as a #ClutterGravity

It is highly recommended not to use #ClutterActor:anchor-x,
#ClutterActor:anchor-y, and #ClutterActor:anchor-gravity in newly
written code; the anchor point adds an additional translation that
will affect the actor's relative position with regards to its
parent, as well as the position of its children. This change needs
to always be taken into account when positioning the actor. It is
recommended to use the #ClutterActor:pivot-point property instead,
as it will affect only the transformations.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Gravity"/>
      </property>
      <property name="anchor-x"
                version="0.8"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7505">The X coordinate of an actor's anchor point, relative to
the actor coordinate space, in pixels.

It is highly recommended not to use #ClutterActor:anchor-x,
#ClutterActor:anchor-y, and #ClutterActor:anchor-gravity in newly
written code; the anchor point adds an additional translation that
will affect the actor's relative position with regards to its
parent, as well as the position of its children. This change needs
to always be taken into account when positioning the actor. It is
recommended to use the #ClutterActor:pivot-point property instead,
as it will affect only the transformations.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="anchor-y"
                version="0.8"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7534">The Y coordinate of an actor's anchor point, relative to
the actor coordinate space, in pixels

It is highly recommended not to use #ClutterActor:anchor-x,
#ClutterActor:anchor-y, and #ClutterActor:anchor-gravity in newly
written code; the anchor point adds an additional translation that
will affect the actor's relative position with regards to its
parent, as well as the position of its children. This change needs
to always be taken into account when positioning the actor. It is
recommended to use the #ClutterActor:pivot-point property instead,
as it will affect only the transformations.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="background-color"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8023">Paints a solid fill of the actor's allocation using the specified
color.

The #ClutterActor:background-color property is animatable.</doc>
        <type name="Color"/>
      </property>
      <property name="background-color-set"
                version="1.10"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8009">Whether the #ClutterActor:background-color property has been set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="child-transform"
                version="1.12"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7696">Applies a transformation matrix on each child of an actor.

Setting this property with a #ClutterMatrix will set the
#ClutterActor:child-transform-set property to %TRUE as a side effect;
setting this property with %NULL will set the
#ClutterActor:child-transform-set property to %FALSE.

The #ClutterActor:child-transform property is animatable.</doc>
        <type/>
      </property>
      <property name="child-transform-set"
                version="1.12"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7719">Whether the #ClutterActor:child-transform property is set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="clip-rect"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7169">The visible region of the actor, in actor-relative coordinates,
expressed as a #graphene_rect_t.

Setting this property to %NULL will unset the existing clip.

Setting this property will change the #ClutterActor:has-clip
property as a side effect.</doc>
        <type name="Graphene.Rect"/>
      </property>
      <property name="clip-to-allocation"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7751">Whether the clip region should track the allocated area
of the actor.

This property is ignored if a clip area has been explicitly
set using clutter_actor_set_clip().</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="constraints"
                version="1.4"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7813">Adds a #ClutterConstraint to the actor</doc>
        <type name="Constraint"/>
      </property>
      <property name="content"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8070">The #ClutterContent implementation that controls the content
of the actor.</doc>
        <type name="Content"/>
      </property>
      <property name="content-box" version="1.10" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8112">The bounding box for the #ClutterContent used by the actor.

The value of this property is controlled by the #ClutterActor:allocation
and #ClutterActor:content-gravity properties of #ClutterActor.

The bounding box for the content is guaranteed to never exceed the
allocation's of the actor.</doc>
        <type name="ActorBox"/>
      </property>
      <property name="content-gravity"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8085">The alignment that should be honoured by the #ClutterContent
set with the #ClutterActor:content property.

Changing the value of this property will change the bounding box of
the content; you can use the #ClutterActor:content-box property to
get the position and size of the content within the actor's
allocation.

This property is meaningful only for #ClutterContent implementations
that have a preferred size, and if the preferred size is smaller than
the actor's allocation.

The #ClutterActor:content-gravity property is animatable.</doc>
        <type name="ContentGravity"/>
      </property>
      <property name="content-repeat"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8150">The repeat policy for the actor's #ClutterActor:content.</doc>
        <type name="ContentRepeat"/>
      </property>
      <property name="depth"
                version="0.6"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7006">The position of the actor on the Z axis.

The #ClutterActor:depth property is relative to the parent's
modelview matrix.

Setting this property will call #ClutterContainerIface.sort_depth_order()
which is usually a no-op, and it's most likely not what you want.

The #ClutterActor:depth property is animatable.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:z-position instead.</doc-deprecated>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="effect"
                version="1.4"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7827">Adds #ClutterEffect to the list of effects be applied on a #ClutterActor</doc>
        <type name="Effect"/>
      </property>
      <property name="first-child" version="1.10" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8042">The actor's first child.</doc>
        <type name="Actor"/>
      </property>
      <property name="fixed-position-set"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6768">This flag controls whether the #ClutterActor:fixed-x and
#ClutterActor:fixed-y properties are used</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="fixed-x"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6732">The fixed X position of the actor in pixels.

Writing this property sets #ClutterActor:fixed-position-set
property as well, as a side effect</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="fixed-y"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6750">The fixed Y position of the actor in pixels.

Writing this property sets the #ClutterActor:fixed-position-set
property as well, as a side effect</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="has-clip" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7157">Whether the actor has the #ClutterActor:clip property set or not</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-pointer" version="1.2" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7784">Whether the actor contains the pointer of a #ClutterInputDevice
or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="height" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6692">Height of the actor (in pixels).  If written, forces the minimum and
natural size request of the actor to the given height. If read, returns
the allocated height if available, otherwise the height request.

The #ClutterActor:height property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="last-child" version="1.10" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8056">The actor's last child.</doc>
        <type name="Actor"/>
      </property>
      <property name="layout-manager"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7841">A delegate object for controlling the layout of the children of
an actor.</doc>
        <type name="LayoutManager"/>
      </property>
      <property name="magnification-filter"
                writable="1"
                transfer-ownership="none">
        <type name="ScalingFilter"/>
      </property>
      <property name="mapped" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7112">Whether the actor is mapped (will be painted when the stage
to which it belongs is mapped)</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="margin-bottom"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7943">The margin (in pixels) from the bottom of the actor.

This property adds a margin to the actor's preferred size; the margin
will be automatically taken into account when allocating the actor.

The #ClutterActor:margin-bottom property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="margin-left"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7965">The margin (in pixels) from the left of the actor.

This property adds a margin to the actor's preferred size; the margin
will be automatically taken into account when allocating the actor.

The #ClutterActor:margin-left property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="margin-right"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7987">The margin (in pixels) from the right of the actor.

This property adds a margin to the actor's preferred size; the margin
will be automatically taken into account when allocating the actor.

The #ClutterActor:margin-right property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="margin-top"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7921">The margin (in pixels) from the top of the actor.

This property adds a margin to the actor's preferred size; the margin
will be automatically taken into account when allocating the actor.

The #ClutterActor:margin-top property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="min-height"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6803">A forced minimum height request for the actor, in pixels

Writing this property sets the #ClutterActor:min-height-set property
as well, as a side effect. This property overrides the usual height
request of the actor.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="min-height-set"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6875">This flag controls whether the #ClutterActor:min-height property
is used</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="min-width"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6783">A forced minimum width request for the actor, in pixels

Writing this property sets the #ClutterActor:min-width-set property
as well, as a side effect.

This property overrides the usual width request of the actor.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="min-width-set"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6860">This flag controls whether the #ClutterActor:min-width property
is used</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="minification-filter"
                writable="1"
                transfer-ownership="none">
        <type name="ScalingFilter"/>
      </property>
      <property name="name"
                version="0.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7190">The name of the actor</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="natural-height"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6841">A forced natural height request for the actor, in pixels

Writing this property sets the #ClutterActor:natural-height-set
property as well, as a side effect. This property overrides the
usual height request of the actor</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="natural-height-set"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6905">This flag controls whether the #ClutterActor:natural-height property
is used</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="natural-width"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6822">A forced natural width request for the actor, in pixels

Writing this property sets the #ClutterActor:natural-width-set
property as well, as a side effect. This property overrides the
usual width request of the actor</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="natural-width-set"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6890">This flag controls whether the #ClutterActor:natural-width property
is used</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="offscreen-redirect"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7079">Determines the conditions in which the actor will be redirected
to an offscreen framebuffer while being painted. For example this
can be used to cache an actor in a framebuffer or for improved
handling of transparent actors. See
clutter_actor_set_offscreen_redirect() for details.</doc>
        <type name="OffscreenRedirect"/>
      </property>
      <property name="opacity" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7061">Opacity of an actor, between 0 (fully transparent) and
255 (fully opaque)

The #ClutterActor:opacity property is animatable.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="pivot-point"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7204">The point around which the scaling and rotation transformations occur.

The pivot point is expressed in normalized coordinates space, with (0, 0)
being the top left corner of the actor and (1, 1) the bottom right corner
of the actor.

The default pivot point is located at (0, 0).

The #ClutterActor:pivot-point property is animatable.</doc>
        <type name="Graphene.Point"/>
      </property>
      <property name="pivot-point-z"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7228">The Z component of the #ClutterActor:pivot-point, expressed as a value
along the Z axis.

The #ClutterActor:pivot-point-z property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="position"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6651">The position of the origin of the actor.

This property is a shorthand for setting and getting the
#ClutterActor:x and #ClutterActor:y properties at the same
time.

The #ClutterActor:position property is animatable.</doc>
        <type name="Graphene.Point"/>
      </property>
      <property name="reactive"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7141">Whether the actor is reactive to events or not

Only reactive actors will emit event-related signals</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="realized" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7127">Whether the actor has been realized</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="request-mode"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6939">Request mode for the #ClutterActor. The request mode determines the
type of geometry management used by the actor, either height for width
(the default) or width for height.

For actors implementing height for width, the parent container should get
the preferred width first, and then the preferred height for that width.

For actors implementing width for height, the parent container should get
the preferred height first, and then the preferred width for that height.

For instance:

|[&lt;!-- language="C" --&gt;
  ClutterRequestMode mode;
  gfloat natural_width, min_width;
  gfloat natural_height, min_height;

  mode = clutter_actor_get_request_mode (child);
  if (mode == CLUTTER_REQUEST_HEIGHT_FOR_WIDTH)
    {
      clutter_actor_get_preferred_width (child, -1,
                                         &amp;min_width,
                                         &amp;natural_width);
      clutter_actor_get_preferred_height (child, natural_width,
                                          &amp;min_height,
                                          &amp;natural_height);
    }
  else if (mode == CLUTTER_REQUEST_WIDTH_FOR_HEIGHT)
    {
      clutter_actor_get_preferred_height (child, -1,
                                          &amp;min_height,
                                          &amp;natural_height);
      clutter_actor_get_preferred_width (child, natural_height,
                                         &amp;min_width,
                                         &amp;natural_width);
    }
  else if (mode == CLUTTER_REQUEST_CONTENT_SIZE)
    {
      ClutterContent *content = clutter_actor_get_content (child);

      min_width, min_height = 0;
      natural_width = natural_height = 0;

      if (content != NULL)
        clutter_content_get_preferred_size (content, &amp;natural_width, &amp;natural_height);
    }
]|

will retrieve the minimum and natural width and height depending on the
preferred request mode of the #ClutterActor "child".

The clutter_actor_get_preferred_size() function will implement this
check for you.</doc>
        <type name="RequestMode"/>
      </property>
      <property name="resource-scale" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7362">The resource-scale of the #ClutterActor if any or -1 if not available</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="rotation-angle-x"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7375">The rotation angle on the X axis.

The #ClutterActor:rotation-angle-x property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="rotation-angle-y"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7394">The rotation angle on the Y axis

The #ClutterActor:rotation-angle-y property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="rotation-angle-z"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7413">The rotation angle on the Z axis

The #ClutterActor:rotation-angle-z property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="rotation-center-x"
                version="0.6"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7432">The rotation center on the X axis.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Graphene.Point3D"/>
      </property>
      <property name="rotation-center-y"
                version="0.6"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7450">The rotation center on the Y axis.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Graphene.Point3D"/>
      </property>
      <property name="rotation-center-z"
                version="0.6"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7468">The rotation center on the Z axis.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Graphene.Point3D"/>
      </property>
      <property name="rotation-center-z-gravity"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7486">The rotation center on the Z axis expressed as a #ClutterGravity.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Gravity"/>
      </property>
      <property name="scale-center-x"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7305">The horizontal center point for scaling</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="scale-center-y"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7324">The vertical center point for scaling</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="scale-gravity"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7343">The center point for scaling expressed as a #ClutterGravity</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor:pivot-point instead</doc-deprecated>
        <type name="Gravity"/>
      </property>
      <property name="scale-x"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7248">The horizontal scale of the actor.

The #ClutterActor:scale-x property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="scale-y"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7267">The vertical scale of the actor.

The #ClutterActor:scale-y property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="scale-z"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7286">The scale factor of the actor along the Z axis.

The #ClutterActor:scale-y property is animatable.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="show-on-set-parent"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7734">If %TRUE, the actor is automatically shown when parented.

Calling clutter_actor_hide() on an actor which has not been
parented will set this property to %FALSE as a side effect.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="size"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6711">The size of the actor.

This property is a shorthand for setting and getting the
#ClutterActor:width and #ClutterActor:height at the same time.

The #ClutterActor:size property is animatable.</doc>
        <type name="Graphene.Size"/>
      </property>
      <property name="text-direction"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7769">The direction of the text inside a #ClutterActor.</doc>
        <type name="TextDirection"/>
      </property>
      <property name="transform"
                version="1.12"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7651">Overrides the transformations of a #ClutterActor with a custom
matrix.

The matrix specified by the #ClutterActor:transform property is
applied to the actor and its children relative to the actor's
#ClutterActor:allocation and #ClutterActor:pivot-point.

Application code should rarely need to use this function directly.

Setting this property with a #ClutterMatrix will set the
#ClutterActor:transform-set property to %TRUE as a side effect;
setting this property with %NULL will set the
#ClutterActor:transform-set property to %FALSE.

The #ClutterActor:transform property is animatable.</doc>
        <type/>
      </property>
      <property name="transform-set" version="1.12" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7681">Whether the #ClutterActor:transform property is set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="translation-x"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7591">An additional translation applied along the X axis, relative
to the actor's #ClutterActor:pivot-point.

The #ClutterActor:translation-x property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="translation-y"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7611">An additional translation applied along the Y axis, relative
to the actor's #ClutterActor:pivot-point.

The #ClutterActor:translation-y property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="translation-z"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7631">An additional translation applied along the Z axis, relative
to the actor's #ClutterActor:pivot-point.

The #ClutterActor:translation-z property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="visible" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7098">Whether the actor is set to be visible or not

See also #ClutterActor:mapped</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="width" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6673">Width of the actor (in pixels). If written, forces the minimum and
natural size request of the actor to the given width. If read, returns
the allocated width if available, otherwise the width request.

The #ClutterActor:width property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="x" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6613">X coordinate of the actor in pixels. If written, forces a fixed
position for the actor. If read, returns the fixed position if any,
otherwise the allocation if available, otherwise 0.

The #ClutterActor:x property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="x-align"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7888">The alignment of an actor on the X axis, if the actor has been given
extra space for its allocation. See also the #ClutterActor:x-expand
property.</doc>
        <type name="ActorAlign"/>
      </property>
      <property name="x-expand"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7856">Whether a layout manager should assign more space to the actor on
the X axis.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="y" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="6632">Y coordinate of the actor in pixels. If written, forces a fixed
position for the actor.  If read, returns the fixed position if
any, otherwise the allocation if available, otherwise 0.

The #ClutterActor:y property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="y-align"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7905">The alignment of an actor on the Y axis, if the actor has been given
extra space for its allocation.</doc>
        <type name="ActorAlign"/>
      </property>
      <property name="y-expand"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7872">Whether a layout manager should assign more space to the actor on
the Y axis.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="z-position"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="7034">The actor's position on the Z axis, relative to the parent's
transformations.

Positive values will bring the actor's position nearer to the user,
whereas negative values will bring the actor's position farther from
the user.

The #ClutterActor:z-position does not affect the paint or allocation
order.

The #ClutterActor:z-position property is animatable.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="flags">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.h"
             line="123">#ClutterActorFlags</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="private_flags" readable="0" private="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ActorPrivate" c:type="ClutterActorPrivate*"/>
      </field>
      <glib:signal name="allocation-changed" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8732">The ::allocation-changed signal is emitted when the
#ClutterActor:allocation property changes. Usually, application
code should just use the notifications for the :allocation property
but if you want to track the allocation flags as well, for instance
to know whether the absolute origin of @actor changed, then you might
want use this signal instead.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8735">a #ClutterActorBox with the new allocation</doc>
            <type name="ActorBox"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8736">#ClutterAllocationFlags for the allocation</doc>
            <type name="AllocationFlags"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-press-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8367">The ::button-press-event signal is emitted each time a mouse button
is pressed on @actor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8375">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8370">a #ClutterButtonEvent</doc>
            <type name="ButtonEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-release-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8392">The ::button-release-event signal is emitted each time a mouse button
is released on @actor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8400">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8395">a #ClutterButtonEvent</doc>
            <type name="ButtonEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="captured-event"
                   when="last"
                   detailed="1"
                   version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8601">The ::captured-event signal is emitted when an event is captured
by Clutter. This signal will be emitted starting from the top-level
container (the #ClutterStage) to the actor which received the event
going down the hierarchy. This signal can be used to intercept every
event before the specialized events (like
ClutterActor::button-press-event or ::key-released-event) are
emitted.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8614">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8604">a #ClutterEvent</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="destroy"
                   when="cleanup"
                   no-recurse="1"
                   no-hooks="1"
                   version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8168">The ::destroy signal notifies that all references held on the
actor which emitted it should be released.

The ::destroy signal should be used by all holders of a reference
on @actor.

This signal might result in the finalization of the #ClutterActor
if all references are released.

Composite actors and actors implementing the #ClutterContainer
interface should override the default implementation of the
class handler of this signal and call clutter_actor_destroy() on
their children. When overriding the default class handler, it is
required to chain up to the parent's implementation.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="enter-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8551">The ::enter-event signal is emitted when the pointer enters the @actor</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8558">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8554">a #ClutterCrossingEvent</doc>
            <type name="CrossingEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8340">The ::event signal is emitted each time an event is received
by the @actor. This signal will be emitted on every actor,
following the hierarchy chain, until it reaches the top-level
container (the #ClutterStage).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8350">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8343">a #ClutterEvent</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="hide" when="first" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8212">The ::hide signal is emitted when an actor is no longer rendered
on the stage.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="key-focus-in" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8519">The ::key-focus-in signal is emitted when @actor receives key focus.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="key-focus-out" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8535">The ::key-focus-out signal is emitted when @actor loses key focus.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="key-press-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8442">The ::key-press-event signal is emitted each time a keyboard button
is pressed while @actor has key focus (see clutter_stage_set_key_focus()).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8450">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8445">a #ClutterKeyEvent</doc>
            <type name="KeyEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="key-release-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8467">The ::key-release-event signal is emitted each time a keyboard button
is released while @actor has key focus (see
clutter_stage_set_key_focus()).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8476">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8470">a #ClutterKeyEvent</doc>
            <type name="KeyEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="leave-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8576">The ::leave-event signal is emitted when the pointer leaves the @actor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8583">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8579">a #ClutterCrossingEvent</doc>
            <type name="CrossingEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="motion-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8493">The ::motion-event signal is emitted each time the mouse pointer is
moved over @actor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8501">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8496">a #ClutterMotionEvent</doc>
            <type name="MotionEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="paint"
                   when="last"
                   no-hooks="1"
                   version="0.8"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8632">The ::paint signal is emitted each time an actor is being painted.

Subclasses of #ClutterActor should override the #ClutterActorClass.paint
virtual function paint themselves in that function.

It is strongly discouraged to connect a signal handler to
the #ClutterActor::paint signal; if you want to change the paint
sequence of an existing #ClutterActor instance, either create a new
#ClutterActor class and override the #ClutterActorClass.paint virtual
function, or use a #ClutterEffect. The #ClutterActor::paint signal
will be removed in a future version of Clutter.</doc>
        <doc-deprecated xml:space="preserve">Override the #ClutterActorClass.paint virtual
  function, use a #ClutterContent implementation, or a #ClutterEffect
  instead of connecting to this signal.</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="paint_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8635">a #ClutterPaintContext</doc>
            <type name="PaintContext"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="parent-set" when="last" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8228">This signal is emitted when the parent of the actor changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="old_parent"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8231">the previous parent of the actor, or %NULL</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pick"
                   when="last"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8704">The ::pick signal is emitted each time an actor is being painted
in "pick mode". The pick mode is used to identify the actor during
the event handling phase, or by clutter_stage_get_actor_at_pos().

Subclasses of #ClutterActor should override the class signal handler
and paint themselves in that function.

It is possible to connect a handler to the ::pick signal in order
to set up some custom aspect of a paint in pick mode.</doc>
        <doc-deprecated xml:space="preserve">Override the #ClutterActorClass.pick virtual function
  instead.</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pick_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8707">a #ClutterPickContext</doc>
            <type name="PickContext"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="queue-redraw" when="last" no-hooks="1" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8246">The ::queue_redraw signal is emitted when clutter_actor_queue_redraw()
is called on @origin.

The default implementation for #ClutterActor chains up to the
parent actor and queues a redraw on the parent, thus "bubbling"
the redraw queue up through the actor graph. The default
implementation for #ClutterStage queues a clutter_stage_ensure_redraw()
in a main loop idle handler.

Note that the @origin actor may be the stage, or a container; it
does not have to be a leaf node in the actor graph.

Toolkits embedding a #ClutterStage which require a redraw and
relayout cycle can stop the emission of this signal using the
GSignal API, redraw the UI and then call clutter_stage_ensure_redraw()
themselves, like:

|[&lt;!-- language="C" --&gt;
  static void
  on_redraw_complete (gpointer data)
  {
    ClutterStage *stage = data;

    // execute the Clutter drawing pipeline
    clutter_stage_ensure_redraw (stage);
  }

  static void
  on_stage_queue_redraw (ClutterStage *stage)
  {
    // this prevents the default handler to run
    g_signal_stop_emission_by_name (stage, "queue-redraw");

    // queue a redraw with the host toolkit and call
    // a function when the redraw has been completed
    queue_a_redraw (G_CALLBACK (on_redraw_complete), stage);
  }
]|

Note: This signal is emitted before the Clutter paint
pipeline is executed. If you want to know when the pipeline has
been completed you should use clutter_threads_add_repaint_func()
or clutter_threads_add_repaint_func_full().</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="origin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8249">the actor which initiated the redraw request</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="volume" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8250">paint volume to redraw</doc>
            <type name="PaintVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="queue-relayout"
                   when="last"
                   no-hooks="1"
                   version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8314">The ::queue_layout signal is emitted when clutter_actor_queue_relayout()
is called on an actor.

The default implementation for #ClutterActor chains up to the
parent actor and queues a relayout on the parent, thus "bubbling"
the relayout queue up through the actor graph.

The main purpose of this signal is to allow relayout to be propagated
properly in the procense of #ClutterClone actors. Applications will
not normally need to connect to this signal.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="realize"
                   when="last"
                   version="0.8"
                   deprecated="1"
                   deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8665">The ::realize signal is emitted each time an actor is being
realized.</doc>
        <doc-deprecated xml:space="preserve">The signal should not be used in newly
  written code</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="scroll-event" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8417">The ::scroll-event signal is emitted each time the mouse is
scrolled on @actor</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8425">%TRUE if the event has been handled by the actor,
  or %FALSE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8420">a #ClutterScrollEvent</doc>
            <type name="ScrollEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show" when="first" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8196">The ::show signal is emitted when an actor is visible and
rendered on the stage.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="touch-event" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8807">The ::touch-event signal is emitted each time a touch
begin/end/update/cancel event.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="8815">%CLUTTER_EVENT_STOP if the event has been handled by
  the actor, or %CLUTTER_EVENT_PROPAGATE to continue the emission.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8810">a #ClutterEvent</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="transition-stopped"
                   when="last"
                   no-recurse="1"
                   detailed="1"
                   no-hooks="1"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8778">The ::transition-stopped signal is emitted once a transition
is stopped; a transition is stopped once it reached its total
duration (including eventual repeats), it has been stopped
using clutter_timeline_stop(), or it has been removed from the
transitions applied on @actor, using clutter_actor_remove_transition().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8781">the name of the transition</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="is_finished" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="8782">whether the transition was finished, or stopped</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="transitions-completed" when="last" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8761">The ::transitions-completed signal is emitted once all transitions
involving @actor are complete.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unrealize"
                   when="last"
                   version="0.8"
                   deprecated="1"
                   deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="8684">The ::unrealize signal is emitted each time an actor is being
unrealized.</doc>
        <doc-deprecated xml:space="preserve">The signal should not be used in newly
  written code</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <enumeration name="ActorAlign"
                 version="1.10"
                 glib:type-name="ClutterActorAlign"
                 glib:get-type="clutter_actor_align_get_type"
                 c:type="ClutterActorAlign">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1315">Controls how a #ClutterActor should align itself inside the extra space
assigned to it during the allocation.

Alignment only matters if the allocated space given to an actor is
bigger than its natural size; for example, when the #ClutterActor:x-expand
or the #ClutterActor:y-expand properties of #ClutterActor are set to %TRUE.</doc>
      <member name="fill"
              value="0"
              c:identifier="CLUTTER_ACTOR_ALIGN_FILL"
              glib:nick="fill">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1317">Stretch to cover the whole allocated space</doc>
      </member>
      <member name="start"
              value="1"
              c:identifier="CLUTTER_ACTOR_ALIGN_START"
              glib:nick="start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1318">Snap to left or top side, leaving space
  to the right or bottom. For horizontal layouts, in right-to-left
  locales this should be reversed.</doc>
      </member>
      <member name="center"
              value="2"
              c:identifier="CLUTTER_ACTOR_ALIGN_CENTER"
              glib:nick="center">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1321">Center the actor inside the allocation</doc>
      </member>
      <member name="end"
              value="3"
              c:identifier="CLUTTER_ACTOR_ALIGN_END"
              glib:nick="end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1322">Snap to right or bottom side, leaving space
  to the left or top. For horizontal layouts, in right-to-left locales
  this should be reversed.</doc>
      </member>
    </enumeration>
    <record name="ActorBox"
            c:type="ClutterActorBox"
            glib:type-name="ClutterActorBox"
            glib:get-type="clutter_actor_box_get_type"
            c:symbol-prefix="actor_box">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="129">Bounding box of an actor. The coordinates of the top left and right bottom
corners of an actor. The coordinates of the two points are expressed in
pixels with sub-pixel precision</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="147"/>
      <field name="x1" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="131">X coordinate of the top left corner</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y1" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="132">Y coordinate of the top left corner</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="x2" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="133">X coordinate of the bottom right corner</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y2" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="134">Y coordinate of the bottom right corner</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <constructor name="new"
                   c:identifier="clutter_actor_box_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="10">Allocates a new #ClutterActorBox using the passed coordinates
for the top left and bottom right points.

This function is the logical equivalent of:

|[
  clutter_actor_box_init (clutter_actor_box_alloc (),
                          x_1, y_1,
                          x_2, y_2);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="184"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="28">the newly allocated #ClutterActorBox.
  Use clutter_actor_box_free() to free the resources</doc>
          <type name="ActorBox" c:type="ClutterActorBox*"/>
        </return-value>
        <parameters>
          <parameter name="x_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="12">X coordinate of the top left point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="13">Y coordinate of the top left point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="x_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="14">X coordinate of the bottom right point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="15">Y coordinate of the bottom right point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="clamp_to_pixel"
              c:identifier="clutter_actor_box_clamp_to_pixel"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="436">Clamps the components of @box to the nearest integer</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box"
                              direction="inout"
                              caller-allocates="0"
                              transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="438">the #ClutterActorBox to clamp</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="contains"
              c:identifier="clutter_actor_box_contains"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="316">Checks whether a point with @x, @y coordinates is contained
withing @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="228"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="325">%TRUE if the point is contained by the #ClutterActorBox</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="318">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="319">X coordinate of the point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="320">Y coordinate of the point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="clutter_actor_box_copy" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="118">Copies @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="203"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="124">a newly allocated copy of #ClutterActorBox. Use
  clutter_actor_box_free() to free the allocated resources</doc>
          <type name="ActorBox" c:type="ClutterActorBox*"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="120">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="clutter_actor_box_equal"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="154">Checks @box_a and @box_b for equality</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="161">%TRUE if the passed #ClutterActorBox are equal</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="box_a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="156">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="box_b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="157">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_actor_box_free" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="138">Frees a #ClutterActorBox allocated using clutter_actor_box_new()
or clutter_actor_box_copy()</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="140">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="from_vertices"
              c:identifier="clutter_actor_box_from_vertices"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="340">Calculates the bounding box represented by the four vertices; for details
of the vertex array see clutter_actor_get_abs_allocation_vertices().</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="342">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="verts" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="343">array of four #graphene_point3d_t</doc>
            <array zero-terminated="0"
                   c:type="const graphene_point3d_t*"
                   fixed-size="4">
              <type name="Graphene.Point3D" c:type="graphene_point3d_t"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_area"
              c:identifier="clutter_actor_box_get_area"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="298">Retrieves the area of @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="226"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="304">the area of a #ClutterActorBox, in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="300">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="clutter_actor_box_get_height"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="232">Retrieves the height of the @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="216"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="238">the height of the box</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="234">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin"
              c:identifier="clutter_actor_box_get_origin"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="250">Retrieves the origin of @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="218"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="252">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="253">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="254">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size"
              c:identifier="clutter_actor_box_get_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="274">Retrieves the size of @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="222"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="276">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="277">return location for the width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="278">return location for the height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="clutter_actor_box_get_width"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="214">Retrieves the width of the @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="214"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="220">the width of the box</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="216">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_x"
              c:identifier="clutter_actor_box_get_x"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="178">Retrieves the X coordinate of the origin of @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="210"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="184">the X coordinate of the origin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="180">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_y"
              c:identifier="clutter_actor_box_get_y"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="196">Retrieves the Y coordinate of the origin of @box</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="212"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="202">the Y coordinate of the origin</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="198">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="clutter_actor_box_init" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="60">Initializes @box with the given coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="191"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="70">the initialized #ClutterActorBox</doc>
          <type name="ActorBox" c:type="ClutterActorBox*"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="62">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="x_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="63">X coordinate of the top left point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="64">Y coordinate of the top left point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="x_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="65">X coordinate of the bottom right point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="66">Y coordinate of the bottom right point</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_rect"
              c:identifier="clutter_actor_box_init_rect"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="91">Initializes @box with the given origin and size.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="197"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="93">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="94">X coordinate of the origin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="95">Y coordinate of the origin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="96">width of the box</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="97">height of the box</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="interpolate"
              c:identifier="clutter_actor_box_interpolate"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="408">Interpolates between @initial and @final #ClutterActorBox&lt;!-- --&gt;es
using @progress</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="initial" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="410">the initial #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="final" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="411">the final #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="412">the interpolation progress</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="413">return location for the interpolation</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="scale"
              c:identifier="clutter_actor_box_scale"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="597">Rescale the @box by provided @scale factor.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="256"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="599">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="600">scale factor for resizing this box</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_origin"
              c:identifier="clutter_actor_box_set_origin"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="500">Changes the origin of @box, maintaining the size of the #ClutterActorBox.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="502">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="503">the X coordinate of the new origin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="504">the Y coordinate of the new origin</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="clutter_actor_box_set_size"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="525">Sets the size of @box, maintaining the origin of the #ClutterActorBox.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="251"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="527">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="528">the new width</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="529">the new height</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="union"
              c:identifier="clutter_actor_box_union"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="455">Unions the two boxes @a and @b and stores the result in @result.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="242"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="457">the first #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="458">the second #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-box.c"
                 line="459">the #ClutterActorBox representing a union
  of @a and @b</doc>
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <function name="alloc"
                c:identifier="clutter_actor_box_alloc"
                version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="44">Allocates a new #ClutterActorBox.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="189"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-box.c"
               line="49">the newly allocated #ClutterActorBox.
  Use clutter_actor_box_free() to free its resources</doc>
          <type name="ActorBox" c:type="ClutterActorBox*"/>
        </return-value>
      </function>
    </record>
    <record name="ActorClass"
            c:type="ClutterActorClass"
            glib:is-gtype-struct-for="Actor">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="141">Base class for actors.</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="307"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="225"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="1883">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_all">
        <callback name="show_all">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="226"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="1963">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide">
        <callback name="hide">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="227"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="2009">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide_all">
        <callback name="hide_all">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="228"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="realize">
        <callback name="realize">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="229"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="2071">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unrealize">
        <callback name="unrealize">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="230"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="2180">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="map">
        <callback name="map">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="231"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="1665">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmap">
        <callback name="unmap">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="232"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="1766">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint">
        <callback name="paint">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="233"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="3936">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parent_set">
        <callback name="parent_set">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="235"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="old_parent" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="destroy">
        <callback name="destroy">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="238"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="8907">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pick">
        <callback name="pick">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="239"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="4247">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="pick_context" transfer-ownership="none">
              <type name="PickContext" c:type="ClutterPickContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="queue_redraw">
        <callback name="queue_redraw">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="242"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="leaf_that_queued" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="paint_volume" transfer-ownership="none">
              <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_preferred_width">
        <callback name="get_preferred_width">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="247"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9759">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="for_height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9760">available height when computing the preferred width,
  or a negative value to indicate that no height is defined</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="min_width_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9762">return location for minimum width,
  or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="natural_width_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9764">return location for the natural
  width, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_preferred_height">
        <callback name="get_preferred_height">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="251"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9925">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="for_width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9926">available width to assume in computing desired height,
  or a negative value to indicate that no width is defined</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="min_height_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9928">return location for minimum height,
  or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="natural_height_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9930">return location for natural
  height, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="allocate">
        <callback name="allocate">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="255"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="10320">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="box" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="10321">new allocation of the actor, in parent-relative coordinates</doc>
              <type name="ActorBox" c:type="const ClutterActorBox*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="10322">flags that control the allocation</doc>
              <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="apply_transform">
        <callback name="apply_transform">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="260"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type name="Matrix" c:type="ClutterMatrix*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="event">
        <callback name="event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="264"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="button_press_event">
        <callback name="button_press_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="266"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="ButtonEvent" c:type="ClutterButtonEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="button_release_event">
        <callback name="button_release_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="268"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="ButtonEvent" c:type="ClutterButtonEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="scroll_event">
        <callback name="scroll_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="270"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="ScrollEvent" c:type="ClutterScrollEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="key_press_event">
        <callback name="key_press_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="272"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="KeyEvent" c:type="ClutterKeyEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="key_release_event">
        <callback name="key_release_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="274"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="KeyEvent" c:type="ClutterKeyEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="motion_event">
        <callback name="motion_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="276"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="MotionEvent" c:type="ClutterMotionEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enter_event">
        <callback name="enter_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="278"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="CrossingEvent" c:type="ClutterCrossingEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="leave_event">
        <callback name="leave_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="280"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="CrossingEvent" c:type="ClutterCrossingEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="captured_event">
        <callback name="captured_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="282"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="key_focus_in">
        <callback name="key_focus_in">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="284"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="key_focus_out">
        <callback name="key_focus_out">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="285"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="queue_relayout">
        <callback name="queue_relayout">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="287"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="9368">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_accessible">
        <callback name="get_accessible">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="290"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="6305">the #AtkObject associated with @actor</doc>
            <type name="Atk.Object" c:type="AtkObject*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="6290">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_paint_volume">
        <callback name="get_paint_volume">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="292"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_overlaps">
        <callback name="has_overlaps">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="295"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="17961">%TRUE if the actor may have overlapping primitives, and
  %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor.c"
                   line="17948">A #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint_node">
        <callback name="paint_node">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="297"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="root" transfer-ownership="none">
              <type name="PaintNode" c:type="ClutterPaintNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="touch_event">
        <callback name="touch_event">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="300"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="TouchEvent" c:type="ClutterTouchEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_accessible">
        <callback name="has_accessible">
          <source-position filename="../clutter/clutter/clutter-actor.h"
                           line="302"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" fixed-size="25">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="ActorCreateChildFunc"
              c:type="ClutterActorCreateChildFunc"
              version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="892">Creates a #ClutterActor using the @item in the model.

The usual way to implement this function is to create a #ClutterActor
instance and then bind the #GObject properties to the actor properties
of interest, using g_object_bind_property(). This way, when the @item
in the #GListModel changes, the #ClutterActor changes as well.</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="908"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.h"
             line="904">The newly created child #ClutterActor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="894">the item in the model</doc>
          <type name="GObject.Object" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="895">Data passed to clutter_actor_bind_model()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="ActorFlags"
              glib:type-name="ClutterActorFlags"
              glib:get-type="clutter_actor_flags_get_type"
              c:type="ClutterActorFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="510">Flags used to signal the state of an actor.</doc>
      <member name="mapped"
              value="2"
              c:identifier="CLUTTER_ACTOR_MAPPED"
              glib:nick="mapped">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="512">the actor will be painted (is visible, and inside
  a toplevel, and all parents visible)</doc>
      </member>
      <member name="realized"
              value="4"
              c:identifier="CLUTTER_ACTOR_REALIZED"
              glib:nick="realized">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="514">the resources associated to the actor have been
  allocated</doc>
      </member>
      <member name="reactive"
              value="8"
              c:identifier="CLUTTER_ACTOR_REACTIVE"
              glib:nick="reactive">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="516">the actor 'reacts' to mouse events emmitting event
  signals</doc>
      </member>
      <member name="visible"
              value="16"
              c:identifier="CLUTTER_ACTOR_VISIBLE"
              glib:nick="visible">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="518">the actor has been shown by the application program</doc>
      </member>
      <member name="no_layout"
              value="32"
              c:identifier="CLUTTER_ACTOR_NO_LAYOUT"
              glib:nick="no-layout">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="519">the actor provides an explicit layout management
  policy for its children; this flag will prevent Clutter from automatic
  queueing of relayout and will defer all layouting to the actor itself</doc>
      </member>
    </bitfield>
    <record name="ActorIter" c:type="ClutterActorIter" version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="309">An iterator structure that allows to efficiently iterate over a
section of the scene graph.

The contents of the #ClutterActorIter structure
are private and should only be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="328"/>
      <field name="dummy1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy2" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy3" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="dummy4" readable="0" private="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="dummy5" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <method name="destroy"
              c:identifier="clutter_actor_iter_destroy"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19192">Safely destroys the #ClutterActor currently pointer to by the iterator
from its parent.

This function can only be called after clutter_actor_iter_next() or
clutter_actor_iter_prev() returned %TRUE, and cannot be called more
than once for the same actor.

This function will call clutter_actor_destroy() internally.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="754"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19194">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="ClutterActorIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init"
              c:identifier="clutter_actor_iter_init"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19003">Initializes a #ClutterActorIter, which can then be used to iterate
efficiently over a section of the scene graph, and associates it
with @root.

Modifying the scene graph section that contains @root will invalidate
the iterator.

|[&lt;!-- language="C" --&gt;
  ClutterActorIter iter;
  ClutterActor *child;

  clutter_actor_iter_init (&amp;iter, container);
  while (clutter_actor_iter_next (&amp;iter, &amp;child))
    {
      // do something with child
    }
]|</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="743"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19005">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="ClutterActorIter*"/>
          </instance-parameter>
          <parameter name="root" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19006">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="clutter_actor_iter_is_valid"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19042">Checks whether a #ClutterActorIter is still valid.

An iterator is considered valid if it has been initialized, and
if the #ClutterActor that it refers to hasn't been modified after
the initialization.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="756"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19052">%TRUE if the iterator is valid, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19044">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="const ClutterActorIter*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="next"
              c:identifier="clutter_actor_iter_next"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19069">Advances the @iter and retrieves the next child of the root #ClutterActor
that was used to initialize the #ClutterActorIterator.

If the iterator can advance, this function returns %TRUE and sets the
@child argument.

If the iterator cannot advance, this function returns %FALSE, and
the contents of @child are undefined.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="746"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19083">%TRUE if the iterator could advance, and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19071">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="ClutterActorIter*"/>
          </instance-parameter>
          <parameter name="child"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19072">return location for a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor**"/>
          </parameter>
        </parameters>
      </method>
      <method name="prev"
              c:identifier="clutter_actor_iter_prev"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19110">Advances the @iter and retrieves the previous child of the root
#ClutterActor that was used to initialize the #ClutterActorIterator.

If the iterator can advance, this function returns %TRUE and sets the
@child argument.

If the iterator cannot advance, this function returns %FALSE, and
the contents of @child are undefined.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="749"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.c"
               line="19124">%TRUE if the iterator could advance, and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19112">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="ClutterActorIter*"/>
          </instance-parameter>
          <parameter name="child"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19113">return location for a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor**"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="clutter_actor_iter_remove"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor.c"
             line="19151">Safely removes the #ClutterActor currently pointer to by the iterator
from its parent.

This function can only be called after clutter_actor_iter_next() or
clutter_actor_iter_prev() returned %TRUE, and cannot be called more
than once for the same actor.

This function will call clutter_actor_remove_child() internally.</doc>
        <source-position filename="../clutter/clutter/clutter-actor.h"
                         line="752"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="iter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor.c"
                 line="19153">a #ClutterActorIter</doc>
            <type name="ActorIter" c:type="ClutterActorIter*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="ActorMeta"
           c:symbol-prefix="actor_meta"
           c:type="ClutterActorMeta"
           version="1.4"
           parent="GObject.InitiallyUnowned"
           abstract="1"
           glib:type-name="ClutterActorMeta"
           glib:get-type="clutter_actor_meta_get_type"
           glib:type-struct="ActorMetaClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor-meta.h"
           line="46">The #ClutterActorMeta structure contains only
private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="98"/>
      <virtual-method name="set_actor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.h"
             line="79">Virtual function, called when @meta is attached or detached
from a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.h"
                 line="81">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
          <parameter name="actor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.h"
                 line="82">the actor attached to @meta, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_actor"
              c:identifier="clutter_actor_meta_get_actor"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="344">Retrieves a pointer to the #ClutterActor that owns @meta</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-meta.c"
               line="350">a pointer to a #ClutterActor or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="346">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="clutter_actor_meta_get_enabled"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="306">Retrieves whether @meta is enabled</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-meta.c"
               line="312">%TRUE if the #ClutterActorMeta instance is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="308">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_name"
              c:identifier="clutter_actor_meta_get_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="260">Retrieves the name set using clutter_actor_meta_set_name()</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor-meta.c"
               line="266">the name of the #ClutterActorMeta
  instance, or %NULL if none was set. The returned string is owned
  by the #ClutterActorMeta instance and it should not be modified
  or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="262">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="clutter_actor_meta_set_enabled"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="281">Sets whether @meta should be enabled or not</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="283">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
          <parameter name="is_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="284">whether @meta is enabled</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="clutter_actor_meta_set_name"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="234">Sets the name of @meta

The name can be used to identify the #ClutterActorMeta instance</doc>
        <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="meta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="236">a #ClutterActorMeta</doc>
            <type name="ActorMeta" c:type="ClutterActorMeta*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-actor-meta.c"
                 line="237">the name of @meta</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="actor" version="1.4" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="176">The #ClutterActor attached to the #ClutterActorMeta instance</doc>
        <type name="Actor"/>
      </property>
      <property name="enabled"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="204">Whether or not the #ClutterActorMeta is enabled</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="name"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-meta.c"
             line="190">The unique name to access the #ClutterActorMeta</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ActorMetaPrivate" c:type="ClutterActorMetaPrivate*"/>
      </field>
    </class>
    <record name="ActorMetaClass"
            c:type="ClutterActorMetaClass"
            glib:is-gtype-struct-for="ActorMeta"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor-meta.h"
           line="62">The #ClutterActorMetaClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="98"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="set_actor">
        <callback name="set_actor">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="meta" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor-meta.h"
                   line="81">a #ClutterActorMeta</doc>
              <type name="ActorMeta" c:type="ClutterActorMeta*"/>
            </parameter>
            <parameter name="actor"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-actor-meta.h"
                   line="82">the actor attached to @meta, or %NULL</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_meta1" introspectable="0">
        <callback name="_clutter_meta1">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta2" introspectable="0">
        <callback name="_clutter_meta2">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta3" introspectable="0">
        <callback name="_clutter_meta3">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta4" introspectable="0">
        <callback name="_clutter_meta4">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta5" introspectable="0">
        <callback name="_clutter_meta5">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta6" introspectable="0">
        <callback name="_clutter_meta6">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_meta7" introspectable="0">
        <callback name="_clutter_meta7">
          <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ActorMetaPrivate"
            c:type="ClutterActorMetaPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="43"/>
    </record>
    <class name="ActorNode"
           c:symbol-prefix="actor_node"
           c:type="ClutterActorNode"
           parent="PaintNode"
           glib:type-name="ClutterActorNode"
           glib:get-type="clutter_actor_node_get_type"
           glib:type-struct="ActorNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="150">The #ClutterActorNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="157"/>
      <constructor name="new" c:identifier="clutter_actor_node_new">
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="163"/>
        <return-value transfer-ownership="full">
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="ActorNodeClass"
            c:type="ClutterActorNodeClass"
            glib:is-gtype-struct-for="ActorNode">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="157"/>
    </record>
    <record name="ActorPrivate" c:type="ClutterActorPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="101"/>
    </record>
    <enumeration name="AlignAxis"
                 version="1.4"
                 glib:type-name="ClutterAlignAxis"
                 glib:get-type="clutter_align_axis_get_type"
                 c:type="ClutterAlignAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="583">Specifies the axis on which #ClutterAlignConstraint should maintain
the alignment.</doc>
      <member name="x_axis"
              value="0"
              c:identifier="CLUTTER_ALIGN_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="585">Maintain the alignment on the X axis</doc>
      </member>
      <member name="y_axis"
              value="1"
              c:identifier="CLUTTER_ALIGN_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="586">Maintain the alignment on the Y axis</doc>
      </member>
      <member name="both"
              value="2"
              c:identifier="CLUTTER_ALIGN_BOTH"
              glib:nick="both">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="587">Maintain the alignment on both the X and Y axis</doc>
      </member>
    </enumeration>
    <class name="AlignConstraint"
           c:symbol-prefix="align_constraint"
           c:type="ClutterAlignConstraint"
           version="1.4"
           parent="Constraint"
           glib:type-name="ClutterAlignConstraint"
           glib:get-type="clutter_align_constraint_get_type"
           glib:type-struct="AlignConstraintClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-align-constraint.h"
           line="40">#ClutterAlignConstraint is an opaque structure
whose members cannot be directly accesses</doc>
      <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_align_constraint_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="332">Creates a new constraint, aligning a #ClutterActor's position with
regards of the size of the actor to @source, with the given
alignment @factor</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-align-constraint.c"
               line="343">the newly created #ClutterAlignConstraint</doc>
          <type name="Constraint" c:type="ClutterConstraint*"/>
        </return-value>
        <parameters>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="334">the #ClutterActor to use as the source of the
  alignment, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="336">the axis to be used to compute the alignment</doc>
            <type name="AlignAxis" c:type="ClutterAlignAxis"/>
          </parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="337">the alignment factor, between 0.0 and 1.0</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_align_axis"
              c:identifier="clutter_align_constraint_get_align_axis"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="472">Retrieves the value set using clutter_align_constraint_set_align_axis()</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-align-constraint.c"
               line="478">the alignment axis</doc>
          <type name="AlignAxis" c:type="ClutterAlignAxis"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="474">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_factor"
              c:identifier="clutter_align_constraint_get_factor"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="524">Retrieves the factor set using clutter_align_constraint_set_factor()</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-align-constraint.c"
               line="530">the alignment factor</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="526">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="clutter_align_constraint_get_source"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="427">Retrieves the source of the alignment</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-align-constraint.c"
               line="433">the #ClutterActor used as the source
  of the alignment</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="429">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_align_axis"
              c:identifier="clutter_align_constraint_set_align_axis"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="446">Sets the axis to which the alignment refers to</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="448">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="449">the axis to which the alignment refers to</doc>
            <type name="AlignAxis" c:type="ClutterAlignAxis"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_factor"
              c:identifier="clutter_align_constraint_set_factor"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="491">Sets the alignment factor of the constraint

The factor depends on the #ClutterAlignConstraint:align-axis property
and it is a value between 0.0 (meaning left, when
#ClutterAlignConstraint:align-axis is set to %CLUTTER_ALIGN_X_AXIS; or
meaning top, when #ClutterAlignConstraint:align-axis is set to
%CLUTTER_ALIGN_Y_AXIS) and 1.0 (meaning right, when
#ClutterAlignConstraint:align-axis is set to %CLUTTER_ALIGN_X_AXIS; or
meaning bottom, when #ClutterAlignConstraint:align-axis is set to
%CLUTTER_ALIGN_Y_AXIS). A value of 0.5 aligns in the middle in either
cases</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="493">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="494">the alignment factor, between 0.0 and 1.0</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="clutter_align_constraint_set_source"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="361">Sets the source of the alignment constraint</doc>
        <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="363">a #ClutterAlignConstraint</doc>
            <type name="AlignConstraint" c:type="ClutterAlignConstraint*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-align-constraint.c"
                 line="364">a #ClutterActor, or %NULL to unset the source</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="align-axis"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="282">The axis to be used to compute the alignment</doc>
        <type name="AlignAxis"/>
      </property>
      <property name="factor"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="297">The alignment factor, as a normalized value between 0.0 and 1.0

The factor depends on the #ClutterAlignConstraint:align-axis property:
with an align-axis value of %CLUTTER_ALIGN_X_AXIS, 0.0 means left and
1.0 means right; with a value of %CLUTTER_ALIGN_Y_AXIS, 0.0 means top
and 1.0 means bottom.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="source"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-align-constraint.c"
             line="265">The #ClutterActor used as the source for the alignment.

The #ClutterActor must not be a child or a grandchild of the actor
using the constraint.</doc>
        <type name="Actor"/>
      </property>
    </class>
    <record name="AlignConstraintClass"
            c:type="ClutterAlignConstraintClass"
            disguised="1"
            glib:is-gtype-struct-for="AlignConstraint">
      <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                       line="49"/>
    </record>
    <bitfield name="AllocationFlags"
              version="1.0"
              glib:type-name="ClutterAllocationFlags"
              glib:get-type="clutter_allocation_flags_get_type"
              c:type="ClutterAllocationFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="557">Flags passed to the #ClutterActorClass.allocate() virtual function
and to the clutter_actor_allocate() function.</doc>
      <member name="allocation_none"
              value="0"
              c:identifier="CLUTTER_ALLOCATION_NONE"
              glib:nick="allocation-none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="559">No flag set</doc>
      </member>
      <member name="absolute_origin_changed"
              value="2"
              c:identifier="CLUTTER_ABSOLUTE_ORIGIN_CHANGED"
              glib:nick="absolute-origin-changed">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="560">Whether the absolute origin of the
  actor has changed; this implies that any ancestor of the actor has
  been moved.</doc>
      </member>
      <member name="delegate_layout"
              value="4"
              c:identifier="CLUTTER_DELEGATE_LAYOUT"
              glib:nick="delegate-layout">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="563">Whether the allocation should be delegated
  to the #ClutterLayoutManager instance stored inside the
  #ClutterActor:layout-manager property of #ClutterActor. This flag
  should only be used if you are subclassing #ClutterActor and
  overriding the #ClutterActorClass.allocate() virtual function, but
  you wish to use the default implementation of the virtual function
  inside #ClutterActor. Added in Clutter 1.10.</doc>
      </member>
    </bitfield>
    <class name="Alpha"
           c:symbol-prefix="alpha"
           c:type="ClutterAlpha"
           version="0.2"
           deprecated="1"
           deprecated-version="1.12"
           parent="GObject.InitiallyUnowned"
           glib:type-name="ClutterAlpha"
           glib:get-type="clutter_alpha_get_type"
           glib:type-struct="AlphaClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-alpha.h"
           line="67">#ClutterAlpha combines a #ClutterTimeline and a function.
The contents of the #ClutterAlpha structure are private and should
only be accessed using the provided API.</doc>
      <doc-deprecated xml:space="preserve">Use #ClutterTimeline instead</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="105"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_alpha_new"
                   version="0.2"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="631">Creates a new #ClutterAlpha instance.  You must set a function
to compute the alpha value using clutter_alpha_set_func() and
bind a #ClutterTimeline object to the #ClutterAlpha instance
using clutter_alpha_set_timeline().</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.c"
               line="639">the newly created empty #ClutterAlpha instance.</doc>
          <type name="Alpha" c:type="ClutterAlpha*"/>
        </return-value>
      </constructor>
      <constructor name="new_full"
                   c:identifier="clutter_alpha_new_full"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="651">Creates a new #ClutterAlpha instance and sets the timeline
and animation mode.

See also clutter_alpha_set_timeline() and clutter_alpha_set_mode().</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.c"
               line="661">the newly created #ClutterAlpha</doc>
          <type name="Alpha" c:type="ClutterAlpha*"/>
        </return-value>
        <parameters>
          <parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="653">#ClutterTimeline timeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="654">animation mode</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_alpha"
              c:identifier="clutter_alpha_get_alpha"
              version="0.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="395">Query the current alpha value.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_get_progress()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.c"
               line="401">The current alpha value for the alpha</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="397">A #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode"
              c:identifier="clutter_alpha_get_mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="680">Retrieves the #ClutterAnimationMode used by @alpha.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.c"
               line="686">the animation mode</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="682">a #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timeline"
              c:identifier="clutter_alpha_get_timeline"
              version="0.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="611">Gets the #ClutterTimeline bound to @alpha.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline directlry</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.c"
               line="617">a #ClutterTimeline instance</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="613">A #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_closure"
              c:identifier="clutter_alpha_set_closure"
              version="0.8"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="486">Sets the #GClosure used to compute the alpha value at each
frame of the #ClutterTimeline bound to @alpha.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_set_progress_func()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="488">A #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
          <parameter name="closure" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="489">A #GClosure</doc>
            <type name="GObject.Closure" c:type="GClosure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_func"
              c:identifier="clutter_alpha_set_func"
              version="0.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="515">Sets the #ClutterAlphaFunc function used to compute
the alpha value at each frame of the #ClutterTimeline
bound to @alpha.

This function will not register @func as a global alpha function.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_set_progress_func()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="517">A #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="518">A #ClutterAlphaFunc</doc>
            <type name="AlphaFunc" c:type="ClutterAlphaFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="519">user data to be passed to the alpha function, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="520">notify function used when disposing the alpha function</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode"
              c:identifier="clutter_alpha_set_mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="728">Sets the progress function of @alpha using the symbolic value
of @mode, as taken by the #ClutterAnimationMode enumeration.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline and
  clutter_timeline_set_progress_mode() instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="730">a #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="731">a #ClutterAnimationMode</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeline"
              c:identifier="clutter_alpha_set_timeline"
              version="0.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="564">Binds @alpha to @timeline.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline directly</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="566">A #ClutterAlpha</doc>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </instance-parameter>
          <parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-alpha.c"
                 line="567">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </parameter>
        </parameters>
      </method>
      <property name="alpha"
                version="0.2"
                deprecated="1"
                deprecated-version="1.12"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="342">The alpha value as computed by the alpha function. The linear
interval is 0.0 to 1.0, but the Alpha allows overshooting by
one unit in each direction, so the valid interval is -1.0 to 2.0.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline::new-frame and
  clutter_timeline_get_progress() instead</doc-deprecated>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="mode"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="361">The progress function logical id - a value from the
#ClutterAnimationMode enumeration.

If %CLUTTER_CUSTOM_MODE is used then the function set using
clutter_alpha_set_closure() or clutter_alpha_set_func()
will be used.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterTimeline:progress-mode</doc-deprecated>
        <type name="gulong" c:type="gulong"/>
      </property>
      <property name="timeline"
                version="0.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.c"
             line="326">A #ClutterTimeline instance used to drive the alpha function.</doc>
        <type name="Timeline"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="AlphaPrivate" c:type="ClutterAlphaPrivate*"/>
      </field>
    </class>
    <record name="AlphaClass"
            c:type="ClutterAlphaClass"
            glib:is-gtype-struct-for="Alpha"
            version="0.2"
            deprecated="1"
            deprecated-version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-alpha.h"
           line="86">Base class for #ClutterAlpha</doc>
      <doc-deprecated xml:space="preserve">Use #ClutterTimeline instead</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="105"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="_clutter_alpha_1" introspectable="0">
        <callback name="_clutter_alpha_1">
          <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_alpha_2" introspectable="0">
        <callback name="_clutter_alpha_2">
          <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_alpha_3" introspectable="0">
        <callback name="_clutter_alpha_3">
          <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_alpha_4" introspectable="0">
        <callback name="_clutter_alpha_4">
          <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_alpha_5" introspectable="0">
        <callback name="_clutter_alpha_5">
          <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                           line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <callback name="AlphaFunc"
              c:type="ClutterAlphaFunc"
              version="0.2"
              deprecated="1"
              deprecated-version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-alpha.h"
           line="50">A function returning a value depending on the position of
the #ClutterTimeline bound to @alpha.</doc>
      <doc-deprecated xml:space="preserve">Use #ClutterTimelineProgressFunc instead.</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="64"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-alpha.h"
             line="58">a floating point value</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="alpha" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.h"
               line="52">a #ClutterAlpha</doc>
          <type name="Alpha" c:type="ClutterAlpha*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-alpha.h"
               line="53">user data passed to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="AlphaPrivate" c:type="ClutterAlphaPrivate" disguised="1">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="48"/>
    </record>
    <interface name="Animatable"
               c:symbol-prefix="animatable"
               c:type="ClutterAnimatable"
               glib:type-name="ClutterAnimatable"
               glib:get-type="clutter_animatable_get_type"
               glib:type-struct="AnimatableInterface">
      <source-position filename="../clutter/clutter/clutter-animatable.h"
                       line="87"/>
      <virtual-method name="animate_property">
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="animation" transfer-ownership="none">
            <type name="Animation" c:type="ClutterAnimation*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="initial_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="final_value" transfer-ownership="none">
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_property"
                      invoker="find_property"
                      version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="66">Finds the #GParamSpec for @property_name</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-animatable.c"
               line="73">The #GParamSpec for the given property
  or %NULL</doc>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="68">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="69">the name of the animatable property to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_initial_state"
                      invoker="get_initial_state"
                      version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="97">Retrieves the current state of @property_name and sets @value with it</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="99">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="100">the name of the animatable property to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="101">a #GValue initialized to the type of the property to retrieve</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="interpolate_value"
                      invoker="interpolate_value"
                      version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="155">Asks a #ClutterAnimatable implementation to interpolate a
a named property between the initial and final values of
a #ClutterInterval, using @progress as the interpolation
value, and store the result inside @value.

This function should be used for every property animation
involving #ClutterAnimatable&lt;!-- --&gt;s.

This function replaces clutter_animatable_animate_property().</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-animatable.c"
               line="175">%TRUE if the interpolation was successful,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="157">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="158">the name of the property to interpolate</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="159">a #ClutterInterval with the animation range</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="160">the progress to use to interpolate between the
  initial and final values of the @interval</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="162">return location for an initialized #GValue
  using the same type of the @interval</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_final_state"
                      invoker="set_final_state"
                      version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="126">Sets the current state of @property_name to @value</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="128">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="129">the name of the animatable property to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="130">the value of the animatable property to set</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="find_property"
              c:identifier="clutter_animatable_find_property"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="66">Finds the #GParamSpec for @property_name</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-animatable.c"
               line="73">The #GParamSpec for the given property
  or %NULL</doc>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="68">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="69">the name of the animatable property to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_initial_state"
              c:identifier="clutter_animatable_get_initial_state"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="97">Retrieves the current state of @property_name and sets @value with it</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="99">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="100">the name of the animatable property to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="101">a #GValue initialized to the type of the property to retrieve</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="interpolate_value"
              c:identifier="clutter_animatable_interpolate_value"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="155">Asks a #ClutterAnimatable implementation to interpolate a
a named property between the initial and final values of
a #ClutterInterval, using @progress as the interpolation
value, and store the result inside @value.

This function should be used for every property animation
involving #ClutterAnimatable&lt;!-- --&gt;s.

This function replaces clutter_animatable_animate_property().</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-animatable.c"
               line="175">%TRUE if the interpolation was successful,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="157">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="158">the name of the property to interpolate</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="159">a #ClutterInterval with the animation range</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="160">the progress to use to interpolate between the
  initial and final values of the @interval</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="162">return location for an initialized #GValue
  using the same type of the @interval</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_final_state"
              c:identifier="clutter_animatable_set_final_state"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-animatable.c"
             line="126">Sets the current state of @property_name to @value</doc>
        <source-position filename="../clutter/clutter/clutter-animatable.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="128">a #ClutterAnimatable</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="129">the name of the animatable property to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="130">the value of the animatable property to set</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="AnimatableInterface"
            c:type="ClutterAnimatableInterface"
            glib:is-gtype-struct-for="Animatable"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-animatable.h"
           line="43">Base interface for #GObject&lt;!-- --&gt;s that can be animated by a
a #ClutterAnimation.</doc>
      <source-position filename="../clutter/clutter/clutter-animatable.h"
                       line="87"/>
      <field name="parent_iface" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="animate_property">
        <callback name="animate_property">
          <source-position filename="../clutter/clutter/clutter-animatable.h"
                           line="67"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="animatable" transfer-ownership="none">
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="animation" transfer-ownership="none">
              <type name="Animation" c:type="ClutterAnimation*"/>
            </parameter>
            <parameter name="property_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="initial_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
            <parameter name="final_value" transfer-ownership="none">
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
            <parameter name="progress" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_property">
        <callback name="find_property">
          <source-position filename="../clutter/clutter/clutter-animatable.h"
                           line="74"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="73">The #GParamSpec for the given property
  or %NULL</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </return-value>
          <parameters>
            <parameter name="animatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="68">a #ClutterAnimatable</doc>
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="property_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="69">the name of the animatable property to find</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_initial_state">
        <callback name="get_initial_state">
          <source-position filename="../clutter/clutter/clutter-animatable.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="animatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="99">a #ClutterAnimatable</doc>
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="property_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="100">the name of the animatable property to retrieve</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="101">a #GValue initialized to the type of the property to retrieve</doc>
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_final_state">
        <callback name="set_final_state">
          <source-position filename="../clutter/clutter/clutter-animatable.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="animatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="128">a #ClutterAnimatable</doc>
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="property_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="129">the name of the animatable property to set</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="130">the value of the animatable property to set</doc>
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="interpolate_value">
        <callback name="interpolate_value">
          <source-position filename="../clutter/clutter/clutter-animatable.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-animatable.c"
                 line="175">%TRUE if the interpolation was successful,
  and %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="animatable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="157">a #ClutterAnimatable</doc>
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="property_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="158">the name of the property to interpolate</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="interval" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="159">a #ClutterInterval with the animation range</doc>
              <type name="Interval" c:type="ClutterInterval*"/>
            </parameter>
            <parameter name="progress" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="160">the progress to use to interpolate between the
  initial and final values of the @interval</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="value"
                       direction="out"
                       caller-allocates="1"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-animatable.c"
                   line="162">return location for an initialized #GValue
  using the same type of the @interval</doc>
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Animation"
           c:symbol-prefix="animation"
           c:type="ClutterAnimation"
           version="1.0"
           deprecated="1"
           deprecated-version="1.12"
           parent="GObject.Object"
           glib:type-name="ClutterAnimation"
           glib:get-type="clutter_animation_get_type"
           glib:type-struct="AnimationClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-animation.h"
           line="46">The #ClutterAnimation structure contains only private data and should
be accessed using the provided functions.</doc>
      <doc-deprecated xml:space="preserve">Use the implicit animation on #ClutterActor</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="95"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_animation_new"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="920">Creates a new #ClutterAnimation instance. You should set the
#GObject to be animated using clutter_animation_set_object(),
set the duration with clutter_animation_set_duration() and the
easing mode using clutter_animation_set_mode().

The clutter_actor_animate() and relative family of functions provide
an easy way to animate a #ClutterActor and automatically manage the
lifetime of a #ClutterAnimation instance, so you should consider using
those functions instead of manually creating an animation.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="933">the newly created #ClutterAnimation. Use g_object_unref()
  to release the associated resources</doc>
          <type name="Animation" c:type="ClutterAnimation*"/>
        </return-value>
      </constructor>
      <virtual-method name="completed">
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="started">
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_duration"
              c:identifier="clutter_animation_get_duration"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1144">Retrieves the duration of @animation, in milliseconds.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1150">the duration of the animation</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1146">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interval"
              c:identifier="clutter_animation_get_interval"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="665">Retrieves the #ClutterInterval associated to @property_name
inside @animation.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="673">a #ClutterInterval or %NULL if no
  property with the same name was found. The returned interval is
  owned by the #ClutterAnimation and should not be unreferenced</doc>
          <type name="Interval" c:type="ClutterInterval*"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="667">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="668">name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_loop"
              c:identifier="clutter_animation_get_loop"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1121">Retrieves whether @animation is looping.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1127">%TRUE if the animation is looping</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1123">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode"
              c:identifier="clutter_animation_get_mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1028">Retrieves the animation mode of @animation, as set by
clutter_animation_set_mode().</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1035">the mode for the animation</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1030">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_timeline"
              c:identifier="clutter_animation_get_timeline"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1252">Retrieves the #ClutterTimeline used by @animation</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="1258">the timeline used by the animation</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1254">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_property"
              c:identifier="clutter_animation_has_property"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="638">Checks whether @animation is controlling @property_name.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-animation.c"
               line="645">%TRUE if the property is animated by the
  #ClutterAnimation, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="640">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="641">name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration"
              c:identifier="clutter_animation_set_duration"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1055">Sets the duration of @animation in milliseconds.

This function will set #ClutterAnimation:alpha and
#ClutterAnimation:timeline if needed.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1057">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1058">the duration in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_loop"
              c:identifier="clutter_animation_set_loop"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1087">Sets whether @animation should loop over itself once finished.

A looping #ClutterAnimation will not emit the #ClutterAnimation::completed
signal when finished.

This function will set #ClutterAnimation:alpha and
#ClutterAnimation:timeline if needed.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1089">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="loop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1090">%TRUE if the animation should loop</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode"
              c:identifier="clutter_animation_set_mode"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="981">Sets the animation @mode of @animation. The animation @mode is
a logical id, either coming from the #ClutterAnimationMode enumeration
or the return value of clutter_alpha_register_func().

This function will also set #ClutterAnimation:alpha if needed.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="983">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="984">an animation mode logical id</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_object"
              c:identifier="clutter_animation_set_object"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="945">Attaches @animation to @object. The #ClutterAnimation will take a
reference on @object.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="947">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="948">a #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_timeline"
              c:identifier="clutter_animation_set_timeline"
              version="1.0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="1167">Sets the #ClutterTimeline used by @animation.

This function will take a reference on the passed @timeline.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="animation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1169">a #ClutterAnimation</doc>
            <type name="Animation" c:type="ClutterAnimation*"/>
          </instance-parameter>
          <parameter name="timeline"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-animation.c"
                 line="1170">a #ClutterTimeline, or %NULL to unset the
  current #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </parameter>
        </parameters>
      </method>
      <property name="alpha"
                version="1.0"
                deprecated="1"
                deprecated-version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="524">The #ClutterAlpha used by the animation.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterAnimation:timeline property and
  the #ClutterTimeline:progress-mode property instead.</doc-deprecated>
        <type name="Alpha"/>
      </property>
      <property name="duration"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="478">The duration of the animation, expressed in milliseconds.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="loop"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="494">Whether the animation should loop.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mode"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="460">The animation mode, either a value from #ClutterAnimationMode
or a value returned by clutter_alpha_register_func(). The
default value is %CLUTTER_LINEAR.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <type name="gulong" c:type="gulong"/>
      </property>
      <property name="object"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="445">The #GObject to which the animation applies.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <type name="GObject.Object"/>
      </property>
      <property name="timeline"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="509">The #ClutterTimeline used by the animation.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <type name="Timeline"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="AnimationPrivate" c:type="ClutterAnimationPrivate*"/>
      </field>
      <glib:signal name="completed"
                   when="last"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="563">The ::completed signal is emitted once the animation has
been completed.

The @animation instance is guaranteed to be valid for the entire
duration of the signal emission chain.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="started"
                   when="last"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-animation.c"
             line="545">The ::started signal is emitted once the animation has been
started</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterPropertyTransition instead</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="AnimationClass"
            c:type="ClutterAnimationClass"
            glib:is-gtype-struct-for="Animation"
            version="1.0"
            deprecated="1"
            deprecated-version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-animation.h"
           line="64">The #ClutterAnimationClass structure contains only private data and
should be accessed using the provided functions.</doc>
      <doc-deprecated xml:space="preserve">Use the implicit animation on #ClutterActor</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="95"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="started">
        <callback name="started">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="animation" transfer-ownership="none">
              <type name="Animation" c:type="ClutterAnimation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="completed">
        <callback name="completed">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="animation" transfer-ownership="none">
              <type name="Animation" c:type="ClutterAnimation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved7" introspectable="0">
        <callback name="_clutter_reserved7">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved8" introspectable="0">
        <callback name="_clutter_reserved8">
          <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="AnimationMode"
                 version="1.0"
                 glib:type-name="ClutterAnimationMode"
                 glib:get-type="clutter_animation_mode_get_type"
                 c:type="ClutterAnimationMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="120">The animation modes used by #ClutterAlpha and #ClutterAnimation. This
enumeration can be expanded in later versions of Clutter.

&lt;figure id="easing-modes"&gt;
  &lt;title&gt;Easing modes provided by Clutter&lt;/title&gt;
  &lt;graphic fileref="easing-modes.png" format="PNG"/&gt;
&lt;/figure&gt;

Every global alpha function registered using clutter_alpha_register_func()
or clutter_alpha_register_closure() will have a logical id greater than
%CLUTTER_ANIMATION_LAST.</doc>
      <member name="custom_mode"
              value="0"
              c:identifier="CLUTTER_CUSTOM_MODE"
              glib:nick="custom-mode">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="122">custom progress function</doc>
      </member>
      <member name="linear"
              value="1"
              c:identifier="CLUTTER_LINEAR"
              glib:nick="linear">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="123">linear tweening</doc>
      </member>
      <member name="ease_in_quad"
              value="2"
              c:identifier="CLUTTER_EASE_IN_QUAD"
              glib:nick="ease-in-quad">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="124">quadratic tweening</doc>
      </member>
      <member name="ease_out_quad"
              value="3"
              c:identifier="CLUTTER_EASE_OUT_QUAD"
              glib:nick="ease-out-quad">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="125">quadratic tweening, inverse of
   %CLUTTER_EASE_IN_QUAD</doc>
      </member>
      <member name="ease_in_out_quad"
              value="4"
              c:identifier="CLUTTER_EASE_IN_OUT_QUAD"
              glib:nick="ease-in-out-quad">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="127">quadratic tweening, combininig
   %CLUTTER_EASE_IN_QUAD and %CLUTTER_EASE_OUT_QUAD</doc>
      </member>
      <member name="ease_in_cubic"
              value="5"
              c:identifier="CLUTTER_EASE_IN_CUBIC"
              glib:nick="ease-in-cubic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="129">cubic tweening</doc>
      </member>
      <member name="ease_out_cubic"
              value="6"
              c:identifier="CLUTTER_EASE_OUT_CUBIC"
              glib:nick="ease-out-cubic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="130">cubic tweening, invers of
   %CLUTTER_EASE_IN_CUBIC</doc>
      </member>
      <member name="ease_in_out_cubic"
              value="7"
              c:identifier="CLUTTER_EASE_IN_OUT_CUBIC"
              glib:nick="ease-in-out-cubic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="132">cubic tweening, combining
   %CLUTTER_EASE_IN_CUBIC and %CLUTTER_EASE_OUT_CUBIC</doc>
      </member>
      <member name="ease_in_quart"
              value="8"
              c:identifier="CLUTTER_EASE_IN_QUART"
              glib:nick="ease-in-quart">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="134">quartic tweening</doc>
      </member>
      <member name="ease_out_quart"
              value="9"
              c:identifier="CLUTTER_EASE_OUT_QUART"
              glib:nick="ease-out-quart">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="135">quartic tweening, inverse of
   %CLUTTER_EASE_IN_QUART</doc>
      </member>
      <member name="ease_in_out_quart"
              value="10"
              c:identifier="CLUTTER_EASE_IN_OUT_QUART"
              glib:nick="ease-in-out-quart">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="137">quartic tweening, combining
   %CLUTTER_EASE_IN_QUART and %CLUTTER_EASE_OUT_QUART</doc>
      </member>
      <member name="ease_in_quint"
              value="11"
              c:identifier="CLUTTER_EASE_IN_QUINT"
              glib:nick="ease-in-quint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="139">quintic tweening</doc>
      </member>
      <member name="ease_out_quint"
              value="12"
              c:identifier="CLUTTER_EASE_OUT_QUINT"
              glib:nick="ease-out-quint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="140">quintic tweening, inverse of
   %CLUTTER_EASE_IN_QUINT</doc>
      </member>
      <member name="ease_in_out_quint"
              value="13"
              c:identifier="CLUTTER_EASE_IN_OUT_QUINT"
              glib:nick="ease-in-out-quint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="142">fifth power tweening, combining
   %CLUTTER_EASE_IN_QUINT and %CLUTTER_EASE_OUT_QUINT</doc>
      </member>
      <member name="ease_in_sine"
              value="14"
              c:identifier="CLUTTER_EASE_IN_SINE"
              glib:nick="ease-in-sine">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="144">sinusoidal tweening</doc>
      </member>
      <member name="ease_out_sine"
              value="15"
              c:identifier="CLUTTER_EASE_OUT_SINE"
              glib:nick="ease-out-sine">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="145">sinusoidal tweening, inverse of
   %CLUTTER_EASE_IN_SINE</doc>
      </member>
      <member name="ease_in_out_sine"
              value="16"
              c:identifier="CLUTTER_EASE_IN_OUT_SINE"
              glib:nick="ease-in-out-sine">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="147">sine wave tweening, combining
   %CLUTTER_EASE_IN_SINE and %CLUTTER_EASE_OUT_SINE</doc>
      </member>
      <member name="ease_in_expo"
              value="17"
              c:identifier="CLUTTER_EASE_IN_EXPO"
              glib:nick="ease-in-expo">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="149">exponential tweening</doc>
      </member>
      <member name="ease_out_expo"
              value="18"
              c:identifier="CLUTTER_EASE_OUT_EXPO"
              glib:nick="ease-out-expo">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="150">exponential tweening, inverse of
   %CLUTTER_EASE_IN_EXPO</doc>
      </member>
      <member name="ease_in_out_expo"
              value="19"
              c:identifier="CLUTTER_EASE_IN_OUT_EXPO"
              glib:nick="ease-in-out-expo">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="152">exponential tweening, combining
   %CLUTTER_EASE_IN_EXPO and %CLUTTER_EASE_OUT_EXPO</doc>
      </member>
      <member name="ease_in_circ"
              value="20"
              c:identifier="CLUTTER_EASE_IN_CIRC"
              glib:nick="ease-in-circ">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="154">circular tweening</doc>
      </member>
      <member name="ease_out_circ"
              value="21"
              c:identifier="CLUTTER_EASE_OUT_CIRC"
              glib:nick="ease-out-circ">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="155">circular tweening, inverse of
   %CLUTTER_EASE_IN_CIRC</doc>
      </member>
      <member name="ease_in_out_circ"
              value="22"
              c:identifier="CLUTTER_EASE_IN_OUT_CIRC"
              glib:nick="ease-in-out-circ">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="157">circular tweening, combining
   %CLUTTER_EASE_IN_CIRC and %CLUTTER_EASE_OUT_CIRC</doc>
      </member>
      <member name="ease_in_elastic"
              value="23"
              c:identifier="CLUTTER_EASE_IN_ELASTIC"
              glib:nick="ease-in-elastic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="159">elastic tweening, with offshoot on start</doc>
      </member>
      <member name="ease_out_elastic"
              value="24"
              c:identifier="CLUTTER_EASE_OUT_ELASTIC"
              glib:nick="ease-out-elastic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="160">elastic tweening, with offshoot on end</doc>
      </member>
      <member name="ease_in_out_elastic"
              value="25"
              c:identifier="CLUTTER_EASE_IN_OUT_ELASTIC"
              glib:nick="ease-in-out-elastic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="161">elastic tweening with offshoot on both ends</doc>
      </member>
      <member name="ease_in_back"
              value="26"
              c:identifier="CLUTTER_EASE_IN_BACK"
              glib:nick="ease-in-back">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="162">overshooting cubic tweening, with
  backtracking on start</doc>
      </member>
      <member name="ease_out_back"
              value="27"
              c:identifier="CLUTTER_EASE_OUT_BACK"
              glib:nick="ease-out-back">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="164">overshooting cubic tweening, with
  backtracking on end</doc>
      </member>
      <member name="ease_in_out_back"
              value="28"
              c:identifier="CLUTTER_EASE_IN_OUT_BACK"
              glib:nick="ease-in-out-back">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="166">overshooting cubic tweening, with
  backtracking on both ends</doc>
      </member>
      <member name="ease_in_bounce"
              value="29"
              c:identifier="CLUTTER_EASE_IN_BOUNCE"
              glib:nick="ease-in-bounce">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="168">exponentially decaying parabolic (bounce)
  tweening, with bounce on start</doc>
      </member>
      <member name="ease_out_bounce"
              value="30"
              c:identifier="CLUTTER_EASE_OUT_BOUNCE"
              glib:nick="ease-out-bounce">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="170">exponentially decaying parabolic (bounce)
  tweening, with bounce on end</doc>
      </member>
      <member name="ease_in_out_bounce"
              value="31"
              c:identifier="CLUTTER_EASE_IN_OUT_BOUNCE"
              glib:nick="ease-in-out-bounce">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="172">exponentially decaying parabolic (bounce)
  tweening, with bounce on both ends</doc>
      </member>
      <member name="steps"
              value="32"
              c:identifier="CLUTTER_STEPS"
              glib:nick="steps">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="174">parametrized step function; see clutter_timeline_set_step_progress()
  for further details. (Since 1.12)</doc>
      </member>
      <member name="step_start"
              value="33"
              c:identifier="CLUTTER_STEP_START"
              glib:nick="step-start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="176">equivalent to %CLUTTER_STEPS with a number of steps
  equal to 1, and a step mode of %CLUTTER_STEP_MODE_START. (Since 1.12)</doc>
      </member>
      <member name="step_end"
              value="34"
              c:identifier="CLUTTER_STEP_END"
              glib:nick="step-end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="178">equivalent to %CLUTTER_STEPS with a number of steps
  equal to 1, and a step mode of %CLUTTER_STEP_MODE_END. (Since 1.12)</doc>
      </member>
      <member name="cubic_bezier"
              value="35"
              c:identifier="CLUTTER_CUBIC_BEZIER"
              glib:nick="cubic-bezier">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="180">cubic bezier between (0, 0) and (1, 1) with two
  control points; see clutter_timeline_set_cubic_bezier_progress(). (Since 1.12)</doc>
      </member>
      <member name="ease"
              value="36"
              c:identifier="CLUTTER_EASE"
              glib:nick="ease">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="182">equivalent to %CLUTTER_CUBIC_BEZIER with control points
  in (0.25, 0.1) and (0.25, 1.0). (Since 1.12)</doc>
      </member>
      <member name="ease_in"
              value="37"
              c:identifier="CLUTTER_EASE_IN"
              glib:nick="ease-in">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="184">equivalent to %CLUTTER_CUBIC_BEZIER with control points
  in (0.42, 0) and (1.0, 1.0). (Since 1.12)</doc>
      </member>
      <member name="ease_out"
              value="38"
              c:identifier="CLUTTER_EASE_OUT"
              glib:nick="ease-out">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="186">equivalent to %CLUTTER_CUBIC_BEZIER with control points
  in (0, 0) and (0.58, 1.0). (Since 1.12)</doc>
      </member>
      <member name="ease_in_out"
              value="39"
              c:identifier="CLUTTER_EASE_IN_OUT"
              glib:nick="ease-in-out">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="188">equivalent to %CLUTTER_CUBIC_BEZIER with control points
  in (0.42, 0) and (0.58, 1.0). (Since 1.12)</doc>
      </member>
      <member name="animation_last"
              value="40"
              c:identifier="CLUTTER_ANIMATION_LAST"
              glib:nick="animation-last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="190">last animation mode, used as a guard for
  registered global alpha functions</doc>
      </member>
    </enumeration>
    <record name="AnimationPrivate"
            c:type="ClutterAnimationPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="43"/>
    </record>
    <record name="AnyEvent" c:type="ClutterAnyEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="126">Common members for a #ClutterEvent</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="144"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="128">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="129">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="130">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="131">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
    </record>
    <function-macro name="BACKEND"
                    c:identifier="CLUTTER_BACKEND"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-backend.h"
                       line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BINDING_POOL"
                    c:identifier="CLUTTER_BINDING_POOL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BIND_CONSTRAINT"
                    c:identifier="CLUTTER_BIND_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BIN_LAYOUT"
                    c:identifier="CLUTTER_BIN_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BIN_LAYOUT_CLASS"
                    c:identifier="CLUTTER_BIN_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BIN_LAYOUT_GET_CLASS"
                    c:identifier="CLUTTER_BIN_LAYOUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BLUR_EFFECT"
                    c:identifier="CLUTTER_BLUR_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-blur-effect.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX" c:identifier="CLUTTER_BOX" introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX_CLASS"
                    c:identifier="CLUTTER_BOX_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX_GET_CLASS"
                    c:identifier="CLUTTER_BOX_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX_LAYOUT"
                    c:identifier="CLUTTER_BOX_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX_LAYOUT_CLASS"
                    c:identifier="CLUTTER_BOX_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BOX_LAYOUT_GET_CLASS"
                    c:identifier="CLUTTER_BOX_LAYOUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="44"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="BRIGHTNESS_CONTRAST_EFFECT"
                    c:identifier="CLUTTER_BRIGHTNESS_CONTRAST_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="BUTTON_MIDDLE"
              value="2"
              c:type="CLUTTER_BUTTON_MIDDLE"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="89">The middle button of a pointer device.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="96"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="BUTTON_PRIMARY"
              value="1"
              c:type="CLUTTER_BUTTON_PRIMARY"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="77">The primary button of a pointer device.

This is typically the left mouse button in a right-handed
mouse configuration.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="87"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="BUTTON_SECONDARY"
              value="3"
              c:type="CLUTTER_BUTTON_SECONDARY"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="98">The secondary button of a pointer device.

This is typically the right mouse button in a right-handed
mouse configuration.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Backend"
           c:symbol-prefix="backend"
           c:type="ClutterBackend"
           version="0.4"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterBackend"
           glib:get-type="clutter_backend_get_type"
           glib:type-struct="BackendClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-backend.h"
           line="47">#ClutterBackend is an opaque structure whose
members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-backend.h"
                       line="56"/>
      <method name="get_cogl_context"
              c:identifier="clutter_backend_get_cogl_context"
              version="1.8"
              introspectable="0"
              stability="Unstable">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="922">Retrieves the #CoglContext associated with the given clutter
@backend. A #CoglContext is required when using some of the
experimental 2.0 Cogl API.

Since CoglContext is itself experimental API this API should
be considered experimental too.

This API is not yet supported on OSX because OSX still
uses the stub Cogl winsys and the Clutter backend doesn't
explicitly create a CoglContext.</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-backend.c"
               line="937">The #CoglContext associated with @backend.</doc>
          <type name="Cogl.Context" c:type="CoglContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="924">a #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_seat"
              c:identifier="clutter_backend_get_default_seat">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="1019">Returns the default seat</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-backend.c"
               line="1025">the default seat</doc>
          <type name="Seat" c:type="ClutterSeat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="1021">the #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_options"
              c:identifier="clutter_backend_get_font_options"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="875">Retrieves the font options for @backend.</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-backend.c"
               line="881">the font options of the #ClutterBackend.
  The returned #cairo_font_options_t is owned by the backend and should
  not be modified or freed</doc>
          <type name="cairo.FontOptions" c:type="const cairo_font_options_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="877">a #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_input_method"
              c:identifier="clutter_backend_get_input_method">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="985">Returns the input method used by Clutter</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-backend.c"
               line="991">the input method</doc>
          <type name="InputMethod" c:type="ClutterInputMethod*"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="987">the #CLutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_resolution"
              c:identifier="clutter_backend_get_resolution"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="801">Gets the resolution for font handling on the screen.

The resolution is a scale factor between points specified in a
#PangoFontDescription and cairo units. The default value is 96.0,
meaning that a 10 point font will be 13 units
high (10 * 96. / 72. = 13.3).

Clutter will set the resolution using the current backend when
initializing; the resolution is also stored in the
#ClutterSettings:font-dpi property.</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-backend.c"
               line="816">the current resolution, or -1 if no resolution
  has been set.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="803">a #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_font_options"
              c:identifier="clutter_backend_set_font_options"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="838">Sets the new font options for @backend. The #ClutterBackend will
copy the #cairo_font_options_t.

If @options is %NULL, the first following call to
clutter_backend_get_font_options() will return the default font
options for @backend.

This function is intended for actors creating a Pango layout
using the PangoCairo API.</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="840">a #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
          <parameter name="options" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="841">Cairo font options for the backend, or %NULL</doc>
            <type name="cairo.FontOptions"
                  c:type="const cairo_font_options_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_method"
              c:identifier="clutter_backend_set_input_method">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="999">Sets the input method to be used by Clutter</doc>
        <source-position filename="../clutter/clutter/clutter-backend.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="backend" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="1001">the #ClutterBackend</doc>
            <type name="Backend" c:type="ClutterBackend*"/>
          </instance-parameter>
          <parameter name="method" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-backend.c"
                 line="1002">the input method</doc>
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="font-changed" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="555">The ::font-changed signal is emitted each time the font options
have been changed through #ClutterSettings.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="resolution-changed" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="538">The ::resolution-changed signal is emitted each time the font
resolutions has been changed through #ClutterSettings.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="settings-changed" when="first" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="572">The ::settings-changed signal is emitted each time the #ClutterSettings
properties have been changed.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="BackendClass"
            c:type="ClutterBackendClass"
            disguised="1"
            glib:is-gtype-struct-for="Backend">
      <source-position filename="../clutter/clutter/clutter-backend.h"
                       line="56"/>
    </record>
    <enumeration name="BinAlignment"
                 version="1.2"
                 deprecated="1"
                 deprecated-version="1.12"
                 glib:type-name="ClutterBinAlignment"
                 glib:get-type="clutter_bin_alignment_get_type"
                 c:type="ClutterBinAlignment">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="618">The alignment policies available on each axis for #ClutterBinLayout</doc>
      <doc-deprecated xml:space="preserve">Use #ClutterActorAlign and the #ClutterActor
  API instead</doc-deprecated>
      <member name="fixed"
              value="0"
              c:identifier="CLUTTER_BIN_ALIGNMENT_FIXED"
              glib:nick="fixed">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="620">Fixed position alignment; the
  #ClutterBinLayout will honour the fixed position provided
  by the actors themselves when allocating them</doc>
      </member>
      <member name="fill"
              value="1"
              c:identifier="CLUTTER_BIN_ALIGNMENT_FILL"
              glib:nick="fill">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="623">Fill the allocation size</doc>
      </member>
      <member name="start"
              value="2"
              c:identifier="CLUTTER_BIN_ALIGNMENT_START"
              glib:nick="start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="624">Position the actors at the top
  or left side of the container, depending on the axis</doc>
      </member>
      <member name="end"
              value="3"
              c:identifier="CLUTTER_BIN_ALIGNMENT_END"
              glib:nick="end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="626">Position the actors at the bottom
  or right side of the container, depending on the axis</doc>
      </member>
      <member name="center"
              value="4"
              c:identifier="CLUTTER_BIN_ALIGNMENT_CENTER"
              glib:nick="center">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="628">Position the actors at the
  center of the container, depending on the axis</doc>
      </member>
    </enumeration>
    <class name="BinLayout"
           c:symbol-prefix="bin_layout"
           c:type="ClutterBinLayout"
           version="1.2"
           parent="LayoutManager"
           glib:type-name="ClutterBinLayout"
           glib:get-type="clutter_bin_layout_get_type"
           glib:type-struct="BinLayoutClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-bin-layout.h"
           line="47">The #ClutterBinLayout structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="75"/>
      <constructor name="new"
                   c:identifier="clutter_bin_layout_new"
                   version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bin-layout.c"
             line="679">Creates a new #ClutterBinLayout layout manager</doc>
        <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-bin-layout.c"
               line="688">the newly created layout manager</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
        <parameters>
          <parameter name="x_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bin-layout.c"
                 line="681">the default alignment policy to be used on the
  horizontal axis</doc>
            <type name="BinAlignment" c:type="ClutterBinAlignment"/>
          </parameter>
          <parameter name="y_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bin-layout.c"
                 line="683">the default alignment policy to be used on the
  vertical axis</doc>
            <type name="BinAlignment" c:type="ClutterBinAlignment"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="x-align"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bin-layout.c"
             line="618">The default horizontal alignment policy for actors managed
by the #ClutterBinLayout</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:x-expand and the
  #ClutterActor:x-align properties on #ClutterActor instead.</doc-deprecated>
        <type name="BinAlignment"/>
      </property>
      <property name="y-align"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bin-layout.c"
             line="638">The default vertical alignment policy for actors managed
by the #ClutterBinLayout</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:y-expand and the
  #ClutterActor:y-align properties on #ClutterActor instead.</doc-deprecated>
        <type name="BinAlignment"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="LayoutManager" c:type="ClutterLayoutManager"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BinLayoutPrivate" c:type="ClutterBinLayoutPrivate*"/>
      </field>
    </class>
    <record name="BinLayoutClass"
            c:type="ClutterBinLayoutClass"
            glib:is-gtype-struct-for="BinLayout"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-bin-layout.h"
           line="63">The #ClutterBinLayoutClass structure contains only private
data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="75"/>
      <field name="parent_class" readable="0" private="1">
        <type name="LayoutManagerClass" c:type="ClutterLayoutManagerClass"/>
      </field>
    </record>
    <record name="BinLayoutPrivate"
            c:type="ClutterBinLayoutPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="44"/>
    </record>
    <class name="BindConstraint"
           c:symbol-prefix="bind_constraint"
           c:type="ClutterBindConstraint"
           version="1.4"
           parent="Constraint"
           glib:type-name="ClutterBindConstraint"
           glib:get-type="clutter_bind_constraint_get_type"
           glib:type-struct="BindConstraintClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-bind-constraint.h"
           line="40">#ClutterBindConstraint is an opaque structure
whose members cannot be directly accessed</doc>
      <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_bind_constraint_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="443">Creates a new constraint, binding a #ClutterActor's position to
the given @coordinate of the position of @source</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-bind-constraint.c"
               line="453">the newly created #ClutterBindConstraint</doc>
          <type name="Constraint" c:type="ClutterConstraint*"/>
        </return-value>
        <parameters>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="445">the #ClutterActor to use as the source of
  the binding, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="coordinate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="447">the coordinate to bind</doc>
            <type name="BindCoordinate" c:type="ClutterBindCoordinate"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="448">the offset to apply to the binding, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_coordinate"
              c:identifier="clutter_bind_constraint_get_coordinate"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="581">Retrieves the bound coordinate of the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-bind-constraint.c"
               line="587">the bound coordinate</doc>
          <type name="BindCoordinate" c:type="ClutterBindCoordinate"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="583">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_offset"
              c:identifier="clutter_bind_constraint_get_offset"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="626">Retrieves the offset set using clutter_bind_constraint_set_offset()</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-bind-constraint.c"
               line="632">the offset, in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="628">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="clutter_bind_constraint_get_source"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="537">Retrieves the #ClutterActor set using clutter_bind_constraint_set_source()</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-bind-constraint.c"
               line="543">a pointer to the source actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="539">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_coordinate"
              c:identifier="clutter_bind_constraint_set_coordinate"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="555">Sets the coordinate to bind in the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="557">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
          <parameter name="coordinate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="558">the coordinate to bind</doc>
            <type name="BindCoordinate" c:type="ClutterBindCoordinate"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_offset"
              c:identifier="clutter_bind_constraint_set_offset"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="600">Sets the offset to be applied to the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="602">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="603">the offset to apply, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="clutter_bind_constraint_set_source"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="471">Sets the source #ClutterActor for the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="473">a #ClutterBindConstraint</doc>
            <type name="BindConstraint" c:type="ClutterBindConstraint*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-bind-constraint.c"
                 line="474">a #ClutterActor, or %NULL to unset the source</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="coordinate"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="399">The coordinate to be bound</doc>
        <type name="BindCoordinate"/>
      </property>
      <property name="offset"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="414">The offset, in pixels, to be applied to the binding</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="source"
                version="1.4"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-bind-constraint.c"
             line="382">The #ClutterActor used as the source for the binding.

The #ClutterActor must not be contained inside the actor associated
to the constraint.</doc>
        <type name="Actor"/>
      </property>
    </class>
    <record name="BindConstraintClass"
            c:type="ClutterBindConstraintClass"
            disguised="1"
            glib:is-gtype-struct-for="BindConstraint">
      <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                       line="49"/>
    </record>
    <enumeration name="BindCoordinate"
                 version="1.4"
                 glib:type-name="ClutterBindCoordinate"
                 glib:get-type="clutter_bind_coordinate_get_type"
                 c:type="ClutterBindCoordinate">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="647">Specifies which property should be used in a binding</doc>
      <member name="x" value="0" c:identifier="CLUTTER_BIND_X" glib:nick="x">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="649">Bind the X coordinate</doc>
      </member>
      <member name="y" value="1" c:identifier="CLUTTER_BIND_Y" glib:nick="y">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="650">Bind the Y coordinate</doc>
      </member>
      <member name="width"
              value="2"
              c:identifier="CLUTTER_BIND_WIDTH"
              glib:nick="width">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="651">Bind the width</doc>
      </member>
      <member name="height"
              value="3"
              c:identifier="CLUTTER_BIND_HEIGHT"
              glib:nick="height">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="652">Bind the height</doc>
      </member>
      <member name="position"
              value="4"
              c:identifier="CLUTTER_BIND_POSITION"
              glib:nick="position">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="653">Equivalent to to %CLUTTER_BIND_X and
  %CLUTTER_BIND_Y (added in Clutter 1.6)</doc>
      </member>
      <member name="size"
              value="5"
              c:identifier="CLUTTER_BIND_SIZE"
              glib:nick="size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="655">Equivalent to %CLUTTER_BIND_WIDTH and
  %CLUTTER_BIND_HEIGHT (added in Clutter 1.6)</doc>
      </member>
      <member name="all"
              value="6"
              c:identifier="CLUTTER_BIND_ALL"
              glib:nick="all">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="657">Equivalent to %CLUTTER_BIND_POSITION and
  %CLUTTER_BIND_SIZE (added in Clutter 1.10)</doc>
      </member>
    </enumeration>
    <callback name="BindingActionFunc"
              c:type="ClutterBindingActionFunc"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-binding-pool.h"
           line="51">The prototype for the callback function registered with
clutter_binding_pool_install_action() and invoked by
clutter_binding_pool_activate().</doc>
      <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                       line="68"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.h"
             line="63">the function should return %TRUE if the key
  binding has been handled, and return %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="gobject" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.h"
               line="53">a #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="action_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.h"
               line="54">the name of the action</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="key_val" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.h"
               line="55">the key symbol</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="modifiers" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.h"
               line="56">bitmask of the modifier flags</doc>
          <type name="ModifierType" c:type="ClutterModifierType"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="4">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.h"
               line="57">data passed to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="BindingPool"
           c:symbol-prefix="binding_pool"
           c:type="ClutterBindingPool"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="ClutterBindingPool"
           glib:get-type="clutter_binding_pool_get_type"
           glib:type-struct="BindingPoolClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-binding-pool.h"
           line="40">Container of key bindings. The #ClutterBindingPool struct is
private.</doc>
      <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_binding_pool_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="337">Creates a new #ClutterBindingPool that can be used to store
key bindings for an actor. The @name must be a unique identifier
for the binding pool, so that clutter_binding_pool_find() will
be able to return the correct binding pool.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="78"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.c"
               line="346">the newly created binding pool with the given
  name. Use g_object_unref() when done.</doc>
          <type name="BindingPool" c:type="ClutterBindingPool*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="339">the name of the binding pool</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="find"
                c:identifier="clutter_binding_pool_find"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="417">Finds the #ClutterBindingPool with @name.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.c"
               line="423">a pointer to the #ClutterBindingPool, or %NULL</doc>
          <type name="BindingPool" c:type="ClutterBindingPool*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="419">the name of the binding pool to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_for_class"
                c:identifier="clutter_binding_pool_get_for_class"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="370">Retrieves the #ClutterBindingPool for the given #GObject class
and, eventually, creates it. This function is a wrapper around
clutter_binding_pool_new() and uses the class type name as the
unique name for the binding pool.

Calling this function multiple times will return the same
#ClutterBindingPool.

A binding pool for a class can also be retrieved using
clutter_binding_pool_find() with the class type name:

|[
  pool = clutter_binding_pool_find (G_OBJECT_TYPE_NAME (instance));
]|</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.c"
               line="389">the binding pool for the given class.
  The returned #ClutterBindingPool is owned by Clutter and should not
  be freed directly</doc>
          <type name="BindingPool" c:type="ClutterBindingPool*"/>
        </return-value>
        <parameters>
          <parameter name="klass"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="372">a #GObjectClass pointer</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="activate"
              c:identifier="clutter_binding_pool_activate"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="823">Activates the callback associated to the action that is
bound to the @key_val and @modifiers pair.

The callback has the following signature:

|[
  void (* callback) (GObject             *gobject,
                     const gchar         *action_name,
                     guint                key_val,
                     ClutterModifierType  modifiers,
                     gpointer             user_data);
]|

Where the #GObject instance is @gobject and the user data
is the one passed when installing the action with
clutter_binding_pool_install_action().

If the action bound to the @key_val, @modifiers pair has been
blocked using clutter_binding_pool_block_action(), the callback
will not be invoked, and this function will return %FALSE.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.c"
               line="851">%TRUE if an action was found and was activated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="825">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="826">the key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="827">bitmask for the modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
          <parameter name="gobject" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="828">a #GObject</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="block_action"
              c:identifier="clutter_binding_pool_block_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="879">Blocks all the actions with name @action_name inside @pool.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="881">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="882">an action name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_action"
              c:identifier="clutter_binding_pool_find_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="708">Retrieves the name of the action matching the given key symbol
and modifiers bitmask.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-binding-pool.c"
               line="717">the name of the action, if found, or %NULL. The
  returned string is owned by the binding pool and should never
  be modified or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="710">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="711">a key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="712">a bitmask for the modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_action"
              c:identifier="clutter_binding_pool_install_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="445">Installs a new action inside a #ClutterBindingPool. The action
is bound to @key_val and @modifiers.

The same action name can be used for multiple @key_val, @modifiers
pairs.

When an action has been activated using clutter_binding_pool_activate()
the passed @callback will be invoked (with @data).

Actions can be blocked with clutter_binding_pool_block_action()
and then unblocked using clutter_binding_pool_unblock_action().</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="447">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="448">the name of the action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="449">key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="450">bitmask of modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="4"
                     destroy="5">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="451">function to be called
  when the action is activated</doc>
            <type name="BindingActionFunc" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="453">data to be passed to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="454">function to be called when the action is removed
  from the pool</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="install_closure"
              c:identifier="clutter_binding_pool_install_closure"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="517">A #GClosure variant of clutter_binding_pool_install_action().

Installs a new action inside a #ClutterBindingPool. The action
is bound to @key_val and @modifiers.

The same action name can be used for multiple @key_val, @modifiers
pairs.

When an action has been activated using clutter_binding_pool_activate()
the passed @closure will be invoked.

Actions can be blocked with clutter_binding_pool_block_action()
and then unblocked using clutter_binding_pool_unblock_action().</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="519">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="520">the name of the action</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="521">key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="522">bitmask of modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
          <parameter name="closure" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="523">a #GClosure</doc>
            <type name="GObject.Closure" c:type="GClosure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="override_action"
              c:identifier="clutter_binding_pool_override_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="583">Allows overriding the action for @key_val and @modifiers inside a
#ClutterBindingPool. See clutter_binding_pool_install_action().

When an action has been activated using clutter_binding_pool_activate()
the passed @callback will be invoked (with @data).

Actions can be blocked with clutter_binding_pool_block_action()
and then unblocked using clutter_binding_pool_unblock_action().</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="585">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="586">key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="587">bitmask of modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="588">function to be called when the action is activated</doc>
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="589">data to be passed to @callback</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="590">function to be called when the action is removed
  from the pool</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="override_closure"
              c:identifier="clutter_binding_pool_override_closure"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="648">A #GClosure variant of clutter_binding_pool_override_action().

Allows overriding the action for @key_val and @modifiers inside a
#ClutterBindingPool. See clutter_binding_pool_install_closure().

When an action has been activated using clutter_binding_pool_activate()
the passed @callback will be invoked (with @data).

Actions can be blocked with clutter_binding_pool_block_action()
and then unblocked using clutter_binding_pool_unblock_action().</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="650">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="651">key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="652">bitmask of modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
          <parameter name="closure" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="653">a #GClosure</doc>
            <type name="GObject.Closure" c:type="GClosure*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_action"
              c:identifier="clutter_binding_pool_remove_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="740">Removes the action matching the given @key_val, @modifiers pair,
if any exists.</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="742">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="key_val" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="743">a key symbol</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="744">a bitmask for the modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </method>
      <method name="unblock_action"
              c:identifier="clutter_binding_pool_unblock_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="906">Unblockes all the actions with name @action_name inside @pool.

Unblocking an action does not cause the callback bound to it to
be invoked in case clutter_binding_pool_activate() was called on
an action previously blocked with clutter_binding_pool_block_action().</doc>
        <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="908">a #ClutterBindingPool</doc>
            <type name="BindingPool" c:type="ClutterBindingPool*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-binding-pool.c"
                 line="909">an action name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="name"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-binding-pool.c"
             line="306">The unique name of the #ClutterBindingPool.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="BindingPoolClass"
            c:type="ClutterBindingPoolClass"
            disguised="1"
            glib:is-gtype-struct-for="BindingPool">
      <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                       line="49"/>
    </record>
    <class name="BlurEffect"
           c:symbol-prefix="blur_effect"
           c:type="ClutterBlurEffect"
           version="1.4"
           parent="OffscreenEffect"
           glib:type-name="ClutterBlurEffect"
           glib:get-type="clutter_blur_effect_get_type"
           glib:type-struct="BlurEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-blur-effect.h"
           line="40">#ClutterBlurEffect is an opaque structure
whose members cannot be accessed directly</doc>
      <source-position filename="../clutter/clutter/clutter-blur-effect.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_blur_effect_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-blur-effect.c"
             line="264">Creates a new #ClutterBlurEffect to be used with
clutter_actor_add_effect()</doc>
        <source-position filename="../clutter/clutter/clutter-blur-effect.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-blur-effect.c"
               line="270">the newly created #ClutterBlurEffect or %NULL</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
      </constructor>
    </class>
    <record name="BlurEffectClass"
            c:type="ClutterBlurEffectClass"
            disguised="1"
            glib:is-gtype-struct-for="BlurEffect">
      <source-position filename="../clutter/clutter/clutter-blur-effect.h"
                       line="49"/>
    </record>
    <class name="Box"
           c:symbol-prefix="box"
           c:type="ClutterBox"
           version="1.2"
           parent="Actor"
           glib:type-name="ClutterBox"
           glib:get-type="clutter_box_get_type"
           glib:type-struct="BoxClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-box.h"
           line="49">The #ClutterBox structure contains only private data and should
be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="84"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_box_new"
                   version="1.2"
                   deprecated="1"
                   deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="291">Creates a new #ClutterBox. The children of the box will be layed
out by the passed @manager</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_new() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-box.c"
               line="298">the newly created #ClutterBox actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="293">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_color"
              c:identifier="clutter_box_get_color"
              version="1.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="723">Retrieves the background color of @box

If the #ClutterBox:color-set property is set to %FALSE the
returned #ClutterColor is undefined</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_background_color() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="725">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="726">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_layout_manager"
              c:identifier="clutter_box_get_layout_manager"
              version="1.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="335">Retrieves the #ClutterLayoutManager instance used by @box</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_layout_manager() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-box.c"
               line="341">a #ClutterLayoutManager. The returned
  #ClutterLayoutManager is owned by the #ClutterBox and it should not
  be unreferenced</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="337">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack"
              c:identifier="clutter_box_pack"
              version="1.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="515">Adds @actor to @box and sets layout properties at the same time,
if the #ClutterLayoutManager used by @box has them

This function is a wrapper around clutter_container_add_actor()
and clutter_layout_manager_child_set()

Language bindings should use the vector-based clutter_box_packv()
variant instead</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead. To set
  specific layout properties, use clutter_layout_manager_child_set()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="517">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="518">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="519">the name of the first property to set, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="520">a list of property name and value pairs, terminated by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_after"
              c:identifier="clutter_box_pack_after"
              version="1.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="557">Adds @actor to @box, placing it after @sibling, and sets layout
properties at the same time, if the #ClutterLayoutManager used by
@box supports them

If @sibling is %NULL then @actor is placed at the end of the
list of children, to be allocated and painted after every other child

This function is a wrapper around clutter_container_add_actor(),
clutter_container_raise_child() and clutter_layout_manager_child_set()</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_insert_child_above() instead.
  To set specific layout properties, use clutter_layout_manager_child_set()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="559">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="560">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="561">a #ClutterActor or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="562">the name of the first property to set, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="563">a list of property name and value pairs, terminated by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_at"
              c:identifier="clutter_box_pack_at"
              version="1.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="651">Adds @actor to @box, placing it at @position, and sets layout
properties at the same time, if the #ClutterLayoutManager used by
@box supports them

If @position is a negative number, or is larger than the number of
children of @box, the new child is added at the end of the list of
children</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_insert_child_at_index() instead.
  To set specific layout properties, use clutter_layout_manager_child_set()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="653">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="654">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="655">the position to insert the @actor at</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="656">the name of the first property to set, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="657">a list of property name and value pairs, terminated by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_before"
              c:identifier="clutter_box_pack_before"
              version="1.2"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="604">Adds @actor to @box, placing it before @sibling, and sets layout
properties at the same time, if the #ClutterLayoutManager used by
@box supports them

If @sibling is %NULL then @actor is placed at the beginning of the
list of children, to be allocated and painted below every other child

This function is a wrapper around clutter_container_add_actor(),
clutter_container_lower_child() and clutter_layout_manager_child_set()</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_insert_child_below() instead.
  To set specific layout properties, use clutter_layout_manager_child_set()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="606">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="607">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="608">a #ClutterActor or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="609">the name of the first property to set, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="610">a list of property name and value pairs, terminated by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="packv"
              c:identifier="clutter_box_packv"
              version="1.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="355">Vector-based variant of clutter_box_pack(), intended for language
bindings to use</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead. To set
  specific layout properties, use clutter_layout_manager_child_set()</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="357">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="358">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="n_properties" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="359">the number of properties to set</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="properties" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="360">a vector
  containing the property names to set</doc>
            <array length="1" zero-terminated="0" c:type="const gchar* const*">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="362">a vector containing the property
  values to set</doc>
            <array length="1" zero-terminated="0" c:type="const GValue*">
              <type name="GObject.Value" c:type="GValue"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="clutter_box_set_color"
              version="1.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="703">Sets (or unsets) the background color for @box</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_background_color() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="705">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="706">the background color, or %NULL to unset</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_layout_manager"
              c:identifier="clutter_box_set_layout_manager"
              version="1.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="314">Sets the #ClutterLayoutManager for @box

A #ClutterLayoutManager is a delegate object that controls the
layout of the children of @box</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_layout_manager() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="316">a #ClutterBox</doc>
            <type name="Box" c:type="ClutterBox*"/>
          </instance-parameter>
          <parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-box.c"
                 line="317">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </parameter>
        </parameters>
      </method>
      <property name="color"
                version="1.2"
                deprecated="1"
                deprecated-version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="242">The color to be used to paint the background of the
#ClutterBox. Setting this property will set the
#ClutterBox:color-set property as a side effect

This property sets the #ClutterActor:background-color property
internally.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:background-color property</doc-deprecated>
        <type name="Color"/>
      </property>
      <property name="color-set"
                version="1.2"
                deprecated="1"
                deprecated-version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-box.c"
             line="263">Whether the #ClutterBox:color property has been set.

This property reads the #ClutterActor:background-color-set property
internally.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:background-color-set property</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BoxPrivate" c:type="ClutterBoxPrivate*"/>
      </field>
    </class>
    <enumeration name="BoxAlignment"
                 version="1.2"
                 glib:type-name="ClutterBoxAlignment"
                 glib:get-type="clutter_box_alignment_get_type"
                 c:type="ClutterBoxAlignment">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="692">The alignment policies available on each axis of the #ClutterBoxLayout</doc>
      <member name="start"
              value="0"
              c:identifier="CLUTTER_BOX_ALIGNMENT_START"
              glib:nick="start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="694">Align the child to the top or to
  to the left, depending on the used axis</doc>
      </member>
      <member name="end"
              value="1"
              c:identifier="CLUTTER_BOX_ALIGNMENT_END"
              glib:nick="end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="697">Align the child to the bottom or to
  the right, depending on the used axis</doc>
      </member>
      <member name="center"
              value="2"
              c:identifier="CLUTTER_BOX_ALIGNMENT_CENTER"
              glib:nick="center">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="696">Align the child to the center</doc>
      </member>
    </enumeration>
    <record name="BoxClass"
            c:type="ClutterBoxClass"
            glib:is-gtype-struct-for="Box"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-box.h"
           line="65">The #ClutterBoxClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="84"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="clutter_padding_1">
        <callback name="clutter_padding_1">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="clutter_padding_2">
        <callback name="clutter_padding_2">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="clutter_padding_3">
        <callback name="clutter_padding_3">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="clutter_padding_4">
        <callback name="clutter_padding_4">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="clutter_padding_5">
        <callback name="clutter_padding_5">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="clutter_padding_6">
        <callback name="clutter_padding_6">
          <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="BoxLayout"
           c:symbol-prefix="box_layout"
           c:type="ClutterBoxLayout"
           version="1.2"
           parent="LayoutManager"
           glib:type-name="ClutterBoxLayout"
           glib:get-type="clutter_box_layout_get_type"
           glib:type-struct="BoxLayoutClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-box-layout.h"
           line="50">The #ClutterBoxLayout structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="78"/>
      <constructor name="new"
                   c:identifier="clutter_box_layout_new"
                   version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1531">Creates a new #ClutterBoxLayout layout manager</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1536">the newly created #ClutterBoxLayout</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
      </constructor>
      <method name="get_alignment"
              c:identifier="clutter_box_layout_get_alignment"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1922">Retrieves the horizontal and vertical alignment policies for @actor
as set using clutter_box_layout_pack() or clutter_box_layout_set_alignment()</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-align and #ClutterActor:y-align properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1924">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1925">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="x_align"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1926">return location for the horizontal alignment policy</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment*"/>
          </parameter>
          <parameter name="y_align"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1927">return location for the vertical alignment policy</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_easing_duration"
              c:identifier="clutter_box_layout_get_easing_duration"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2346">Retrieves the duration set using clutter_box_layout_set_easing_duration()</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="2352">the duration of the animations, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2348">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_easing_mode"
              c:identifier="clutter_box_layout_get_easing_mode"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2294">Retrieves the easing mode set using clutter_box_layout_set_easing_mode()</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="2300">an easing mode</doc>
          <type name="gulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2296">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expand"
              c:identifier="clutter_box_layout_get_expand"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2151">Retrieves whether @actor should expand inside @layout</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-expand and #ClutterActor:y-expand properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="2158">%TRUE if the #ClutterActor should expand, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2153">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2154">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_fill"
              c:identifier="clutter_box_layout_get_fill"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2038">Retrieves the horizontal and vertical fill policies for @actor
as set using clutter_box_layout_pack() or clutter_box_layout_set_fill()</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-align and #ClutterActor:y-align properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2040">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2041">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="x_fill"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2042">return location for the horizontal fill policy</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="y_fill"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2043">return location for the vertical fill policy</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="clutter_box_layout_get_homogeneous"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1734">Retrieves if the children sizes are allocated homogeneously.</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1740">%TRUE if the #ClutterBoxLayout is arranging its children
  homogeneously, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1736">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_orientation"
              c:identifier="clutter_box_layout_get_orientation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1681">Retrieves the orientation of the @layout.</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1687">the orientation of the layout</doc>
          <type name="Orientation" c:type="ClutterOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1683">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pack_start"
              c:identifier="clutter_box_layout_get_pack_start"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1788">Retrieves the value set using clutter_box_layout_set_pack_start()</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1794">%TRUE if the #ClutterBoxLayout should pack children
 at the beginning of the layout, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1790">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spacing"
              c:identifier="clutter_box_layout_get_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1579">Retrieves the spacing set using clutter_box_layout_set_spacing()</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1585">the spacing between children of the #ClutterBoxLayout</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1581">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_animations"
              c:identifier="clutter_box_layout_get_use_animations"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2242">Retrieves whether @layout should animate changes in the layout properties.</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="2248">%TRUE if the animations should be used, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2244">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vertical"
              c:identifier="clutter_box_layout_get_vertical"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1659">Retrieves the orientation of the @layout as set using the
clutter_box_layout_set_vertical() function</doc>
        <doc-deprecated xml:space="preserve">Use clutter_box_layout_get_orientation() instead</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-box-layout.c"
               line="1666">%TRUE if the #ClutterBoxLayout is arranging its children
  vertically, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1661">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack"
              c:identifier="clutter_box_layout_pack"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1807">Packs @actor inside the #ClutterContainer associated to @layout
and sets the layout properties</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout honours #ClutterActor's
  align and expand properties. The preferred way is adding
  the @actor with clutter_actor_add_child() and setting
  #ClutterActor:x-align, #ClutterActor:y-align,
  #ClutterActor:x-expand and #ClutterActor:y-expand</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1809">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1810">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="expand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1811">whether the @actor should expand</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="x_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1812">whether the @actor should fill horizontally</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="y_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1813">whether the @actor should fill vertically</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="x_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1814">the horizontal alignment policy for @actor</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment"/>
          </parameter>
          <parameter name="y_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1815">the vertical alignment policy for @actor</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_alignment"
              c:identifier="clutter_box_layout_set_alignment"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1866">Sets the horizontal and vertical alignment policies for @actor
inside @layout</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-align and #ClutterActor:y-align properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1868">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1869">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="x_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1870">Horizontal alignment policy for @actor</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment"/>
          </parameter>
          <parameter name="y_align" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1871">Vertical alignment policy for @actor</doc>
            <type name="BoxAlignment" c:type="ClutterBoxAlignment"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_duration"
              c:identifier="clutter_box_layout_set_easing_duration"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2315">Sets the duration of the animations used by @layout when animating changes
in the layout properties.</doc>
        <doc-deprecated xml:space="preserve">The layout manager will honour the easing state
  of the children when allocating them.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2317">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2318">the duration of the animations, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_easing_mode"
              c:identifier="clutter_box_layout_set_easing_mode"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2262">Sets the easing mode to be used by @layout when animating changes in layout
properties.</doc>
        <doc-deprecated xml:space="preserve">The layout manager will honour the easing state
  of the children when allocating them.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2264">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2265">an easing mode, either from #ClutterAnimationMode or a logical id
  from clutter_alpha_register_func()</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expand"
              c:identifier="clutter_box_layout_set_expand"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2098">Sets whether @actor should expand inside @layout</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-expand and #ClutterActor:y-expand properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2100">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2101">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="expand" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2102">whether @actor should expand</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_fill"
              c:identifier="clutter_box_layout_set_fill"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1982">Sets the horizontal and vertical fill policies for @actor
inside @layout</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour #ClutterActor's
  #ClutterActor:x-align and #ClutterActor:y-align properies</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1984">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1985">a #ClutterActor child of @layout</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="x_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1986">whether @actor should fill horizontally the allocated space</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="y_fill" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1987">whether @actor should fill vertically the allocated space</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="clutter_box_layout_set_homogeneous"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1700">Sets whether the size of @layout children should be
homogeneous</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1702">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1703">%TRUE if the layout should be homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_orientation"
              c:identifier="clutter_box_layout_set_orientation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1627">Sets the orientation of the #ClutterBoxLayout layout manager.</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1629">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1630">the orientation of the #ClutterBoxLayout</doc>
            <type name="Orientation" c:type="ClutterOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pack_start"
              c:identifier="clutter_box_layout_set_pack_start"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1753">Sets whether children of @layout should be layed out by appending
them or by prepending them</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1755">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="pack_start" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1756">%TRUE if the @layout should pack children at the
  beginning of the layout</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_spacing"
              c:identifier="clutter_box_layout_set_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1546">Sets the spacing between children of @layout</doc>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1548">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1549">the spacing between children of the layout, in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_animations"
              c:identifier="clutter_box_layout_set_use_animations"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="2204">Sets whether @layout should animate changes in the layout properties

The duration of the animations is controlled by
clutter_box_layout_set_easing_duration(); the easing mode to be used
by the animations is controlled by clutter_box_layout_set_easing_mode().

Enabling animations will override the easing state of each child
of the actor using @layout, and will use the #ClutterBoxLayout:easing-mode
and #ClutterBoxLayout:easing-duration properties instead.</doc>
        <doc-deprecated xml:space="preserve">The layout manager will honour the easing state
  of the children when allocating them.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2206">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="animate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="2207">%TRUE if the @layout should use animations</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_vertical"
              c:identifier="clutter_box_layout_set_vertical"
              version="1.2"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1597">Sets whether @layout should arrange its children vertically alongside
the Y axis, instead of horizontally alongside the X axis</doc>
        <doc-deprecated xml:space="preserve">Use clutter_box_layout_set_orientation() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-box-layout.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1599">a #ClutterBoxLayout</doc>
            <type name="BoxLayout" c:type="ClutterBoxLayout*"/>
          </instance-parameter>
          <parameter name="vertical" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-box-layout.c"
                 line="1600">%TRUE if the layout should be vertical</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="easing-duration"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1490">The duration of the animations, in case #ClutterBoxLayout:use-animations
is set to %TRUE.

The duration is expressed in milliseconds.</doc>
        <doc-deprecated xml:space="preserve">The #ClutterBoxLayout will honour the easing state of
  the children when allocating them.</doc-deprecated>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="easing-mode"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1464">The easing mode for the animations, in case
#ClutterBoxLayout:use-animations is set to %TRUE.

The easing mode has the same semantics of #ClutterAnimation:mode: it can
either be a value from the #ClutterAnimationMode enumeration, like
%CLUTTER_EASE_OUT_CUBIC, or a logical id as returned by
clutter_alpha_register_func().

The default value is %CLUTTER_EASE_OUT_CUBIC.</doc>
        <doc-deprecated xml:space="preserve">The #ClutterBoxLayout will honour the easing state of
  the children when allocating them.</doc-deprecated>
        <type name="gulong" c:type="gulong"/>
      </property>
      <property name="homogeneous"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1401">Whether the #ClutterBoxLayout should arrange its children
homogeneously, i.e. all children get the same size</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="orientation"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1384">The orientation of the #ClutterBoxLayout, either horizontal
or vertical</doc>
        <type name="Orientation"/>
      </property>
      <property name="pack-start"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1417">Whether the #ClutterBoxLayout should pack items at the start
or append them at the end</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="spacing"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1432">The spacing between children of the #ClutterBoxLayout, in pixels</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="use-animations"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1446">Whether the #ClutterBoxLayout should animate changes in the
layout, overriding the easing state of the children.</doc>
        <doc-deprecated xml:space="preserve">#ClutterBoxLayout will honour the easing state
  of the children when allocating them.</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="vertical"
                version="1.2"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-box-layout.c"
             line="1364">Whether the #ClutterBoxLayout should arrange its children
alongside the Y axis, instead of alongside the X axis</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterBoxLayout:orientation instead.</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="LayoutManager" c:type="ClutterLayoutManager"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="BoxLayoutPrivate" c:type="ClutterBoxLayoutPrivate*"/>
      </field>
    </class>
    <record name="BoxLayoutClass"
            c:type="ClutterBoxLayoutClass"
            glib:is-gtype-struct-for="BoxLayout"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-box-layout.h"
           line="66">The #ClutterBoxLayoutClass structure contains only private
data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="78"/>
      <field name="parent_class" readable="0" private="1">
        <type name="LayoutManagerClass" c:type="ClutterLayoutManagerClass"/>
      </field>
    </record>
    <record name="BoxLayoutPrivate"
            c:type="ClutterBoxLayoutPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="47"/>
    </record>
    <record name="BoxPrivate" c:type="ClutterBoxPrivate" disguised="1">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="46"/>
    </record>
    <class name="BrightnessContrastEffect"
           c:symbol-prefix="brightness_contrast_effect"
           c:type="ClutterBrightnessContrastEffect"
           version="1.10"
           parent="OffscreenEffect"
           glib:type-name="ClutterBrightnessContrastEffect"
           glib:get-type="clutter_brightness_contrast_effect_get_type"
           glib:type-struct="BrightnessContrastEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
           line="41">#ClutterBrightnessContrastEffect is an opaque structure
whose members cannot be directly accessed</doc>
      <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                       line="50"/>
      <constructor name="new"
                   c:identifier="clutter_brightness_contrast_effect_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="461">Creates a new #ClutterBrightnessContrastEffect to be used with
clutter_actor_add_effect()</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
               line="467">the newly created
  #ClutterBrightnessContrastEffect or %NULL.  Use g_object_unref() when
  done.</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
      </constructor>
      <method name="get_brightness"
              c:identifier="clutter_brightness_contrast_effect_get_brightness"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="516">Retrieves the change in brightness used by @effect.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="518">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="red"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="519">return location for red component of the
   change in brightness</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="green"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="521">return location for green component of the
   change in brightness</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="blue"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="523">return location for blue component of the
   change in brightness</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_contrast"
              c:identifier="clutter_brightness_contrast_effect_get_contrast"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="606">Retrieves the contrast value used by @effect.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="608">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="red"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="609">return location for red component of the
   change in contrast</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="green"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="611">return location for green component of the
   change in contrast</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="blue"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="613">return location for blue component of the
   change in contrast</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_brightness"
              c:identifier="clutter_brightness_contrast_effect_set_brightness"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="548">The range of @brightness is [-1.0, 1.0], where 0.0 designates no change;
a value below 0.0 indicates a decrease in brightness; and a value
above 0.0 indicates an increase of brightness.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="550">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="brightness" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="551">the brightness change for all three components (r, g, b)</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_brightness_full"
              c:identifier="clutter_brightness_contrast_effect_set_brightness_full"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="479">The range for each component is [-1.0, 1.0] where 0.0 designates no change,
values below 0.0 mean a decrease in brightness, and values above indicate
an increase.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="481">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="482">red component of the change in brightness</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="483">green component of the change in brightness</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="484">blue component of the change in brightness</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_contrast"
              c:identifier="clutter_brightness_contrast_effect_set_contrast"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="638">The range for @contrast is [-1.0, 1.0], where 0.0 designates no change;
a value below 0.0 indicates a decrease in contrast; and a value above
0.0 indicates an increase.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="640">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="contrast" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="641">contrast change for all three channels</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_contrast_full"
              c:identifier="clutter_brightness_contrast_effect_set_contrast_full"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="569">The range for each component is [-1.0, 1.0] where 0.0 designates no change,
values below 0.0 mean a decrease in contrast, and values above indicate
an increase.</doc>
        <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="571">a #ClutterBrightnessContrastEffect</doc>
            <type name="BrightnessContrastEffect"
                  c:type="ClutterBrightnessContrastEffect*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="572">red component of the change in contrast</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="573">green component of the change in contrast</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
                 line="574">blue component of the change in contrast</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <property name="brightness"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="308">The brightness change to apply to the effect.

This property uses a #ClutterColor to represent the changes to each
color channel. The range is [ 0, 255 ], with 127 as the value used
to indicate no change; values smaller than 127 indicate a decrease
in brightness, and values larger than 127 indicate an increase in
brightness.</doc>
        <type name="Color"/>
      </property>
      <property name="contrast"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-brightness-contrast-effect.c"
             line="328">The contrast change to apply to the effect.

This property uses a #ClutterColor to represent the changes to each
color channel. The range is [ 0, 255 ], with 127 as the value used
to indicate no change; values smaller than 127 indicate a decrease
in contrast, and values larger than 127 indicate an increase in
contrast.</doc>
        <type name="Color"/>
      </property>
    </class>
    <record name="BrightnessContrastEffectClass"
            c:type="ClutterBrightnessContrastEffectClass"
            disguised="1"
            glib:is-gtype-struct-for="BrightnessContrastEffect">
      <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                       line="50"/>
    </record>
    <record name="ButtonEvent" c:type="ClutterButtonEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="179">Button event.

The event coordinates are relative to the stage that received the
event, and can be transformed into actor-relative coordinates by
using clutter_actor_transform_stage_point().</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="219"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="181">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="182">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="183">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="184">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="185">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="186">event X coordinate, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="187">event Y coordinate, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="modifier_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="188">button modifiers</doc>
        <type name="ModifierType" c:type="ClutterModifierType"/>
      </field>
      <field name="button" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="189">event button</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="click_count" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="190">number of button presses within the default time
  and radius</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="axes" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="192">reserved for future use</doc>
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="193">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
    </record>
    <enumeration name="ButtonState"
                 glib:type-name="ClutterButtonState"
                 glib:get-type="clutter_button_state_get_type"
                 c:type="ClutterButtonState">
      <member name="released"
              value="0"
              c:identifier="CLUTTER_BUTTON_STATE_RELEASED"
              glib:nick="released">
      </member>
      <member name="pressed"
              value="1"
              c:identifier="CLUTTER_BUTTON_STATE_PRESSED"
              glib:nick="pressed">
      </member>
    </enumeration>
    <function-macro name="CALLBACK"
                    c:identifier="CLUTTER_CALLBACK"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="113">Convenience macro to cast a function to #ClutterCallback</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="119"/>
      <parameters>
        <parameter name="f">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="115">a function</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CANVAS"
                    c:identifier="CLUTTER_CANVAS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CANVAS_CLASS"
                    c:identifier="CLUTTER_CANVAS_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CANVAS_GET_CLASS"
                    c:identifier="CLUTTER_CANVAS_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHILD_META"
                    c:identifier="CLUTTER_CHILD_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHILD_META_CLASS"
                    c:identifier="CLUTTER_CHILD_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CHILD_META_GET_CLASS"
                    c:identifier="CLUTTER_CHILD_META_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLICK_ACTION"
                    c:identifier="CLUTTER_CLICK_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLICK_ACTION_CLASS"
                    c:identifier="CLUTTER_CLICK_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLICK_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_CLICK_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIP_NODE"
                    c:identifier="CLUTTER_CLIP_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="83"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLONE"
                    c:identifier="CLUTTER_CLONE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLONE_CLASS"
                    c:identifier="CLUTTER_CLONE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLONE_GET_CLASS"
                    c:identifier="CLUTTER_CLONE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="COGL"
              value="deprecated"
              c:type="CLUTTER_COGL"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-macros.h"
           line="44">Cogl (internal GL abstraction utility library) backend. Can be "gl" or
"gles" currently</doc>
      <doc-deprecated xml:space="preserve">The macro evaluates to "deprecated" as Cogl can be
  compiled against multiple GL implementations.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="55"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="COLORIZE_EFFECT"
                    c:identifier="CLUTTER_COLORIZE_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_INIT"
                    c:identifier="CLUTTER_COLOR_INIT"
                    version="1.12"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.h"
           line="58">A macro that initializes a #ClutterColor, to be used when declaring it.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="69"/>
      <parameters>
        <parameter name="r">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.h"
               line="60">value for the red channel, between 0 and 255</doc>
        </parameter>
        <parameter name="g">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.h"
               line="61">value for the green channel, between 0 and 255</doc>
        </parameter>
        <parameter name="b">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.h"
               line="62">value for the blue channel, between 0 and 255</doc>
        </parameter>
        <parameter name="a">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.h"
               line="63">value for the alpha channel, between 0 and 255</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="COLOR_NODE"
                    c:identifier="CLUTTER_COLOR_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONSTRAINT"
                    c:identifier="CLUTTER_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONSTRAINT_CLASS"
                    c:identifier="CLUTTER_CONSTRAINT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONSTRAINT_GET_CLASS"
                    c:identifier="CLUTTER_CONSTRAINT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTAINER"
                    c:identifier="CLUTTER_CONTAINER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CONTAINER_GET_IFACE"
                    c:identifier="CLUTTER_CONTAINER_GET_IFACE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="CURRENT_TIME"
              value="0"
              c:type="CLUTTER_CURRENT_TIME"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="48">Default value for "now".</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="55"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <callback name="Callback" c:type="ClutterCallback">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor.h"
           line="103">Generic callback</doc>
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="110"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="actor" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="105">a #ClutterActor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-actor.h"
               line="106">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Canvas"
           c:symbol-prefix="canvas"
           c:type="ClutterCanvas"
           version="1.10"
           parent="GObject.Object"
           glib:type-name="ClutterCanvas"
           glib:get-type="clutter_canvas_get_type"
           glib:type-struct="CanvasClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-canvas.h"
           line="47">The #ClutterCanvas structure contains
private data and should only be accessed using the provided
API.</doc>
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="86"/>
      <implements name="Content"/>
      <function name="new" c:identifier="clutter_canvas_new" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="506">Creates a new instance of #ClutterCanvas.

You should call clutter_canvas_set_size() to set the size of the canvas.

You should call clutter_content_invalidate() every time you wish to
draw the contents of the canvas.</doc>
        <source-position filename="../clutter/clutter/clutter-canvas.h"
                         line="92"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-canvas.c"
               line="516">The newly allocated instance of
  #ClutterCanvas. Use g_object_unref() when done.</doc>
          <type name="Content" c:type="ClutterContent*"/>
        </return-value>
      </function>
      <virtual-method name="draw">
        <source-position filename="../clutter/clutter/clutter-canvas.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="canvas" transfer-ownership="none">
            <type name="Canvas" c:type="ClutterCanvas*"/>
          </instance-parameter>
          <parameter name="cr" transfer-ownership="none">
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_scale_factor"
              c:identifier="clutter_canvas_get_scale_factor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="632">Gets the scale factor of the @canvas.</doc>
        <source-position filename="../clutter/clutter/clutter-canvas.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-canvas.c"
               line="638">the current @canvas scale factor or -1 if invalid</doc>
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="canvas" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="634">a #ClutterCanvas</doc>
            <type name="Canvas" c:type="ClutterCanvas*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_scale_factor"
              c:identifier="clutter_canvas_set_scale_factor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="603">Sets the scaling factor of the @canvas, and invalidates the content.

This function will cause the @canvas to be invalidated only
if the scale factor of the canvas surface has changed.</doc>
        <source-position filename="../clutter/clutter/clutter-canvas.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="canvas" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="605">a #ClutterCanvas</doc>
            <type name="Canvas" c:type="ClutterCanvas*"/>
          </instance-parameter>
          <parameter name="scale" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="606">the integer scaling factor of the canvas</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size"
              c:identifier="clutter_canvas_set_size"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="567">Sets the size of the @canvas, and invalidates the content.

This function will cause the @canvas to be invalidated only
if the size of the canvas surface has changed.

If you want to invalidate the contents of the @canvas when setting
the size, you can use the return value of the function to conditionally
call clutter_content_invalidate():

|[
  if (!clutter_canvas_set_size (canvas, width, height))
    clutter_content_invalidate (CLUTTER_CONTENT (canvas));
]|</doc>
        <source-position filename="../clutter/clutter/clutter-canvas.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-canvas.c"
               line="587">this function returns %TRUE if the size change
  caused a content invalidation, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="canvas" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="569">a #ClutterCanvas</doc>
            <type name="Canvas" c:type="ClutterCanvas*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="570">the width of the canvas, in pixels</doc>
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="571">the height of the canvas, in pixels</doc>
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <property name="height"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="252">The height of the canvas.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="scale-factor" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="268">The height of the canvas.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="width"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="236">The width of the canvas.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="CanvasPrivate" c:type="ClutterCanvasPrivate*"/>
      </field>
      <glib:signal name="draw" when="last" no-recurse="1" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-canvas.c"
             line="282">The #ClutterCanvas::draw signal is emitted each time a canvas is
invalidated.

It is safe to connect multiple handlers to this signal: each
handler invocation will be automatically protected by cairo_save()
and cairo_restore() pairs.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-canvas.c"
               line="296">%TRUE if the signal emission should stop, and
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="285">the Cairo context used to draw</doc>
            <type name="cairo.Context"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="286">the width of the @canvas</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-canvas.c"
                 line="287">the height of the @canvas</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CanvasClass"
            c:type="ClutterCanvasClass"
            glib:is-gtype-struct-for="Canvas"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-canvas.h"
           line="64">The #ClutterCanvasClass structure contains
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="86"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="draw">
        <callback name="draw">
          <source-position filename="../clutter/clutter/clutter-canvas.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="canvas" transfer-ownership="none">
              <type name="Canvas" c:type="ClutterCanvas*"/>
            </parameter>
            <parameter name="cr" transfer-ownership="none">
              <type name="cairo.Context" c:type="cairo_t*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="16">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="CanvasPrivate" c:type="ClutterCanvasPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="44"/>
    </record>
    <record name="Capture" c:type="ClutterCapture">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="133"/>
      <field name="image" writable="1">
        <type name="cairo.Surface" c:type="cairo_surface_t*"/>
      </field>
      <field name="rect" writable="1">
        <type name="cairo.RectangleInt" c:type="cairo_rectangle_int_t"/>
      </field>
    </record>
    <class name="ChildMeta"
           c:symbol-prefix="child_meta"
           c:type="ClutterChildMeta"
           version="0.8"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterChildMeta"
           glib:get-type="clutter_child_meta_get_type"
           glib:type-struct="ChildMetaClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-child-meta.h"
           line="49">Base interface for container specific state for child actors. A child
data is meant to be used when you need to keep track of information
about each individual child added to a container.

In order to use it you should create your own subclass of
#ClutterChildMeta and set the #ClutterContainerIface child_meta_type
interface member to your subclass type, like:

|[
static void
my_container_iface_init (ClutterContainerIface *iface)
{
  // set the rest of the #ClutterContainer vtable

  container_iface-&gt;child_meta_type  = MY_TYPE_CHILD_META;
}
]|

This will automatically create a #ClutterChildMeta of type
`MY_TYPE_CHILD_META` for every actor that is added to the container.

The child data for an actor can be retrieved using the
clutter_container_get_child_meta() function.

The properties of the data and your subclass can be manipulated with
clutter_container_child_set() and clutter_container_child_get() which
act like g_object_set() and g_object_get().

You can provide hooks for your own storage as well as control the
instantiation by overriding the #ClutterContainerIface virtual functions
#ClutterContainerIface.create_child_meta(), #ClutterContainerIface.destroy_child_meta(),
and #ClutterContainerIface.get_child_meta().</doc>
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="110"/>
      <method name="get_actor"
              c:identifier="clutter_child_meta_get_actor"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.c"
             line="175">Retrieves the actor wrapped by @data</doc>
        <source-position filename="../clutter/clutter/clutter-child-meta.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-child-meta.c"
               line="181">a #ClutterActor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-child-meta.c"
                 line="177">a #ClutterChildMeta</doc>
            <type name="ChildMeta" c:type="ClutterChildMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_container"
              c:identifier="clutter_child_meta_get_container"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.c"
             line="157">Retrieves the container using @data</doc>
        <source-position filename="../clutter/clutter/clutter-child-meta.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-child-meta.c"
               line="163">a #ClutterContainer</doc>
          <type name="Container" c:type="ClutterContainer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-child-meta.c"
                 line="159">a #ClutterChildMeta</doc>
            <type name="ChildMeta" c:type="ClutterChildMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="actor"
                version="0.8"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.c"
             line="132">The #ClutterActor being wrapped by this #ClutterChildMeta</doc>
        <type name="Actor"/>
      </property>
      <property name="container"
                version="0.8"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.c"
             line="117">The #ClutterContainer that created this #ClutterChildMeta.</doc>
        <type name="Container"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="container">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.h"
             line="51">the container handling this data</doc>
        <type name="Container" c:type="ClutterContainer*"/>
      </field>
      <field name="actor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-child-meta.h"
             line="52">the actor wrapped by this data</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
    </class>
    <record name="ChildMetaClass"
            c:type="ClutterChildMetaClass"
            glib:is-gtype-struct-for="ChildMeta"
            version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-child-meta.h"
           line="99">The #ClutterChildMetaClass contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="110"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ClickAction"
           c:symbol-prefix="click_action"
           c:type="ClutterClickAction"
           version="1.4"
           parent="Action"
           glib:type-name="ClutterClickAction"
           glib:get-type="clutter_click_action_get_type"
           glib:type-struct="ClickActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-click-action.h"
           line="51">The #ClutterClickAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="98"/>
      <constructor name="new"
                   c:identifier="clutter_click_action_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="697">Creates a new #ClutterClickAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-click-action.c"
               line="702">the newly created #ClutterClickAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="clicked">
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="long_press">
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="LongPressState" c:type="ClutterLongPressState"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_button"
              c:identifier="clutter_click_action_get_button"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="747">Retrieves the button that was pressed.</doc>
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-click-action.c"
               line="753">the button value</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="749">a #ClutterClickAction</doc>
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_coords"
              c:identifier="clutter_click_action_get_coords"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="783">Retrieves the screen coordinates of the button press.</doc>
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="785">a #ClutterClickAction</doc>
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
          <parameter name="press_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="786">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="press_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="787">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state"
              c:identifier="clutter_click_action_get_state"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="765">Retrieves the modifier state of the click action.</doc>
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-click-action.c"
               line="771">the modifier state parameter, or 0</doc>
          <type name="ModifierType" c:type="ClutterModifierType"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="767">a #ClutterClickAction</doc>
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="release"
              c:identifier="clutter_click_action_release"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="712">Emulates a release of the pointer button, which ungrabs the pointer
and unsets the #ClutterClickAction:pressed state.

This function will also cancel the long press gesture if one was
initiated.

This function is useful to break a grab, for instance after a certain
amount of time has passed.</doc>
        <source-position filename="../clutter/clutter/clutter-click-action.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="714">a #ClutterClickAction</doc>
            <type name="ClickAction" c:type="ClutterClickAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="held" version="1.4" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="574">Whether the clickable actor has the pointer grabbed</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="long-press-duration"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="588">The minimum duration of a press for it to be recognized as a long
press gesture, in milliseconds.

A value of -1 will make the #ClutterClickAction use the value of
the #ClutterSettings:long-press-duration property.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="long-press-threshold"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="607">The maximum allowed distance that can be covered (on both axes) before
a long press gesture is cancelled, in pixels.

A value of -1 will make the #ClutterClickAction use the value of
the #ClutterSettings:dnd-drag-threshold property.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="pressed" version="1.4" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="560">Whether the clickable actor should be in "pressed" state</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Action" c:type="ClutterAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ClickActionPrivate" c:type="ClutterClickActionPrivate*"/>
      </field>
      <glib:signal name="clicked" when="last" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="630">The ::clicked signal is emitted when the #ClutterActor to which
a #ClutterClickAction has been applied should respond to a
pointer button press and release events</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="633">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="long-press" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-click-action.c"
             line="650">The ::long-press signal is emitted during the long press gesture
handling.

This signal can be emitted multiple times with different states.

The %CLUTTER_LONG_PRESS_QUERY state will be emitted on button presses,
and its return value will determine whether the long press handling
should be initiated. If the signal handlers will return %TRUE, the
%CLUTTER_LONG_PRESS_QUERY state will be followed either by a signal
emission with the %CLUTTER_LONG_PRESS_ACTIVATE state if the long press
constraints were respected, or by a signal emission with the
%CLUTTER_LONG_PRESS_CANCEL state if the long press was cancelled.

It is possible to forcibly cancel a long press detection using
clutter_click_action_release().</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-click-action.c"
               line="672">Only the %CLUTTER_LONG_PRESS_QUERY state uses the
  returned value of the handler; other states will ignore it</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="653">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-click-action.c"
                 line="654">the long press state</doc>
            <type name="LongPressState"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ClickActionClass"
            c:type="ClutterClickActionClass"
            glib:is-gtype-struct-for="ClickAction"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-click-action.h"
           line="67">The #ClutterClickActionClass structure
contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="98"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActionClass" c:type="ClutterActionClass"/>
      </field>
      <field name="clicked">
        <callback name="clicked">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="ClickAction" c:type="ClutterClickAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="long_press">
        <callback name="long_press">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="ClickAction" c:type="ClutterClickAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <type name="LongPressState" c:type="ClutterLongPressState"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_click_action1" introspectable="0">
        <callback name="_clutter_click_action1">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action2" introspectable="0">
        <callback name="_clutter_click_action2">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action3" introspectable="0">
        <callback name="_clutter_click_action3">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action4" introspectable="0">
        <callback name="_clutter_click_action4">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action5" introspectable="0">
        <callback name="_clutter_click_action5">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action6" introspectable="0">
        <callback name="_clutter_click_action6">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_click_action7" introspectable="0">
        <callback name="_clutter_click_action7">
          <source-position filename="../clutter/clutter/clutter-click-action.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ClickActionPrivate"
            c:type="ClutterClickActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="48"/>
    </record>
    <class name="ClipNode"
           c:symbol-prefix="clip_node"
           c:type="ClutterClipNode"
           version="1.10"
           parent="PaintNode"
           glib:type-name="ClutterClipNode"
           glib:get-type="clutter_clip_node_get_type"
           glib:type-struct="ClipNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="86">The #ClutterTextNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="95"/>
      <constructor name="new"
                   c:identifier="clutter_clip_node_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-nodes.c"
             line="1103">Creates a new #ClutterPaintNode that will clip its child
nodes to the 2D regions added to it.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="101"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-nodes.c"
               line="1109">the newly created #ClutterPaintNode.
  Use clutter_paint_node_unref() when done.</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
      </constructor>
    </class>
    <record name="ClipNodeClass"
            c:type="ClutterClipNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="ClipNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.c"
           line="995">The `ClutterClipNodeClass` structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="95"/>
    </record>
    <class name="Clone"
           c:symbol-prefix="clone"
           c:type="ClutterClone"
           version="1.0"
           parent="Actor"
           glib:type-name="ClutterClone"
           glib:get-type="clutter_clone_get_type"
           glib:type-struct="CloneClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-clone.h"
           line="46">The #ClutterClone structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="79"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new" c:identifier="clutter_clone_new" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-clone.c"
             line="370">Creates a new #ClutterActor which clones @source/</doc>
        <source-position filename="../clutter/clutter/clutter-clone.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-clone.c"
               line="376">the newly created #ClutterClone</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-clone.c"
                 line="372">a #ClutterActor, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_source"
              c:identifier="clutter_clone_get_source"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-clone.c"
             line="443">Retrieves the source #ClutterActor being cloned by @self.</doc>
        <source-position filename="../clutter/clutter/clutter-clone.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-clone.c"
               line="449">the actor source for the clone</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-clone.c"
                 line="445">a #ClutterClone</doc>
            <type name="Clone" c:type="ClutterClone*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="clutter_clone_set_source"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-clone.c"
             line="423">Sets @source as the source actor to be cloned by @self.</doc>
        <source-position filename="../clutter/clutter/clutter-clone.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-clone.c"
                 line="425">a #ClutterClone</doc>
            <type name="Clone" c:type="ClutterClone*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-clone.c"
                 line="426">a #ClutterActor, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="source"
                version="1.0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-clone.c"
             line="346">This property specifies the source actor being cloned.</doc>
        <type name="Actor"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ClonePrivate" c:type="ClutterClonePrivate*"/>
      </field>
    </class>
    <record name="CloneClass"
            c:type="ClutterCloneClass"
            glib:is-gtype-struct-for="Clone"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-clone.h"
           line="62">The #ClutterCloneClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="79"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="_clutter_actor_clone1" introspectable="0">
        <callback name="_clutter_actor_clone1">
          <source-position filename="../clutter/clutter/clutter-clone.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_actor_clone2" introspectable="0">
        <callback name="_clutter_actor_clone2">
          <source-position filename="../clutter/clutter/clutter-clone.h"
                           line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_actor_clone3" introspectable="0">
        <callback name="_clutter_actor_clone3">
          <source-position filename="../clutter/clutter/clutter-clone.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_actor_clone4" introspectable="0">
        <callback name="_clutter_actor_clone4">
          <source-position filename="../clutter/clutter/clutter-clone.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ClonePrivate" c:type="ClutterClonePrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="44"/>
    </record>
    <record name="Color"
            c:type="ClutterColor"
            glib:type-name="ClutterColor"
            glib:get-type="clutter_color_get_type"
            c:symbol-prefix="color">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.h"
           line="39">Color representation.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="56"/>
      <field name="red" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.h"
             line="41">red component, between 0 and 255</doc>
        <type name="guint8" c:type="guint8"/>
      </field>
      <field name="green" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.h"
             line="42">green component, between 0 and 255</doc>
        <type name="guint8" c:type="guint8"/>
      </field>
      <field name="blue" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.h"
             line="43">blue component, between 0 and 255</doc>
        <type name="guint8" c:type="guint8"/>
      </field>
      <field name="alpha" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.h"
             line="44">alpha component, between 0 and 255</doc>
        <type name="guint8" c:type="guint8"/>
      </field>
      <constructor name="alloc"
                   c:identifier="clutter_color_alloc"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="967">Allocates a new, transparent black #ClutterColor.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="80"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="972">the newly allocated #ClutterColor; use
  clutter_color_free() to free its resources</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </return-value>
      </constructor>
      <constructor name="new" c:identifier="clutter_color_new" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="934">Creates a new #ClutterColor with the given values.

This function is the equivalent of:

|[
  clutter_color_init (clutter_color_alloc (), red, green, blue, alpha);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="949">the newly allocated color.
  Use clutter_color_free() when done</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </return-value>
        <parameters>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="936">red component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="937">green component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="938">blue component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="939">alpha component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add" c:identifier="clutter_color_add">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="125">Adds @a to @b and saves the resulting color inside @result.

The alpha channel of @result is set as as the maximum value
between the alpha channels of @a and @b.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="127">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="128">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="129">return location for the result</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="clutter_color_copy" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="899">Makes a copy of the color structure.  The result must be
freed using clutter_color_free().</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="88"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="906">an allocated copy of @color.</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="901">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="darken" c:identifier="clutter_color_darken">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="197">Darkens @color by a fixed amount, and saves the changed color
in @result.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="199">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="200">return location for the darker color</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="clutter_color_equal" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="801">Compares two #ClutterColor&lt;!-- --&gt;s and checks if they are the same.

This function can be passed to g_hash_table_new() as the @key_equal_func
parameter, when using #ClutterColor&lt;!-- --&gt;s as keys in a #GHashTable.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="811">%TRUE if the two colors are the same.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="v1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="803">a #ClutterColor</doc>
            <type name="Color" c:type="gconstpointer"/>
          </instance-parameter>
          <parameter name="v2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="804">a #ClutterColor</doc>
            <type name="Color" c:type="gconstpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_color_free" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="919">Frees a color structure created with clutter_color_copy().</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="921">a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hash" c:identifier="clutter_color_hash" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="836">Converts a #ClutterColor to a hash value.

This function can be passed to g_hash_table_new() as the @hash_func
parameter, when using #ClutterColor&lt;!-- --&gt;s as keys in a #GHashTable.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="845">a hash value corresponding to the color</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="v" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="838">a #ClutterColor</doc>
            <type name="Color" c:type="gconstpointer"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="clutter_color_init" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="983">Initializes @color with the given values.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="993">the initialized #ClutterColor</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="985">a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </instance-parameter>
          <parameter name="red" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="986">red component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="green" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="987">green component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="blue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="988">blue component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="989">alpha component of the color, between 0 and 255</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="interpolate"
              c:identifier="clutter_color_interpolate"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="855">Interpolates between @initial and @final #ClutterColor&lt;!-- --&gt;s
using @progress</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="initial" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="857">the initial #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="final" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="858">the final #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="859">the interpolation progress</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="860">return location for the interpolation</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lighten" c:identifier="clutter_color_lighten">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="182">Lightens @color by a fixed amount, and saves the changed color
in @result.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="184">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="185">return location for the lighter color</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="shade" c:identifier="clutter_color_shade">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="365">Shades @color by @factor and saves the modified color into @result.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="367">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="368">the shade factor to apply</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="369">return location for the shaded color</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="subtract" c:identifier="clutter_color_subtract">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="152">Subtracts @b from @a and saves the resulting color inside @result.

This function assumes that the components of @a are greater than the
components of @b; the result is, otherwise, undefined.

The alpha channel of @result is set as the minimum value
between the alpha channels of @a and @b.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="154">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="155">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="156">return location for the result</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_hls" c:identifier="clutter_color_to_hls">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="212">Converts @color to the HLS format.

The @hue value is in the 0 .. 360 range. The @luminance and
@saturation values are in the 0 .. 1 range.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="214">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
          <parameter name="hue"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="215">return location for the hue value or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="luminance"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="216">return location for the luminance value or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="saturation"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="217">return location for the saturation value or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_pixel" c:identifier="clutter_color_to_pixel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="393">Converts @color into a packed 32 bit integer, containing
all the four 8 bit channels used by #ClutterColor.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="400">a packed color</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="395">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="clutter_color_to_string"
              version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="775">Returns a textual specification of @color in the hexadecimal form
&lt;literal&gt;&amp;num;rrggbbaa&lt;/literal&gt;, where &lt;literal&gt;r&lt;/literal&gt;,
&lt;literal&gt;g&lt;/literal&gt;, &lt;literal&gt;b&lt;/literal&gt; and &lt;literal&gt;a&lt;/literal&gt; are
hexadecimal digits representing the red, green, blue and alpha components
respectively.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="112"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="785">a newly-allocated text string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="777">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_hls" c:identifier="clutter_color_from_hls">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="301">Converts a color expressed in HLS (hue, luminance and saturation)
values into a #ClutterColor.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="303">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
          <parameter name="hue" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="304">hue value, in the 0 .. 360 range</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="luminance" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="305">luminance value, in the 0 .. 1 range</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="saturation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="306">saturation value, in the 0 .. 1 range</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_pixel" c:identifier="clutter_color_from_pixel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="413">Converts @pixel from the packed representation of a four 8 bit channel
color to a #ClutterColor.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="415">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
          <parameter name="pixel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="416">a 32 bit packed integer containing a color</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_string"
                c:identifier="clutter_color_from_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="611">Parses a string definition of a color, filling the #ClutterColor.red,
#ClutterColor.green, #ClutterColor.blue and #ClutterColor.alpha fields
of @color.

The @color is not allocated.

The format of @str can be either one of:

  - a standard name (as taken from the X11 rgb.txt file)
  - an hexadecimal value in the form: `#rgb`, `#rrggbb`, `#rgba`, or `#rrggbbaa`
  - a RGB color in the form: `rgb(r, g, b)`
  - a RGB color in the form: `rgba(r, g, b, a)`
  - a HSL color in the form: `hsl(h, s, l)`
   -a HSL color in the form: `hsla(h, s, l, a)`

where 'r', 'g', 'b' and 'a' are (respectively) the red, green, blue color
intensities and the opacity. The 'h', 's' and 'l' are (respectively) the
hue, saturation and luminance values.

In the rgb() and rgba() formats, the 'r', 'g', and 'b' values are either
integers between 0 and 255, or percentage values in the range between 0%
and 100%; the percentages require the '%' character. The 'a' value, if
specified, can only be a floating point value between 0.0 and 1.0.

In the hls() and hlsa() formats, the 'h' value (hue) is an angle between
0 and 360.0 degrees; the 'l' and 's' values (luminance and saturation) are
percentage values in the range between 0% and 100%. The 'a' value, if specified,
can only be a floating point value between 0.0 and 1.0.

Whitespace inside the definitions is ignored; no leading whitespace
is allowed.

If the alpha component is not specified then it is assumed to be set to
be fully opaque.</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="651">%TRUE if parsing succeeded, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="613">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="614">a string specifiying a color</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="get_static"
                c:identifier="clutter_color_get_static"
                version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="102">Retrieves a static color for the given @color name

Static colors are created by Clutter and are guaranteed to always be
available and valid</doc>
        <source-position filename="../clutter/clutter/clutter-color.h"
                         line="196"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="111">a pointer to a static color; the returned pointer
  is owned by Clutter and it should never be modified or freed</doc>
          <type name="Color" c:type="const ClutterColor*"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-color.c"
                 line="104">the named global color</doc>
            <type name="StaticColor" c:type="ClutterStaticColor"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <class name="ColorNode"
           c:symbol-prefix="color_node"
           c:type="ClutterColorNode"
           version="1.10"
           parent="PipelineNode"
           glib:type-name="ClutterColorNode"
           glib:get-type="clutter_color_node_get_type"
           glib:type-struct="ColorNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="41">The #ClutterTextNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="50"/>
      <constructor name="new"
                   c:identifier="clutter_color_node_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-nodes.c"
             line="626">Creates a new #ClutterPaintNode that will paint a solid color
fill using @color.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="56"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-nodes.c"
               line="633">the newly created #ClutterPaintNode. Use
  clutter_paint_node_unref() when done</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="628">the color to paint, or %NULL</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="ColorNodeClass"
            c:type="ClutterColorNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="ColorNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.c"
           line="596">The `ClutterColorNodeClass` structure is an
opaque type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="50"/>
    </record>
    <class name="ColorizeEffect"
           c:symbol-prefix="colorize_effect"
           c:type="ClutterColorizeEffect"
           version="1.4"
           parent="OffscreenEffect"
           glib:type-name="ClutterColorizeEffect"
           glib:get-type="clutter_colorize_effect_get_type"
           glib:type-struct="ColorizeEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-colorize-effect.h"
           line="41">#ClutterColorizeEffect is an opaque structure
whose members cannot be directly accessed</doc>
      <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                       line="50"/>
      <constructor name="new"
                   c:identifier="clutter_colorize_effect_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-colorize-effect.c"
             line="312">Creates a new #ClutterColorizeEffect to be used with
clutter_actor_add_effect()</doc>
        <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-colorize-effect.c"
               line="319">the newly created #ClutterColorizeEffect or %NULL</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
        <parameters>
          <parameter name="tint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-colorize-effect.c"
                 line="314">the color to be used</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_tint"
              c:identifier="clutter_colorize_effect_get_tint"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-colorize-effect.c"
             line="355">Retrieves the tint used by @effect</doc>
        <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-colorize-effect.c"
                 line="357">a #ClutterColorizeEffect</doc>
            <type name="ColorizeEffect" c:type="ClutterColorizeEffect*"/>
          </instance-parameter>
          <parameter name="tint"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-colorize-effect.c"
                 line="358">return location for the color used</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tint"
              c:identifier="clutter_colorize_effect_set_tint"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-colorize-effect.c"
             line="331">Sets the tint to be used when colorizing</doc>
        <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-colorize-effect.c"
                 line="333">a #ClutterColorizeEffect</doc>
            <type name="ColorizeEffect" c:type="ClutterColorizeEffect*"/>
          </instance-parameter>
          <parameter name="tint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-colorize-effect.c"
                 line="334">the color to be used</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="tint"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-colorize-effect.c"
             line="244">The tint to apply to the actor</doc>
        <type name="Color"/>
      </property>
    </class>
    <record name="ColorizeEffectClass"
            c:type="ClutterColorizeEffectClass"
            disguised="1"
            glib:is-gtype-struct-for="ColorizeEffect">
      <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                       line="50"/>
    </record>
    <class name="Constraint"
           c:symbol-prefix="constraint"
           c:type="ClutterConstraint"
           version="1.4"
           parent="ActorMeta"
           abstract="1"
           glib:type-name="ClutterConstraint"
           glib:get-type="clutter_constraint_get_type"
           glib:type-struct="ConstraintClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-constraint.h"
           line="45">The #ClutterConstraint structure contains only
private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="97"/>
      <virtual-method name="update_allocation">
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="allocation" transfer-ownership="none">
            <type name="ActorBox" c:type="ClutterActorBox*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_preferred_size"
                      invoker="update_preferred_size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-constraint.c"
             line="225">Asks the @constraint to update the size request of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="227">a #ClutterConstraint</doc>
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="228">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="229">a #ClutterOrientation</doc>
            <type name="Orientation" c:type="ClutterOrientation"/>
          </parameter>
          <parameter name="for_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="230">the size in the opposite direction</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="minimum_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="231">the minimum size to modify</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="natural_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="232">the natural size to modify</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="update_preferred_size"
              c:identifier="clutter_constraint_update_preferred_size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-constraint.c"
             line="225">Asks the @constraint to update the size request of a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-constraint.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="227">a #ClutterConstraint</doc>
            <type name="Constraint" c:type="ClutterConstraint*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="228">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="229">a #ClutterOrientation</doc>
            <type name="Orientation" c:type="ClutterOrientation"/>
          </parameter>
          <parameter name="for_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="230">the size in the opposite direction</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="minimum_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="231">the minimum size to modify</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="natural_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-constraint.c"
                 line="232">the natural size to modify</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="ActorMeta" c:type="ClutterActorMeta"/>
      </field>
    </class>
    <record name="ConstraintClass"
            c:type="ClutterConstraintClass"
            glib:is-gtype-struct-for="Constraint"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-constraint.h"
           line="59">The #ClutterConstraintClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="97"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorMetaClass" c:type="ClutterActorMetaClass"/>
      </field>
      <field name="update_allocation">
        <callback name="update_allocation">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="constraint" transfer-ownership="none">
              <type name="Constraint" c:type="ClutterConstraint*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="allocation" transfer-ownership="none">
              <type name="ActorBox" c:type="ClutterActorBox*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_preferred_size">
        <callback name="update_preferred_size">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="constraint" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="227">a #ClutterConstraint</doc>
              <type name="Constraint" c:type="ClutterConstraint*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="228">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="229">a #ClutterOrientation</doc>
              <type name="Orientation" c:type="ClutterOrientation"/>
            </parameter>
            <parameter name="for_size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="230">the size in the opposite direction</doc>
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="minimum_size"
                       direction="inout"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="231">the minimum size to modify</doc>
              <type name="gfloat" c:type="float*"/>
            </parameter>
            <parameter name="natural_size"
                       direction="inout"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-constraint.c"
                   line="232">the natural size to modify</doc>
              <type name="gfloat" c:type="float*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_constraint1" introspectable="0">
        <callback name="_clutter_constraint1">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint2" introspectable="0">
        <callback name="_clutter_constraint2">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint3" introspectable="0">
        <callback name="_clutter_constraint3">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint4" introspectable="0">
        <callback name="_clutter_constraint4">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint5" introspectable="0">
        <callback name="_clutter_constraint5">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint6" introspectable="0">
        <callback name="_clutter_constraint6">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_constraint7" introspectable="0">
        <callback name="_clutter_constraint7">
          <source-position filename="../clutter/clutter/clutter-constraint.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <interface name="Container"
               c:symbol-prefix="container"
               c:type="ClutterContainer"
               version="0.4"
               glib:type-name="ClutterContainer"
               glib:get-type="clutter_container_get_type"
               glib:type-struct="ContainerIface">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-container.h"
           line="47">#ClutterContainer is an opaque structure whose members cannot be directly
accessed</doc>
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="127"/>
      <function name="class_find_child_property"
                c:identifier="clutter_container_class_find_child_property"
                version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="858">Looks up the #GParamSpec for a child property of @klass.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="865">The #GParamSpec for the property or %NULL
  if no such property exist.</doc>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="860">a #GObjectClass implementing the #ClutterContainer interface.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="861">a property name.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
      <function name="class_list_child_properties"
                c:identifier="clutter_container_class_list_child_properties"
                version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="897">Returns an array of #GParamSpec for all child properties.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="140"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="904">an array
  of #GParamSpec&lt;!-- --&gt;s which should be freed after use.</doc>
          <array length="1" zero-terminated="0" c:type="GParamSpec**">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="899">a #GObjectClass implementing the #ClutterContainer interface.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="n_properties"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="900">return location for length of returned array.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="actor_added">
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="actor_removed">
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add"
                      invoker="add_actor"
                      version="0.4"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="360">Adds a #ClutterActor to @container. This function will emit the
"actor-added" signal. The actor should be parented to
@container. You cannot add a #ClutterActor to more than one
#ClutterContainer.

This function will call #ClutterContainerIface.add(), which is a
deprecated virtual function. The default implementation will
call clutter_actor_add_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="362">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="363">the first #ClutterActor to add</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="child_notify" invoker="child_notify" version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="1227">Calls the #ClutterContainerIface.child_notify() virtual function
of #ClutterContainer. The default implementation will emit the
#ClutterContainer::child-notify signal.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1229">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1230">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="pspec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1231">a #GParamSpec</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_child_meta"
                      invoker="create_child_meta"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="787">Creates the #ClutterChildMeta wrapping @actor inside the
@container, if the #ClutterContainerIface::child_meta_type
class member is not set to %G_TYPE_INVALID.

This function is only useful when adding a #ClutterActor to
a #ClutterContainer implementation outside of the
#ClutterContainer::add() virtual function implementation.

Applications should not call this function.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="789">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="790">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="destroy_child_meta"
                      invoker="destroy_child_meta"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="824">Destroys the #ClutterChildMeta wrapping @actor inside the
@container, if any.

This function is only useful when removing a #ClutterActor to
a #ClutterContainer implementation outside of the
#ClutterContainer::add() virtual function implementation.

Applications should not call this function.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="826">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="827">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_child_meta"
                      invoker="get_child_meta"
                      version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="758">Retrieves the #ClutterChildMeta which contains the data about the
@container specific state for @actor.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="766">the #ClutterChildMeta for the @actor child
  of @container or %NULL if the specifiec actor does not exist or the
  container is not configured to provide #ClutterChildMeta&lt;!-- --&gt;s</doc>
          <type name="ChildMeta" c:type="ClutterChildMeta*"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="760">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="761">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lower"
                      invoker="lower_child"
                      version="0.6"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="542">Lowers @actor to @sibling level, in the depth ordering.

This function calls the #ClutterContainerIface.lower() virtual function,
which has been deprecated. The default implementation will call
clutter_actor_set_child_below_sibling().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_child_below_sibling() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="544">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="545">the actor to raise</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="546">the sibling to lower to, or %NULL to lower
  to the bottom</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="raise"
                      invoker="raise_child"
                      version="0.6"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="473">Raises @actor to @sibling level, in the depth ordering.

This function calls the #ClutterContainerIface.raise() virtual function,
which has been deprecated. The default implementation will call
clutter_actor_set_child_above_sibling().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_child_above_sibling() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="475">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="476">the actor to raise</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="477">the sibling to raise to, or %NULL to raise
  to the top</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remove"
                      invoker="remove_actor"
                      version="0.4"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="423">Removes @actor from @container. The actor should be unparented, so
if you want to keep it around you must hold a reference to it
yourself, using g_object_ref(). When the actor has been removed,
the "actor-removed" signal is emitted by @container.

This function will call #ClutterContainerIface.remove(), which is a
deprecated virtual function. The default implementation will call
clutter_actor_remove_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_remove_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="425">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="426">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="sort_depth_order"
                      invoker="sort_depth_order"
                      version="0.6"
                      deprecated="1"
                      deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="611">Sorts a container's children using their depth. This function should not
be normally used by applications.</doc>
        <doc-deprecated xml:space="preserve">The #ClutterContainerIface.sort_depth_order() virtual
  function should not be used any more; the default implementation in
  #ClutterContainer does not do anything.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="613">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add"
              c:identifier="clutter_container_add"
              version="0.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="326">Adds a list of #ClutterActor&lt;!-- --&gt;s to @container. Each time and
actor is added, the "actor-added" signal is emitted. Each actor should
be parented to @container, which takes a reference on the actor. You
cannot add a #ClutterActor to more than one #ClutterContainer.

This function will call #ClutterContainerIface.add(), which is a
deprecated virtual function. The default implementation will
call clutter_actor_add_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="328">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="first_actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="329">the first #ClutterActor to add</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="330">%NULL terminated list of actors to add</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="add_actor"
              c:identifier="clutter_container_add_actor"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="360">Adds a #ClutterActor to @container. This function will emit the
"actor-added" signal. The actor should be parented to
@container. You cannot add a #ClutterActor to more than one
#ClutterContainer.

This function will call #ClutterContainerIface.add(), which is a
deprecated virtual function. The default implementation will
call clutter_actor_add_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_add_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="362">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="363">the first #ClutterActor to add</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get"
              c:identifier="clutter_container_child_get"
              version="0.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="1151">Gets @container specific properties of an actor.

In general, a copy is made of the property contents and the caller is
responsible for freeing the memory in the appropriate manner for the type, for
instance by calling g_free() or g_object_unref().</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1153">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1154">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_prop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1155">name of the first property to be set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1156">value for the first property, followed optionally by more name/value
pairs terminated with NULL.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get_property"
              c:identifier="clutter_container_child_get_property"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="1097">Gets a container specific property of a child of @container, In general,
a copy is made of the property contents and the caller is responsible for
freeing the memory by calling g_value_unset().

Note that clutter_container_child_set_property() is really intended for
language bindings, clutter_container_child_set() is much more convenient
for C programming.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1099">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1100">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1101">the name of the property to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1102">the value.</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_notify"
              c:identifier="clutter_container_child_notify"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="1227">Calls the #ClutterContainerIface.child_notify() virtual function
of #ClutterContainer. The default implementation will emit the
#ClutterContainer::child-notify signal.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="175"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1229">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1230">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="pspec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1231">a #GParamSpec</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set"
              c:identifier="clutter_container_child_set"
              version="0.8"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="1007">Sets container specific properties on the child of a container.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1009">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1010">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_prop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1011">name of the first property to be set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="1012">value for the first property, followed optionally by more name/value
pairs terminated with NULL.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set_property"
              c:identifier="clutter_container_child_set_property"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="960">Sets a container-specific property on a child of @container.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="962">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="963">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="964">the name of the property to set.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="965">the value.</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_child_meta"
              c:identifier="clutter_container_create_child_meta"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="787">Creates the #ClutterChildMeta wrapping @actor inside the
@container, if the #ClutterContainerIface::child_meta_type
class member is not set to %G_TYPE_INVALID.

This function is only useful when adding a #ClutterActor to
a #ClutterContainer implementation outside of the
#ClutterContainer::add() virtual function implementation.

Applications should not call this function.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="789">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="790">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="destroy_child_meta"
              c:identifier="clutter_container_destroy_child_meta"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="824">Destroys the #ClutterChildMeta wrapping @actor inside the
@container, if any.

This function is only useful when removing a #ClutterActor to
a #ClutterContainer implementation outside of the
#ClutterContainer::add() virtual function implementation.

Applications should not call this function.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="826">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="827">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_child_by_name"
              c:identifier="clutter_container_find_child_by_name"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="647">Finds a child actor of a container by its name. Search recurses
into any child container.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="655">The child actor with the requested name,
  or %NULL if no actor with that name was found.</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="649">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="child_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="650">the name of the requested child.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_meta"
              c:identifier="clutter_container_get_child_meta"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="758">Retrieves the #ClutterChildMeta which contains the data about the
@container specific state for @actor.</doc>
        <source-position filename="../clutter/clutter/clutter-container.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="766">the #ClutterChildMeta for the @actor child
  of @container or %NULL if the specifiec actor does not exist or the
  container is not configured to provide #ClutterChildMeta&lt;!-- --&gt;s</doc>
          <type name="ChildMeta" c:type="ClutterChildMeta*"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="760">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="761">a #ClutterActor that is a child of @container.</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="clutter_container_get_children"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="451">Retrieves all the children of @container.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_children() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="56"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="457">a list
  of #ClutterActor&lt;!-- --&gt;s. Use g_list_free() on the returned
  list when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="Actor"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="453">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="lower_child"
              c:identifier="clutter_container_lower_child"
              version="0.6"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="542">Lowers @actor to @sibling level, in the depth ordering.

This function calls the #ClutterContainerIface.lower() virtual function,
which has been deprecated. The default implementation will call
clutter_actor_set_child_below_sibling().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_child_below_sibling() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="544">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="545">the actor to raise</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="546">the sibling to lower to, or %NULL to lower
  to the bottom</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="raise_child"
              c:identifier="clutter_container_raise_child"
              version="0.6"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="473">Raises @actor to @sibling level, in the depth ordering.

This function calls the #ClutterContainerIface.raise() virtual function,
which has been deprecated. The default implementation will call
clutter_actor_set_child_above_sibling().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_child_above_sibling() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="475">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="476">the actor to raise</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="477">the sibling to raise to, or %NULL to raise
  to the top</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove"
              c:identifier="clutter_container_remove"
              version="0.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="388">Removes a %NULL terminated list of #ClutterActor&lt;!-- --&gt;s from
@container. Each actor should be unparented, so if you want to keep it
around you must hold a reference to it yourself, using g_object_ref().
Each time an actor is removed, the "actor-removed" signal is
emitted by @container.

This function will call #ClutterContainerIface.remove(), which is a
deprecated virtual function. The default implementation will call
clutter_actor_remove_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_remove_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="390">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="first_actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="391">first #ClutterActor to remove</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="392">a %NULL-terminated list of actors to remove</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_actor"
              c:identifier="clutter_container_remove_actor"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="423">Removes @actor from @container. The actor should be unparented, so
if you want to keep it around you must hold a reference to it
yourself, using g_object_ref(). When the actor has been removed,
the "actor-removed" signal is emitted by @container.

This function will call #ClutterContainerIface.remove(), which is a
deprecated virtual function. The default implementation will call
clutter_actor_remove_child().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_remove_child() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="425">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="426">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sort_depth_order"
              c:identifier="clutter_container_sort_depth_order"
              version="0.6"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="611">Sorts a container's children using their depth. This function should not
be normally used by applications.</doc>
        <doc-deprecated xml:space="preserve">The #ClutterContainerIface.sort_depth_order() virtual
  function should not be used any more; the default implementation in
  #ClutterContainer does not do anything.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-container.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="613">a #ClutterContainer</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="actor-added" when="first" version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="155">The ::actor-added signal is emitted each time an actor
has been added to @container.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="158">the new child that has been added to @container</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="actor-removed" when="first" version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="173">The ::actor-removed signal is emitted each time an actor
is removed from @container.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="176">the child that has been removed from @container</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="child-notify" when="first" detailed="1" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="192">The ::child-notify signal is emitted each time a property is
being set through the clutter_container_child_set() and
clutter_container_child_set_property() calls.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="195">the child that has had a property set</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="pspec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="196">the #GParamSpec of the property set</doc>
            <type name="GObject.ParamSpec"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="ContainerIface"
            c:type="ClutterContainerIface"
            glib:is-gtype-struct-for="Container"
            version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-container.h"
           line="56">Base interface for container actors. The @add and @remove
virtual functions must be provided by any implementation; the other
virtual functions are optional.</doc>
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="127"/>
      <field name="g_iface" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="add">
        <callback name="add">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="362">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="363">the first #ClutterActor to add</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove">
        <callback name="remove">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="425">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="426">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="raise">
        <callback name="raise">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="475">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="476">the actor to raise</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="sibling"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="477">the sibling to raise to, or %NULL to raise
  to the top</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lower">
        <callback name="lower">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="544">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="545">the actor to raise</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="sibling"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="546">the sibling to lower to, or %NULL to lower
  to the bottom</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sort_depth_order">
        <callback name="sort_depth_order">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="107"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="613">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_meta_type">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.h"
             line="69">The GType used for storing auxiliary information about
  each of the containers children.</doc>
        <type name="GType" c:type="GType"/>
      </field>
      <field name="create_child_meta">
        <callback name="create_child_meta">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="111"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="789">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="790">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="destroy_child_meta">
        <callback name="destroy_child_meta">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="826">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="827">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_child_meta">
        <callback name="get_child_meta">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="115"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-container.c"
                 line="766">the #ClutterChildMeta for the @actor child
  of @container or %NULL if the specifiec actor does not exist or the
  container is not configured to provide #ClutterChildMeta&lt;!-- --&gt;s</doc>
            <type name="ChildMeta" c:type="ClutterChildMeta*"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="760">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="761">a #ClutterActor that is a child of @container.</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="actor_added">
        <callback name="actor_added">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="actor_removed">
        <callback name="actor_removed">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="child_notify">
        <callback name="child_notify">
          <source-position filename="../clutter/clutter/clutter-container.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="1229">a #ClutterContainer</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="child" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="1230">a #ClutterActor</doc>
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="pspec" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-container.c"
                   line="1231">a #GParamSpec</doc>
              <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="Content"
               c:symbol-prefix="content"
               c:type="ClutterContent"
               glib:type-name="ClutterContent"
               glib:get-type="clutter_content_get_type"
               glib:type-struct="ContentInterface">
      <source-position filename="../clutter/clutter/clutter-content.h"
                       line="81"/>
      <virtual-method name="attached">
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="detached">
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferred_size"
                      invoker="get_preferred_size"
                      version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="322">Retrieves the natural size of the @content, if any.

The natural size of a #ClutterContent is defined as the size the content
would have regardless of the allocation of the actor that is painting it,
for instance the size of an image data.</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-content.c"
               line="334">%TRUE if the content has a preferred size, and %FALSE
  otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="324">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="325">return location for the natural width of the content</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="326">return location for the natural height of the content</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="invalidate" invoker="invalidate" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="157">Invalidates a #ClutterContent.

This function should be called by #ClutterContent implementations when
they change the way a the content should be painted regardless of the
actor state.</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="159">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="invalidate_size" invoker="invalidate_size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="195">Signals that @content's size changed. Attached actors with request mode
set to %CLUTTER_REQUEST_CONTENT_SIZE will have a relayout queued.

Attached actors with other request modes are not redrawn. To redraw them
too, use clutter_content_invalidate().</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="197">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint_content">
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_preferred_size"
              c:identifier="clutter_content_get_preferred_size"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="322">Retrieves the natural size of the @content, if any.

The natural size of a #ClutterContent is defined as the size the content
would have regardless of the allocation of the actor that is painting it,
for instance the size of an image data.</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-content.c"
               line="334">%TRUE if the content has a preferred size, and %FALSE
  otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="324">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="325">return location for the natural width of the content</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="326">return location for the natural height of the content</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate"
              c:identifier="clutter_content_invalidate"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="157">Invalidates a #ClutterContent.

This function should be called by #ClutterContent implementations when
they change the way a the content should be painted regardless of the
actor state.</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="159">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="invalidate_size"
              c:identifier="clutter_content_invalidate_size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="195">Signals that @content's size changed. Attached actors with request mode
set to %CLUTTER_REQUEST_CONTENT_SIZE will have a relayout queued.

Attached actors with other request modes are not redrawn. To redraw them
too, use clutter_content_invalidate().</doc>
        <source-position filename="../clutter/clutter/clutter-content.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="content" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="197">a #ClutterContent</doc>
            <type name="Content" c:type="ClutterContent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <glib:signal name="attached" when="first" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="118">This signal is emitted each time a #ClutterContent implementation is
assigned to a #ClutterActor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="121">a #ClutterActor</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="detached" when="first" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-content.c"
             line="137">This signal is emitted each time a #ClutterContent implementation is
removed from a #ClutterActor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="140">a #ClutterActor</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <enumeration name="ContentGravity"
                 version="1.10"
                 glib:type-name="ClutterContentGravity"
                 glib:get-type="clutter_content_gravity_get_type"
                 c:type="ClutterContentGravity">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1363">Controls the alignment of the #ClutterContent inside a #ClutterActor.</doc>
      <member name="top_left"
              value="0"
              c:identifier="CLUTTER_CONTENT_GRAVITY_TOP_LEFT"
              glib:nick="top-left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1365">Align the content to the top left corner</doc>
      </member>
      <member name="top"
              value="1"
              c:identifier="CLUTTER_CONTENT_GRAVITY_TOP"
              glib:nick="top">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1366">Align the content to the top edge</doc>
      </member>
      <member name="top_right"
              value="2"
              c:identifier="CLUTTER_CONTENT_GRAVITY_TOP_RIGHT"
              glib:nick="top-right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1367">Align the content to the top right corner</doc>
      </member>
      <member name="left"
              value="3"
              c:identifier="CLUTTER_CONTENT_GRAVITY_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1368">Align the content to the left edge</doc>
      </member>
      <member name="center"
              value="4"
              c:identifier="CLUTTER_CONTENT_GRAVITY_CENTER"
              glib:nick="center">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1369">Align the content to the center</doc>
      </member>
      <member name="right"
              value="5"
              c:identifier="CLUTTER_CONTENT_GRAVITY_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1370">Align the content to the right edge</doc>
      </member>
      <member name="bottom_left"
              value="6"
              c:identifier="CLUTTER_CONTENT_GRAVITY_BOTTOM_LEFT"
              glib:nick="bottom-left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1371">Align the content to the bottom left corner</doc>
      </member>
      <member name="bottom"
              value="7"
              c:identifier="CLUTTER_CONTENT_GRAVITY_BOTTOM"
              glib:nick="bottom">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1372">Align the content to the bottom edge</doc>
      </member>
      <member name="bottom_right"
              value="8"
              c:identifier="CLUTTER_CONTENT_GRAVITY_BOTTOM_RIGHT"
              glib:nick="bottom-right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1373">Align the content to the bottom right corner</doc>
      </member>
      <member name="resize_fill"
              value="9"
              c:identifier="CLUTTER_CONTENT_GRAVITY_RESIZE_FILL"
              glib:nick="resize-fill">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1374">Resize the content to fill the allocation</doc>
      </member>
      <member name="resize_aspect"
              value="10"
              c:identifier="CLUTTER_CONTENT_GRAVITY_RESIZE_ASPECT"
              glib:nick="resize-aspect">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1375">Resize the content to remain within the
  allocation, while maintaining the aspect ratio</doc>
      </member>
    </enumeration>
    <record name="ContentInterface"
            c:type="ClutterContentInterface"
            glib:is-gtype-struct-for="Content"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-content.h"
           line="41">The #ClutterContentInterface structure contains only
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-content.h"
                       line="81"/>
      <field name="g_iface" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_preferred_size">
        <callback name="get_preferred_size">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="65"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-content.c"
                 line="334">%TRUE if the content has a preferred size, and %FALSE
  otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-content.c"
                   line="324">a #ClutterContent</doc>
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
            <parameter name="width"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-content.c"
                   line="325">return location for the natural width of the content</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="height"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-content.c"
                   line="326">return location for the natural height of the content</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint_content">
        <callback name="paint_content">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <type name="PaintNode" c:type="ClutterPaintNode*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="attached">
        <callback name="attached">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="73"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="detached">
        <callback name="detached">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="invalidate">
        <callback name="invalidate">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-content.c"
                   line="159">a #ClutterContent</doc>
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="invalidate_size">
        <callback name="invalidate_size">
          <source-position filename="../clutter/clutter/clutter-content.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="content" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-content.c"
                   line="197">a #ClutterContent</doc>
              <type name="Content" c:type="ClutterContent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <bitfield name="ContentRepeat"
              version="1.12"
              glib:type-name="ClutterContentRepeat"
              glib:get-type="clutter_content_repeat_get_type"
              c:type="ClutterContentRepeat">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1475">Content repeat modes.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_REPEAT_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1477">No repeat</doc>
      </member>
      <member name="x_axis"
              value="1"
              c:identifier="CLUTTER_REPEAT_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1478">Repeat the content on the X axis</doc>
      </member>
      <member name="y_axis"
              value="2"
              c:identifier="CLUTTER_REPEAT_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1479">Repeat the content on the Y axis</doc>
      </member>
      <member name="both"
              value="3"
              c:identifier="CLUTTER_REPEAT_BOTH"
              glib:nick="both">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1480">Repeat the content on both axis</doc>
      </member>
    </bitfield>
    <record name="CrossingEvent" c:type="ClutterCrossingEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="245">Event for the movement of the pointer across different actors</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="275"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="247">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="248">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="249">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="250">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="251">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="252">event X coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="253">event Y coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="255">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
      <field name="sequence" writable="1">
        <type name="EventSequence" c:type="ClutterEventSequence*"/>
      </field>
      <field name="related" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="254">actor related to the crossing</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
    </record>
    <function-macro name="DEFORM_EFFECT"
                    c:identifier="CLUTTER_DEFORM_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEFORM_EFFECT_CLASS"
                    c:identifier="CLUTTER_DEFORM_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEFORM_EFFECT_GET_CLASS"
                    c:identifier="CLUTTER_DEFORM_EFFECT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_FOR"
                    c:identifier="CLUTTER_DEPRECATED_FOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="113"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DEPRECATED_MACRO_FOR"
                    c:identifier="CLUTTER_DEPRECATED_MACRO_FOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="115"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DESATURATE_EFFECT"
                    c:identifier="CLUTTER_DESATURATE_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_ACTION"
                    c:identifier="CLUTTER_DRAG_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_ACTION_CLASS"
                    c:identifier="CLUTTER_DRAG_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DRAG_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_DRAG_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DROP_ACTION"
                    c:identifier="CLUTTER_DROP_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DROP_ACTION_CLASS"
                    c:identifier="CLUTTER_DROP_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DROP_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_DROP_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="DebugFlag"
              glib:type-name="ClutterDebugFlag"
              glib:get-type="clutter_debug_flag_get_type"
              c:type="ClutterDebugFlag">
      <member name="misc"
              value="1"
              c:identifier="CLUTTER_DEBUG_MISC"
              glib:nick="misc">
      </member>
      <member name="actor"
              value="2"
              c:identifier="CLUTTER_DEBUG_ACTOR"
              glib:nick="actor">
      </member>
      <member name="texture"
              value="4"
              c:identifier="CLUTTER_DEBUG_TEXTURE"
              glib:nick="texture">
      </member>
      <member name="event"
              value="8"
              c:identifier="CLUTTER_DEBUG_EVENT"
              glib:nick="event">
      </member>
      <member name="paint"
              value="16"
              c:identifier="CLUTTER_DEBUG_PAINT"
              glib:nick="paint">
      </member>
      <member name="pango"
              value="32"
              c:identifier="CLUTTER_DEBUG_PANGO"
              glib:nick="pango">
      </member>
      <member name="backend"
              value="64"
              c:identifier="CLUTTER_DEBUG_BACKEND"
              glib:nick="backend">
      </member>
      <member name="scheduler"
              value="128"
              c:identifier="CLUTTER_DEBUG_SCHEDULER"
              glib:nick="scheduler">
      </member>
      <member name="script"
              value="256"
              c:identifier="CLUTTER_DEBUG_SCRIPT"
              glib:nick="script">
      </member>
      <member name="shader"
              value="512"
              c:identifier="CLUTTER_DEBUG_SHADER"
              glib:nick="shader">
      </member>
      <member name="multistage"
              value="1024"
              c:identifier="CLUTTER_DEBUG_MULTISTAGE"
              glib:nick="multistage">
      </member>
      <member name="animation"
              value="2048"
              c:identifier="CLUTTER_DEBUG_ANIMATION"
              glib:nick="animation">
      </member>
      <member name="layout"
              value="4096"
              c:identifier="CLUTTER_DEBUG_LAYOUT"
              glib:nick="layout">
      </member>
      <member name="pick"
              value="8192"
              c:identifier="CLUTTER_DEBUG_PICK"
              glib:nick="pick">
      </member>
      <member name="eventloop"
              value="16384"
              c:identifier="CLUTTER_DEBUG_EVENTLOOP"
              glib:nick="eventloop">
      </member>
      <member name="clipping"
              value="32768"
              c:identifier="CLUTTER_DEBUG_CLIPPING"
              glib:nick="clipping">
      </member>
      <member name="oob_transforms"
              value="65536"
              c:identifier="CLUTTER_DEBUG_OOB_TRANSFORMS"
              glib:nick="oob-transforms">
      </member>
    </bitfield>
    <class name="DeformEffect"
           c:symbol-prefix="deform_effect"
           c:type="ClutterDeformEffect"
           version="1.4"
           parent="OffscreenEffect"
           abstract="1"
           glib:type-name="ClutterDeformEffect"
           glib:get-type="clutter_deform_effect_get_type"
           glib:type-struct="DeformEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-deform-effect.h"
           line="48">The #ClutterDeformEffect structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="93"/>
      <virtual-method name="deform_vertex">
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="vertex" transfer-ownership="none">
            <type name="Cogl.TextureVertex" c:type="CoglTextureVertex*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_back_material"
              c:identifier="clutter_deform_effect_get_back_material"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="687">Retrieves the handle to the back face material used by @effect</doc>
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-deform-effect.c"
               line="693">a handle for the material, or %NULL.
  The returned material is owned by the #ClutterDeformEffect and it
  should not be freed directly</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="689">a #ClutterDeformEffect</doc>
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_tiles"
              c:identifier="clutter_deform_effect_get_n_tiles"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="763">Retrieves the number of horizontal and vertical tiles used to sub-divide
the actor's geometry during the effect</doc>
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="765">a #ClutterDeformEffect</doc>
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
          <parameter name="x_tiles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="766">return location for the number of horizontal tiles,
  or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="y_tiles"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="768">return location for the number of vertical tiles,
  or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="invalidate"
              c:identifier="clutter_deform_effect_invalidate"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="790">Invalidates the @effect&lt;!-- --&gt;'s vertices and, if it is associated
to an actor, it will queue a redraw</doc>
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="792">a #ClutterDeformEffect</doc>
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_back_material"
              c:identifier="clutter_deform_effect_set_back_material"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="653">Sets the material that should be used when drawing the back face
of the actor during a deformation

The #ClutterDeformEffect will take a reference on the material's
handle</doc>
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="655">a #ClutterDeformEffect</doc>
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
          <parameter name="material"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="656">a handle to a Cogl material</doc>
            <type name="Cogl.Handle" c:type="CoglHandle"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_n_tiles"
              c:identifier="clutter_deform_effect_set_n_tiles"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="707">Sets the number of horizontal and vertical tiles to be used
when applying the effect

More tiles allow a finer grained deformation at the expenses
of computation</doc>
        <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="709">a #ClutterDeformEffect</doc>
            <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
          </instance-parameter>
          <parameter name="x_tiles" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="710">number of horizontal tiles</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="y_tiles" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-deform-effect.c"
                 line="711">number of vertical tiles</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="back-material"
                version="1.4"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="614">A material to be used when painting the back of the actor
to which this effect has been applied

By default, no material will be used</doc>
        <type/>
      </property>
      <property name="x-tiles"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="582">The number of horizontal tiles. The bigger the number, the
smaller the tiles</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="y-tiles"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-deform-effect.c"
             line="598">The number of vertical tiles. The bigger the number, the
smaller the tiles</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="OffscreenEffect" c:type="ClutterOffscreenEffect"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DeformEffectPrivate" c:type="ClutterDeformEffectPrivate*"/>
      </field>
    </class>
    <record name="DeformEffectClass"
            c:type="ClutterDeformEffectClass"
            glib:is-gtype-struct-for="DeformEffect"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-deform-effect.h"
           line="64">The #ClutterDeformEffectClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="93"/>
      <field name="parent_class" readable="0" private="1">
        <type name="OffscreenEffectClass"
              c:type="ClutterOffscreenEffectClass"/>
      </field>
      <field name="deform_vertex">
        <callback name="deform_vertex">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="DeformEffect" c:type="ClutterDeformEffect*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="vertex" transfer-ownership="none">
              <type name="Cogl.TextureVertex" c:type="CoglTextureVertex*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_deform1" introspectable="0">
        <callback name="_clutter_deform1">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform2" introspectable="0">
        <callback name="_clutter_deform2">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform3" introspectable="0">
        <callback name="_clutter_deform3">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform4" introspectable="0">
        <callback name="_clutter_deform4">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform5" introspectable="0">
        <callback name="_clutter_deform5">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform6" introspectable="0">
        <callback name="_clutter_deform6">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_deform7" introspectable="0">
        <callback name="_clutter_deform7">
          <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DeformEffectPrivate"
            c:type="ClutterDeformEffectPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="45"/>
    </record>
    <class name="DesaturateEffect"
           c:symbol-prefix="desaturate_effect"
           c:type="ClutterDesaturateEffect"
           version="1.4"
           parent="OffscreenEffect"
           glib:type-name="ClutterDesaturateEffect"
           glib:get-type="clutter_desaturate_effect_get_type"
           glib:type-struct="DesaturateEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-desaturate-effect.h"
           line="40">#ClutterDesaturateEffect is an opaque structure
whose members cannot be directly accessed</doc>
      <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_desaturate_effect_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-desaturate-effect.c"
             line="316">Creates a new #ClutterDesaturateEffect to be used with
clutter_actor_add_effect()</doc>
        <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-desaturate-effect.c"
               line="323">the newly created #ClutterDesaturateEffect or %NULL</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
        <parameters>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-desaturate-effect.c"
                 line="318">the desaturation factor, between 0.0 and 1.0</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_factor"
              c:identifier="clutter_desaturate_effect_get_factor"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-desaturate-effect.c"
             line="365">Retrieves the desaturation factor of @effect</doc>
        <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-desaturate-effect.c"
               line="371">the desaturation factor</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-desaturate-effect.c"
                 line="367">a #ClutterDesaturateEffect</doc>
            <type name="DesaturateEffect" c:type="ClutterDesaturateEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_factor"
              c:identifier="clutter_desaturate_effect_set_factor"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-desaturate-effect.c"
             line="337">Sets the desaturation factor for @effect, with 0.0 being "do not desaturate"
and 1.0 being "fully desaturate"</doc>
        <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-desaturate-effect.c"
                 line="339">a #ClutterDesaturateEffect</doc>
            <type name="DesaturateEffect" c:type="ClutterDesaturateEffect*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-desaturate-effect.c"
                 line="340">the desaturation factor, between 0.0 and 1.0</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="factor"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-desaturate-effect.c"
             line="261">The desaturation factor, between 0.0 (no desaturation) and 1.0 (full
desaturation).</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
    </class>
    <record name="DesaturateEffectClass"
            c:type="ClutterDesaturateEffectClass"
            disguised="1"
            glib:is-gtype-struct-for="DesaturateEffect">
      <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                       line="49"/>
    </record>
    <class name="DragAction"
           c:symbol-prefix="drag_action"
           c:type="ClutterDragAction"
           version="1.4"
           parent="Action"
           glib:type-name="ClutterDragAction"
           glib:get-type="clutter_drag_action_get_type"
           glib:type-struct="DragActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-drag-action.h"
           line="48">The #ClutterDragAction structure contains only
private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="106"/>
      <constructor name="new"
                   c:identifier="clutter_drag_action_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="982">Creates a new #ClutterDragAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drag-action.c"
               line="987">the newly created #ClutterDragAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="drag_begin">
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_end">
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_motion">
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="delta_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="delta_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drag_progress">
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="delta_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="delta_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_drag_area"
              c:identifier="clutter_drag_action_get_drag_area">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1263">Retrieves the "drag area" associated with @action, that
is a #graphene_rect_t that constrains the actor movements,
in parents coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drag-action.c"
               line="1272">%TRUE if the actor is actually constrained (and thus
         @drag_area is valid), %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1265">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="drag_area"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1266">a #graphene_rect_t to be filled</doc>
            <type name="Graphene.Rect" c:type="graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_drag_axis"
              c:identifier="clutter_drag_action_get_drag_axis"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1192">Retrieves the axis constraint set by clutter_drag_action_set_drag_axis()</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drag-action.c"
               line="1198">the axis constraint</doc>
          <type name="DragAxis" c:type="ClutterDragAxis"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1194">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_drag_handle"
              c:identifier="clutter_drag_action_get_drag_handle"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1144">Retrieves the drag handle set by clutter_drag_action_set_drag_handle()</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drag-action.c"
               line="1150">a #ClutterActor, used as the drag
  handle, or %NULL if none was set</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1146">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_drag_threshold"
              c:identifier="clutter_drag_action_get_drag_threshold"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1046">Retrieves the values set by clutter_drag_action_set_drag_threshold().

If the #ClutterDragAction:x-drag-threshold property or the
#ClutterDragAction:y-drag-threshold property have been set to -1 then
this function will return the default drag threshold value as stored
by the #ClutterSettings:dnd-drag-threshold property of #ClutterSettings.</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1048">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="x_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1049">return location for the horizontal drag
  threshold value, in pixels</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="y_threshold"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1051">return location for the vertical drag
  threshold value, in pixels</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_coords"
              c:identifier="clutter_drag_action_get_motion_coords"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1236">Retrieves the coordinates, in stage space, of the latest motion
event during the dragging</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1238">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="motion_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1239">return location for the latest motion
  event's X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="motion_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1241">return location for the latest motion
  event's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_press_coords"
              c:identifier="clutter_drag_action_get_press_coords"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1211">Retrieves the coordinates, in stage space, of the press event
that started the dragging</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1213">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="press_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1214">return location for the press event's X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="press_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1215">return location for the press event's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_drag_area"
              c:identifier="clutter_drag_action_set_drag_area">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1286">Sets @drag_area to constrain the dragging of the actor associated
with @action, so that it position is always within @drag_area, expressed
in parent's coordinates.
If @drag_area is %NULL, the actor is not constrained.</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1288">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="drag_area"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1289">a #ClutterRect</doc>
            <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_drag_axis"
              c:identifier="clutter_drag_action_set_drag_axis"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1163">Restricts the dragging action to a specific axis</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1165">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1166">the axis to constraint the dragging to</doc>
            <type name="DragAxis" c:type="ClutterDragAxis"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_drag_handle"
              c:identifier="clutter_drag_action_set_drag_handle"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="1096">Sets the actor to be used as the drag handle.</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1098">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="handle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1099">a #ClutterActor, or %NULL to unset</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_drag_threshold"
              c:identifier="clutter_drag_action_set_drag_threshold"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="997">Sets the horizontal and vertical drag thresholds that must be
cleared by the pointer before @action can begin the dragging.

If @x_threshold or @y_threshold are set to -1 then the default
drag threshold stored in the #ClutterSettings:dnd-drag-threshold
property of #ClutterSettings will be used.</doc>
        <source-position filename="../clutter/clutter/clutter-drag-action.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="999">a #ClutterDragAction</doc>
            <type name="DragAction" c:type="ClutterDragAction*"/>
          </instance-parameter>
          <parameter name="x_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1000">a distance on the horizontal axis, in pixels, or
  -1 to use the default drag threshold from #ClutterSettings</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="1002">a distance on the vertical axis, in pixels, or
  -1 to use the default drag threshold from #ClutterSettings</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="drag-area"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="797">Constains the dragging action (or in particular, the resulting
actor position) to the specified #ClutterRect, in parent's
coordinates.</doc>
        <type name="Graphene.Rect"/>
      </property>
      <property name="drag-area-set" version="1.12" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="813">Whether the #ClutterDragAction:drag-area property has been set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="drag-axis"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="782">Constraints the dragging action to the specified axis</doc>
        <type name="DragAxis"/>
      </property>
      <property name="drag-handle"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="761">The #ClutterActor that is effectively being dragged

A #ClutterDragAction will, be default, use the #ClutterActor that
has been attached to the action; it is possible to create a
separate #ClutterActor and use it instead.

Setting this property has no effect on the #ClutterActor argument
passed to the #ClutterDragAction signals</doc>
        <type name="Actor"/>
      </property>
      <property name="x-drag-threshold"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="705">The horizontal threshold, in pixels, that the cursor must travel
in order to begin a drag action.

When set to a positive value, #ClutterDragAction will only emit
#ClutterDragAction::drag-begin if the pointer has moved
horizontally at least of the given amount of pixels since
the button press event.

When set to -1, #ClutterDragAction will use the default threshold
stored in the #ClutterSettings:dnd-drag-threshold property of
#ClutterSettings.

When read, this property will always return a valid drag
threshold, either as set or the default one.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="y-drag-threshold"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="733">The vertical threshold, in pixels, that the cursor must travel
in order to begin a drag action.

When set to a positive value, #ClutterDragAction will only emit
#ClutterDragAction::drag-begin if the pointer has moved
vertically at least of the given amount of pixels since
the button press event.

When set to -1, #ClutterDragAction will use the value stored
in the #ClutterSettings:dnd-drag-threshold property of
#ClutterSettings.

When read, this property will always return a valid drag
threshold, either as set or the default one.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Action" c:type="ClutterAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DragActionPrivate" c:type="ClutterDragActionPrivate*"/>
      </field>
      <glib:signal name="drag-begin" when="last" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="835">The ::drag-begin signal is emitted when the #ClutterDragAction
starts the dragging

The emission of this signal can be delayed by using the
#ClutterDragAction:x-drag-threshold and
#ClutterDragAction:y-drag-threshold properties</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="838">the #ClutterActor attached to the action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="839">the X coordinate (in stage space) of the press event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="840">the Y coordinate (in stage space) of the press event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="841">the modifiers of the press event</doc>
            <type name="ModifierType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-end" when="last" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="946">The ::drag-end signal is emitted at the end of the dragging,
when the pointer button's is released

This signal is emitted if and only if the #ClutterDragAction::drag-begin
signal has been emitted first</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="949">the #ClutterActor attached to the action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="950">the X coordinate (in stage space) of the release event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="951">the Y coordinate (in stage space) of the release event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="952">the modifiers of the release event</doc>
            <type name="ModifierType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-motion" when="last" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="905">The ::drag-motion signal is emitted for each motion event after
the #ClutterDragAction::drag-begin signal has been emitted.

The components of the distance between the press event and the
latest motion event are computed in the actor's coordinate space,
to take into account eventual transformations. If you want the
stage coordinates of the latest motion event you can use
clutter_drag_action_get_motion_coords().

The default handler of the signal will call clutter_actor_move_by()
either on @actor or, if set, of #ClutterDragAction:drag-handle using
the @delta_x and @delta_y components of the dragging motion. If you
want to override the default behaviour, you can connect to the
#ClutterDragAction::drag-progress signal and return %FALSE from the
handler.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="908">the #ClutterActor attached to the action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="delta_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="909">the X component of the distance between the press event
  that began the dragging and the current position of the pointer,
  as of the latest motion event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="delta_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="912">the Y component of the distance between the press event
  that began the dragging and the current position of the pointer,
  as of the latest motion event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drag-progress" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drag-action.c"
             line="865">The ::drag-progress signal is emitted for each motion event after
the #ClutterDragAction::drag-begin signal has been emitted.

The components of the distance between the press event and the
latest motion event are computed in the actor's coordinate space,
to take into account eventual transformations. If you want the
stage coordinates of the latest motion event you can use
clutter_drag_action_get_motion_coords().

The default handler will emit #ClutterDragAction::drag-motion,
if #ClutterDragAction::drag-progress emission returns %TRUE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drag-action.c"
               line="888">%TRUE if the drag should continue, and %FALSE
  if it should be stopped.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="868">the #ClutterActor attached to the action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="delta_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="869">the X component of the distance between the press event
  that began the dragging and the current position of the pointer,
  as of the latest motion event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="delta_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drag-action.c"
                 line="872">the Y component of the distance between the press event
  that began the dragging and the current position of the pointer,
  as of the latest motion event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DragActionClass"
            c:type="ClutterDragActionClass"
            glib:is-gtype-struct-for="DragAction"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-drag-action.h"
           line="64">The #ClutterDragActionClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="106"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActionClass" c:type="ClutterActionClass"/>
      </field>
      <field name="drag_begin">
        <callback name="drag_begin">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DragAction" c:type="ClutterDragAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="event_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="modifiers" transfer-ownership="none">
              <type name="ModifierType" c:type="ClutterModifierType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_motion">
        <callback name="drag_motion">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DragAction" c:type="ClutterDragAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="delta_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="delta_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_end">
        <callback name="drag_end">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DragAction" c:type="ClutterDragAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="event_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="modifiers" transfer-ownership="none">
              <type name="ModifierType" c:type="ClutterModifierType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drag_progress">
        <callback name="drag_progress">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DragAction" c:type="ClutterDragAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="delta_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="delta_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_drag_action1" introspectable="0">
        <callback name="_clutter_drag_action1">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drag_action2" introspectable="0">
        <callback name="_clutter_drag_action2">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drag_action3" introspectable="0">
        <callback name="_clutter_drag_action3">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drag_action4" introspectable="0">
        <callback name="_clutter_drag_action4">
          <source-position filename="../clutter/clutter/clutter-drag-action.h"
                           line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DragActionPrivate"
            c:type="ClutterDragActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="45"/>
    </record>
    <enumeration name="DragAxis"
                 version="1.4"
                 glib:type-name="ClutterDragAxis"
                 glib:get-type="clutter_drag_axis_get_type"
                 c:type="ClutterDragAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="835">The axis of the constraint that should be applied on the
dragging action</doc>
      <member name="axis_none"
              value="0"
              c:identifier="CLUTTER_DRAG_AXIS_NONE"
              glib:nick="axis-none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="837">No constraint</doc>
      </member>
      <member name="x_axis"
              value="1"
              c:identifier="CLUTTER_DRAG_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="838">Set a constraint on the X axis</doc>
      </member>
      <member name="y_axis"
              value="2"
              c:identifier="CLUTTER_DRAG_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="839">Set a constraint on the Y axis</doc>
      </member>
    </enumeration>
    <bitfield name="DrawDebugFlag"
              glib:type-name="ClutterDrawDebugFlag"
              glib:get-type="clutter_draw_debug_flag_get_type"
              c:type="ClutterDrawDebugFlag">
      <member name="disable_swap_events"
              value="1"
              c:identifier="CLUTTER_DEBUG_DISABLE_SWAP_EVENTS"
              glib:nick="disable-swap-events">
      </member>
      <member name="disable_clipped_redraws"
              value="2"
              c:identifier="CLUTTER_DEBUG_DISABLE_CLIPPED_REDRAWS"
              glib:nick="disable-clipped-redraws">
      </member>
      <member name="redraws"
              value="4"
              c:identifier="CLUTTER_DEBUG_REDRAWS"
              glib:nick="redraws">
      </member>
      <member name="paint_volumes"
              value="8"
              c:identifier="CLUTTER_DEBUG_PAINT_VOLUMES"
              glib:nick="paint-volumes">
      </member>
      <member name="disable_culling"
              value="16"
              c:identifier="CLUTTER_DEBUG_DISABLE_CULLING"
              glib:nick="disable-culling">
      </member>
      <member name="disable_offscreen_redirect"
              value="32"
              c:identifier="CLUTTER_DEBUG_DISABLE_OFFSCREEN_REDIRECT"
              glib:nick="disable-offscreen-redirect">
      </member>
      <member name="continuous_redraw"
              value="64"
              c:identifier="CLUTTER_DEBUG_CONTINUOUS_REDRAW"
              glib:nick="continuous-redraw">
      </member>
      <member name="paint_deform_tiles"
              value="128"
              c:identifier="CLUTTER_DEBUG_PAINT_DEFORM_TILES"
              glib:nick="paint-deform-tiles">
      </member>
      <member name="paint_damage_region"
              value="256"
              c:identifier="CLUTTER_DEBUG_PAINT_DAMAGE_REGION"
              glib:nick="paint-damage-region">
      </member>
    </bitfield>
    <class name="DropAction"
           c:symbol-prefix="drop_action"
           c:type="ClutterDropAction"
           version="1.8"
           parent="Action"
           glib:type-name="ClutterDropAction"
           glib:get-type="clutter_drop_action_get_type"
           glib:type-struct="DropActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-drop-action.h"
           line="47">The #ClutterDropAction structure contains only
private data and should be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="105"/>
      <constructor name="new"
                   c:identifier="clutter_drop_action_new"
                   version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="512">Creates a new #ClutterDropAction.

Use clutter_actor_add_action() to add the action to a #ClutterActor.</doc>
        <source-position filename="../clutter/clutter/clutter-drop-action.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drop-action.c"
               line="519">the newly created #ClutterDropAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="can_drop">
        <source-position filename="../clutter/clutter/clutter-drop-action.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DropAction" c:type="ClutterDropAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="drop">
        <source-position filename="../clutter/clutter/clutter-drop-action.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DropAction" c:type="ClutterDropAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="over_in">
        <source-position filename="../clutter/clutter/clutter-drop-action.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DropAction" c:type="ClutterDropAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="over_out">
        <source-position filename="../clutter/clutter/clutter-drop-action.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="DropAction" c:type="ClutterDropAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance" readable="0" private="1">
        <type name="Action" c:type="ClutterAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DropActionPrivate" c:type="ClutterDropActionPrivate*"/>
      </field>
      <glib:signal name="can-drop" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="383">The ::can-drop signal is emitted when the dragged actor is dropped
on @actor. The return value of the ::can-drop signal will determine
whether or not the #ClutterDropAction::drop signal is going to be
emitted on @action.

The default implementation of #ClutterDropAction returns %TRUE for
this signal.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-drop-action.c"
               line="398">%TRUE if the drop is accepted, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="386">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="387">the X coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="388">the Y coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drop" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="452">The ::drop signal is emitted when the dragged actor is dropped
on @actor. This signal is only emitted if at least an handler of
#ClutterDropAction::can-drop returns %TRUE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="455">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="456">the X coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="457">the Y coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drop-cancel" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="478">The ::drop-cancel signal is emitted when the drop is refused
by an emission of the #ClutterDropAction::can-drop signal.

After the ::drop-cancel signal is fired the active drag is
terminated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="481">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="event_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="482">the X coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="event_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="483">the Y coordinate (in stage space) of the drop event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="over-in" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="414">The ::over-in signal is emitted when the dragged actor crosses
into @actor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="417">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="over-out" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-drop-action.c"
             line="433">The ::over-out signal is emitted when the dragged actor crosses
outside @actor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-drop-action.c"
                 line="436">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DropActionClass"
            c:type="ClutterDropActionClass"
            glib:is-gtype-struct-for="DropAction"
            version="1.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-drop-action.h"
           line="63">The #ClutterDropActionClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="105"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActionClass" c:type="ClutterActionClass"/>
      </field>
      <field name="can_drop">
        <callback name="can_drop">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DropAction" c:type="ClutterDropAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="event_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="over_in">
        <callback name="over_in">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DropAction" c:type="ClutterDropAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="over_out">
        <callback name="over_out">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DropAction" c:type="ClutterDropAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drop">
        <callback name="drop">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="DropAction" c:type="ClutterDropAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="event_x" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="event_y" transfer-ownership="none">
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_drop_action1" introspectable="0">
        <callback name="_clutter_drop_action1">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action2" introspectable="0">
        <callback name="_clutter_drop_action2">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action3" introspectable="0">
        <callback name="_clutter_drop_action3">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action4" introspectable="0">
        <callback name="_clutter_drop_action4">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action5" introspectable="0">
        <callback name="_clutter_drop_action5">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action6" introspectable="0">
        <callback name="_clutter_drop_action6">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action7" introspectable="0">
        <callback name="_clutter_drop_action7">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_drop_action8" introspectable="0">
        <callback name="_clutter_drop_action8">
          <source-position filename="../clutter/clutter/clutter-drop-action.h"
                           line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DropActionPrivate"
            c:type="ClutterDropActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="44"/>
    </record>
    <function-macro name="EFFECT"
                    c:identifier="CLUTTER_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EFFECT_CLASS"
                    c:identifier="CLUTTER_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EFFECT_GET_CLASS"
                    c:identifier="CLUTTER_EFFECT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="EVENT_PROPAGATE"
              value="false"
              c:type="CLUTTER_EVENT_PROPAGATE"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="57">Continues the propagation of an event; this macro should be
used in event-related signals.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="65"/>
      <type name="gboolean" c:type="gboolean"/>
    </constant>
    <constant name="EVENT_STOP"
              value="true"
              c:type="CLUTTER_EVENT_STOP"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="67">Stops the propagation of an event; this macro should be used
in event-related signals.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="75"/>
      <type name="gboolean" c:type="gboolean"/>
    </constant>
    <class name="Effect"
           c:symbol-prefix="effect"
           c:type="ClutterEffect"
           version="1.4"
           parent="ActorMeta"
           abstract="1"
           glib:type-name="ClutterEffect"
           glib:get-type="clutter_effect_get_type"
           glib:type-struct="EffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-effect.h"
           line="47">The #ClutterEffect structure contains only private data and should
be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="97"/>
      <virtual-method name="modify_paint_volume">
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
          <parameter name="volume" transfer-ownership="none">
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint">
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="EffectPaintFlags" c:type="ClutterEffectPaintFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pick">
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
          <parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="post_paint">
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pre_paint">
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="queue_repaint"
              c:identifier="clutter_effect_queue_repaint"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-effect.c"
             line="324">Queues a repaint of the effect. The effect can detect when the ‘paint’
method is called as a result of this function because it will not
have the %CLUTTER_EFFECT_PAINT_ACTOR_DIRTY flag set. In that case the
effect is free to assume that the actor has not changed its
appearance since the last time it was painted so it doesn't need to
call clutter_actor_continue_paint() if it can draw a cached
image. This is mostly intended for effects that are using a
%CoglOffscreen to redirect the actor (such as
%ClutterOffscreenEffect). In that case the effect can save a bit of
rendering time by painting the cached texture without causing the
entire actor to be painted.

This function can be used by effects that have their own animatable
parameters. For example, an effect which adds a varying degree of a
red tint to an actor by redirecting it through a CoglOffscreen
might have a property to specify the level of tint. When this value
changes, the underlying actor doesn't need to be redrawn so the
effect can call clutter_effect_queue_repaint() to make sure the
effect is repainted.

Note however that modifying the position of the parent of an actor
may change the appearance of the actor because its transformation
matrix would change. In this case a redraw wouldn't be queued on
the actor itself so the %CLUTTER_EFFECT_PAINT_ACTOR_DIRTY would still
not be set. The effect can detect this case by keeping track of the
last modelview matrix that was used to render the actor and
veryifying that it remains the same in the next paint.

Any other effects that are layered on top of the passed in effect
will still be passed the %CLUTTER_EFFECT_PAINT_ACTOR_DIRTY flag. If
anything queues a redraw on the actor without specifying an effect
or with an effect that is lower in the chain of effects than this
one then that will override this call. In that case this effect
will instead be called with the %CLUTTER_EFFECT_PAINT_ACTOR_DIRTY
flag set.</doc>
        <source-position filename="../clutter/clutter/clutter-effect.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-effect.c"
                 line="326">A #ClutterEffect which needs redrawing</doc>
            <type name="Effect" c:type="ClutterEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="ActorMeta" c:type="ClutterActorMeta"/>
      </field>
    </class>
    <record name="EffectClass"
            c:type="ClutterEffectClass"
            glib:is-gtype-struct-for="Effect"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-effect.h"
           line="61">The #ClutterEffectClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="97"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorMetaClass" c:type="ClutterActorMetaClass"/>
      </field>
      <field name="pre_paint">
        <callback name="pre_paint">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="Effect" c:type="ClutterEffect*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="post_paint">
        <callback name="post_paint">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="Effect" c:type="ClutterEffect*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="modify_paint_volume">
        <callback name="modify_paint_volume">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="Effect" c:type="ClutterEffect*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint">
        <callback name="paint">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="Effect" c:type="ClutterEffect*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="EffectPaintFlags" c:type="ClutterEffectPaintFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pick">
        <callback name="pick">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="Effect" c:type="ClutterEffect*"/>
            </parameter>
            <parameter name="pick_context" transfer-ownership="none">
              <type name="PickContext" c:type="ClutterPickContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_effect4" introspectable="0">
        <callback name="_clutter_effect4">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_effect5" introspectable="0">
        <callback name="_clutter_effect5">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_effect6" introspectable="0">
        <callback name="_clutter_effect6">
          <source-position filename="../clutter/clutter/clutter-effect.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <bitfield name="EffectPaintFlags"
              glib:type-name="ClutterEffectPaintFlags"
              glib:get-type="clutter_effect_paint_flags_get_type"
              c:type="ClutterEffectPaintFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="675">Flags passed to the ‘paint’ or ‘pick’ method of #ClutterEffect.</doc>
      <member name="actor_dirty"
              value="1"
              c:identifier="CLUTTER_EFFECT_PAINT_ACTOR_DIRTY"
              glib:nick="actor-dirty">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="677">The actor or one of its children
  has queued a redraw before this paint. This implies that the effect
  should call clutter_actor_continue_paint() to chain to the next
  effect and can not cache any results from a previous paint.</doc>
      </member>
      <member name="bypass_effect"
              value="2"
              c:identifier="CLUTTER_EFFECT_PAINT_BYPASS_EFFECT"
              glib:nick="bypass-effect">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="681">The effect should not be used
  on this frame, but it will be asked to paint the actor still.</doc>
      </member>
    </bitfield>
    <callback name="EmitInputDeviceEvent" c:type="ClutterEmitInputDeviceEvent">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <type name="Event" c:type="ClutterEvent*"/>
        </parameter>
        <parameter name="device" transfer-ownership="none">
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </parameter>
      </parameters>
    </callback>
    <union name="Event"
           c:type="ClutterEvent"
           version="0.2"
           glib:type-name="ClutterEvent"
           glib:get-type="clutter_event_get_type"
           c:symbol-prefix="event">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="561">Generic event wrapper.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="588"/>
      <field name="type" readable="0" private="1">
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="any" readable="0" private="1">
        <type name="AnyEvent" c:type="ClutterAnyEvent"/>
      </field>
      <field name="button" readable="0" private="1">
        <type name="ButtonEvent" c:type="ClutterButtonEvent"/>
      </field>
      <field name="key" readable="0" private="1">
        <type name="KeyEvent" c:type="ClutterKeyEvent"/>
      </field>
      <field name="motion" readable="0" private="1">
        <type name="MotionEvent" c:type="ClutterMotionEvent"/>
      </field>
      <field name="scroll" readable="0" private="1">
        <type name="ScrollEvent" c:type="ClutterScrollEvent"/>
      </field>
      <field name="stage_state" readable="0" private="1">
        <type name="StageStateEvent" c:type="ClutterStageStateEvent"/>
      </field>
      <field name="crossing" readable="0" private="1">
        <type name="CrossingEvent" c:type="ClutterCrossingEvent"/>
      </field>
      <field name="touch" readable="0" private="1">
        <type name="TouchEvent" c:type="ClutterTouchEvent"/>
      </field>
      <field name="touchpad_pinch" readable="0" private="1">
        <type name="TouchpadPinchEvent" c:type="ClutterTouchpadPinchEvent"/>
      </field>
      <field name="touchpad_swipe" readable="0" private="1">
        <type name="TouchpadSwipeEvent" c:type="ClutterTouchpadSwipeEvent"/>
      </field>
      <field name="proximity" readable="0" private="1">
        <type name="ProximityEvent" c:type="ClutterProximityEvent"/>
      </field>
      <field name="pad_button" readable="0" private="1">
        <type name="PadButtonEvent" c:type="ClutterPadButtonEvent"/>
      </field>
      <field name="pad_strip" readable="0" private="1">
        <type name="PadStripEvent" c:type="ClutterPadStripEvent"/>
      </field>
      <field name="pad_ring" readable="0" private="1">
        <type name="PadRingEvent" c:type="ClutterPadRingEvent"/>
      </field>
      <field name="im" readable="0" private="1">
        <type name="IMEvent" c:type="ClutterIMEvent"/>
      </field>
      <constructor name="new" c:identifier="clutter_event_new">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1326">Creates a new #ClutterEvent of the specified type.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="632"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1332">A newly allocated #ClutterEvent.</doc>
          <type name="Event" c:type="ClutterEvent*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1328">The type of event.</doc>
            <type name="EventType" c:type="ClutterEventType"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="clutter_event_copy">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1353">Copies @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="634"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1359">A newly allocated #ClutterEvent</doc>
          <type name="Event" c:type="ClutterEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1355">A #ClutterEvent.</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_event_free">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1443">Frees all resources used by @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="636"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1445">A #ClutterEvent.</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_angle"
              c:identifier="clutter_event_get_angle"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1832">Retrieves the angle relative from @source to @target.

The direction of the angle is from the position X axis towards
the positive Y axis.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="709"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1842">the angle between two #ClutterEvent</doc>
          <type name="gdouble" c:type="double"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1834">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1835">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_axes"
              c:identifier="clutter_event_get_axes"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1726">Retrieves the array of axes values attached to the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="712"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1733">an array of axis values</doc>
          <type name="gdouble" c:type="gdouble*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1728">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="n_axes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1729">return location for the number of axes returned</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_button"
              c:identifier="clutter_event_get_button"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="810">Retrieves the button number of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="739"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="817">the button number</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="812">a #ClutterEvent of type %CLUTTER_BUTTON_PRESS or
  of type %CLUTTER_BUTTON_RELEASE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_click_count"
              c:identifier="clutter_event_get_click_count"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="858">Retrieves the number of clicks of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="741"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="865">the click count</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="860">a #ClutterEvent of type %CLUTTER_BUTTON_PRESS or
  of type %CLUTTER_BUTTON_RELEASE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_coords"
              c:identifier="clutter_event_get_coords"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="358">Retrieves the coordinates of @event and puts them into @x and @y.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="699"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="360">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="361">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="362">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="clutter_event_get_device"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1176">Retrieves the #ClutterInputDevice for the event.
If you want the physical device the event originated from, use
clutter_event_get_source_device().

The #ClutterInputDevice structure is completely opaque and should
be cast to the platform-specific implementation.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="666"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1187">the #ClutterInputDevice or %NULL. The
  returned device is owned by the #ClutterEvent and it should not
  be unreferenced</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1178">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_id" c:identifier="clutter_event_get_device_id">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1037">Retrieves the events device id if set.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="691"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1043">A unique identifier for the device or -1 if the event has
  no specific device set.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1039">a clutter event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_tool"
              c:identifier="clutter_event_get_device_tool"
              version="1.28">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1301">Returns the device tool that originated this event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="678"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1307">The tool of this event</doc>
          <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1303">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_type"
              c:identifier="clutter_event_get_device_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1060">Retrieves the type of the device for @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="693"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1066">the #ClutterInputDeviceType for the device, if
  any is set</doc>
          <type name="InputDeviceType" c:type="ClutterInputDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1062">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="clutter_event_get_distance"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1809">Retrieves the distance between two events, a @source and a @target.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="706"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1816">the distance between two #ClutterEvent</doc>
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1811">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1812">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_event_sequence"
              c:identifier="clutter_event_get_event_sequence"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1008">Retrieves the #ClutterEventSequence of @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="762"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1016">the event sequence, or %NULL</doc>
          <type name="EventSequence" c:type="ClutterEventSequence*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1010">a #ClutterEvent of type %CLUTTER_TOUCH_BEGIN,
  %CLUTTER_TOUCH_UPDATE, %CLUTTER_TOUCH_END, or
  %CLUTTER_TOUCH_CANCEL</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flags"
              c:identifier="clutter_event_get_flags"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="621">Retrieves the #ClutterEventFlags of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="644"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="627">the event flags</doc>
          <type name="EventFlags" c:type="ClutterEventFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="623">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gesture_motion_delta"
              c:identifier="clutter_event_get_gesture_motion_delta"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2116">Returns the gesture motion deltas relative to the current pointer
position.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="787"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2118">A clutter touchpad gesture event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="dx"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2119">the displacement relative to the pointer
     position in the X axis, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="dy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2121">the displacement relative to the pointer
     position in the Y axis, or %NULL</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gesture_phase"
              c:identifier="clutter_event_get_gesture_phase">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2092">Returns the phase of the event, See #ClutterTouchpadGesturePhase.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="784"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2098">the phase of the gesture event.</doc>
          <type name="TouchpadGesturePhase"
                c:type="ClutterTouchpadGesturePhase"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2094">a touchpad gesture event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gesture_pinch_angle_delta"
              c:identifier="clutter_event_get_gesture_pinch_angle_delta"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2051">Returns the angle delta reported by this specific event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="778"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2057">The angle delta relative to the previous event.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2053">a touchpad pinch event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gesture_pinch_scale"
              c:identifier="clutter_event_get_gesture_pinch_scale"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2070">Returns the current scale as reported by @event, 1.0 being the original
distance at the time the corresponding event with phase
%CLUTTER_TOUCHPAD_GESTURE_PHASE_BEGIN is received.
is received.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="781"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2079">the current pinch gesture scale</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2072">a touchpad pinch event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_code"
              c:identifier="clutter_event_get_key_code"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="923">Retrieves the keycode of the key that caused @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="729"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="930">The keycode representing the key</doc>
          <type name="guint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="925">a #ClutterEvent of type %CLUTTER_KEY_PRESS or
   of type %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_symbol"
              c:identifier="clutter_event_get_key_symbol"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="881">Retrieves the key symbol of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="724"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="888">the key symbol representing the key</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="883">a #ClutterEvent of type %CLUTTER_KEY_PRESS or
  of type %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_unicode"
              c:identifier="clutter_event_get_key_unicode">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="965">Retrieves the unicode value for the key that caused @keyev.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="734"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="972">The unicode value representing the key</doc>
          <type name="gunichar" c:type="gunichar"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="967">a #ClutterEvent of type %CLUTTER_KEY_PRESS
  or %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode_group"
              c:identifier="clutter_event_get_mode_group">
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="798"/>
        <return-value transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pad_event_details"
              c:identifier="clutter_event_get_pad_event_details">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2217">Returns the details of a pad event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="801"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2226">#TRUE if event details could be obtained</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2219">a pad event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="number"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2220">ring/strip/button number</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2221">pad mode as per the event</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2222">event axis value</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="clutter_event_get_position"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="386">Retrieves the event coordinates as a #graphene_point_t.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="703"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="388">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="389">a #graphene_point_t</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_related"
              c:identifier="clutter_event_get_related"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="661">Retrieves the related actor of a crossing event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="746"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="668">the related #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="663">a #ClutterEvent of type %CLUTTER_ENTER or of
  type %CLUTTER_LEAVE</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scroll_delta"
              c:identifier="clutter_event_get_scroll_delta"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="733">Retrieves the precise scrolling information of @event.

The @event has to have a #ClutterScrollEvent.direction value
of %CLUTTER_SCROLL_SMOOTH.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="757"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="735">a #ClutterEvent of type %CLUTTER_SCROLL</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="dx"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="736">return location for the delta on the horizontal axis</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
          <parameter name="dy"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="737">return location for the delta on the vertical axis</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_scroll_direction"
              c:identifier="clutter_event_get_scroll_direction"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="772">Retrieves the direction of the scrolling of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="751"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="778">the scrolling direction</doc>
          <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="774">a #ClutterEvent of type %CLUTTER_SCROLL</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scroll_finish_flags"
              c:identifier="clutter_event_get_scroll_finish_flags"
              version="1.26">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2174">Returns the #ClutterScrollFinishFlags of an scroll event. Those
can be used to determine whether post-scroll effects like kinetic
scrolling should be applied.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="795"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2182">The scroll finish flags</doc>
          <type name="ScrollFinishFlags" c:type="ClutterScrollFinishFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2176">an scroll event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scroll_source"
              c:identifier="clutter_event_get_scroll_source"
              version="1.26">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2154">Returns the #ClutterScrollSource that applies to an scroll event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="792"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2160">The source of scroll events</doc>
          <type name="ScrollSource" c:type="ClutterScrollSource"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2156">an scroll event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="clutter_event_get_source"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="542">Retrieves the source #ClutterActor the event originated from, or
NULL if the event has no source.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="684"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="549">a #ClutterActor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="544">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source_device"
              c:identifier="clutter_event_get_source_device"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1667">Retrieves the hardware device that originated the event.

If you need the virtual device, use clutter_event_get_device().

If no hardware device originated this event, this function will
return the same device as clutter_event_get_device().</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="672"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1678">a pointer to a #ClutterInputDevice
  or %NULL</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1669">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stage"
              c:identifier="clutter_event_get_stage"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="580">Retrieves the source #ClutterStage the event originated for, or
%NULL if the event has no stage.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="689"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="587">a #ClutterStage</doc>
          <type name="Stage" c:type="ClutterStage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="582">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state"
              c:identifier="clutter_event_get_state"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="208">Retrieves the modifier state of the event. In case the window system
supports reporting latched and locked modifiers, this function returns
the effective state.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="654"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="216">the modifier state parameter, or 0</doc>
          <type name="ModifierType" c:type="ClutterModifierType"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="210">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_state_full"
              c:identifier="clutter_event_get_state_full"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="319">Retrieves the decomposition of the keyboard state into button, base,
latched, locked and effective. This can be used to transmit to other
applications, for example when implementing a wayland compositor.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="656"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="321">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
          <parameter name="button_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="322">the pressed buttons as a mask</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
          <parameter name="base_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="323">the regular pressed modifier keys</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
          <parameter name="latched_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="324">the latched modifier keys (currently released but still valid for one key press/release)</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
          <parameter name="locked_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="325">the locked modifier keys (valid until the lock key is pressed and released again)</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
          <parameter name="effective_state"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="326">the logical OR of all the state bits above</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_time"
              c:identifier="clutter_event_get_time"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="172">Retrieves the time of the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="649"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="178">the time of the event, or %CLUTTER_CURRENT_TIME</doc>
          <type name="guint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="174">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_touchpad_gesture_finger_count"
              c:identifier="clutter_event_get_touchpad_gesture_finger_count"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="2026">Returns the number of fingers that is triggering the touchpad gesture.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="775"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="2032">the number of fingers in the gesture.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="2028">a touchpad swipe/pinch event</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_control_modifier"
              c:identifier="clutter_event_has_control_modifier"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1890">Checks whether @event has the Control modifier mask set.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="717"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1896">%TRUE if the event has the Control modifier mask set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1892">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_shift_modifier"
              c:identifier="clutter_event_has_shift_modifier"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1874">Checks whether @event has the Shift modifier mask set.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="715"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1880">%TRUE if the event has the Shift modifier mask set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1876">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_pointer_emulated"
              c:identifier="clutter_event_is_pointer_emulated"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1906">Checks whether a pointer @event has been generated by the windowing
system. The returned value can be used to distinguish between events
synthesized by the windowing system itself (as opposed by Clutter).</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="719"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1914">%TRUE if the event is pointer emulated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1908">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="put" c:identifier="clutter_event_put" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1581">Puts a copy of the event on the back of the event queue. The event will
have the %CLUTTER_EVENT_FLAG_SYNTHETIC flag set. If the source is set
event signals will be emitted for this source and capture/bubbling for
its ancestors. If the source is not set it will be generated by picking
or use the actor that currently has keyboard focus</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="621"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1583">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_button"
              c:identifier="clutter_event_set_button"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="837">Sets the button number of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="736"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="839">a #ClutterEvent or type %CLUTTER_BUTTON_PRESS or
  of type %CLUTTER_BUTTON_RELEASE</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="button" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="841">the button number</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_coords"
              c:identifier="clutter_event_set_coords"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="462">Sets the coordinates of the @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="695"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="464">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="465">the X coordinate of the event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="466">the Y coordinate of the event</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device"
              c:identifier="clutter_event_set_device"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1085">Sets the device for @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="663"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1087">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="device"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1088">a #ClutterInputDevice, or %NULL</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_tool"
              c:identifier="clutter_event_set_device_tool"
              version="1.28">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1278">Sets the tool in use for this event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="675"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1280">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="tool"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1281">a #ClutterInputDeviceTool</doc>
            <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags"
              c:identifier="clutter_event_set_flags"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="639">Sets the #ClutterEventFlags of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="641"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="641">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="642">a binary OR of #ClutterEventFlags values</doc>
            <type name="EventFlags" c:type="ClutterEventFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_code"
              c:identifier="clutter_event_set_key_code"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="944">Sets the keycode of the @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="726"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="946">a #ClutterEvent of type %CLUTTER_KEY_PRESS
  or %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="key_code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="948">the keycode representing the key</doc>
            <type name="guint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_symbol"
              c:identifier="clutter_event_set_key_symbol"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="902">Sets the key symbol of @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="721"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="904">a #ClutterEvent of type %CLUTTER_KEY_PRESS
  or %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="key_sym" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="906">the key symbol representing the key</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_unicode"
              c:identifier="clutter_event_set_key_unicode"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="987">Sets the Unicode value of @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="731"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="989">a #ClutterEvent of type %CLUTTER_KEY_PRESS
  or %CLUTTER_KEY_RELEASE</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="key_unicode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="991">the Unicode value representing the key</doc>
            <type name="gunichar" c:type="gunichar"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_related"
              c:identifier="clutter_event_set_related"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="682">Sets the related actor of a crossing event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="743"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="684">a #ClutterEvent of type %CLUTTER_ENTER or %CLUTTER_LEAVE</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="actor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="685">a #ClutterActor or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_delta"
              c:identifier="clutter_event_set_scroll_delta"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="706">Sets the precise scrolling information of @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="753"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="708">a #ClutterEvent of type %CLUTTER_SCROLL</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="dx" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="709">delta on the horizontal axis</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="710">delta on the vertical axis</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_direction"
              c:identifier="clutter_event_set_scroll_direction"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="791">Sets the direction of the scrolling of @event</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="748"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="793">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="794">the scrolling direction</doc>
            <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="clutter_event_set_source"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="561">Sets the source #ClutterActor of @event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="681"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="563">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="actor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="564">a #ClutterActor, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source_device"
              c:identifier="clutter_event_set_source_device"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1699">Sets the source #ClutterInputDevice for @event.

The #ClutterEvent must have been created using clutter_event_new().</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="668"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1701">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="device"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1702">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stage"
              c:identifier="clutter_event_set_stage"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="599">Sets the source #ClutterStage of the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="686"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="601">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="stage"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="602">a #ClutterStage, or %NULL</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_state"
              c:identifier="clutter_event_set_state"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="254">Sets the modifier state of the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="651"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="256">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="257">the modifier state to set</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_time"
              c:identifier="clutter_event_set_time"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="190">Sets the time of the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="646"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="192">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </instance-parameter>
          <parameter name="time_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="193">the time of the event</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="type" c:identifier="clutter_event_type">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="156">Retrieves the type of the event.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="639"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="162">a #ClutterEventType</doc>
          <type name="EventType" c:type="ClutterEventType"/>
        </return-value>
        <parameters>
          <instance-parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="158">a #ClutterEvent</doc>
            <type name="Event" c:type="const ClutterEvent*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="add_filter"
                c:identifier="clutter_event_add_filter"
                version="1.18">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1954">Adds a function which will be called for all events that Clutter
processes. The function will be called before any signals are
emitted for the event and it will take precedence over any grabs.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="624"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1965">an identifier for the event filter, to be used
  with clutter_event_remove_filter().</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="stage"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1956">The #ClutterStage to capture events for</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="3"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1957">The callback function which will be passed all events.</doc>
            <type name="EventFilterFunc" c:type="ClutterEventFilterFunc"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1958">A #GDestroyNotify</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1959">A data pointer to pass to the function.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="get" c:identifier="clutter_event_get" version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1500">Pops an event off the event queue. Applications should not need to call
this.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="617"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1506">A #ClutterEvent or NULL if queue empty</doc>
          <type name="Event" c:type="ClutterEvent*"/>
        </return-value>
      </function>
      <function name="peek" c:identifier="clutter_event_peek" version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1524">Returns a pointer to the first event from the event queue but
does not remove it.</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="619"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1530">A #ClutterEvent or NULL if queue empty.</doc>
          <type name="Event" c:type="ClutterEvent*"/>
        </return-value>
      </function>
      <function name="remove_filter"
                c:identifier="clutter_event_remove_filter"
                version="1.18">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1993">Removes an event filter that was previously added with
clutter_event_add_filter().</doc>
        <source-position filename="../clutter/clutter/clutter-event.h"
                         line="629"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-event.c"
                 line="1995">The ID of the event filter, as returned from clutter_event_add_filter()</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
    </union>
    <callback name="EventFilterFunc"
              c:type="ClutterEventFilterFunc"
              version="1.18">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="590">A function pointer type used by event filters that are added with
clutter_event_add_filter().</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="605"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="598">%CLUTTER_EVENT_STOP to indicate that the event
  has been handled or %CLUTTER_EVENT_PROPAGATE otherwise.
  Returning %CLUTTER_EVENT_STOP skips any further filter
  functions and prevents the signal emission for the event.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.h"
               line="592">the event that is going to be emitted</doc>
          <type name="Event" c:type="const ClutterEvent*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.h"
               line="593">the data pointer passed to clutter_event_add_filter()</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="EventFlags"
              version="0.6"
              glib:type-name="ClutterEventFlags"
              glib:get-type="clutter_event_flags_get_type"
              c:type="ClutterEventFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="854">Flags for the #ClutterEvent</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_EVENT_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="856">No flag set</doc>
      </member>
      <member name="flag_synthetic"
              value="1"
              c:identifier="CLUTTER_EVENT_FLAG_SYNTHETIC"
              glib:nick="flag-synthetic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="857">Synthetic event</doc>
      </member>
      <member name="flag_input_method"
              value="2"
              c:identifier="CLUTTER_EVENT_FLAG_INPUT_METHOD"
              glib:nick="flag-input-method">
      </member>
      <member name="flag_repeated"
              value="4"
              c:identifier="CLUTTER_EVENT_FLAG_REPEATED"
              glib:nick="flag-repeated">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="858">Auto-repeated event</doc>
      </member>
    </bitfield>
    <record name="EventSequence"
            c:type="ClutterEventSequence"
            version="1.12"
            glib:type-name="ClutterEventSequence"
            glib:get-type="clutter_event_sequence_get_type"
            c:symbol-prefix="event_sequence">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="97">The #ClutterEventSequence structure is an opaque
type used to denote the event sequence of a touch event.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="105"/>
    </record>
    <enumeration name="EventType"
                 version="0.4"
                 glib:type-name="ClutterEventType"
                 glib:get-type="clutter_event_type_get_type"
                 c:type="ClutterEventType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="872">Types of events.</doc>
      <member name="nothing"
              value="0"
              c:identifier="CLUTTER_NOTHING"
              glib:nick="nothing">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="874">Empty event</doc>
      </member>
      <member name="key_press"
              value="1"
              c:identifier="CLUTTER_KEY_PRESS"
              glib:nick="key-press">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="875">Key press event</doc>
      </member>
      <member name="key_release"
              value="2"
              c:identifier="CLUTTER_KEY_RELEASE"
              glib:nick="key-release">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="876">Key release event</doc>
      </member>
      <member name="motion"
              value="3"
              c:identifier="CLUTTER_MOTION"
              glib:nick="motion">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="877">Pointer motion event</doc>
      </member>
      <member name="enter"
              value="4"
              c:identifier="CLUTTER_ENTER"
              glib:nick="enter">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="878">Actor enter event</doc>
      </member>
      <member name="leave"
              value="5"
              c:identifier="CLUTTER_LEAVE"
              glib:nick="leave">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="879">Actor leave event</doc>
      </member>
      <member name="button_press"
              value="6"
              c:identifier="CLUTTER_BUTTON_PRESS"
              glib:nick="button-press">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="880">Pointer button press event</doc>
      </member>
      <member name="button_release"
              value="7"
              c:identifier="CLUTTER_BUTTON_RELEASE"
              glib:nick="button-release">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="881">Pointer button release event</doc>
      </member>
      <member name="scroll"
              value="8"
              c:identifier="CLUTTER_SCROLL"
              glib:nick="scroll">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="882">Pointer scroll event</doc>
      </member>
      <member name="stage_state"
              value="9"
              c:identifier="CLUTTER_STAGE_STATE"
              glib:nick="stage-state">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="883">Stage state change event</doc>
      </member>
      <member name="destroy_notify"
              value="10"
              c:identifier="CLUTTER_DESTROY_NOTIFY"
              glib:nick="destroy-notify">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="884">Destroy notification event</doc>
      </member>
      <member name="client_message"
              value="11"
              c:identifier="CLUTTER_CLIENT_MESSAGE"
              glib:nick="client-message">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="885">Client message event</doc>
      </member>
      <member name="delete"
              value="12"
              c:identifier="CLUTTER_DELETE"
              glib:nick="delete">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="886">Stage delete event</doc>
      </member>
      <member name="touch_begin"
              value="13"
              c:identifier="CLUTTER_TOUCH_BEGIN"
              glib:nick="touch-begin">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="887">A new touch event sequence has started;
  event added in 1.10</doc>
      </member>
      <member name="touch_update"
              value="14"
              c:identifier="CLUTTER_TOUCH_UPDATE"
              glib:nick="touch-update">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="889">A touch event sequence has been updated;
  event added in 1.10</doc>
      </member>
      <member name="touch_end"
              value="15"
              c:identifier="CLUTTER_TOUCH_END"
              glib:nick="touch-end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="891">A touch event sequence has finished;
  event added in 1.10</doc>
      </member>
      <member name="touch_cancel"
              value="16"
              c:identifier="CLUTTER_TOUCH_CANCEL"
              glib:nick="touch-cancel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="893">A touch event sequence has been canceled;
  event added in 1.10</doc>
      </member>
      <member name="touchpad_pinch"
              value="17"
              c:identifier="CLUTTER_TOUCHPAD_PINCH"
              glib:nick="touchpad-pinch">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="895">A pinch gesture event, the current state is
  determined by its phase field; event added in 1.24</doc>
      </member>
      <member name="touchpad_swipe"
              value="18"
              c:identifier="CLUTTER_TOUCHPAD_SWIPE"
              glib:nick="touchpad-swipe">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="897">A swipe gesture event, the current state is
  determined by its phase field; event added in 1.24</doc>
      </member>
      <member name="proximity_in"
              value="19"
              c:identifier="CLUTTER_PROXIMITY_IN"
              glib:nick="proximity-in">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="899">A tool entered in proximity to a tablet;
  event added in 1.28</doc>
      </member>
      <member name="proximity_out"
              value="20"
              c:identifier="CLUTTER_PROXIMITY_OUT"
              glib:nick="proximity-out">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="901">A tool left from the proximity area of a tablet;
  event added in 1.28</doc>
      </member>
      <member name="pad_button_press"
              value="21"
              c:identifier="CLUTTER_PAD_BUTTON_PRESS"
              glib:nick="pad-button-press">
      </member>
      <member name="pad_button_release"
              value="22"
              c:identifier="CLUTTER_PAD_BUTTON_RELEASE"
              glib:nick="pad-button-release">
      </member>
      <member name="pad_strip"
              value="23"
              c:identifier="CLUTTER_PAD_STRIP"
              glib:nick="pad-strip">
      </member>
      <member name="pad_ring"
              value="24"
              c:identifier="CLUTTER_PAD_RING"
              glib:nick="pad-ring">
      </member>
      <member name="im_commit"
              value="25"
              c:identifier="CLUTTER_IM_COMMIT"
              glib:nick="im-commit">
      </member>
      <member name="im_delete"
              value="26"
              c:identifier="CLUTTER_IM_DELETE"
              glib:nick="im-delete">
      </member>
      <member name="im_preedit"
              value="27"
              c:identifier="CLUTTER_IM_PREEDIT"
              glib:nick="im-preedit">
      </member>
      <member name="event_last"
              value="28"
              c:identifier="CLUTTER_EVENT_LAST"
              glib:nick="event-last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="903">Marks the end of the #ClutterEventType enumeration;
  added in 1.10</doc>
      </member>
    </enumeration>
    <function-macro name="FIXED_LAYOUT"
                    c:identifier="CLUTTER_FIXED_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FIXED_LAYOUT_CLASS"
                    c:identifier="CLUTTER_FIXED_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FIXED_LAYOUT_GET_CLASS"
                    c:identifier="CLUTTER_FIXED_LAYOUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="FLAVOUR"
              value="deprecated"
              c:type="CLUTTER_FLAVOUR"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-macros.h"
           line="29">GL Windowing system used</doc>
      <doc-deprecated xml:space="preserve">The macro evaluates to "deprecated" as Clutter can be
  compiled with multiple windowing system backends. Use the various
  CLUTTER_WINDOWING_* macros to detect the windowing system that Clutter
  is being compiled against, and the type check macros for the
  #ClutterBackend for a run-time check.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="42"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="FLOW_LAYOUT"
                    c:identifier="CLUTTER_FLOW_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FLOW_LAYOUT_CLASS"
                    c:identifier="CLUTTER_FLOW_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FLOW_LAYOUT_GET_CLASS"
                    c:identifier="CLUTTER_FLOW_LAYOUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="FeatureFlags"
              version="0.4"
              glib:type-name="ClutterFeatureFlags"
              glib:get-type="clutter_feature_flags_get_type"
              c:type="ClutterFeatureFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="981">Runtime flags indicating specific features available via Clutter window
system and graphics backend.</doc>
      <member name="swap_throttle"
              value="8"
              c:identifier="CLUTTER_FEATURE_SWAP_THROTTLE"
              glib:nick="swap-throttle">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="983">Set if backend throttles buffer swaps.</doc>
      </member>
      <member name="stage_static"
              value="64"
              c:identifier="CLUTTER_FEATURE_STAGE_STATIC"
              glib:nick="stage-static">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="984">Set if stage size if fixed (i.e framebuffer)</doc>
      </member>
      <member name="stage_cursor"
              value="256"
              c:identifier="CLUTTER_FEATURE_STAGE_CURSOR"
              glib:nick="stage-cursor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="985">Set if stage has a graphical cursor.</doc>
      </member>
      <member name="shaders_glsl"
              value="512"
              c:identifier="CLUTTER_FEATURE_SHADERS_GLSL"
              glib:nick="shaders-glsl">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="986">Set if the backend supports GLSL shaders.</doc>
      </member>
      <member name="offscreen"
              value="1024"
              c:identifier="CLUTTER_FEATURE_OFFSCREEN"
              glib:nick="offscreen">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="987">Set if the backend supports offscreen rendering.</doc>
      </member>
      <member name="stage_multiple"
              value="2048"
              c:identifier="CLUTTER_FEATURE_STAGE_MULTIPLE"
              glib:nick="stage-multiple">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="988">Set if multiple stages are supported.</doc>
      </member>
      <member name="swap_events"
              value="4096"
              c:identifier="CLUTTER_FEATURE_SWAP_EVENTS"
              glib:nick="swap-events">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="989">Set if the GLX_INTEL_swap_event is supported.</doc>
      </member>
    </bitfield>
    <class name="FixedLayout"
           c:symbol-prefix="fixed_layout"
           c:type="ClutterFixedLayout"
           version="1.2"
           parent="LayoutManager"
           glib:type-name="ClutterFixedLayout"
           glib:get-type="clutter_fixed_layout_get_type"
           glib:type-struct="FixedLayoutClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-fixed-layout.h"
           line="46">The #ClutterFixedLayout structure contains only private data and
it should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="72"/>
      <constructor name="new"
                   c:identifier="clutter_fixed_layout_new"
                   version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-fixed-layout.c"
             line="165">Creates a new #ClutterFixedLayout</doc>
        <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-fixed-layout.c"
               line="170">the newly created #ClutterFixedLayout</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="LayoutManager" c:type="ClutterLayoutManager"/>
      </field>
    </class>
    <record name="FixedLayoutClass"
            c:type="ClutterFixedLayoutClass"
            glib:is-gtype-struct-for="FixedLayout"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-fixed-layout.h"
           line="60">The #ClutterFixedLayoutClass structure contains only private data
and it should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="72"/>
      <field name="parent_class" readable="0" private="1">
        <type name="LayoutManagerClass" c:type="ClutterLayoutManagerClass"/>
      </field>
    </record>
    <class name="FlowLayout"
           c:symbol-prefix="flow_layout"
           c:type="ClutterFlowLayout"
           version="1.2"
           parent="LayoutManager"
           glib:type-name="ClutterFlowLayout"
           glib:get-type="clutter_flow_layout_get_type"
           glib:type-struct="FlowLayoutClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-flow-layout.h"
           line="47">The #ClutterFlowLayout structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="75"/>
      <constructor name="new"
                   c:identifier="clutter_flow_layout_new"
                   version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1085">Creates a new #ClutterFlowLayout with the given @orientation</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1091">the newly created #ClutterFlowLayout</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
        <parameters>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1087">the orientation of the flow layout</doc>
            <type name="FlowOrientation" c:type="ClutterFlowOrientation"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_column_spacing"
              c:identifier="clutter_flow_layout_get_column_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1258">Retrieves the spacing between columns</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1264">the spacing between columns of the #ClutterFlowLayout,
  in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1260">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_width"
              c:identifier="clutter_flow_layout_get_column_width"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1385">Retrieves the minimum and maximum column widths</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1387">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="min_width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1388">return location for the minimum column width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="max_width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1389">return location for the maximum column width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="clutter_flow_layout_get_homogeneous"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1207">Retrieves whether the @layout is homogeneous</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1213">%TRUE if the #ClutterFlowLayout is homogeneous</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1209">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_orientation"
              c:identifier="clutter_flow_layout_get_orientation"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1154">Retrieves the orientation of the @layout</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1160">the orientation of the #ClutterFlowLayout</doc>
          <type name="FlowOrientation" c:type="ClutterFlowOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1156">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_height"
              c:identifier="clutter_flow_layout_get_row_height"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1465">Retrieves the minimum and maximum row heights</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1467">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="min_height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1468">return location for the minimum row height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="max_height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1469">return location for the maximum row height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_row_spacing"
              c:identifier="clutter_flow_layout_get_row_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1310">Retrieves the spacing between rows</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1316">the spacing between rows of the #ClutterFlowLayout,
  in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1312">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap_to_grid"
              c:identifier="clutter_flow_layout_get_snap_to_grid"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1519">Retrieves the value of #ClutterFlowLayout:snap-to-grid property</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-flow-layout.c"
               line="1525">%TRUE if the @layout is placing its children on a grid</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1521">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_column_spacing"
              c:identifier="clutter_flow_layout_set_column_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1225">Sets the space between columns, in pixels</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1227">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1228">the space between columns</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_width"
              c:identifier="clutter_flow_layout_set_column_width"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1329">Sets the minimum and maximum widths that a column can have</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1331">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="min_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1332">minimum width of a column</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="max_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1333">maximum width of a column</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="clutter_flow_layout_set_homogeneous"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1173">Sets whether the @layout should allocate the same space for
each child</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1175">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1176">whether the layout should be homogeneous or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_orientation"
              c:identifier="clutter_flow_layout_set_orientation"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1103">Sets the orientation of the flow layout

The orientation controls the direction used to allocate
the children: either horizontally or vertically. The
orientation also controls the direction of the overflowing</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1105">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1106">the orientation of the layout</doc>
            <type name="FlowOrientation" c:type="ClutterFlowOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_height"
              c:identifier="clutter_flow_layout_set_row_height"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1409">Sets the minimum and maximum heights that a row can have</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1411">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="min_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1412">the minimum height of a row</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="max_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1413">the maximum height of a row</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_spacing"
              c:identifier="clutter_flow_layout_set_row_spacing"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1277">Sets the spacing between rows, in pixels</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1279">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1280">the space between rows</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_snap_to_grid"
              c:identifier="clutter_flow_layout_set_snap_to_grid"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1489">Whether the @layout should place its children on a grid.</doc>
        <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1491">a #ClutterFlowLayout</doc>
            <type name="FlowLayout" c:type="ClutterFlowLayout*"/>
          </instance-parameter>
          <parameter name="snap_to_grid" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-flow-layout.c"
                 line="1492">%TRUE if @layout should place its children on a grid</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="column-spacing"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="946">The spacing between columns, in pixels; the value of this
property is honoured by horizontal non-overflowing layouts
and by vertical overflowing layouts</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="homogeneous"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="931">Whether each child inside the #ClutterFlowLayout should receive
the same allocation</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="max-column-width"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="995">Maximum width for each column in the layout, in pixels. If
set to -1 the width will be the maximum child width</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="max-row-height"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1026">Maximum height for each row in the layout, in pixels. If
set to -1 the width will be the maximum child height</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="min-column-width"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="980">Minimum width for each column in the layout, in pixels</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="min-row-height"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1011">Minimum height for each row in the layout, in pixels</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="orientation"
                version="1.2"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="913">The orientation of the #ClutterFlowLayout. The children
of the layout will be layed out following the orientation.

This property also controls the overflowing directions</doc>
        <type name="FlowOrientation"/>
      </property>
      <property name="row-spacing"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="963">The spacing between rows, in pixels; the value of this
property is honoured by vertical non-overflowing layouts and
by horizontal overflowing layouts</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="snap-to-grid"
                version="1.16"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-flow-layout.c"
             line="1042">Whether the #ClutterFlowLayout should arrange its children
on a grid</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="LayoutManager" c:type="ClutterLayoutManager"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="FlowLayoutPrivate" c:type="ClutterFlowLayoutPrivate*"/>
      </field>
    </class>
    <record name="FlowLayoutClass"
            c:type="ClutterFlowLayoutClass"
            glib:is-gtype-struct-for="FlowLayout"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-flow-layout.h"
           line="63">The #ClutterFlowLayoutClass structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="75"/>
      <field name="parent_class" readable="0" private="1">
        <type name="LayoutManagerClass" c:type="ClutterLayoutManagerClass"/>
      </field>
    </record>
    <record name="FlowLayoutPrivate"
            c:type="ClutterFlowLayoutPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="44"/>
    </record>
    <enumeration name="FlowOrientation"
                 version="1.2"
                 glib:type-name="ClutterFlowOrientation"
                 glib:get-type="clutter_flow_orientation_get_type"
                 c:type="ClutterFlowOrientation">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1007">The direction of the arrangement of the children inside
a #ClutterFlowLayout</doc>
      <member name="horizontal"
              value="0"
              c:identifier="CLUTTER_FLOW_HORIZONTAL"
              glib:nick="horizontal">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1009">Arrange the children of the flow layout
  horizontally first</doc>
      </member>
      <member name="vertical"
              value="1"
              c:identifier="CLUTTER_FLOW_VERTICAL"
              glib:nick="vertical">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1011">Arrange the children of the flow layout
  vertically first</doc>
      </member>
    </enumeration>
    <record name="FrameInfo" c:type="ClutterFrameInfo" introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="127"/>
      <field name="frame_counter" writable="1">
        <type name="gint64" c:type="int64_t"/>
      </field>
      <field name="presentation_time" writable="1">
        <type name="gint64" c:type="int64_t"/>
      </field>
      <field name="refresh_rate" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
    </record>
    <function-macro name="GESTURE_ACTION"
                    c:identifier="CLUTTER_GESTURE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GESTURE_ACTION_CLASS"
                    c:identifier="CLUTTER_GESTURE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GESTURE_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_GESTURE_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRID_LAYOUT"
                    c:identifier="CLUTTER_GRID_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRID_LAYOUT_CLASS"
                    c:identifier="CLUTTER_GRID_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GRID_LAYOUT_GET_CLASS"
                    c:identifier="CLUTTER_GRID_LAYOUT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GROUP"
                    c:identifier="CLUTTER_GROUP"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GROUP_CLASS"
                    c:identifier="CLUTTER_GROUP_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="GROUP_GET_CLASS"
                    c:identifier="CLUTTER_GROUP_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="GestureAction"
           c:symbol-prefix="gesture_action"
           c:type="ClutterGestureAction"
           version="1.8"
           parent="Action"
           glib:type-name="ClutterGestureAction"
           glib:get-type="clutter_gesture_action_get_type"
           glib:type-struct="GestureActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-gesture-action.h"
           line="48">The #ClutterGestureAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="102"/>
      <constructor name="new"
                   c:identifier="clutter_gesture_action_new"
                   version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="839">Creates a new #ClutterGestureAction instance.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="844">the newly created #ClutterGestureAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="gesture_begin">
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gesture_cancel">
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gesture_end">
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gesture_prepare">
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="gesture_progress">
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="cancel"
              c:identifier="clutter_gesture_action_cancel"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1211">Cancel a #ClutterGestureAction before it begins</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1213">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device"
              c:identifier="clutter_gesture_action_get_device"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1163">Retrieves the #ClutterInputDevice of a touch point.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1171">the #ClutterInputDevice of a touch point.</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1165">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1166">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_last_event"
              c:identifier="clutter_gesture_action_get_last_event"
              version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1185">Retrieves a reference to the last #ClutterEvent for a touch point. Call
clutter_event_copy() if you need to store the reference somewhere.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1193">the last #ClutterEvent for a touch point.</doc>
          <type name="Event" c:type="const ClutterEvent*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1187">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1188">index of a point currently active</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_coords"
              c:identifier="clutter_gesture_action_get_motion_coords"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="889">Retrieves the coordinates, in stage space, of the latest motion
event during the dragging.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="891">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="892">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="motion_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="894">return location for the latest motion
  event's X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="motion_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="896">return location for the latest motion
  event's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_delta"
              c:identifier="clutter_gesture_action_get_motion_delta"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="924">Retrieves the incremental delta since the last motion event
during the dragging.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="937">the distance since last motion event</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="926">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="927">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="delta_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="929">return location for the X axis
  component of the incremental motion delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="delta_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="931">return location for the Y axis
  component of the incremental motion delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_current_points"
              c:identifier="clutter_gesture_action_get_n_current_points"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1124">Retrieves the number of points currently active.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1130">the number of points currently active.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1126">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_touch_points"
              c:identifier="clutter_gesture_action_get_n_touch_points"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1047">Retrieves the number of requested points to trigger the gesture.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1053">the number of points to trigger the gesture.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1049">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_press_coords"
              c:identifier="clutter_gesture_action_get_press_coords"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="854">Retrieves the coordinates, in stage space, of the press event
that started the dragging for a specific touch point.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="856">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="857">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="press_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="859">return location for the press
  event's X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="press_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="861">return location for the press
  event's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_release_coords"
              c:identifier="clutter_gesture_action_get_release_coords"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="968">Retrieves the coordinates, in stage space, where the touch point was
last released.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="970">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="971">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="release_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="973">return location for the X coordinate of
  the last release</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="release_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="975">return location for the Y coordinate of
  the last release</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sequence"
              c:identifier="clutter_gesture_action_get_sequence"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1142">Retrieves the #ClutterEventSequence of a touch point.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1149">the #ClutterEventSequence of a touch point.</doc>
          <type name="EventSequence" c:type="ClutterEventSequence*"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1144">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1145">index of a point currently active</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_threshold_trigger_distance"
              c:identifier="clutter_gesture_action_get_threshold_trigger_distance"
              version="1.18">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1325">Retrieves the threshold trigger distance of the gesture @action,
as set using clutter_gesture_action_set_threshold_trigger_distance().</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1327">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1328">The return location for the horizontal distance, or %NULL</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1329">The return location for the vertical distance, or %NULL</doc>
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_threshold_trigger_edge"
              c:identifier="clutter_gesture_action_get_threshold_trigger_edge"
              version="1.20">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1253">Retrieves the edge trigger of the gesture @action, as set using
clutter_gesture_action_set_threshold_trigger_edge().</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1260">the edge trigger</doc>
          <type name="GestureTriggerEdge" c:type="ClutterGestureTriggerEdge"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1255">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_threshold_trigger_egde"
              c:identifier="clutter_gesture_action_get_threshold_trigger_egde"
              version="1.18"
              deprecated="1"
              deprecated-version="1.20">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1273">Retrieves the edge trigger of the gesture @action, as set using
clutter_gesture_action_set_threshold_trigger_edge().</doc>
        <doc-deprecated xml:space="preserve">Use clutter_gesture_action_get_threshold_trigger_edge() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="1280">the edge trigger</doc>
          <type name="GestureTriggerEdge" c:type="ClutterGestureTriggerEdge"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1275">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_velocity"
              c:identifier="clutter_gesture_action_get_velocity"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1003">Retrieves the velocity, in stage pixels per millisecond, of the
latest motion event during the dragging.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1005">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1006">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="velocity_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1008">return location for the latest motion
  event's X velocity</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="velocity_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1010">return location for the latest motion
  event's Y velocity</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_n_touch_points"
              c:identifier="clutter_gesture_action_set_n_touch_points"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1065">Sets the number of points needed to trigger the gesture.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1067">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="nb_points" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1068">a number of points</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_threshold_trigger_distance"
              c:identifier="clutter_gesture_action_set_threshold_trigger_distance"
              version="1.18">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1292">Sets the threshold trigger distance for the gesture drag threshold, if any.

This function should only be called by sub-classes of
#ClutterGestureAction during their construction phase.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1294">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1295">the distance on the horizontal axis</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1296">the distance on the vertical axis</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_threshold_trigger_edge"
              c:identifier="clutter_gesture_action_set_threshold_trigger_edge"
              version="1.18">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="1227">Sets the edge trigger for the gesture drag threshold, if any.

This function should only be called by sub-classes of
#ClutterGestureAction during their construction phase.</doc>
        <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1229">a #ClutterGestureAction</doc>
            <type name="GestureAction" c:type="ClutterGestureAction*"/>
          </instance-parameter>
          <parameter name="edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="1230">the %ClutterGestureTriggerEdge</doc>
            <type name="GestureTriggerEdge"
                  c:type="ClutterGestureTriggerEdge"/>
          </parameter>
        </parameters>
      </method>
      <property name="n-touch-points"
                version="1.16"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="662">Number of touch points to trigger a gesture action.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="threshold-trigger-distance-x"
                version="1.18"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="694">The horizontal trigger distance to be used by the action to either
emit the #ClutterGestureAction::gesture-begin signal or to emit
the #ClutterGestureAction::gesture-cancel signal.

A negative value will be interpreted as the default drag threshold.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="threshold-trigger-distance-y"
                version="1.18"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="713">The vertical trigger distance to be used by the action to either
emit the #ClutterGestureAction::gesture-begin signal or to emit
the #ClutterGestureAction::gesture-cancel signal.

A negative value will be interpreted as the default drag threshold.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="threshold-trigger-edge"
                version="1.18"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="676">The trigger edge to be used by the action to either emit the
#ClutterGestureAction::gesture-begin signal or to emit the
#ClutterGestureAction::gesture-cancel signal.</doc>
        <type name="GestureTriggerEdge"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Action" c:type="ClutterAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GestureActionPrivate"
              c:type="ClutterGestureActionPrivate*"/>
      </field>
      <glib:signal name="gesture-begin" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="736">The ::gesture_begin signal is emitted when the #ClutterActor to which
a #ClutterGestureAction has been applied starts receiving a gesture.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="744">%TRUE if the gesture should start, and %FALSE if
  the gesture should be ignored.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="739">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="gesture-cancel" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="804">The ::gesture-cancel signal is emitted when the ongoing gesture gets
cancelled from the #ClutterGestureAction::gesture-progress signal handler.

This signal is emitted if and only if the #ClutterGestureAction::gesture-begin
signal has been emitted first.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="807">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="gesture-end" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="782">The ::gesture-end signal is emitted at the end of the gesture gesture,
when the pointer's button is released

This signal is emitted if and only if the #ClutterGestureAction::gesture-begin
signal has been emitted first.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="785">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="gesture-progress" when="last" version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-gesture-action.c"
             line="759">The ::gesture-progress signal is emitted for each motion event after
the #ClutterGestureAction::gesture-begin signal has been emitted.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-gesture-action.c"
               line="767">%TRUE if the gesture should continue, and %FALSE if
  the gesture should be cancelled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-gesture-action.c"
                 line="762">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="GestureActionClass"
            c:type="ClutterGestureActionClass"
            glib:is-gtype-struct-for="GestureAction"
            version="1.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-gesture-action.h"
           line="64">The #ClutterGestureClass structure contains only
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="102"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActionClass" c:type="ClutterActionClass"/>
      </field>
      <field name="gesture_begin">
        <callback name="gesture_begin">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="GestureAction" c:type="ClutterGestureAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gesture_progress">
        <callback name="gesture_progress">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="GestureAction" c:type="ClutterGestureAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gesture_end">
        <callback name="gesture_end">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="GestureAction" c:type="ClutterGestureAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gesture_cancel">
        <callback name="gesture_cancel">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="GestureAction" c:type="ClutterGestureAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="gesture_prepare">
        <callback name="gesture_prepare">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="GestureAction" c:type="ClutterGestureAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_gesture_action1" introspectable="0">
        <callback name="_clutter_gesture_action1">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_gesture_action2" introspectable="0">
        <callback name="_clutter_gesture_action2">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_gesture_action3" introspectable="0">
        <callback name="_clutter_gesture_action3">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_gesture_action4" introspectable="0">
        <callback name="_clutter_gesture_action4">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_gesture_action5" introspectable="0">
        <callback name="_clutter_gesture_action5">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_gesture_action6" introspectable="0">
        <callback name="_clutter_gesture_action6">
          <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GestureActionPrivate"
            c:type="ClutterGestureActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="45"/>
    </record>
    <enumeration name="GestureTriggerEdge"
                 version="1.18"
                 glib:type-name="ClutterGestureTriggerEdge"
                 glib:get-type="clutter_gesture_trigger_edge_get_type"
                 c:type="ClutterGestureTriggerEdge">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1533">Enum passed to the clutter_gesture_action_set_threshold_trigger_edge()
function.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_GESTURE_TRIGGER_EDGE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1535">Tell #ClutterGestureAction that
the gesture must begin immediately and there's no drag limit that
will cause its cancellation;</doc>
      </member>
      <member name="after"
              value="1"
              c:identifier="CLUTTER_GESTURE_TRIGGER_EDGE_AFTER"
              glib:nick="after">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1538">Tell #ClutterGestureAction that
it needs to wait until the drag threshold has been exceeded before
considering that the gesture has begun;</doc>
      </member>
      <member name="before"
              value="2"
              c:identifier="CLUTTER_GESTURE_TRIGGER_EDGE_BEFORE"
              glib:nick="before">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1541">Tell #ClutterGestureAction that
the gesture must begin immediately and that it must be cancelled
once the drag exceed the configured threshold.</doc>
      </member>
    </enumeration>
    <enumeration name="Gravity"
                 version="0.2"
                 deprecated="1"
                 deprecated-version="1.22"
                 glib:type-name="ClutterGravity"
                 glib:get-type="clutter_gravity_get_type"
                 c:type="ClutterGravity">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="33">Gravity of the scaling operations. When a gravity different than
%CLUTTER_GRAVITY_NONE is used, an actor is scaled keeping the position
of the specified portion at the same coordinates.</doc>
      <doc-deprecated xml:space="preserve">Use the normalized #ClutterActor pivot point instead</doc-deprecated>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_GRAVITY_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="35">Do not apply any gravity</doc>
      </member>
      <member name="north"
              value="1"
              c:identifier="CLUTTER_GRAVITY_NORTH"
              glib:nick="north">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="36">Scale from topmost downwards</doc>
      </member>
      <member name="north_east"
              value="2"
              c:identifier="CLUTTER_GRAVITY_NORTH_EAST"
              glib:nick="north-east">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="37">Scale from the top right corner</doc>
      </member>
      <member name="east"
              value="3"
              c:identifier="CLUTTER_GRAVITY_EAST"
              glib:nick="east">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="38">Scale from the right side</doc>
      </member>
      <member name="south_east"
              value="4"
              c:identifier="CLUTTER_GRAVITY_SOUTH_EAST"
              glib:nick="south-east">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="39">Scale from the bottom right corner</doc>
      </member>
      <member name="south"
              value="5"
              c:identifier="CLUTTER_GRAVITY_SOUTH"
              glib:nick="south">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="40">Scale from the bottom upwards</doc>
      </member>
      <member name="south_west"
              value="6"
              c:identifier="CLUTTER_GRAVITY_SOUTH_WEST"
              glib:nick="south-west">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="41">Scale from the bottom left corner</doc>
      </member>
      <member name="west"
              value="7"
              c:identifier="CLUTTER_GRAVITY_WEST"
              glib:nick="west">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="42">Scale from the left side</doc>
      </member>
      <member name="north_west"
              value="8"
              c:identifier="CLUTTER_GRAVITY_NORTH_WEST"
              glib:nick="north-west">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="43">Scale from the top left corner</doc>
      </member>
      <member name="center"
              value="9"
              c:identifier="CLUTTER_GRAVITY_CENTER"
              glib:nick="center">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="44">Scale from the center.</doc>
      </member>
    </enumeration>
    <class name="GridLayout"
           c:symbol-prefix="grid_layout"
           c:type="ClutterGridLayout"
           version="1.12"
           parent="LayoutManager"
           glib:type-name="ClutterGridLayout"
           glib:get-type="clutter_grid_layout_get_type"
           glib:type-struct="GridLayoutClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-grid-layout.h"
           line="51">The #ClutterGridLayout structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="81"/>
      <constructor name="new" c:identifier="clutter_grid_layout_new">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1646">Creates a new #ClutterGridLayout</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="1651">the new #ClutterGridLayout</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
      </constructor>
      <method name="attach"
              c:identifier="clutter_grid_layout_attach"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1659">Adds a widget to the grid.

The position of @child is determined by @left and @top. The
number of 'cells' that @child will occupy is determined by
@width and @height.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1661">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1662">the #ClutterActor to add</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1663">the column number to attach the left side of @child to</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="top" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1664">the row number to attach the top side of @child to</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1665">the number of columns that @child will span</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1666">the number of rows that @child will span</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="attach_next_to"
              c:identifier="clutter_grid_layout_attach_next_to"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1697">Adds a actor to the grid.

The actor is placed next to @sibling, on the side determined by
@side. When @sibling is %NULL, the actor is placed in row (for
left or right placement) or column 0 (for top or bottom placement),
at the end indicated by @side.

Attaching widgets labeled [1], [2], [3] with @sibling == %NULL and
@side == %CLUTTER_GRID_POSITION_LEFT yields a layout of [3][2][1].</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1699">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1700">the actor to add</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="sibling"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1701">the child of @layout that @child will be placed
    next to, or %NULL to place @child at the beginning or end</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="side" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1703">the side of @sibling that @child is positioned next to</doc>
            <type name="GridPosition" c:type="ClutterGridPosition"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1704">the number of columns that @child will span</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1705">the number of rows that @child will span</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_at"
              c:identifier="clutter_grid_layout_get_child_at"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1778">Gets the child of @layout whose area covers the grid
cell whose upper left corner is at @left, @top.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="1787">the child at the given position, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1780">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="left" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1781">the left edge of the cell</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="top" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1782">the top edge of the cell</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_column_homogeneous"
              c:identifier="clutter_grid_layout_get_column_homogeneous">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2135">Returns whether all columns of @layout have the same width.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="2141">whether all columns of @layout have the same width.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2137">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_column_spacing"
              c:identifier="clutter_grid_layout_get_column_spacing"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2084">Retrieves the spacing set using clutter_grid_layout_set_column_spacing()</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="2090">the spacing between coluns of @layout</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2086">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_orientation"
              c:identifier="clutter_grid_layout_get_orientation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1985">Retrieves the orientation of the @layout.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="1991">the orientation of the layout</doc>
          <type name="Orientation" c:type="ClutterOrientation"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1987">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_homogeneous"
              c:identifier="clutter_grid_layout_get_row_homogeneous"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2184">Returns whether all rows of @layout have the same height.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="2190">whether all rows of @layout have the same height.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2186">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_spacing"
              c:identifier="clutter_grid_layout_get_row_spacing"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2033">Retrieves the spacing set using clutter_grid_layout_set_row_spacing()</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-grid-layout.c"
               line="2039">the spacing between rows of @layout</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2035">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_column"
              c:identifier="clutter_grid_layout_insert_column"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1877">Inserts a column at the specified position.

Children which are attached at or to the right of this position
are moved one column to the right. Children which span across this
position are grown to span the new column.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1879">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1880">the position to insert the column at</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_next_to"
              c:identifier="clutter_grid_layout_insert_next_to"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1931">Inserts a row or column at the specified position.

The new row or column is placed next to @sibling, on the side
determined by @side. If @side is %CLUTTER_GRID_POSITION_LEFT or
%CLUTTER_GRID_POSITION_BOTTOM, a row is inserted. If @side is
%CLUTTER_GRID_POSITION_LEFT of %CLUTTER_GRID_POSITION_RIGHT,
a column is inserted.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1933">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="sibling" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1934">the child of @layout that the new row or column will be
    placed next to</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="side" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1936">the side of @sibling that @child is positioned next to</doc>
            <type name="GridPosition" c:type="ClutterGridPosition"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_row"
              c:identifier="clutter_grid_layout_insert_row"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1823">Inserts a row at the specified position.

Children which are attached at or below this position
are moved one row down. Children which span across this
position are grown to span the new row.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1825">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1826">the position to insert the row at</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_homogeneous"
              c:identifier="clutter_grid_layout_set_column_homogeneous"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2106">Sets whether all columns of @layout will have the same width.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2108">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2109">%TRUE to make columns homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_column_spacing"
              c:identifier="clutter_grid_layout_set_column_spacing"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2055">Sets the spacing between columns of @layout</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2057">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2058">the spacing between columns of the layout, in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_orientation"
              c:identifier="clutter_grid_layout_set_orientation"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1745">Sets the orientation of the @layout.

#ClutterGridLayout uses the orientation as a hint when adding
children to the #ClutterActor using it as a layout manager via
clutter_actor_add_child(); changing this value will not have
any effect on children that are already part of the layout.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1747">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="1748">the orientation of the #ClutterGridLayout</doc>
            <type name="Orientation" c:type="ClutterOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_homogeneous"
              c:identifier="clutter_grid_layout_set_row_homogeneous"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2155">Sets whether all rows of @layout will have the same height.</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2157">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2158">%TRUE to make rows homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_spacing"
              c:identifier="clutter_grid_layout_set_row_spacing"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="2004">Sets the spacing between rows of @layout</doc>
        <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="layout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2006">a #ClutterGridLayout</doc>
            <type name="GridLayout" c:type="ClutterGridLayout*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-grid-layout.c"
                 line="2007">the spacing between rows of the layout, in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="column-homogeneous"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1615">Whether all columns of the layout should have the same width</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="column-spacing"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1586">The amount of space in pixels between two consecutive columns</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="orientation"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1557">The orientation of the layout, either horizontal or vertical</doc>
        <type name="Orientation"/>
      </property>
      <property name="row-homogeneous"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1601">Whether all rows of the layout should have the same height</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="row-spacing"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-grid-layout.c"
             line="1572">The amount of space in pixels between two consecutive rows</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="LayoutManager" c:type="ClutterLayoutManager"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GridLayoutPrivate" c:type="ClutterGridLayoutPrivate*"/>
      </field>
    </class>
    <record name="GridLayoutClass"
            c:type="ClutterGridLayoutClass"
            glib:is-gtype-struct-for="GridLayout"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-grid-layout.h"
           line="67">The #ClutterGridLayoutClass structure contains only private
data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="81"/>
      <field name="parent_class" readable="0" private="1">
        <type name="LayoutManagerClass" c:type="ClutterLayoutManagerClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="GridLayoutPrivate"
            c:type="ClutterGridLayoutPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="48"/>
    </record>
    <enumeration name="GridPosition"
                 version="1.12"
                 glib:type-name="ClutterGridPosition"
                 glib:get-type="clutter_grid_position_get_type"
                 c:type="ClutterGridPosition">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1456">Grid position modes.</doc>
      <member name="left"
              value="0"
              c:identifier="CLUTTER_GRID_POSITION_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1458">left position</doc>
      </member>
      <member name="right"
              value="1"
              c:identifier="CLUTTER_GRID_POSITION_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1459">right position</doc>
      </member>
      <member name="top"
              value="2"
              c:identifier="CLUTTER_GRID_POSITION_TOP"
              glib:nick="top">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1460">top position</doc>
      </member>
      <member name="bottom"
              value="3"
              c:identifier="CLUTTER_GRID_POSITION_BOTTOM"
              glib:nick="bottom">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1461">bottom position</doc>
      </member>
    </enumeration>
    <class name="Group"
           c:symbol-prefix="group"
           c:type="ClutterGroup"
           version="0.2"
           parent="Actor"
           glib:type-name="ClutterGroup"
           glib:get-type="clutter_group_get_type"
           glib:type-struct="GroupClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-group.h"
           line="54">The #ClutterGroup structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="89"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_group_new"
                   deprecated="1"
                   deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-group.c"
             line="478">Create a new  #ClutterGroup.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_new() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-group.h"
                         line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-group.c"
               line="483">the newly created #ClutterGroup actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <method name="get_n_children"
              c:identifier="clutter_group_get_n_children"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-group.c"
             line="509">Gets the number of actors held in the group.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_n_children() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-group.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-group.c"
               line="515">The number of child actors held in the group.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-group.c"
                 line="511">A #ClutterGroup</doc>
            <type name="Group" c:type="ClutterGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nth_child"
              c:identifier="clutter_group_get_nth_child"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-group.c"
             line="529">Gets a groups child held at @index_ in stack.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_child_at_index() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-group.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-group.c"
               line="536">A Clutter actor, or %NULL if
  @index_ is invalid.</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-group.c"
                 line="531">A #ClutterGroup</doc>
            <type name="Group" c:type="ClutterGroup*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-group.c"
                 line="532">the position of the requested actor.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all"
              c:identifier="clutter_group_remove_all"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-group.c"
             line="493">Removes all children actors from the #ClutterGroup.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_remove_all_children() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-group.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-group.c"
                 line="495">A #ClutterGroup</doc>
            <type name="Group" c:type="ClutterGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="GroupPrivate" c:type="ClutterGroupPrivate*"/>
      </field>
    </class>
    <record name="GroupClass"
            c:type="ClutterGroupClass"
            glib:is-gtype-struct-for="Group"
            version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-group.h"
           line="70">The #ClutterGroupClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="89"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/clutter-group.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="GroupPrivate" c:type="ClutterGroupPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="52"/>
    </record>
    <constant name="HAS_WAYLAND_COMPOSITOR_SUPPORT"
              value="1"
              c:type="CLUTTER_HAS_WAYLAND_COMPOSITOR_SUPPORT">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="12"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="IMAGE"
                    c:identifier="CLUTTER_IMAGE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_CLASS"
                    c:identifier="CLUTTER_IMAGE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IMAGE_GET_CLASS"
                    c:identifier="CLUTTER_IMAGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="IMEvent" c:type="ClutterIMEvent">
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="559"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="text" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="offset" writable="1">
        <type name="gint32" c:type="int32_t"/>
      </field>
      <field name="len" writable="1">
        <type name="guint32" c:type="uint32_t"/>
      </field>
    </record>
    <function-macro name="INPUT_DEVICE"
                    c:identifier="CLUTTER_INPUT_DEVICE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="66"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_DEVICE_CLASS"
                    c:identifier="CLUTTER_INPUT_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="68"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_DEVICE_GET_CLASS"
                    c:identifier="CLUTTER_INPUT_DEVICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="70"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_DEVICE_TOOL"
                    c:identifier="CLUTTER_INPUT_DEVICE_TOOL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_DEVICE_TOOL_CLASS"
                    c:identifier="CLUTTER_INPUT_DEVICE_TOOL_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INPUT_DEVICE_TOOL_GET_CLASS"
                    c:identifier="CLUTTER_INPUT_DEVICE_TOOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="INPUT_EVDEV" value="evdev" c:type="CLUTTER_INPUT_EVDEV">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="17"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INPUT_NULL" value="null" c:type="CLUTTER_INPUT_NULL">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="18"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="INPUT_X11" value="x11" c:type="CLUTTER_INPUT_X11">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="14"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="INTERVAL"
                    c:identifier="CLUTTER_INTERVAL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERVAL_CLASS"
                    c:identifier="CLUTTER_INTERVAL_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="INTERVAL_GET_CLASS"
                    c:identifier="CLUTTER_INTERVAL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTION"
                    c:identifier="CLUTTER_IS_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-action.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTOR"
                    c:identifier="CLUTTER_IS_ACTOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTOR_CLASS"
                    c:identifier="CLUTTER_IS_ACTOR_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor.h"
                       line="51"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTOR_META"
                    c:identifier="CLUTTER_IS_ACTOR_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTOR_META_CLASS"
                    c:identifier="CLUTTER_IS_ACTOR_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-actor-meta.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ACTOR_NODE"
                    c:identifier="CLUTTER_IS_ACTOR_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="148"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ALIGN_CONSTRAINT"
                    c:identifier="CLUTTER_IS_ALIGN_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-align-constraint.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ALPHA"
                    c:identifier="CLUTTER_IS_ALPHA"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ALPHA_CLASS"
                    c:identifier="CLUTTER_IS_ALPHA_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-alpha.h"
                       line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANIMATION"
                    c:identifier="CLUTTER_IS_ANIMATION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ANIMATION_CLASS"
                    c:identifier="CLUTTER_IS_ANIMATION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-animation.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BACKEND"
                    c:identifier="CLUTTER_IS_BACKEND"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-backend.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BINDING_POOL"
                    c:identifier="CLUTTER_IS_BINDING_POOL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-binding-pool.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BIND_CONSTRAINT"
                    c:identifier="CLUTTER_IS_BIND_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bind-constraint.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BIN_LAYOUT"
                    c:identifier="CLUTTER_IS_BIN_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BIN_LAYOUT_CLASS"
                    c:identifier="CLUTTER_IS_BIN_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-bin-layout.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BLUR_EFFECT"
                    c:identifier="CLUTTER_IS_BLUR_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-blur-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOX"
                    c:identifier="CLUTTER_IS_BOX"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOX_CLASS"
                    c:identifier="CLUTTER_IS_BOX_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-box.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOX_LAYOUT"
                    c:identifier="CLUTTER_IS_BOX_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BOX_LAYOUT_CLASS"
                    c:identifier="CLUTTER_IS_BOX_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-box-layout.h"
                       line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_BRIGHTNESS_CONTRAST_EFFECT"
                    c:identifier="CLUTTER_IS_BRIGHTNESS_CONTRAST_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-brightness-contrast-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CANVAS"
                    c:identifier="CLUTTER_IS_CANVAS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CANVAS_CLASS"
                    c:identifier="CLUTTER_IS_CANVAS_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-canvas.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHILD_META"
                    c:identifier="CLUTTER_IS_CHILD_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CHILD_META_CLASS"
                    c:identifier="CLUTTER_IS_CHILD_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-child-meta.h"
                       line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLICK_ACTION"
                    c:identifier="CLUTTER_IS_CLICK_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLICK_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_CLICK_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-click-action.h"
                       line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIP_NODE"
                    c:identifier="CLUTTER_IS_CLIP_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="84"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLONE"
                    c:identifier="CLUTTER_IS_CLONE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLONE_CLASS"
                    c:identifier="CLUTTER_IS_CLONE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-clone.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLORIZE_EFFECT"
                    c:identifier="CLUTTER_IS_COLORIZE_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-colorize-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_COLOR_NODE"
                    c:identifier="CLUTTER_IS_COLOR_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CONSTRAINT"
                    c:identifier="CLUTTER_IS_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CONSTRAINT_CLASS"
                    c:identifier="CLUTTER_IS_CONSTRAINT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-constraint.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CONTAINER"
                    c:identifier="CLUTTER_IS_CONTAINER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEFORM_EFFECT"
                    c:identifier="CLUTTER_IS_DEFORM_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DEFORM_EFFECT_CLASS"
                    c:identifier="CLUTTER_IS_DEFORM_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-deform-effect.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DESATURATE_EFFECT"
                    c:identifier="CLUTTER_IS_DESATURATE_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-desaturate-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAG_ACTION"
                    c:identifier="CLUTTER_IS_DRAG_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DRAG_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_DRAG_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drag-action.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DROP_ACTION"
                    c:identifier="CLUTTER_IS_DROP_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_DROP_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_DROP_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-drop-action.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EFFECT"
                    c:identifier="CLUTTER_IS_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EFFECT_CLASS"
                    c:identifier="CLUTTER_IS_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-effect.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FIXED_LAYOUT"
                    c:identifier="CLUTTER_IS_FIXED_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FIXED_LAYOUT_CLASS"
                    c:identifier="CLUTTER_IS_FIXED_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-fixed-layout.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FLOW_LAYOUT"
                    c:identifier="CLUTTER_IS_FLOW_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FLOW_LAYOUT_CLASS"
                    c:identifier="CLUTTER_IS_FLOW_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-flow-layout.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GESTURE_ACTION"
                    c:identifier="CLUTTER_IS_GESTURE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GESTURE_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_GESTURE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-gesture-action.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRID_LAYOUT"
                    c:identifier="CLUTTER_IS_GRID_LAYOUT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GRID_LAYOUT_CLASS"
                    c:identifier="CLUTTER_IS_GRID_LAYOUT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-grid-layout.h"
                       line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GROUP"
                    c:identifier="CLUTTER_IS_GROUP"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_GROUP_CLASS"
                    c:identifier="CLUTTER_IS_GROUP_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-group.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_IMAGE"
                    c:identifier="CLUTTER_IS_IMAGE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_IMAGE_CLASS"
                    c:identifier="CLUTTER_IS_IMAGE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INPUT_DEVICE"
                    c:identifier="CLUTTER_IS_INPUT_DEVICE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="67"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INPUT_DEVICE_CLASS"
                    c:identifier="CLUTTER_IS_INPUT_DEVICE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="69"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INPUT_DEVICE_TOOL"
                    c:identifier="CLUTTER_IS_INPUT_DEVICE_TOOL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INPUT_DEVICE_TOOL_CLASS"
                    c:identifier="CLUTTER_IS_INPUT_DEVICE_TOOL_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERVAL"
                    c:identifier="CLUTTER_IS_INTERVAL"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_INTERVAL_CLASS"
                    c:identifier="CLUTTER_IS_INTERVAL_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_KEYFRAME_TRANSITION"
                    c:identifier="CLUTTER_IS_KEYFRAME_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_KEYFRAME_TRANSITION_CLASS"
                    c:identifier="CLUTTER_IS_KEYFRAME_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYER_NODE"
                    c:identifier="CLUTTER_IS_LAYER_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="188"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYOUT_MANAGER"
                    c:identifier="CLUTTER_IS_LAYOUT_MANAGER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYOUT_MANAGER_CLASS"
                    c:identifier="CLUTTER_IS_LAYOUT_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYOUT_META"
                    c:identifier="CLUTTER_IS_LAYOUT_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_LAYOUT_META_CLASS"
                    c:identifier="CLUTTER_IS_LAYOUT_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OFFSCREEN_EFFECT"
                    c:identifier="CLUTTER_IS_OFFSCREEN_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_OFFSCREEN_EFFECT_CLASS"
                    c:identifier="CLUTTER_IS_OFFSCREEN_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="41"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAGE_TURN_EFFECT"
                    c:identifier="CLUTTER_IS_PAGE_TURN_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAINT_NODE"
                    c:identifier="CLUTTER_IS_PAINT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAN_ACTION"
                    c:identifier="CLUTTER_IS_PAN_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="46"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PAN_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_PAN_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="48"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PARAM_SPEC_COLOR"
                    c:identifier="CLUTTER_IS_PARAM_SPEC_COLOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="148"/>
      <parameters>
        <parameter name="pspec">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PARAM_SPEC_UNITS"
                    c:identifier="CLUTTER_IS_PARAM_SPEC_UNITS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="125"/>
      <parameters>
        <parameter name="pspec">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATH"
                    c:identifier="CLUTTER_IS_PATH"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path.h" line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATH_CLASS"
                    c:identifier="CLUTTER_IS_PATH_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path.h" line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PATH_CONSTRAINT"
                    c:identifier="CLUTTER_IS_PATH_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PIPELINE_NODE"
                    c:identifier="CLUTTER_IS_PIPELINE_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="105"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROPERTY_TRANSITION"
                    c:identifier="CLUTTER_IS_PROPERTY_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PROPERTY_TRANSITION_CLASS"
                    c:identifier="CLUTTER_IS_PROPERTY_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECTANGLE"
                    c:identifier="CLUTTER_IS_RECTANGLE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_RECTANGLE_CLASS"
                    c:identifier="CLUTTER_IS_RECTANGLE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ROOT_NODE"
                    c:identifier="CLUTTER_IS_ROOT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="167"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ROTATE_ACTION"
                    c:identifier="CLUTTER_IS_ROTATE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ROTATE_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_ROTATE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCRIPT"
                    c:identifier="CLUTTER_IS_SCRIPT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCRIPTABLE"
                    c:identifier="CLUTTER_IS_SCRIPTABLE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scriptable.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCRIPT_CLASS"
                    c:identifier="CLUTTER_IS_SCRIPT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCROLL_ACTOR"
                    c:identifier="CLUTTER_IS_SCROLL_ACTOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SCROLL_ACTOR_CLASS"
                    c:identifier="CLUTTER_IS_SCROLL_ACTOR_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SETTINGS"
                    c:identifier="CLUTTER_IS_SETTINGS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-settings.h"
                       line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SHADER_EFFECT"
                    c:identifier="CLUTTER_IS_SHADER_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SHADER_EFFECT_CLASS"
                    c:identifier="CLUTTER_IS_SHADER_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SNAP_CONSTRAINT"
                    c:identifier="CLUTTER_IS_SNAP_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STAGE"
                    c:identifier="CLUTTER_IS_STAGE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STAGE_CLASS"
                    c:identifier="CLUTTER_IS_STAGE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STAGE_MANAGER"
                    c:identifier="CLUTTER_IS_STAGE_MANAGER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STAGE_MANAGER_CLASS"
                    c:identifier="CLUTTER_IS_STAGE_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STATE"
                    c:identifier="CLUTTER_IS_STATE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_STATE_CLASS"
                    c:identifier="CLUTTER_IS_STATE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="36"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SWIPE_ACTION"
                    c:identifier="CLUTTER_IS_SWIPE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SWIPE_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_SWIPE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="44"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TAP_ACTION"
                    c:identifier="CLUTTER_IS_TAP_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="47"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TAP_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_TAP_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="49"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXT"
                    c:identifier="CLUTTER_IS_TEXT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text.h" line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXTURE_NODE"
                    c:identifier="CLUTTER_IS_TEXTURE_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="60"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXT_BUFFER"
                    c:identifier="CLUTTER_IS_TEXT_BUFFER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXT_BUFFER_CLASS"
                    c:identifier="CLUTTER_IS_TEXT_BUFFER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXT_CLASS"
                    c:identifier="CLUTTER_IS_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text.h" line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TEXT_NODE"
                    c:identifier="CLUTTER_IS_TEXT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="126"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TIMELINE"
                    c:identifier="CLUTTER_IS_TIMELINE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TIMELINE_CLASS"
                    c:identifier="CLUTTER_IS_TIMELINE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TRANSFORM_NODE"
                    c:identifier="CLUTTER_IS_TRANSFORM_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="214"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TRANSITION"
                    c:identifier="CLUTTER_IS_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TRANSITION_CLASS"
                    c:identifier="CLUTTER_IS_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TRANSITION_GROUP"
                    c:identifier="CLUTTER_IS_TRANSITION_GROUP"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_TRANSITION_GROUP_CLASS"
                    c:identifier="CLUTTER_IS_TRANSITION_GROUP_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_ACTION"
                    c:identifier="CLUTTER_IS_ZOOM_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_ZOOM_ACTION_CLASS"
                    c:identifier="CLUTTER_IS_ZOOM_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="42"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Image"
           c:symbol-prefix="image"
           c:type="ClutterImage"
           version="1.10"
           parent="GObject.Object"
           glib:type-name="ClutterImage"
           glib:get-type="clutter_image_get_type"
           glib:type-struct="ImageClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-image.h"
           line="71">The #ClutterImage structure contains
private data and should only be accessed using the provided
API.</doc>
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="102"/>
      <implements name="Content"/>
      <function name="new" c:identifier="clutter_image_new" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.c"
             line="164">Creates a new #ClutterImage instance.</doc>
        <source-position filename="../clutter/clutter/clutter-image.h"
                         line="110"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-image.c"
               line="169">the newly created #ClutterImage instance.
  Use g_object_unref() when done.</doc>
          <type name="Content" c:type="ClutterContent*"/>
        </return-value>
      </function>
      <method name="get_texture"
              c:identifier="clutter_image_get_texture"
              version="1.10"
              stability="Unstable">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.c"
             line="433">Retrieves a pointer to the Cogl texture used by @image.

If you change the contents of the returned Cogl texture you will need
to manually invalidate the @image with clutter_content_invalidate()
in order to update the actors using @image as their content.</doc>
        <source-position filename="../clutter/clutter/clutter-image.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-image.c"
               line="443">a pointer to the Cogl texture, or %NULL</doc>
          <type name="Cogl.Texture" c:type="CoglTexture*"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="435">a #ClutterImage</doc>
            <type name="Image" c:type="ClutterImage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_area"
              c:identifier="clutter_image_set_area"
              version="1.10"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.c"
             line="339">Sets the image data to be display by @image, using @rect to indicate
the position and size of the image data to be set.

If the @image does not have any image data set when this function is
called, a new texture will be created with the size of the width and
height of the rectangle, i.e. calling this function on a newly created
#ClutterImage will be the equivalent of calling clutter_image_set_data().

If the image data was successfully loaded, the @image will be invalidated.

In case of error, the @error value will be set, and this function will
return %FALSE.

The image data is copied in texture memory.</doc>
        <source-position filename="../clutter/clutter/clutter-image.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-image.c"
               line="363">%TRUE if the image data was successfully loaded,
  and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="341">a #ClutterImage</doc>
            <type name="Image" c:type="ClutterImage*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="342">the image data, as an array of bytes</doc>
            <array zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="pixel_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="343">the Cogl pixel format of the image data</doc>
            <type name="Cogl.PixelFormat" c:type="CoglPixelFormat"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="344">a rectangle indicating the area that should be set</doc>
            <type name="cairo.RectangleInt"
                  c:type="const cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="row_stride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="345">the length of each row inside @data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_bytes"
              c:identifier="clutter_image_set_bytes"
              version="1.12"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.c"
             line="270">Sets the image data stored inside a #GBytes to be displayed by @image.

If the image data was successfully loaded, the @image will be invalidated.

In case of error, the @error value will be set, and this function will
return %FALSE.

The image data contained inside the #GBytes is copied in texture memory,
and no additional reference is acquired on the @data.</doc>
        <source-position filename="../clutter/clutter/clutter-image.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-image.c"
               line="290">%TRUE if the image data was successfully loaded,
  and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="272">a #ClutterImage</doc>
            <type name="Image" c:type="ClutterImage*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="273">the image data, as a #GBytes</doc>
            <type name="GLib.Bytes" c:type="GBytes*"/>
          </parameter>
          <parameter name="pixel_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="274">the Cogl pixel format of the image data</doc>
            <type name="Cogl.PixelFormat" c:type="CoglPixelFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="275">the width of the image data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="276">the height of the image data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="row_stride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="277">the length of each row inside @data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_data"
              c:identifier="clutter_image_set_data"
              version="1.10"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.c"
             line="180">Sets the image data to be displayed by @image.

If the image data was successfully loaded, the @image will be invalidated.

In case of error, the @error value will be set, and this function will
return %FALSE.

The image data is copied in texture memory.

The image data is expected to be a linear array of RGBA or RGB pixel data;
how to retrieve that data is left to platform specific image loaders. For
instance, if you use the GdkPixbuf library:

|[&lt;!-- language="C" --&gt;
  ClutterContent *image = clutter_image_new ();

  GdkPixbuf *pixbuf = gdk_pixbuf_new_from_file (filename, NULL);

  clutter_image_set_data (CLUTTER_IMAGE (image),
                          gdk_pixbuf_get_pixels (pixbuf),
                          gdk_pixbuf_get_has_alpha (pixbuf)
                            ? COGL_PIXEL_FORMAT_RGBA_8888
                            : COGL_PIXEL_FORMAT_RGB_888,
                          gdk_pixbuf_get_width (pixbuf),
                          gdk_pixbuf_get_height (pixbuf),
                          gdk_pixbuf_get_rowstride (pixbuf),
                          &amp;error);

  g_object_unref (pixbuf);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-image.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-image.c"
               line="221">%TRUE if the image data was successfully loaded,
  and %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="image" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="182">a #ClutterImage</doc>
            <type name="Image" c:type="ClutterImage*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="183">the image data, as an array of bytes</doc>
            <array zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="pixel_format" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="184">the Cogl pixel format of the image data</doc>
            <type name="Cogl.PixelFormat" c:type="CoglPixelFormat"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="185">the width of the image data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="186">the height of the image data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="row_stride" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-image.c"
                 line="187">the length of each row inside @data</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ImagePrivate" c:type="ClutterImagePrivate*"/>
      </field>
    </class>
    <record name="ImageClass"
            c:type="ClutterImageClass"
            glib:is-gtype-struct-for="Image"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-image.h"
           line="88">The #ClutterImageClass structure contains
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="102"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="16">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="ImageError"
                 version="1.10"
                 glib:type-name="ClutterImageError"
                 glib:get-type="clutter_image_error_get_type"
                 c:type="ClutterImageError"
                 glib:error-domain="clutter-image-error-quark">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-image.h"
           line="57">Error enumeration for #ClutterImage.</doc>
      <member name="data"
              value="0"
              c:identifier="CLUTTER_IMAGE_ERROR_INVALID_DATA"
              glib:nick="data">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-image.h"
             line="59">Invalid data passed to the
  clutter_image_set_data() function.</doc>
      </member>
      <function name="quark" c:identifier="clutter_image_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="ImagePrivate" c:type="ClutterImagePrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-image.h"
                       line="54"/>
    </record>
    <enumeration name="InitError"
                 version="0.2"
                 glib:type-name="ClutterInitError"
                 glib:get-type="clutter_init_error_get_type"
                 c:type="ClutterInitError"
                 glib:error-domain="clutter-init-error-quark">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.h"
           line="83">Error conditions returned by clutter_init() and clutter_init_with_args().</doc>
      <member name="success"
              value="1"
              c:identifier="CLUTTER_INIT_SUCCESS"
              glib:nick="success">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.h"
             line="85">Initialisation successful</doc>
      </member>
      <member name="error_unknown"
              value="0"
              c:identifier="CLUTTER_INIT_ERROR_UNKNOWN"
              glib:nick="error-unknown">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.h"
             line="86">Unknown error</doc>
      </member>
      <member name="error_threads"
              value="-1"
              c:identifier="CLUTTER_INIT_ERROR_THREADS"
              glib:nick="error-threads">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.h"
             line="87">Thread initialisation failed</doc>
      </member>
      <member name="error_backend"
              value="-2"
              c:identifier="CLUTTER_INIT_ERROR_BACKEND"
              glib:nick="error-backend">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.h"
             line="88">Backend initialisation failed</doc>
      </member>
      <member name="error_internal"
              value="-3"
              c:identifier="CLUTTER_INIT_ERROR_INTERNAL"
              glib:nick="error-internal">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.h"
             line="89">Internal error</doc>
      </member>
      <function name="quark" c:identifier="clutter_init_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <enumeration name="InputAxis"
                 version="1.6"
                 glib:type-name="ClutterInputAxis"
                 glib:get-type="clutter_input_axis_get_type"
                 c:type="ClutterInputAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1083">The type of axes Clutter recognizes on a #ClutterInputDevice</doc>
      <member name="ignore"
              value="0"
              c:identifier="CLUTTER_INPUT_AXIS_IGNORE"
              glib:nick="ignore">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1085">Unused axis</doc>
      </member>
      <member name="x"
              value="1"
              c:identifier="CLUTTER_INPUT_AXIS_X"
              glib:nick="x">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1086">The position on the X axis</doc>
      </member>
      <member name="y"
              value="2"
              c:identifier="CLUTTER_INPUT_AXIS_Y"
              glib:nick="y">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1087">The position of the Y axis</doc>
      </member>
      <member name="pressure"
              value="3"
              c:identifier="CLUTTER_INPUT_AXIS_PRESSURE"
              glib:nick="pressure">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1088">The pressure information</doc>
      </member>
      <member name="xtilt"
              value="4"
              c:identifier="CLUTTER_INPUT_AXIS_XTILT"
              glib:nick="xtilt">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1089">The tilt on the X axis</doc>
      </member>
      <member name="ytilt"
              value="5"
              c:identifier="CLUTTER_INPUT_AXIS_YTILT"
              glib:nick="ytilt">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1090">The tile on the Y axis</doc>
      </member>
      <member name="wheel"
              value="6"
              c:identifier="CLUTTER_INPUT_AXIS_WHEEL"
              glib:nick="wheel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1091">A wheel</doc>
      </member>
      <member name="distance"
              value="7"
              c:identifier="CLUTTER_INPUT_AXIS_DISTANCE"
              glib:nick="distance">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1092">Distance (Since 1.12)</doc>
      </member>
      <member name="rotation"
              value="8"
              c:identifier="CLUTTER_INPUT_AXIS_ROTATION"
              glib:nick="rotation">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1093">Rotation along the z-axis (Since 1.28)</doc>
      </member>
      <member name="slider"
              value="9"
              c:identifier="CLUTTER_INPUT_AXIS_SLIDER"
              glib:nick="slider">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1094">A slider (Since 1.28)</doc>
      </member>
      <member name="last"
              value="10"
              c:identifier="CLUTTER_INPUT_AXIS_LAST"
              glib:nick="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1095">Last value of the enumeration; this value is
  useful when iterating over the enumeration values (Since 1.12)</doc>
      </member>
    </enumeration>
    <bitfield name="InputContentHintFlags"
              glib:type-name="ClutterInputContentHintFlags"
              glib:get-type="clutter_input_content_hint_flags_get_type"
              c:type="ClutterInputContentHintFlags">
      <member name="completion"
              value="1"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_COMPLETION"
              glib:nick="completion">
      </member>
      <member name="spellcheck"
              value="2"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_SPELLCHECK"
              glib:nick="spellcheck">
      </member>
      <member name="auto_capitalization"
              value="4"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_AUTO_CAPITALIZATION"
              glib:nick="auto-capitalization">
      </member>
      <member name="lowercase"
              value="8"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_LOWERCASE"
              glib:nick="lowercase">
      </member>
      <member name="uppercase"
              value="16"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_UPPERCASE"
              glib:nick="uppercase">
      </member>
      <member name="titlecase"
              value="32"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_TITLECASE"
              glib:nick="titlecase">
      </member>
      <member name="hidden_text"
              value="64"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_HIDDEN_TEXT"
              glib:nick="hidden-text">
      </member>
      <member name="sensitive_data"
              value="128"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_SENSITIVE_DATA"
              glib:nick="sensitive-data">
      </member>
      <member name="latin"
              value="256"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_LATIN"
              glib:nick="latin">
      </member>
      <member name="multiline"
              value="512"
              c:identifier="CLUTTER_INPUT_CONTENT_HINT_MULTILINE"
              glib:nick="multiline">
      </member>
    </bitfield>
    <enumeration name="InputContentPurpose"
                 glib:type-name="ClutterInputContentPurpose"
                 glib:get-type="clutter_input_content_purpose_get_type"
                 c:type="ClutterInputContentPurpose">
      <member name="normal"
              value="0"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_NORMAL"
              glib:nick="normal">
      </member>
      <member name="alpha"
              value="1"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_ALPHA"
              glib:nick="alpha">
      </member>
      <member name="digits"
              value="2"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_DIGITS"
              glib:nick="digits">
      </member>
      <member name="number"
              value="3"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_NUMBER"
              glib:nick="number">
      </member>
      <member name="phone"
              value="4"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_PHONE"
              glib:nick="phone">
      </member>
      <member name="url"
              value="5"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_URL"
              glib:nick="url">
      </member>
      <member name="email"
              value="6"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_EMAIL"
              glib:nick="email">
      </member>
      <member name="name"
              value="7"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_NAME"
              glib:nick="name">
      </member>
      <member name="password"
              value="8"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_PASSWORD"
              glib:nick="password">
      </member>
      <member name="date"
              value="9"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_DATE"
              glib:nick="date">
      </member>
      <member name="time"
              value="10"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_TIME"
              glib:nick="time">
      </member>
      <member name="datetime"
              value="11"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_DATETIME"
              glib:nick="datetime">
      </member>
      <member name="terminal"
              value="12"
              c:identifier="CLUTTER_INPUT_CONTENT_PURPOSE_TERMINAL"
              glib:nick="terminal">
      </member>
    </enumeration>
    <class name="InputDevice"
           c:symbol-prefix="input_device"
           c:type="ClutterInputDevice"
           parent="GObject.Object"
           glib:type-name="ClutterInputDevice"
           glib:get-type="clutter_input_device_get_type"
           glib:type-struct="InputDeviceClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-input-device.h"
           line="72">Generic representation of an input device. The actual contents of this
structure depend on the backend used.</doc>
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="63"/>
      <virtual-method name="get_group_n_modes" invoker="get_group_n_modes">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_grouped" invoker="is_grouped">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="other_device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_mode_switch_button"
                      invoker="is_mode_switch_button">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="keycode_to_evdev"
                      invoker="keycode_to_evdev"
                      version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1797">Translates a hardware keycode from a #ClutterKeyEvent to the
equivalent evdev keycode. Note that depending on the input backend
used by Clutter this function can fail if there is no obvious
mapping between the key codes. The hardware keycode can be taken
from the #ClutterKeyEvent.hardware_keycode member of #ClutterKeyEvent.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1809">%TRUE if the conversion succeeded, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1799">A #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="hardware_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1800">The hardware keycode from a #ClutterKeyEvent</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="evdev_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1801">The return location for the evdev keycode</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_from_tool">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="tool" transfer-ownership="none">
            <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_associated_device"
              c:identifier="clutter_input_device_get_associated_device"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1774">Retrieves a pointer to the #ClutterInputDevice that has been
associated to @device.

If the #ClutterInputDevice:device-mode property of @device is
set to %CLUTTER_INPUT_MODE_MASTER, this function will return
%NULL.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1785">a #ClutterInputDevice, or %NULL</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1776">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_axis"
              c:identifier="clutter_input_device_get_axis"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1394">Retrieves the type of axis on @device at the given index.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1401">the axis type</doc>
          <type name="InputAxis" c:type="ClutterInputAxis"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1396">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1397">the index of the axis</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_axis_value"
              c:identifier="clutter_input_device_get_axis_value"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1425">Extracts the value of the given @axis of a #ClutterInputDevice from
an array of axis values.

An example of typical usage for this function is:

|[
  ClutterInputDevice *device = clutter_event_get_device (event);
  gdouble *axes = clutter_event_get_axes (event, NULL);
  gdouble pressure_value = 0;

  clutter_input_device_get_axis_value (device, axes,
                                       CLUTTER_INPUT_AXIS_PRESSURE,
                                       &amp;pressure_value);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1448">%TRUE if the value was set, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1427">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="axes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1428">an array of axes values, typically
  coming from clutter_event_get_axes()</doc>
            <array zero-terminated="0" c:type="gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1430">the axis to extract</doc>
            <type name="InputAxis" c:type="ClutterInputAxis"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1431">return location for the axis value</doc>
            <type name="gdouble" c:type="gdouble*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_coords"
              c:identifier="clutter_input_device_get_coords"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="974">Retrieves the latest coordinates of a pointer or touch point of
@device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="985">%FALSE if the device's sequence hasn't been found,
  and %TRUE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="976">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="sequence"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="977">a #ClutterEventSequence, or %NULL if
  the device is not touch-based</doc>
            <type name="EventSequence" c:type="ClutterEventSequence*"/>
          </parameter>
          <parameter name="point"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="979">return location for the pointer
  or touch point</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_id"
              c:identifier="clutter_input_device_get_device_id"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="906">Retrieves the unique identifier of @device</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="912">the identifier of the device</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="908">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_mode"
              c:identifier="clutter_input_device_get_device_mode"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1164">Retrieves the #ClutterInputMode of @device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1170">the device mode</doc>
          <type name="InputMode" c:type="ClutterInputMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1166">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_name"
              c:identifier="clutter_input_device_get_device_name"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1125">Retrieves the name of the @device</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1131">the name of the device, or %NULL. The returned string
  is owned by the #ClutterInputDevice and should never be modified
  or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1127">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_node"
              c:identifier="clutter_input_device_get_device_node">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_type"
              c:identifier="clutter_input_device_get_device_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="887">Retrieves the type of @device</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="893">the type of the device</doc>
          <type name="InputDeviceType" c:type="ClutterInputDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="889">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="clutter_input_device_get_enabled"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="956">Retrieves whether @device is enabled.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="962">%TRUE if the device is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="958">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_grabbed_actor"
              c:identifier="clutter_input_device_get_grabbed_actor"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2046">Retrieves a pointer to the #ClutterActor currently grabbing all
the events coming from @device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="2053">a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2048">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_group_n_modes"
              c:identifier="clutter_input_device_get_group_n_modes">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="181"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_has_cursor"
              c:identifier="clutter_input_device_get_has_cursor"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1145">Retrieves whether @device has a pointer that follows the
device motion.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1152">%TRUE if the device has a cursor</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1147">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key"
              c:identifier="clutter_input_device_get_key"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1573">Retrieves the key set using clutter_input_device_set_key()</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1582">%TRUE if a key was set at the given index</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1575">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1576">the index of the key</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keyval"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1577">return location for the keyval at @index_</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="modifiers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1578">return location for the modifiers at @index_</doc>
            <type name="ModifierType" c:type="ClutterModifierType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mapping_mode"
              c:identifier="clutter_input_device_get_mapping_mode">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="196"/>
        <return-value transfer-ownership="none">
          <type name="InputDeviceMapping" c:type="ClutterInputDeviceMapping"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode_switch_button_group"
              c:identifier="clutter_input_device_get_mode_switch_button_group">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_modifier_state"
              c:identifier="clutter_input_device_get_modifier_state"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="616">Retrieves the current modifiers state of the device, as seen
by the last event Clutter processed.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="623">the last known modifier state</doc>
          <type name="ModifierType" c:type="ClutterModifierType"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="618">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_axes"
              c:identifier="clutter_input_device_get_n_axes"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1481">Retrieves the number of axes available on @device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1487">the number of axes on the device</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1483">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_keys"
              c:identifier="clutter_input_device_get_n_keys"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1525">Retrieves the number of keys registered for @device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1531">the number of registered keys</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1527">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_mode_groups"
              c:identifier="clutter_input_device_get_n_mode_groups">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="178"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_rings"
              c:identifier="clutter_input_device_get_n_rings">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_strips"
              c:identifier="clutter_input_device_get_n_strips">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer_actor"
              c:identifier="clutter_input_device_get_pointer_actor"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1087">Retrieves the #ClutterActor underneath the pointer of @device</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1093">a pointer to the #ClutterActor or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1089">a #ClutterInputDevice of type %CLUTTER_POINTER_DEVICE</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer_stage"
              c:identifier="clutter_input_device_get_pointer_stage"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1106">Retrieves the #ClutterStage underneath the pointer of @device</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1112">a pointer to the #ClutterStage or %NULL</doc>
          <type name="Stage" c:type="ClutterStage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1108">a #ClutterInputDevice of type %CLUTTER_POINTER_DEVICE</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_product_id"
              c:identifier="clutter_input_device_get_product_id"
              version="1.22">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2233">Gets the product ID of this device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="2239">the product ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2235">a slave #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_seat" c:identifier="clutter_input_device_get_seat">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2444">Returns the seat the device belongs to</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="2450">the device seat</doc>
          <type name="Seat" c:type="ClutterSeat*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2446">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_slave_devices"
              c:identifier="clutter_input_device_get_slave_devices"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1710">Retrieves the slave devices attached to @device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="137"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1716">a
  list of #ClutterInputDevice, or %NULL. The contents of the list are
  owned by the device. Use g_list_free() when done</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="InputDevice"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1712">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_vendor_id"
              c:identifier="clutter_input_device_get_vendor_id"
              version="1.22">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2214">Gets the vendor ID of this device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="2220">the vendor ID</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2216">a slave #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="grab"
              c:identifier="clutter_input_device_grab"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1947">Acquires a grab on @actor for the given @device.

Any event coming from @device will be delivered to @actor, bypassing
the usual event delivery mechanism, until the grab is released by
calling clutter_input_device_ungrab().

The grab is client-side: even if the windowing system used by the Clutter
backend has the concept of "device grabs", Clutter will not use them.

Only #ClutterInputDevice of types %CLUTTER_POINTER_DEVICE,
%CLUTTER_TABLET_DEVICE and %CLUTTER_KEYBOARD_DEVICE can hold a grab.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="145"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1949">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1950">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_grouped" c:identifier="clutter_input_device_is_grouped">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="202"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="other_device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_mode_switch_button"
              c:identifier="clutter_input_device_is_mode_switch_button">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="185"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="group" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="keycode_to_evdev"
              c:identifier="clutter_input_device_keycode_to_evdev"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1797">Translates a hardware keycode from a #ClutterKeyEvent to the
equivalent evdev keycode. Note that depending on the input backend
used by Clutter this function can fail if there is no obvious
mapping between the key codes. The hardware keycode can be taken
from the #ClutterKeyEvent.hardware_keycode member of #ClutterKeyEvent.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="1809">%TRUE if the conversion succeeded, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1799">A #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="hardware_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1800">The hardware keycode from a #ClutterKeyEvent</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="evdev_keycode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1801">The return location for the evdev keycode</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sequence_get_grabbed_actor"
              c:identifier="clutter_input_device_sequence_get_grabbed_actor"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2190">Retrieves a pointer to the #ClutterActor currently grabbing the
touch events coming from @device given the @sequence.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device.c"
               line="2198">a #ClutterActor, or %NULL</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2192">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="sequence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2193">a #ClutterEventSequence</doc>
            <type name="EventSequence" c:type="ClutterEventSequence*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sequence_grab"
              c:identifier="clutter_input_device_sequence_grab"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2092">Acquires a grab on @actor for the given @device and the given touch
@sequence.

Any touch event coming from @device and from @sequence will be
delivered to @actor, bypassing the usual event delivery mechanism,
until the grab is released by calling
clutter_input_device_sequence_ungrab().

The grab is client-side: even if the windowing system used by the Clutter
backend has the concept of "device grabs", Clutter will not use them.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2094">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="sequence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2095">a #ClutterEventSequence</doc>
            <type name="EventSequence" c:type="ClutterEventSequence*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2096">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="sequence_ungrab"
              c:identifier="clutter_input_device_sequence_ungrab"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2149">Releases the grab on the @device for the given @sequence, if one is
in place.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2151">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="sequence" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2152">a #ClutterEventSequence</doc>
            <type name="EventSequence" c:type="ClutterEventSequence*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="clutter_input_device_set_enabled"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="924">Enables or disables a #ClutterInputDevice.

Only devices with a #ClutterInputDevice:device-mode property set
to %CLUTTER_INPUT_MODE_SLAVE or %CLUTTER_INPUT_MODE_FLOATING can
be disabled.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="926">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="927">%TRUE to enable the @device</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key"
              c:identifier="clutter_input_device_set_key"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1543">Sets the keyval and modifiers at the given @index_ for @device.

Clutter will use the keyval and modifiers set when filling out
an event coming from the same input device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1545">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1546">the index of the key</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="keyval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1547">the keyval</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modifiers" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1548">a bitmask of modifiers</doc>
            <type name="ModifierType" c:type="ClutterModifierType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mapping_mode"
              c:identifier="clutter_input_device_set_mapping_mode">
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="199"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="mapping" transfer-ownership="none">
            <type name="InputDeviceMapping"
                  c:type="ClutterInputDeviceMapping"/>
          </parameter>
        </parameters>
      </method>
      <method name="ungrab"
              c:identifier="clutter_input_device_ungrab"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="2006">Releases the grab on the @device, if one is in place.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="2008">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_from_event"
              c:identifier="clutter_input_device_update_from_event"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="1183">Forcibly updates the state of the @device using a #ClutterEvent

This function should never be used by applications: it is meant
for integration with embedding toolkits, like clutter-gtk

Embedding toolkits that disable the event collection inside Clutter
need to use this function to update the state of input devices depending
on a #ClutterEvent that they are going to submit to the event handling code
in Clutter though clutter_do_event(). Since the input devices hold the state
that is going to be used to fill in fields like the #ClutterButtonEvent
click count, or to emit synthesized events like %CLUTTER_ENTER and
%CLUTTER_LEAVE, it is necessary for embedding toolkits to also be
responsible of updating the input device state.

For instance, this might be the code to translate an embedding toolkit
native motion notification into a Clutter #ClutterMotionEvent and ask
Clutter to process it:

|[
  ClutterEvent c_event;

  translate_native_event_to_clutter (native_event, &amp;c_event);

  clutter_do_event (&amp;c_event);
]|

Before letting clutter_do_event() process the event, it is necessary to call
clutter_input_device_update_from_event():

|[
  ClutterEvent c_event;
  ClutterDeviceManager *manager;
  ClutterInputDevice *device;

  translate_native_event_to_clutter (native_event, &amp;c_event);

  // get the seat
  seat = clutter_backend_get_deafult_seat (clutter_get_default_backend ());

  // use the default Core Pointer that Clutter backends register by default
  device = clutter_seat_get_pointer (seat);

  // update the state of the input device
  clutter_input_device_update_from_event (device, &amp;c_event, FALSE);

  clutter_do_event (&amp;c_event);
]|

The @update_stage boolean argument should be used when the input device
enters and leaves a #ClutterStage; it will use the #ClutterStage field
of the passed @event to update the stage associated to the input device.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1185">a #ClutterInputDevice</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1186">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
          <parameter name="update_stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1187">whether to update the #ClutterStage of the @device
  using the stage of the event</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="backend"
                version="1.6"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="439">The #ClutterBackend that created the device.</doc>
        <type name="Backend"/>
      </property>
      <property name="device-mode"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputMode"/>
      </property>
      <property name="device-node"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="device-type"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="348">The type of the device</doc>
        <type name="InputDeviceType"/>
      </property>
      <property name="enabled"
                version="1.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="405">Whether the device is enabled.

A device with the #ClutterInputDevice:device-mode property set
to %CLUTTER_INPUT_MODE_MASTER cannot be disabled.

A device must be enabled in order to receive events from it.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-cursor"
                version="1.6"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="391">Whether the device has an on screen cursor following its movement.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="id"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="317">The unique identifier of the device</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="mapping-mode" writable="1" transfer-ownership="none">
        <type name="InputDeviceMapping"/>
      </property>
      <property name="n-axes" version="1.6" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="424">The number of axes of the device.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="n-mode-groups"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="n-rings"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="n-strips"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="name"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="333">The name of the device</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="product-id"
                version="1.22"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="467">Product ID of this device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="seat"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="364">The #ClutterSeat instance which owns the device</doc>
        <type name="Seat"/>
      </property>
      <property name="vendor-id"
                version="1.22"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device.c"
             line="453">Vendor ID of this device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="InputDeviceClass"
            c:type="ClutterInputDeviceClass"
            glib:is-gtype-struct-for="InputDevice">
      <source-position filename="../clutter/clutter/clutter-input-device.h"
                       line="63"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="keycode_to_evdev">
        <callback name="keycode_to_evdev">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device.c"
                 line="1809">%TRUE if the conversion succeeded, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-input-device.c"
                   line="1799">A #ClutterInputDevice</doc>
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="hardware_keycode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-input-device.c"
                   line="1800">The hardware keycode from a #ClutterKeyEvent</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="evdev_keycode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-input-device.c"
                   line="1801">The return location for the evdev keycode</doc>
              <type name="guint" c:type="guint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_from_tool">
        <callback name="update_from_tool">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="tool" transfer-ownership="none">
              <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_mode_switch_button">
        <callback name="is_mode_switch_button">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="50"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="group" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="button" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_group_n_modes">
        <callback name="get_group_n_modes">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="group" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_grouped">
        <callback name="is_grouped">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="other_device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="process_kbd_a11y_event" introspectable="0">
        <callback name="process_kbd_a11y_event" introspectable="0">
          <source-position filename="../clutter/clutter/clutter-input-device.h"
                           line="60"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="InputDevice" c:type="ClutterInputDevice*"/>
            </parameter>
            <parameter name="emit_event_func" transfer-ownership="none">
              <type name="EmitInputDeviceEvent"
                    c:type="ClutterEmitInputDeviceEvent"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="InputDeviceMapping"
                 glib:type-name="ClutterInputDeviceMapping"
                 glib:get-type="clutter_input_device_mapping_get_type"
                 c:type="ClutterInputDeviceMapping">
      <member name="absolute"
              value="0"
              c:identifier="CLUTTER_INPUT_DEVICE_MAPPING_ABSOLUTE"
              glib:nick="absolute">
      </member>
      <member name="relative"
              value="1"
              c:identifier="CLUTTER_INPUT_DEVICE_MAPPING_RELATIVE"
              glib:nick="relative">
      </member>
    </enumeration>
    <enumeration name="InputDevicePadSource"
                 glib:type-name="ClutterInputDevicePadSource"
                 glib:get-type="clutter_input_device_pad_source_get_type"
                 c:type="ClutterInputDevicePadSource">
      <member name="unknown"
              value="0"
              c:identifier="CLUTTER_INPUT_DEVICE_PAD_SOURCE_UNKNOWN"
              glib:nick="unknown">
      </member>
      <member name="finger"
              value="1"
              c:identifier="CLUTTER_INPUT_DEVICE_PAD_SOURCE_FINGER"
              glib:nick="finger">
      </member>
    </enumeration>
    <class name="InputDeviceTool"
           c:symbol-prefix="input_device_tool"
           c:type="ClutterInputDeviceTool"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterInputDeviceTool"
           glib:get-type="clutter_input_device_tool_get_type"
           glib:type-struct="InputDeviceToolClass">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="53"/>
      <method name="get_id" c:identifier="clutter_input_device_tool_get_id">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device-tool.c"
             line="187">Gets the ID of this tool, this value can be used to identify a
physical tool (eg. a tablet pen) across program executions.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device-tool.c"
               line="194">The tool ID for this tool</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="tool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device-tool.c"
                 line="189">a #ClutterInputDeviceTool</doc>
            <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_serial"
              c:identifier="clutter_input_device_tool_get_serial"
              version="1.28">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device-tool.c"
             line="141">Gets the serial of this tool, this value can be used to identify a
physical tool (eg. a tablet pen) across program executions.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                         line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device-tool.c"
               line="148">The serial ID for this tool</doc>
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="tool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device-tool.c"
                 line="143">a #ClutterInputDeviceTool</doc>
            <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tool_type"
              c:identifier="clutter_input_device_tool_get_tool_type"
              version="1.28">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-device-tool.c"
             line="165">Gets the tool type of this tool.</doc>
        <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-input-device-tool.c"
               line="171">The tool type of this tool</doc>
          <type name="InputDeviceToolType"
                c:type="ClutterInputDeviceToolType"/>
        </return-value>
        <parameters>
          <instance-parameter name="tool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-device-tool.c"
                 line="167">a #ClutterInputDeviceTool</doc>
            <type name="InputDeviceTool" c:type="ClutterInputDeviceTool*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="serial"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputDeviceToolType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="InputDeviceToolClass"
            c:type="ClutterInputDeviceToolClass"
            glib:is-gtype-struct-for="InputDeviceTool">
      <source-position filename="../clutter/clutter/clutter-input-device-tool.h"
                       line="53"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="InputDeviceToolType"
                 version="1.28"
                 glib:type-name="ClutterInputDeviceToolType"
                 glib:get-type="clutter_input_device_tool_type_get_type"
                 c:type="ClutterInputDeviceToolType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1636">Defines the type of tool that a #ClutterInputDeviceTool represents.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1638">No tool</doc>
      </member>
      <member name="pen"
              value="1"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_PEN"
              glib:nick="pen">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1639">The tool is a pen</doc>
      </member>
      <member name="eraser"
              value="2"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_ERASER"
              glib:nick="eraser">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1640">The tool is an eraser</doc>
      </member>
      <member name="brush"
              value="3"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_BRUSH"
              glib:nick="brush">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1641">The tool is a brush</doc>
      </member>
      <member name="pencil"
              value="4"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_PENCIL"
              glib:nick="pencil">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1642">The tool is a pencil</doc>
      </member>
      <member name="airbrush"
              value="5"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_AIRBRUSH"
              glib:nick="airbrush">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1643">The tool is an airbrush</doc>
      </member>
      <member name="mouse"
              value="6"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_MOUSE"
              glib:nick="mouse">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1644">The tool is a mouse</doc>
      </member>
      <member name="lens"
              value="7"
              c:identifier="CLUTTER_INPUT_DEVICE_TOOL_LENS"
              glib:nick="lens">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1645">The tool is a lens</doc>
      </member>
    </enumeration>
    <enumeration name="InputDeviceType"
                 version="1.0"
                 glib:type-name="ClutterInputDeviceType"
                 glib:get-type="clutter_input_device_type_get_type"
                 c:type="ClutterInputDeviceType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1025">The types of input devices available.

The #ClutterInputDeviceType enumeration can be extended at later
date; not every platform supports every input device type.</doc>
      <member name="pointer_device"
              value="0"
              c:identifier="CLUTTER_POINTER_DEVICE"
              glib:nick="pointer-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1027">A pointer device</doc>
      </member>
      <member name="keyboard_device"
              value="1"
              c:identifier="CLUTTER_KEYBOARD_DEVICE"
              glib:nick="keyboard-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1028">A keyboard device</doc>
      </member>
      <member name="extension_device"
              value="2"
              c:identifier="CLUTTER_EXTENSION_DEVICE"
              glib:nick="extension-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1029">A generic extension device</doc>
      </member>
      <member name="joystick_device"
              value="3"
              c:identifier="CLUTTER_JOYSTICK_DEVICE"
              glib:nick="joystick-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1030">A joystick device</doc>
      </member>
      <member name="tablet_device"
              value="4"
              c:identifier="CLUTTER_TABLET_DEVICE"
              glib:nick="tablet-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1031">A tablet device</doc>
      </member>
      <member name="touchpad_device"
              value="5"
              c:identifier="CLUTTER_TOUCHPAD_DEVICE"
              glib:nick="touchpad-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1032">A touchpad device</doc>
      </member>
      <member name="touchscreen_device"
              value="6"
              c:identifier="CLUTTER_TOUCHSCREEN_DEVICE"
              glib:nick="touchscreen-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1033">A touch screen device</doc>
      </member>
      <member name="pen_device"
              value="7"
              c:identifier="CLUTTER_PEN_DEVICE"
              glib:nick="pen-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1034">A pen device</doc>
      </member>
      <member name="eraser_device"
              value="8"
              c:identifier="CLUTTER_ERASER_DEVICE"
              glib:nick="eraser-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1035">An eraser device</doc>
      </member>
      <member name="cursor_device"
              value="9"
              c:identifier="CLUTTER_CURSOR_DEVICE"
              glib:nick="cursor-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1036">A cursor device</doc>
      </member>
      <member name="pad_device"
              value="10"
              c:identifier="CLUTTER_PAD_DEVICE"
              glib:nick="pad-device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1037">A tablet pad</doc>
      </member>
      <member name="n_device_types"
              value="11"
              c:identifier="CLUTTER_N_DEVICE_TYPES"
              glib:nick="n-device-types">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1038">The number of device types</doc>
      </member>
    </enumeration>
    <class name="InputFocus"
           c:symbol-prefix="input_focus"
           c:type="ClutterInputFocus"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterInputFocus"
           glib:get-type="clutter_input_focus_get_type"
           glib:type-struct="InputFocusClass">
      <source-position filename="../clutter/clutter/clutter-input-focus.h"
                       line="52"/>
      <virtual-method name="commit_text">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_in">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="input_method" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_out">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="request_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_preedit_text">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="preedit" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cursor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="filter_event"
              c:identifier="clutter_input_focus_filter_event">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_focused" c:identifier="clutter_input_focus_is_focused">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="clutter_input_focus_reset">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_can_show_preedit"
              c:identifier="clutter_input_focus_set_can_show_preedit">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="can_show_preedit" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_hints"
              c:identifier="clutter_input_focus_set_content_hints">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="hint" transfer-ownership="none">
            <type name="InputContentHintFlags"
                  c:type="ClutterInputContentHintFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_purpose"
              c:identifier="clutter_input_focus_set_content_purpose">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="purpose" transfer-ownership="none">
            <type name="InputContentPurpose"
                  c:type="ClutterInputContentPurpose"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_location"
              c:identifier="clutter_input_focus_set_cursor_location">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_panel_state"
              c:identifier="clutter_input_focus_set_input_panel_state">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="InputPanelState" c:type="ClutterInputPanelState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_surrounding"
              c:identifier="clutter_input_focus_set_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-focus.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cursor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="anchor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="InputFocusClass"
            c:type="ClutterInputFocusClass"
            glib:is-gtype-struct-for="InputFocus">
      <source-position filename="../clutter/clutter/clutter-input-focus.h"
                       line="52"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="focus_in">
        <callback name="focus_in">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
            <parameter name="input_method" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="focus_out">
        <callback name="focus_out">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="request_surrounding">
        <callback name="request_surrounding">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="42"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_surrounding">
        <callback name="delete_surrounding">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="len" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="commit_text">
        <callback name="commit_text">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_preedit_text">
        <callback name="set_preedit_text">
          <source-position filename="../clutter/clutter/clutter-input-focus.h"
                           line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="focus" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
            <parameter name="preedit" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="cursor" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InputMethod"
           c:symbol-prefix="input_method"
           c:type="ClutterInputMethod"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterInputMethod"
           glib:get-type="clutter_input_method_get_type"
           glib:type-struct="InputMethodClass">
      <source-position filename="../clutter/clutter/clutter-input-method.h"
                       line="58"/>
      <virtual-method name="filter_key_event">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_in" invoker="focus_in">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="focus_out" invoker="focus_out">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reset">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_cursor_location">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cursor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="anchor" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_content_hints">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="hint" transfer-ownership="none">
            <type name="InputContentHintFlags"
                  c:type="ClutterInputContentHintFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update_content_purpose">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="purpose" transfer-ownership="none">
            <type name="InputContentPurpose"
                  c:type="ClutterInputContentPurpose"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="commit" c:identifier="clutter_input_method_commit">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_surrounding"
              c:identifier="clutter_input_method_delete_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="focus_in" c:identifier="clutter_input_method_focus_in">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="focus" transfer-ownership="none">
            <type name="InputFocus" c:type="ClutterInputFocus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="focus_out" c:identifier="clutter_input_method_focus_out">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="forward_key"
              c:identifier="clutter_input_method_forward_key">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="keyval" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="keycode" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="time_" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="press" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_key_event"
              c:identifier="clutter_input_method_notify_key_event">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
          <parameter name="filtered" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="request_surrounding"
              c:identifier="clutter_input_method_request_surrounding">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_input_panel_state"
              c:identifier="clutter_input_method_set_input_panel_state">
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="InputPanelState" c:type="ClutterInputPanelState"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_preedit_text"
              c:identifier="clutter_input_method_set_preedit_text">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-input-method.c"
             line="343">Sets the preedit text on the current input focus.</doc>
        <source-position filename="../clutter/clutter/clutter-input-method.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="im" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-method.c"
                 line="345">a #ClutterInputMethod</doc>
            <type name="InputMethod" c:type="ClutterInputMethod*"/>
          </instance-parameter>
          <parameter name="preedit"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-method.c"
                 line="346">the preedit text, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-input-method.c"
                 line="347">the cursor</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-show-preedit" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="content-hints" writable="1" transfer-ownership="none">
        <type name="InputContentHintFlags"/>
      </property>
      <property name="content-purpose" writable="1" transfer-ownership="none">
        <type name="InputContentPurpose"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="commit" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="cursor-location-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Graphene.Rect"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="delete-surrounding" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="input-panel-state" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="InputPanelState"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="request-surrounding" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="InputMethodClass"
            c:type="ClutterInputMethodClass"
            glib:is-gtype-struct-for="InputMethod">
      <source-position filename="../clutter/clutter/clutter-input-method.h"
                       line="58"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="focus_in">
        <callback name="focus_in">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="InputFocus" c:type="ClutterInputFocus*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="focus_out">
        <callback name="focus_out">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_cursor_location">
        <callback name="set_cursor_location">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="rect" transfer-ownership="none">
              <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_surrounding">
        <callback name="set_surrounding">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="text" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="cursor" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="anchor" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_content_hints">
        <callback name="update_content_hints">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="hint" transfer-ownership="none">
              <type name="InputContentHintFlags"
                    c:type="ClutterInputContentHintFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="update_content_purpose">
        <callback name="update_content_purpose">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="purpose" transfer-ownership="none">
              <type name="InputContentPurpose"
                    c:type="ClutterInputContentPurpose"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="filter_key_event">
        <callback name="filter_key_event">
          <source-position filename="../clutter/clutter/clutter-input-method.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="im" transfer-ownership="none">
              <type name="InputMethod" c:type="ClutterInputMethod*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="Event" c:type="const ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="InputMode"
                 version="1.6"
                 glib:type-name="ClutterInputMode"
                 glib:get-type="clutter_input_mode_get_type"
                 c:type="ClutterInputMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1064">The mode for input devices available.</doc>
      <member name="master"
              value="0"
              c:identifier="CLUTTER_INPUT_MODE_MASTER"
              glib:nick="master">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1066">A master, virtual device</doc>
      </member>
      <member name="slave"
              value="1"
              c:identifier="CLUTTER_INPUT_MODE_SLAVE"
              glib:nick="slave">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1067">A slave, physical device, attached to
  a master device</doc>
      </member>
      <member name="floating"
              value="2"
              c:identifier="CLUTTER_INPUT_MODE_FLOATING"
              glib:nick="floating">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1069">A slave, physical device, not attached
  to a master device</doc>
      </member>
    </enumeration>
    <enumeration name="InputPanelState"
                 glib:type-name="ClutterInputPanelState"
                 glib:get-type="clutter_input_panel_state_get_type"
                 c:type="ClutterInputPanelState">
      <member name="off"
              value="0"
              c:identifier="CLUTTER_INPUT_PANEL_STATE_OFF"
              glib:nick="off">
      </member>
      <member name="on"
              value="1"
              c:identifier="CLUTTER_INPUT_PANEL_STATE_ON"
              glib:nick="on">
      </member>
      <member name="toggle"
              value="2"
              c:identifier="CLUTTER_INPUT_PANEL_STATE_TOGGLE"
              glib:nick="toggle">
      </member>
    </enumeration>
    <enumeration name="Interpolation"
                 version="1.2"
                 deprecated="1"
                 deprecated-version="1.22"
                 glib:type-name="ClutterInterpolation"
                 glib:get-type="clutter_interpolation_get_type"
                 c:type="ClutterInterpolation">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="601">The mode of interpolation between key frames</doc>
      <member name="linear"
              value="0"
              c:identifier="CLUTTER_INTERPOLATION_LINEAR"
              glib:nick="linear">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="603">linear interpolation</doc>
      </member>
      <member name="cubic"
              value="1"
              c:identifier="CLUTTER_INTERPOLATION_CUBIC"
              glib:nick="cubic">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="604">cubic interpolation</doc>
      </member>
    </enumeration>
    <class name="Interval"
           c:symbol-prefix="interval"
           c:type="ClutterInterval"
           version="1.0"
           parent="GObject.InitiallyUnowned"
           glib:type-name="ClutterInterval"
           glib:get-type="clutter_interval_get_type"
           glib:type-struct="IntervalClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-interval.h"
           line="46">The #ClutterInterval structure contains only private data and should
be accessed using the provided functions.</doc>
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="93"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_interval_new"
                   version="1.0"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="740">Creates a new #ClutterInterval holding values of type @gtype.

This function avoids using a #GValue for the initial and final values
of the interval:

|[
  interval = clutter_interval_new (G_TYPE_FLOAT, 0.0, 1.0);
  interval = clutter_interval_new (G_TYPE_BOOLEAN, FALSE, TRUE);
  interval = clutter_interval_new (G_TYPE_INT, 0, 360);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="756">the newly created #ClutterInterval</doc>
          <type name="Interval" c:type="ClutterInterval*"/>
        </return-value>
        <parameters>
          <parameter name="gtype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="742">the type of the values in the interval</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="743">the initial value and the final value of the interval</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_values"
                   c:identifier="clutter_interval_new_with_values"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="784">Creates a new #ClutterInterval of type @gtype, between @initial
and @final.

This function is useful for language bindings.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="795">the newly created #ClutterInterval</doc>
          <type name="Interval" c:type="ClutterInterval*"/>
        </return-value>
        <parameters>
          <parameter name="gtype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="786">the type of the values in the interval</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="initial"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="787">a #GValue holding the initial value of the interval</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="final"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="788">a #GValue holding the final value of the interval</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="register_progress_func"
                c:identifier="clutter_interval_register_progress_func"
                version="1.0"
                introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-util.c"
             line="590">Sets the progress function for a given @value_type, like:

|[
  clutter_interval_register_progress_func (MY_TYPE_FOO,
                                           my_foo_progress);
]|

Whenever a #ClutterInterval instance using the default
#ClutterInterval::compute_value implementation is set as an
interval between two #GValue of type @value_type, it will call
@func to establish the value depending on the given progress,
for instance:

|[
  static gboolean
  my_int_progress (const GValue *a,
                   const GValue *b,
                   gdouble       progress,
                   GValue       *retval)
  {
    gint ia = g_value_get_int (a);
    gint ib = g_value_get_int (b);
    gint res = factor * (ib - ia) + ia;

    g_value_set_int (retval, res);

    return TRUE;
  }

  clutter_interval_register_progress_func (G_TYPE_INT, my_int_progress);
]|

To unset a previously set progress function of a #GType, pass %NULL
for @func.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="418"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-util.c"
                 line="592">a #GType</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="func" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-util.c"
                 line="593">a #ClutterProgressFunc, or %NULL to unset a previously
  set progress function</doc>
            <type name="ProgressFunc" c:type="ClutterProgressFunc"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="compute_value"
                      invoker="compute_value"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1140">Computes the value between the @interval boundaries given the
progress @factor and copies it into @value.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1149">%TRUE if the operation was successful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1142">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1143">the progress factor, between 0 and 1</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1144">return location for an initialized #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="validate" invoker="validate" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1118">Validates the initial and final values of @interval against
a #GParamSpec.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1126">%TRUE if the #ClutterInterval is valid, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1120">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="pspec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1121">a #GParamSpec</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="clone" c:identifier="clutter_interval_clone" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="815">Creates a copy of @interval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="107"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="821">the newly created #ClutterInterval</doc>
          <type name="Interval" c:type="ClutterInterval*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="817">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="compute"
              c:identifier="clutter_interval_compute"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1166">Computes the value between the @interval boundaries given the
progress @factor

Unlike clutter_interval_compute_value(), this function will
return a const pointer to the computed value

You should use this function if you immediately pass the computed
value to another function that makes a copy of it, like
g_object_set_property()</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1181">a pointer to the computed value,
  or %NULL if the computation was not successfull</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1168">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1169">the progress factor, between 0 and 1</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="compute_value"
              c:identifier="clutter_interval_compute_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1140">Computes the value between the @interval boundaries given the
progress @factor and copies it into @value.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1149">%TRUE if the operation was successful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1142">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1143">the progress factor, between 0 and 1</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1144">return location for an initialized #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_final_value"
              c:identifier="clutter_interval_get_final_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="975">Retrieves the final value of @interval and copies
it into @value.

The passed #GValue must be initialized to the value held by
the #ClutterInterval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="977">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="978">a #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_initial_value"
              c:identifier="clutter_interval_get_initial_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="912">Retrieves the initial value of @interval and copies
it into @value.

The passed #GValue must be initialized to the value held by
the #ClutterInterval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="914">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="915">a #GValue</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interval"
              c:identifier="clutter_interval_get_interval"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1084">Variable arguments wrapper for clutter_interval_get_initial_value()
and clutter_interval_get_final_value() that avoids using the
#GValue arguments:

|[
  gint a = 0, b = 0;
  clutter_interval_get_interval (interval, &amp;a, &amp;b);
]|

This function is meant for the convenience of the C API; bindings
should reimplement this function using the #GValue-based API.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1086">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1087">return locations for the initial and final values of
  the interval</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_type"
              c:identifier="clutter_interval_get_value_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="847">Retrieves the #GType of the values inside @interval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="853">the type of the value, or G_TYPE_INVALID</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="849">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_valid"
              c:identifier="clutter_interval_is_valid"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1210">Checks if the @interval has a valid initial and final values.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="155"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1216">%TRUE if the #ClutterInterval has an initial and
  final values, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1212">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_final_value"
              c:identifier="clutter_interval_peek_final_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1024">Gets the pointer to the final value of @interval</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1030">the final value of the interval.
  The value is owned by the #ClutterInterval and it should not be
  modified or freed</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1026">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_initial_value"
              c:identifier="clutter_interval_peek_initial_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="935">Gets the pointer to the initial value of @interval</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="941">the initial value of the interval.
  The value is owned by the #ClutterInterval and it should not be
  modified or freed</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="937">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_final"
              c:identifier="clutter_interval_set_final"
              shadowed-by="set_final_value"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="998">Variadic arguments version of clutter_interval_set_final_value().

This function is meant as a convenience for the C API.

Language bindings should use clutter_interval_set_final_value() instead.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1000">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1001">the final value of the interval</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_final_value"
              c:identifier="clutter_interval_set_final_value"
              shadows="set_final"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="955">Sets the final value of @interval to @value. The value is
copied inside the #ClutterInterval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="957">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="958">a #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_initial"
              c:identifier="clutter_interval_set_initial"
              shadowed-by="set_initial_value"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="885">Variadic arguments version of clutter_interval_set_initial_value().

This function is meant as a convenience for the C API.

Language bindings should use clutter_interval_set_initial_value()
instead.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="887">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="888">the initial value of the interval.</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_initial_value"
              c:identifier="clutter_interval_set_initial_value"
              shadows="set_initial"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="865">Sets the initial value of @interval to @value. The value is copied
inside the #ClutterInterval.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="867">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="868">a #GValue</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interval"
              c:identifier="clutter_interval_set_interval"
              version="1.0"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1044">Variable arguments wrapper for clutter_interval_set_initial_value()
and clutter_interval_set_final_value() that avoids using the
#GValue arguments:

|[
  clutter_interval_set_interval (interval, 0, 50);
  clutter_interval_set_interval (interval, 1.0, 0.0);
  clutter_interval_set_interval (interval, FALSE, TRUE);
]|

This function is meant for the convenience of the C API; bindings
should reimplement this function using the #GValue-based API.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1046">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1047">the initial and final values of the interval</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="validate"
              c:identifier="clutter_interval_validate"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="1118">Validates the initial and final values of @interval against
a #GParamSpec.</doc>
        <source-position filename="../clutter/clutter/clutter-interval.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-interval.c"
               line="1126">%TRUE if the #ClutterInterval is valid, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="interval" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1120">a #ClutterInterval</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </instance-parameter>
          <parameter name="pspec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1121">a #GParamSpec</doc>
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </parameter>
        </parameters>
      </method>
      <property name="final"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="557">The final value of the interval.</doc>
        <type name="GObject.Value"/>
      </property>
      <property name="initial"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="542">The initial value of the interval.</doc>
        <type name="GObject.Value"/>
      </property>
      <property name="value-type"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-interval.c"
             line="526">The type of the values in the interval.</doc>
        <type name="GType" c:type="GType"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="IntervalPrivate" c:type="ClutterIntervalPrivate*"/>
      </field>
    </class>
    <record name="IntervalClass"
            c:type="ClutterIntervalClass"
            glib:is-gtype-struct-for="Interval"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-interval.h"
           line="62">The #ClutterIntervalClass contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="93"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="validate">
        <callback name="validate">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1126">%TRUE if the #ClutterInterval is valid, %FALSE otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="interval" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-interval.c"
                   line="1120">a #ClutterInterval</doc>
              <type name="Interval" c:type="ClutterInterval*"/>
            </parameter>
            <parameter name="pspec" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-interval.c"
                   line="1121">a #GParamSpec</doc>
              <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="compute_value">
        <callback name="compute_value">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-interval.c"
                 line="1149">%TRUE if the operation was successful</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="interval" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-interval.c"
                   line="1142">a #ClutterInterval</doc>
              <type name="Interval" c:type="ClutterInterval*"/>
            </parameter>
            <parameter name="factor" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-interval.c"
                   line="1143">the progress factor, between 0 and 1</doc>
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
            <parameter name="value"
                       direction="out"
                       caller-allocates="1"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-interval.c"
                   line="1144">return location for an initialized #GValue</doc>
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/clutter-interval.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="IntervalPrivate"
            c:type="ClutterIntervalPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-interval.h"
                       line="43"/>
    </record>
    <function-macro name="KEYFRAME_TRANSITION"
                    c:identifier="CLUTTER_KEYFRAME_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="KEYFRAME_TRANSITION_CLASS"
                    c:identifier="CLUTTER_KEYFRAME_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="KEYFRAME_TRANSITION_GET_CLASS"
                    c:identifier="CLUTTER_KEYFRAME_TRANSITION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="KEY_0" value="48" c:type="CLUTTER_KEY_0">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="397"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_1" value="49" c:type="CLUTTER_KEY_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="398"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_2" value="50" c:type="CLUTTER_KEY_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="399"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3" value="51" c:type="CLUTTER_KEY_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="400"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_AltCursor"
              value="64784"
              c:type="CLUTTER_KEY_3270_AltCursor">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="365"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Attn"
              value="64782"
              c:type="CLUTTER_KEY_3270_Attn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="363"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_BackTab"
              value="64773"
              c:type="CLUTTER_KEY_3270_BackTab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="354"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_ChangeScreen"
              value="64793"
              c:type="CLUTTER_KEY_3270_ChangeScreen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="374"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Copy"
              value="64789"
              c:type="CLUTTER_KEY_3270_Copy">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="370"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_CursorBlink"
              value="64783"
              c:type="CLUTTER_KEY_3270_CursorBlink">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="364"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_CursorSelect"
              value="64796"
              c:type="CLUTTER_KEY_3270_CursorSelect">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="377"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_DeleteWord"
              value="64794"
              c:type="CLUTTER_KEY_3270_DeleteWord">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="375"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Duplicate"
              value="64769"
              c:type="CLUTTER_KEY_3270_Duplicate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="350"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Enter"
              value="64798"
              c:type="CLUTTER_KEY_3270_Enter">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="379"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_EraseEOF"
              value="64774"
              c:type="CLUTTER_KEY_3270_EraseEOF">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="355"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_EraseInput"
              value="64775"
              c:type="CLUTTER_KEY_3270_EraseInput">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="356"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_ExSelect"
              value="64795"
              c:type="CLUTTER_KEY_3270_ExSelect">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="376"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_FieldMark"
              value="64770"
              c:type="CLUTTER_KEY_3270_FieldMark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="351"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Ident"
              value="64787"
              c:type="CLUTTER_KEY_3270_Ident">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="368"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Jump"
              value="64786"
              c:type="CLUTTER_KEY_3270_Jump">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="367"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_KeyClick"
              value="64785"
              c:type="CLUTTER_KEY_3270_KeyClick">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="366"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Left2"
              value="64772"
              c:type="CLUTTER_KEY_3270_Left2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="353"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA1" value="64778" c:type="CLUTTER_KEY_3270_PA1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="359"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA2" value="64779" c:type="CLUTTER_KEY_3270_PA2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="360"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PA3" value="64780" c:type="CLUTTER_KEY_3270_PA3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="361"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Play"
              value="64790"
              c:type="CLUTTER_KEY_3270_Play">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="371"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_PrintScreen"
              value="64797"
              c:type="CLUTTER_KEY_3270_PrintScreen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="378"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Quit"
              value="64777"
              c:type="CLUTTER_KEY_3270_Quit">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="358"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Record"
              value="64792"
              c:type="CLUTTER_KEY_3270_Record">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="373"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Reset"
              value="64776"
              c:type="CLUTTER_KEY_3270_Reset">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="357"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Right2"
              value="64771"
              c:type="CLUTTER_KEY_3270_Right2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="352"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Rule"
              value="64788"
              c:type="CLUTTER_KEY_3270_Rule">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="369"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Setup"
              value="64791"
              c:type="CLUTTER_KEY_3270_Setup">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="372"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_3270_Test"
              value="64781"
              c:type="CLUTTER_KEY_3270_Test">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="362"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_4" value="52" c:type="CLUTTER_KEY_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="401"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_5" value="53" c:type="CLUTTER_KEY_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="402"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_6" value="54" c:type="CLUTTER_KEY_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="403"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_7" value="55" c:type="CLUTTER_KEY_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="404"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_8" value="56" c:type="CLUTTER_KEY_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="405"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_9" value="57" c:type="CLUTTER_KEY_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="406"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_A" value="65" c:type="CLUTTER_KEY_A">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="414"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AE" value="198" c:type="CLUTTER_KEY_AE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="515"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aacute" value="193" c:type="CLUTTER_KEY_Aacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="510"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abelowdot"
              value="16785056"
              c:type="CLUTTER_KEY_Abelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1650"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abreve" value="451" c:type="CLUTTER_KEY_Abreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="602"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abreveacute"
              value="16785070"
              c:type="CLUTTER_KEY_Abreveacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1664"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevebelowdot"
              value="16785078"
              c:type="CLUTTER_KEY_Abrevebelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1672"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevegrave"
              value="16785072"
              c:type="CLUTTER_KEY_Abrevegrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1666"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevehook"
              value="16785074"
              c:type="CLUTTER_KEY_Abrevehook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1668"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Abrevetilde"
              value="16785076"
              c:type="CLUTTER_KEY_Abrevetilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1670"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AccessX_Enable"
              value="65136"
              c:type="CLUTTER_KEY_AccessX_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="303"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AccessX_Feedback_Enable"
              value="65137"
              c:type="CLUTTER_KEY_AccessX_Feedback_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="304"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflex"
              value="194"
              c:type="CLUTTER_KEY_Acircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="511"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexacute"
              value="16785060"
              c:type="CLUTTER_KEY_Acircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1654"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexbelowdot"
              value="16785068"
              c:type="CLUTTER_KEY_Acircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1662"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexgrave"
              value="16785062"
              c:type="CLUTTER_KEY_Acircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1656"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflexhook"
              value="16785064"
              c:type="CLUTTER_KEY_Acircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1658"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Acircumflextilde"
              value="16785066"
              c:type="CLUTTER_KEY_Acircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1660"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AddFavorite"
              value="269025081"
              c:type="CLUTTER_KEY_AddFavorite">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Adiaeresis"
              value="196"
              c:type="CLUTTER_KEY_Adiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="513"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Agrave" value="192" c:type="CLUTTER_KEY_Agrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="509"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ahook" value="16785058" c:type="CLUTTER_KEY_Ahook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1652"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Alt_L" value="65513" c:type="CLUTTER_KEY_Alt_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Alt_R" value="65514" c:type="CLUTTER_KEY_Alt_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Amacron" value="960" c:type="CLUTTER_KEY_Amacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="672"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aogonek" value="417" c:type="CLUTTER_KEY_Aogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="577"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ApplicationLeft"
              value="269025104"
              c:type="CLUTTER_KEY_ApplicationLeft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ApplicationRight"
              value="269025105"
              c:type="CLUTTER_KEY_ApplicationRight">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_0"
              value="16778848"
              c:type="CLUTTER_KEY_Arabic_0">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="810"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_1"
              value="16778849"
              c:type="CLUTTER_KEY_Arabic_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="811"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_2"
              value="16778850"
              c:type="CLUTTER_KEY_Arabic_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="812"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_3"
              value="16778851"
              c:type="CLUTTER_KEY_Arabic_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="813"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_4"
              value="16778852"
              c:type="CLUTTER_KEY_Arabic_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="814"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_5"
              value="16778853"
              c:type="CLUTTER_KEY_Arabic_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="815"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_6"
              value="16778854"
              c:type="CLUTTER_KEY_Arabic_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="816"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_7"
              value="16778855"
              c:type="CLUTTER_KEY_Arabic_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="817"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_8"
              value="16778856"
              c:type="CLUTTER_KEY_Arabic_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="818"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_9"
              value="16778857"
              c:type="CLUTTER_KEY_Arabic_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="819"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ain"
              value="1497"
              c:type="CLUTTER_KEY_Arabic_ain">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="846"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_alef"
              value="1479"
              c:type="CLUTTER_KEY_Arabic_alef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="828"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_alefmaksura"
              value="1513"
              c:type="CLUTTER_KEY_Arabic_alefmaksura">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="858"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_beh"
              value="1480"
              c:type="CLUTTER_KEY_Arabic_beh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="829"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_comma"
              value="1452"
              c:type="CLUTTER_KEY_Arabic_comma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="808"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dad"
              value="1494"
              c:type="CLUTTER_KEY_Arabic_dad">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="843"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dal"
              value="1487"
              c:type="CLUTTER_KEY_Arabic_dal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="836"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_damma"
              value="1519"
              c:type="CLUTTER_KEY_Arabic_damma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="864"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_dammatan"
              value="1516"
              c:type="CLUTTER_KEY_Arabic_dammatan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="861"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ddal"
              value="16778888"
              c:type="CLUTTER_KEY_Arabic_ddal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="806"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_farsi_yeh"
              value="16778956"
              c:type="CLUTTER_KEY_Arabic_farsi_yeh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="878"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fatha"
              value="1518"
              c:type="CLUTTER_KEY_Arabic_fatha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="863"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fathatan"
              value="1515"
              c:type="CLUTTER_KEY_Arabic_fathatan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="860"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_feh"
              value="1505"
              c:type="CLUTTER_KEY_Arabic_feh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="849"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_fullstop"
              value="16778964"
              c:type="CLUTTER_KEY_Arabic_fullstop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="809"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_gaf"
              value="16778927"
              c:type="CLUTTER_KEY_Arabic_gaf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="874"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ghain"
              value="1498"
              c:type="CLUTTER_KEY_Arabic_ghain">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="847"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ha" value="1511" c:type="CLUTTER_KEY_Arabic_ha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="855"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hah"
              value="1485"
              c:type="CLUTTER_KEY_Arabic_hah">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="834"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza"
              value="1473"
              c:type="CLUTTER_KEY_Arabic_hamza">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="822"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza_above"
              value="16778836"
              c:type="CLUTTER_KEY_Arabic_hamza_above">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="869"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamza_below"
              value="16778837"
              c:type="CLUTTER_KEY_Arabic_hamza_below">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="870"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonalef"
              value="1475"
              c:type="CLUTTER_KEY_Arabic_hamzaonalef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="824"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonwaw"
              value="1476"
              c:type="CLUTTER_KEY_Arabic_hamzaonwaw">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="825"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaonyeh"
              value="1478"
              c:type="CLUTTER_KEY_Arabic_hamzaonyeh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="827"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_hamzaunderalef"
              value="1477"
              c:type="CLUTTER_KEY_Arabic_hamzaunderalef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="826"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh"
              value="1511"
              c:type="CLUTTER_KEY_Arabic_heh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="856"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh_doachashmee"
              value="16778942"
              c:type="CLUTTER_KEY_Arabic_heh_doachashmee">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="876"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_heh_goal"
              value="16778945"
              c:type="CLUTTER_KEY_Arabic_heh_goal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="880"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_jeem"
              value="1484"
              c:type="CLUTTER_KEY_Arabic_jeem">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="833"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_jeh"
              value="16778904"
              c:type="CLUTTER_KEY_Arabic_jeh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="871"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kaf"
              value="1507"
              c:type="CLUTTER_KEY_Arabic_kaf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="851"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kasra"
              value="1520"
              c:type="CLUTTER_KEY_Arabic_kasra">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="865"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_kasratan"
              value="1517"
              c:type="CLUTTER_KEY_Arabic_kasratan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="862"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_keheh"
              value="16778921"
              c:type="CLUTTER_KEY_Arabic_keheh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="873"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_khah"
              value="1486"
              c:type="CLUTTER_KEY_Arabic_khah">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="835"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_lam"
              value="1508"
              c:type="CLUTTER_KEY_Arabic_lam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="852"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_madda_above"
              value="16778835"
              c:type="CLUTTER_KEY_Arabic_madda_above">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="868"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_maddaonalef"
              value="1474"
              c:type="CLUTTER_KEY_Arabic_maddaonalef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="823"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_meem"
              value="1509"
              c:type="CLUTTER_KEY_Arabic_meem">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="853"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_noon"
              value="1510"
              c:type="CLUTTER_KEY_Arabic_noon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="854"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_noon_ghunna"
              value="16778938"
              c:type="CLUTTER_KEY_Arabic_noon_ghunna">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="875"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_peh"
              value="16778878"
              c:type="CLUTTER_KEY_Arabic_peh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="804"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_percent"
              value="16778858"
              c:type="CLUTTER_KEY_Arabic_percent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="801"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_qaf"
              value="1506"
              c:type="CLUTTER_KEY_Arabic_qaf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="850"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_question_mark"
              value="1471"
              c:type="CLUTTER_KEY_Arabic_question_mark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="821"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_ra" value="1489" c:type="CLUTTER_KEY_Arabic_ra">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="838"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_rreh"
              value="16778897"
              c:type="CLUTTER_KEY_Arabic_rreh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="807"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sad"
              value="1493"
              c:type="CLUTTER_KEY_Arabic_sad">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="842"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_seen"
              value="1491"
              c:type="CLUTTER_KEY_Arabic_seen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="840"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_semicolon"
              value="1467"
              c:type="CLUTTER_KEY_Arabic_semicolon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="820"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_shadda"
              value="1521"
              c:type="CLUTTER_KEY_Arabic_shadda">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="866"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sheen"
              value="1492"
              c:type="CLUTTER_KEY_Arabic_sheen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="841"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_sukun"
              value="1522"
              c:type="CLUTTER_KEY_Arabic_sukun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="867"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_superscript_alef"
              value="16778864"
              c:type="CLUTTER_KEY_Arabic_superscript_alef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="802"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_switch"
              value="65406"
              c:type="CLUTTER_KEY_Arabic_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="881"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tah"
              value="1495"
              c:type="CLUTTER_KEY_Arabic_tah">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="844"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tatweel"
              value="1504"
              c:type="CLUTTER_KEY_Arabic_tatweel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="848"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tcheh"
              value="16778886"
              c:type="CLUTTER_KEY_Arabic_tcheh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="805"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_teh"
              value="1482"
              c:type="CLUTTER_KEY_Arabic_teh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="831"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tehmarbuta"
              value="1481"
              c:type="CLUTTER_KEY_Arabic_tehmarbuta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="830"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_thal"
              value="1488"
              c:type="CLUTTER_KEY_Arabic_thal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="837"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_theh"
              value="1483"
              c:type="CLUTTER_KEY_Arabic_theh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="832"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_tteh"
              value="16778873"
              c:type="CLUTTER_KEY_Arabic_tteh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="803"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_veh"
              value="16778916"
              c:type="CLUTTER_KEY_Arabic_veh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="872"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_waw"
              value="1512"
              c:type="CLUTTER_KEY_Arabic_waw">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="857"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_yeh"
              value="1514"
              c:type="CLUTTER_KEY_Arabic_yeh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="859"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_yeh_baree"
              value="16778962"
              c:type="CLUTTER_KEY_Arabic_yeh_baree">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="879"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_zah"
              value="1496"
              c:type="CLUTTER_KEY_Arabic_zah">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="845"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Arabic_zain"
              value="1490"
              c:type="CLUTTER_KEY_Arabic_zain">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="839"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Aring" value="197" c:type="CLUTTER_KEY_Aring">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="514"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_AT"
              value="16778552"
              c:type="CLUTTER_KEY_Armenian_AT">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1530"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_AYB"
              value="16778545"
              c:type="CLUTTER_KEY_Armenian_AYB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1516"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_BEN"
              value="16778546"
              c:type="CLUTTER_KEY_Armenian_BEN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1518"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_CHA"
              value="16778569"
              c:type="CLUTTER_KEY_Armenian_CHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1564"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_DA"
              value="16778548"
              c:type="CLUTTER_KEY_Armenian_DA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1522"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_DZA"
              value="16778561"
              c:type="CLUTTER_KEY_Armenian_DZA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1548"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_E"
              value="16778551"
              c:type="CLUTTER_KEY_Armenian_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1528"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_FE"
              value="16778582"
              c:type="CLUTTER_KEY_Armenian_FE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1590"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_GHAT"
              value="16778562"
              c:type="CLUTTER_KEY_Armenian_GHAT">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1550"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_GIM"
              value="16778547"
              c:type="CLUTTER_KEY_Armenian_GIM">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1520"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_HI"
              value="16778565"
              c:type="CLUTTER_KEY_Armenian_HI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1556"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_HO"
              value="16778560"
              c:type="CLUTTER_KEY_Armenian_HO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1546"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_INI"
              value="16778555"
              c:type="CLUTTER_KEY_Armenian_INI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1536"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_JE"
              value="16778571"
              c:type="CLUTTER_KEY_Armenian_JE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1568"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KE"
              value="16778580"
              c:type="CLUTTER_KEY_Armenian_KE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1586"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KEN"
              value="16778559"
              c:type="CLUTTER_KEY_Armenian_KEN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1544"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_KHE"
              value="16778557"
              c:type="CLUTTER_KEY_Armenian_KHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1540"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_LYUN"
              value="16778556"
              c:type="CLUTTER_KEY_Armenian_LYUN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1538"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_MEN"
              value="16778564"
              c:type="CLUTTER_KEY_Armenian_MEN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1554"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_NU"
              value="16778566"
              c:type="CLUTTER_KEY_Armenian_NU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1558"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_O"
              value="16778581"
              c:type="CLUTTER_KEY_Armenian_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1588"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_PE"
              value="16778570"
              c:type="CLUTTER_KEY_Armenian_PE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1566"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_PYUR"
              value="16778579"
              c:type="CLUTTER_KEY_Armenian_PYUR">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1584"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_RA"
              value="16778572"
              c:type="CLUTTER_KEY_Armenian_RA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1570"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_RE"
              value="16778576"
              c:type="CLUTTER_KEY_Armenian_RE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1578"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_SE"
              value="16778573"
              c:type="CLUTTER_KEY_Armenian_SE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1572"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_SHA"
              value="16778567"
              c:type="CLUTTER_KEY_Armenian_SHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1560"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TCHE"
              value="16778563"
              c:type="CLUTTER_KEY_Armenian_TCHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1552"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TO"
              value="16778553"
              c:type="CLUTTER_KEY_Armenian_TO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1532"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TSA"
              value="16778558"
              c:type="CLUTTER_KEY_Armenian_TSA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1542"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TSO"
              value="16778577"
              c:type="CLUTTER_KEY_Armenian_TSO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1580"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_TYUN"
              value="16778575"
              c:type="CLUTTER_KEY_Armenian_TYUN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1576"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VEV"
              value="16778574"
              c:type="CLUTTER_KEY_Armenian_VEV">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1574"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VO"
              value="16778568"
              c:type="CLUTTER_KEY_Armenian_VO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1562"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_VYUN"
              value="16778578"
              c:type="CLUTTER_KEY_Armenian_VYUN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1582"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_YECH"
              value="16778549"
              c:type="CLUTTER_KEY_Armenian_YECH">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1524"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ZA"
              value="16778550"
              c:type="CLUTTER_KEY_Armenian_ZA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1526"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ZHE"
              value="16778554"
              c:type="CLUTTER_KEY_Armenian_ZHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1534"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_accent"
              value="16778587"
              c:type="CLUTTER_KEY_Armenian_accent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1512"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_amanak"
              value="16778588"
              c:type="CLUTTER_KEY_Armenian_amanak">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1511"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_apostrophe"
              value="16778586"
              c:type="CLUTTER_KEY_Armenian_apostrophe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1592"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_at"
              value="16778600"
              c:type="CLUTTER_KEY_Armenian_at">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1531"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ayb"
              value="16778593"
              c:type="CLUTTER_KEY_Armenian_ayb">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1517"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ben"
              value="16778594"
              c:type="CLUTTER_KEY_Armenian_ben">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1519"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_but"
              value="16778589"
              c:type="CLUTTER_KEY_Armenian_but">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1507"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_cha"
              value="16778617"
              c:type="CLUTTER_KEY_Armenian_cha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1565"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_da"
              value="16778596"
              c:type="CLUTTER_KEY_Armenian_da">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1523"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_dza"
              value="16778609"
              c:type="CLUTTER_KEY_Armenian_dza">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1549"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_e"
              value="16778599"
              c:type="CLUTTER_KEY_Armenian_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1529"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_exclam"
              value="16778588"
              c:type="CLUTTER_KEY_Armenian_exclam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1510"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_fe"
              value="16778630"
              c:type="CLUTTER_KEY_Armenian_fe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1591"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_full_stop"
              value="16778633"
              c:type="CLUTTER_KEY_Armenian_full_stop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1504"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ghat"
              value="16778610"
              c:type="CLUTTER_KEY_Armenian_ghat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1551"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_gim"
              value="16778595"
              c:type="CLUTTER_KEY_Armenian_gim">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1521"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_hi"
              value="16778613"
              c:type="CLUTTER_KEY_Armenian_hi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1557"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ho"
              value="16778608"
              c:type="CLUTTER_KEY_Armenian_ho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1547"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_hyphen"
              value="16778634"
              c:type="CLUTTER_KEY_Armenian_hyphen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1508"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ini"
              value="16778603"
              c:type="CLUTTER_KEY_Armenian_ini">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1537"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_je"
              value="16778619"
              c:type="CLUTTER_KEY_Armenian_je">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1569"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ke"
              value="16778628"
              c:type="CLUTTER_KEY_Armenian_ke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1587"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ken"
              value="16778607"
              c:type="CLUTTER_KEY_Armenian_ken">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1545"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_khe"
              value="16778605"
              c:type="CLUTTER_KEY_Armenian_khe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1541"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ligature_ew"
              value="16778631"
              c:type="CLUTTER_KEY_Armenian_ligature_ew">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1503"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_lyun"
              value="16778604"
              c:type="CLUTTER_KEY_Armenian_lyun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1539"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_men"
              value="16778612"
              c:type="CLUTTER_KEY_Armenian_men">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1555"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_nu"
              value="16778614"
              c:type="CLUTTER_KEY_Armenian_nu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1559"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_o"
              value="16778629"
              c:type="CLUTTER_KEY_Armenian_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1589"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_paruyk"
              value="16778590"
              c:type="CLUTTER_KEY_Armenian_paruyk">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1515"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_pe"
              value="16778618"
              c:type="CLUTTER_KEY_Armenian_pe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1567"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_pyur"
              value="16778627"
              c:type="CLUTTER_KEY_Armenian_pyur">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1585"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_question"
              value="16778590"
              c:type="CLUTTER_KEY_Armenian_question">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1514"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_ra"
              value="16778620"
              c:type="CLUTTER_KEY_Armenian_ra">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1571"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_re"
              value="16778624"
              c:type="CLUTTER_KEY_Armenian_re">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1579"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_se"
              value="16778621"
              c:type="CLUTTER_KEY_Armenian_se">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1573"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_separation_mark"
              value="16778589"
              c:type="CLUTTER_KEY_Armenian_separation_mark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1506"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_sha"
              value="16778615"
              c:type="CLUTTER_KEY_Armenian_sha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1561"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_shesht"
              value="16778587"
              c:type="CLUTTER_KEY_Armenian_shesht">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1513"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tche"
              value="16778611"
              c:type="CLUTTER_KEY_Armenian_tche">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1553"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_to"
              value="16778601"
              c:type="CLUTTER_KEY_Armenian_to">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1533"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tsa"
              value="16778606"
              c:type="CLUTTER_KEY_Armenian_tsa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1543"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tso"
              value="16778625"
              c:type="CLUTTER_KEY_Armenian_tso">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1581"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_tyun"
              value="16778623"
              c:type="CLUTTER_KEY_Armenian_tyun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1577"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_verjaket"
              value="16778633"
              c:type="CLUTTER_KEY_Armenian_verjaket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1505"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vev"
              value="16778622"
              c:type="CLUTTER_KEY_Armenian_vev">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1575"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vo"
              value="16778616"
              c:type="CLUTTER_KEY_Armenian_vo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1563"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_vyun"
              value="16778626"
              c:type="CLUTTER_KEY_Armenian_vyun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1583"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_yech"
              value="16778597"
              c:type="CLUTTER_KEY_Armenian_yech">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1525"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_yentamna"
              value="16778634"
              c:type="CLUTTER_KEY_Armenian_yentamna">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1509"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_za"
              value="16778598"
              c:type="CLUTTER_KEY_Armenian_za">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1527"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Armenian_zhe"
              value="16778602"
              c:type="CLUTTER_KEY_Armenian_zhe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1535"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Atilde" value="195" c:type="CLUTTER_KEY_Atilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="512"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudibleBell_Enable"
              value="65146"
              c:type="CLUTTER_KEY_AudibleBell_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="313"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioCycleTrack"
              value="269025179"
              c:type="CLUTTER_KEY_AudioCycleTrack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2272"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioForward"
              value="269025175"
              c:type="CLUTTER_KEY_AudioForward">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2268"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioLowerVolume"
              value="269025041"
              c:type="CLUTTER_KEY_AudioLowerVolume">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioMedia"
              value="269025074"
              c:type="CLUTTER_KEY_AudioMedia">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioMicMute"
              value="269025202"
              c:type="CLUTTER_KEY_AudioMicMute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2289"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioMute"
              value="269025042"
              c:type="CLUTTER_KEY_AudioMute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioNext"
              value="269025047"
              c:type="CLUTTER_KEY_AudioNext">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPause"
              value="269025073"
              c:type="CLUTTER_KEY_AudioPause">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPlay"
              value="269025044"
              c:type="CLUTTER_KEY_AudioPlay">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioPrev"
              value="269025046"
              c:type="CLUTTER_KEY_AudioPrev">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRaiseVolume"
              value="269025043"
              c:type="CLUTTER_KEY_AudioRaiseVolume">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRandomPlay"
              value="269025177"
              c:type="CLUTTER_KEY_AudioRandomPlay">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2270"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRecord"
              value="269025052"
              c:type="CLUTTER_KEY_AudioRecord">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRepeat"
              value="269025176"
              c:type="CLUTTER_KEY_AudioRepeat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2269"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioRewind"
              value="269025086"
              c:type="CLUTTER_KEY_AudioRewind">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_AudioStop"
              value="269025045"
              c:type="CLUTTER_KEY_AudioStop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Away" value="269025165" c:type="CLUTTER_KEY_Away">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2258"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_B" value="66" c:type="CLUTTER_KEY_B">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="415"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Babovedot"
              value="16784898"
              c:type="CLUTTER_KEY_Babovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="696"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Back" value="269025062" c:type="CLUTTER_KEY_Back">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BackForward"
              value="269025087"
              c:type="CLUTTER_KEY_BackForward">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BackSpace"
              value="65288"
              c:type="CLUTTER_KEY_BackSpace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="35"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Battery"
              value="269025171"
              c:type="CLUTTER_KEY_Battery">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2264"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Begin" value="65368" c:type="CLUTTER_KEY_Begin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="80"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Blue" value="269025190" c:type="CLUTTER_KEY_Blue">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2283"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Bluetooth"
              value="269025172"
              c:type="CLUTTER_KEY_Bluetooth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2265"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Book" value="269025106" c:type="CLUTTER_KEY_Book">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BounceKeys_Enable"
              value="65140"
              c:type="CLUTTER_KEY_BounceKeys_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Break" value="65387" c:type="CLUTTER_KEY_Break">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="91"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_BrightnessAdjust"
              value="269025083"
              c:type="CLUTTER_KEY_BrightnessAdjust">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Byelorussian_SHORTU"
              value="1726"
              c:type="CLUTTER_KEY_Byelorussian_SHORTU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="954"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Byelorussian_shortu"
              value="1710"
              c:type="CLUTTER_KEY_Byelorussian_shortu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="931"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_C" value="67" c:type="CLUTTER_KEY_C">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="416"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CD" value="269025107" c:type="CLUTTER_KEY_CD">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CH" value="65186" c:type="CLUTTER_KEY_CH">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="346"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_C_H" value="65189" c:type="CLUTTER_KEY_C_H">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="349"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_C_h" value="65188" c:type="CLUTTER_KEY_C_h">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="348"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cabovedot" value="709" c:type="CLUTTER_KEY_Cabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="644"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cacute" value="454" c:type="CLUTTER_KEY_Cacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="604"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Calculator"
              value="269025053"
              c:type="CLUTTER_KEY_Calculator">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Calendar"
              value="269025056"
              c:type="CLUTTER_KEY_Calendar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cancel" value="65385" c:type="CLUTTER_KEY_Cancel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="89"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Caps_Lock"
              value="65509"
              c:type="CLUTTER_KEY_Caps_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccaron" value="456" c:type="CLUTTER_KEY_Ccaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="605"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccedilla" value="199" c:type="CLUTTER_KEY_Ccedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="516"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ccircumflex"
              value="710"
              c:type="CLUTTER_KEY_Ccircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="645"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ch" value="65185" c:type="CLUTTER_KEY_Ch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="345"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Clear" value="65291" c:type="CLUTTER_KEY_Clear">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="38"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ClearGrab"
              value="269024801"
              c:type="CLUTTER_KEY_ClearGrab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2303"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Close" value="269025110" c:type="CLUTTER_KEY_Close">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Codeinput"
              value="65335"
              c:type="CLUTTER_KEY_Codeinput">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="46"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ColonSign"
              value="16785569"
              c:type="CLUTTER_KEY_ColonSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1743"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Community"
              value="269025085"
              c:type="CLUTTER_KEY_Community">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ContrastAdjust"
              value="269025058"
              c:type="CLUTTER_KEY_ContrastAdjust">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Control_L"
              value="65507"
              c:type="CLUTTER_KEY_Control_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Control_R"
              value="65508"
              c:type="CLUTTER_KEY_Control_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Copy" value="269025111" c:type="CLUTTER_KEY_Copy">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CruzeiroSign"
              value="16785570"
              c:type="CLUTTER_KEY_CruzeiroSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1744"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cut" value="269025112" c:type="CLUTTER_KEY_Cut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_CycleAngle"
              value="269025180"
              c:type="CLUTTER_KEY_CycleAngle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2273"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_A"
              value="1761"
              c:type="CLUTTER_KEY_Cyrillic_A">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="990"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_BE"
              value="1762"
              c:type="CLUTTER_KEY_Cyrillic_BE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="991"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE"
              value="1790"
              c:type="CLUTTER_KEY_Cyrillic_CHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1019"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE_descender"
              value="16778422"
              c:type="CLUTTER_KEY_Cyrillic_CHE_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="898"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_CHE_vertstroke"
              value="16778424"
              c:type="CLUTTER_KEY_Cyrillic_CHE_vertstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="900"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_DE"
              value="1764"
              c:type="CLUTTER_KEY_Cyrillic_DE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="993"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_DZHE"
              value="1727"
              c:type="CLUTTER_KEY_Cyrillic_DZHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="955"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_E"
              value="1788"
              c:type="CLUTTER_KEY_Cyrillic_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1017"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EF"
              value="1766"
              c:type="CLUTTER_KEY_Cyrillic_EF">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="995"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EL"
              value="1772"
              c:type="CLUTTER_KEY_Cyrillic_EL">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1001"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EM"
              value="1773"
              c:type="CLUTTER_KEY_Cyrillic_EM">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1002"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EN"
              value="1774"
              c:type="CLUTTER_KEY_Cyrillic_EN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1003"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_EN_descender"
              value="16778402"
              c:type="CLUTTER_KEY_Cyrillic_EN_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="890"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ER"
              value="1778"
              c:type="CLUTTER_KEY_Cyrillic_ER">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1007"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ES"
              value="1779"
              c:type="CLUTTER_KEY_Cyrillic_ES">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1008"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_GHE"
              value="1767"
              c:type="CLUTTER_KEY_Cyrillic_GHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="996"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_GHE_bar"
              value="16778386"
              c:type="CLUTTER_KEY_Cyrillic_GHE_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="882"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HA"
              value="1768"
              c:type="CLUTTER_KEY_Cyrillic_HA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="997"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HARDSIGN"
              value="1791"
              c:type="CLUTTER_KEY_Cyrillic_HARDSIGN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1020"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_HA_descender"
              value="16778418"
              c:type="CLUTTER_KEY_Cyrillic_HA_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="896"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_I"
              value="1769"
              c:type="CLUTTER_KEY_Cyrillic_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="998"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_IE"
              value="1765"
              c:type="CLUTTER_KEY_Cyrillic_IE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="994"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_IO"
              value="1715"
              c:type="CLUTTER_KEY_Cyrillic_IO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="937"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_I_macron"
              value="16778466"
              c:type="CLUTTER_KEY_Cyrillic_I_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="906"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_JE"
              value="1720"
              c:type="CLUTTER_KEY_Cyrillic_JE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="945"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA"
              value="1771"
              c:type="CLUTTER_KEY_Cyrillic_KA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1000"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA_descender"
              value="16778394"
              c:type="CLUTTER_KEY_Cyrillic_KA_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="886"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_KA_vertstroke"
              value="16778396"
              c:type="CLUTTER_KEY_Cyrillic_KA_vertstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="888"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_LJE"
              value="1721"
              c:type="CLUTTER_KEY_Cyrillic_LJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="947"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_NJE"
              value="1722"
              c:type="CLUTTER_KEY_Cyrillic_NJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="949"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_O"
              value="1775"
              c:type="CLUTTER_KEY_Cyrillic_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1004"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_O_bar"
              value="16778472"
              c:type="CLUTTER_KEY_Cyrillic_O_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="908"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_PE"
              value="1776"
              c:type="CLUTTER_KEY_Cyrillic_PE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1005"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SCHWA"
              value="16778456"
              c:type="CLUTTER_KEY_Cyrillic_SCHWA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="904"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHA"
              value="1787"
              c:type="CLUTTER_KEY_Cyrillic_SHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1016"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHCHA"
              value="1789"
              c:type="CLUTTER_KEY_Cyrillic_SHCHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1018"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHHA"
              value="16778426"
              c:type="CLUTTER_KEY_Cyrillic_SHHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="902"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SHORTI"
              value="1770"
              c:type="CLUTTER_KEY_Cyrillic_SHORTI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="999"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_SOFTSIGN"
              value="1784"
              c:type="CLUTTER_KEY_Cyrillic_SOFTSIGN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1013"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_TE"
              value="1780"
              c:type="CLUTTER_KEY_Cyrillic_TE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1009"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_TSE"
              value="1763"
              c:type="CLUTTER_KEY_Cyrillic_TSE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="992"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U"
              value="1781"
              c:type="CLUTTER_KEY_Cyrillic_U">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1010"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_macron"
              value="16778478"
              c:type="CLUTTER_KEY_Cyrillic_U_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="910"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_straight"
              value="16778414"
              c:type="CLUTTER_KEY_Cyrillic_U_straight">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="892"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_U_straight_bar"
              value="16778416"
              c:type="CLUTTER_KEY_Cyrillic_U_straight_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="894"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_VE"
              value="1783"
              c:type="CLUTTER_KEY_Cyrillic_VE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1012"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YA"
              value="1777"
              c:type="CLUTTER_KEY_Cyrillic_YA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1006"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YERU"
              value="1785"
              c:type="CLUTTER_KEY_Cyrillic_YERU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1014"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_YU"
              value="1760"
              c:type="CLUTTER_KEY_Cyrillic_YU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="989"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZE"
              value="1786"
              c:type="CLUTTER_KEY_Cyrillic_ZE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1015"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZHE"
              value="1782"
              c:type="CLUTTER_KEY_Cyrillic_ZHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1011"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ZHE_descender"
              value="16778390"
              c:type="CLUTTER_KEY_Cyrillic_ZHE_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="884"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_a"
              value="1729"
              c:type="CLUTTER_KEY_Cyrillic_a">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="958"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_be"
              value="1730"
              c:type="CLUTTER_KEY_Cyrillic_be">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="959"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che"
              value="1758"
              c:type="CLUTTER_KEY_Cyrillic_che">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="987"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che_descender"
              value="16778423"
              c:type="CLUTTER_KEY_Cyrillic_che_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="899"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_che_vertstroke"
              value="16778425"
              c:type="CLUTTER_KEY_Cyrillic_che_vertstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="901"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_de"
              value="1732"
              c:type="CLUTTER_KEY_Cyrillic_de">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="961"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_dzhe"
              value="1711"
              c:type="CLUTTER_KEY_Cyrillic_dzhe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="932"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_e"
              value="1756"
              c:type="CLUTTER_KEY_Cyrillic_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="985"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ef"
              value="1734"
              c:type="CLUTTER_KEY_Cyrillic_ef">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="963"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_el"
              value="1740"
              c:type="CLUTTER_KEY_Cyrillic_el">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="969"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_em"
              value="1741"
              c:type="CLUTTER_KEY_Cyrillic_em">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="970"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_en"
              value="1742"
              c:type="CLUTTER_KEY_Cyrillic_en">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="971"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_en_descender"
              value="16778403"
              c:type="CLUTTER_KEY_Cyrillic_en_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="891"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_er"
              value="1746"
              c:type="CLUTTER_KEY_Cyrillic_er">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="975"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_es"
              value="1747"
              c:type="CLUTTER_KEY_Cyrillic_es">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="976"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ghe"
              value="1735"
              c:type="CLUTTER_KEY_Cyrillic_ghe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="964"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ghe_bar"
              value="16778387"
              c:type="CLUTTER_KEY_Cyrillic_ghe_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="883"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ha"
              value="1736"
              c:type="CLUTTER_KEY_Cyrillic_ha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="965"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ha_descender"
              value="16778419"
              c:type="CLUTTER_KEY_Cyrillic_ha_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="897"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_hardsign"
              value="1759"
              c:type="CLUTTER_KEY_Cyrillic_hardsign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="988"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_i"
              value="1737"
              c:type="CLUTTER_KEY_Cyrillic_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="966"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_i_macron"
              value="16778467"
              c:type="CLUTTER_KEY_Cyrillic_i_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="907"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ie"
              value="1733"
              c:type="CLUTTER_KEY_Cyrillic_ie">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="962"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_io"
              value="1699"
              c:type="CLUTTER_KEY_Cyrillic_io">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="914"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_je"
              value="1704"
              c:type="CLUTTER_KEY_Cyrillic_je">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="922"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka"
              value="1739"
              c:type="CLUTTER_KEY_Cyrillic_ka">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="968"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka_descender"
              value="16778395"
              c:type="CLUTTER_KEY_Cyrillic_ka_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="887"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ka_vertstroke"
              value="16778397"
              c:type="CLUTTER_KEY_Cyrillic_ka_vertstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="889"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_lje"
              value="1705"
              c:type="CLUTTER_KEY_Cyrillic_lje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="924"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_nje"
              value="1706"
              c:type="CLUTTER_KEY_Cyrillic_nje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="926"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_o"
              value="1743"
              c:type="CLUTTER_KEY_Cyrillic_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="972"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_o_bar"
              value="16778473"
              c:type="CLUTTER_KEY_Cyrillic_o_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="909"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_pe"
              value="1744"
              c:type="CLUTTER_KEY_Cyrillic_pe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="973"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_schwa"
              value="16778457"
              c:type="CLUTTER_KEY_Cyrillic_schwa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="905"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_sha"
              value="1755"
              c:type="CLUTTER_KEY_Cyrillic_sha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="984"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shcha"
              value="1757"
              c:type="CLUTTER_KEY_Cyrillic_shcha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="986"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shha"
              value="16778427"
              c:type="CLUTTER_KEY_Cyrillic_shha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="903"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_shorti"
              value="1738"
              c:type="CLUTTER_KEY_Cyrillic_shorti">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="967"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_softsign"
              value="1752"
              c:type="CLUTTER_KEY_Cyrillic_softsign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="981"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_te"
              value="1748"
              c:type="CLUTTER_KEY_Cyrillic_te">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="977"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_tse"
              value="1731"
              c:type="CLUTTER_KEY_Cyrillic_tse">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="960"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u"
              value="1749"
              c:type="CLUTTER_KEY_Cyrillic_u">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="978"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_macron"
              value="16778479"
              c:type="CLUTTER_KEY_Cyrillic_u_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="911"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_straight"
              value="16778415"
              c:type="CLUTTER_KEY_Cyrillic_u_straight">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="893"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_u_straight_bar"
              value="16778417"
              c:type="CLUTTER_KEY_Cyrillic_u_straight_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="895"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ve"
              value="1751"
              c:type="CLUTTER_KEY_Cyrillic_ve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="980"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ya"
              value="1745"
              c:type="CLUTTER_KEY_Cyrillic_ya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="974"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_yeru"
              value="1753"
              c:type="CLUTTER_KEY_Cyrillic_yeru">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="982"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_yu"
              value="1728"
              c:type="CLUTTER_KEY_Cyrillic_yu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="957"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_ze"
              value="1754"
              c:type="CLUTTER_KEY_Cyrillic_ze">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="983"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_zhe"
              value="1750"
              c:type="CLUTTER_KEY_Cyrillic_zhe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="979"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Cyrillic_zhe_descender"
              value="16778391"
              c:type="CLUTTER_KEY_Cyrillic_zhe_descender">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="885"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_D" value="68" c:type="CLUTTER_KEY_D">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="417"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_DOS" value="269025114" c:type="CLUTTER_KEY_DOS">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dabovedot"
              value="16784906"
              c:type="CLUTTER_KEY_Dabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="698"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dcaron" value="463" c:type="CLUTTER_KEY_Dcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="608"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Delete" value="65535" c:type="CLUTTER_KEY_Delete">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="44"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Display"
              value="269025113"
              c:type="CLUTTER_KEY_Display">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Documents"
              value="269025115"
              c:type="CLUTTER_KEY_Documents">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_DongSign"
              value="16785579"
              c:type="CLUTTER_KEY_DongSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1753"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Down" value="65364" c:type="CLUTTER_KEY_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="74"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Dstroke" value="464" c:type="CLUTTER_KEY_Dstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="609"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_E" value="69" c:type="CLUTTER_KEY_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="418"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ENG" value="957" c:type="CLUTTER_KEY_ENG">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="670"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ETH" value="208" c:type="CLUTTER_KEY_ETH">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="525"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_EZH" value="16777655" c:type="CLUTTER_KEY_EZH">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1646"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eabovedot" value="972" c:type="CLUTTER_KEY_Eabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="674"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eacute" value="201" c:type="CLUTTER_KEY_Eacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="518"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ebelowdot"
              value="16785080"
              c:type="CLUTTER_KEY_Ebelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1674"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecaron" value="460" c:type="CLUTTER_KEY_Ecaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="607"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflex"
              value="202"
              c:type="CLUTTER_KEY_Ecircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="519"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexacute"
              value="16785086"
              c:type="CLUTTER_KEY_Ecircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1680"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexbelowdot"
              value="16785094"
              c:type="CLUTTER_KEY_Ecircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1688"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexgrave"
              value="16785088"
              c:type="CLUTTER_KEY_Ecircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1682"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflexhook"
              value="16785090"
              c:type="CLUTTER_KEY_Ecircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1684"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ecircumflextilde"
              value="16785092"
              c:type="CLUTTER_KEY_Ecircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1686"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_EcuSign" value="16785568" c:type="CLUTTER_KEY_EcuSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1742"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ediaeresis"
              value="203"
              c:type="CLUTTER_KEY_Ediaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="520"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Egrave" value="200" c:type="CLUTTER_KEY_Egrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="517"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ehook" value="16785082" c:type="CLUTTER_KEY_Ehook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1676"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eisu_Shift"
              value="65327"
              c:type="CLUTTER_KEY_Eisu_Shift">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="65"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eisu_toggle"
              value="65328"
              c:type="CLUTTER_KEY_Eisu_toggle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="66"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eject" value="269025068" c:type="CLUTTER_KEY_Eject">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Emacron" value="938" c:type="CLUTTER_KEY_Emacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="661"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_End" value="65367" c:type="CLUTTER_KEY_End">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="79"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eogonek" value="458" c:type="CLUTTER_KEY_Eogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="606"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Escape" value="65307" c:type="CLUTTER_KEY_Escape">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="43"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Eth" value="208" c:type="CLUTTER_KEY_Eth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="526"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Etilde" value="16785084" c:type="CLUTTER_KEY_Etilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1678"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_EuroSign" value="8364" c:type="CLUTTER_KEY_EuroSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1754"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Excel" value="269025116" c:type="CLUTTER_KEY_Excel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Execute" value="65378" c:type="CLUTTER_KEY_Execute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="83"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Explorer"
              value="269025117"
              c:type="CLUTTER_KEY_Explorer">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F" value="70" c:type="CLUTTER_KEY_F">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="419"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F1" value="65470" c:type="CLUTTER_KEY_F1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F10" value="65479" c:type="CLUTTER_KEY_F10">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F11" value="65480" c:type="CLUTTER_KEY_F11">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F12" value="65481" c:type="CLUTTER_KEY_F12">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F13" value="65482" c:type="CLUTTER_KEY_F13">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F14" value="65483" c:type="CLUTTER_KEY_F14">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F15" value="65484" c:type="CLUTTER_KEY_F15">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F16" value="65485" c:type="CLUTTER_KEY_F16">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F17" value="65486" c:type="CLUTTER_KEY_F17">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F18" value="65487" c:type="CLUTTER_KEY_F18">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F19" value="65488" c:type="CLUTTER_KEY_F19">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F2" value="65471" c:type="CLUTTER_KEY_F2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F20" value="65489" c:type="CLUTTER_KEY_F20">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F21" value="65490" c:type="CLUTTER_KEY_F21">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F22" value="65491" c:type="CLUTTER_KEY_F22">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F23" value="65492" c:type="CLUTTER_KEY_F23">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F24" value="65493" c:type="CLUTTER_KEY_F24">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F25" value="65494" c:type="CLUTTER_KEY_F25">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F26" value="65495" c:type="CLUTTER_KEY_F26">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F27" value="65496" c:type="CLUTTER_KEY_F27">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F28" value="65497" c:type="CLUTTER_KEY_F28">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F29" value="65498" c:type="CLUTTER_KEY_F29">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F3" value="65472" c:type="CLUTTER_KEY_F3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F30" value="65499" c:type="CLUTTER_KEY_F30">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F31" value="65500" c:type="CLUTTER_KEY_F31">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F32" value="65501" c:type="CLUTTER_KEY_F32">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F33" value="65502" c:type="CLUTTER_KEY_F33">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F34" value="65503" c:type="CLUTTER_KEY_F34">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F35" value="65504" c:type="CLUTTER_KEY_F35">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F4" value="65473" c:type="CLUTTER_KEY_F4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F5" value="65474" c:type="CLUTTER_KEY_F5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F6" value="65475" c:type="CLUTTER_KEY_F6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F7" value="65476" c:type="CLUTTER_KEY_F7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F8" value="65477" c:type="CLUTTER_KEY_F8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_F9" value="65478" c:type="CLUTTER_KEY_F9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FFrancSign"
              value="16785571"
              c:type="CLUTTER_KEY_FFrancSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1745"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Fabovedot"
              value="16784926"
              c:type="CLUTTER_KEY_Fabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="700"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_0" value="16778992" c:type="CLUTTER_KEY_Farsi_0">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="791"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_1" value="16778993" c:type="CLUTTER_KEY_Farsi_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="792"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_2" value="16778994" c:type="CLUTTER_KEY_Farsi_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="793"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_3" value="16778995" c:type="CLUTTER_KEY_Farsi_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="794"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_4" value="16778996" c:type="CLUTTER_KEY_Farsi_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="795"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_5" value="16778997" c:type="CLUTTER_KEY_Farsi_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="796"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_6" value="16778998" c:type="CLUTTER_KEY_Farsi_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="797"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_7" value="16778999" c:type="CLUTTER_KEY_Farsi_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="798"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_8" value="16779000" c:type="CLUTTER_KEY_Farsi_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="799"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_9" value="16779001" c:type="CLUTTER_KEY_Farsi_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="800"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Farsi_yeh"
              value="16778956"
              c:type="CLUTTER_KEY_Farsi_yeh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="877"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Favorites"
              value="269025072"
              c:type="CLUTTER_KEY_Favorites">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Finance"
              value="269025084"
              c:type="CLUTTER_KEY_Finance">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Find" value="65384" c:type="CLUTTER_KEY_Find">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="88"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_First_Virtual_Screen"
              value="65232"
              c:type="CLUTTER_KEY_First_Virtual_Screen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Forward"
              value="269025063"
              c:type="CLUTTER_KEY_Forward">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FrameBack"
              value="269025181"
              c:type="CLUTTER_KEY_FrameBack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2274"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_FrameForward"
              value="269025182"
              c:type="CLUTTER_KEY_FrameForward">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2275"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_G" value="71" c:type="CLUTTER_KEY_G">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="420"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gabovedot" value="725" c:type="CLUTTER_KEY_Gabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="646"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Game" value="269025118" c:type="CLUTTER_KEY_Game">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gbreve" value="683" c:type="CLUTTER_KEY_Gbreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="637"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcaron" value="16777702" c:type="CLUTTER_KEY_Gcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1635"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcedilla" value="939" c:type="CLUTTER_KEY_Gcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="662"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Gcircumflex"
              value="728"
              c:type="CLUTTER_KEY_Gcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="647"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_an"
              value="16781520"
              c:type="CLUTTER_KEY_Georgian_an">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1593"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_ban"
              value="16781521"
              c:type="CLUTTER_KEY_Georgian_ban">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1594"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_can"
              value="16781546"
              c:type="CLUTTER_KEY_Georgian_can">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1619"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_char"
              value="16781549"
              c:type="CLUTTER_KEY_Georgian_char">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1622"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_chin"
              value="16781545"
              c:type="CLUTTER_KEY_Georgian_chin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1618"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_cil"
              value="16781548"
              c:type="CLUTTER_KEY_Georgian_cil">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1621"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_don"
              value="16781523"
              c:type="CLUTTER_KEY_Georgian_don">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1596"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_en"
              value="16781524"
              c:type="CLUTTER_KEY_Georgian_en">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1597"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_fi"
              value="16781558"
              c:type="CLUTTER_KEY_Georgian_fi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1631"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_gan"
              value="16781522"
              c:type="CLUTTER_KEY_Georgian_gan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1595"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_ghan"
              value="16781542"
              c:type="CLUTTER_KEY_Georgian_ghan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1615"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hae"
              value="16781552"
              c:type="CLUTTER_KEY_Georgian_hae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1625"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_har"
              value="16781556"
              c:type="CLUTTER_KEY_Georgian_har">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1629"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_he"
              value="16781553"
              c:type="CLUTTER_KEY_Georgian_he">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1626"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hie"
              value="16781554"
              c:type="CLUTTER_KEY_Georgian_hie">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1627"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_hoe"
              value="16781557"
              c:type="CLUTTER_KEY_Georgian_hoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1630"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_in"
              value="16781528"
              c:type="CLUTTER_KEY_Georgian_in">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1601"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_jhan"
              value="16781551"
              c:type="CLUTTER_KEY_Georgian_jhan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1624"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_jil"
              value="16781547"
              c:type="CLUTTER_KEY_Georgian_jil">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1620"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_kan"
              value="16781529"
              c:type="CLUTTER_KEY_Georgian_kan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1602"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_khar"
              value="16781541"
              c:type="CLUTTER_KEY_Georgian_khar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1614"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_las"
              value="16781530"
              c:type="CLUTTER_KEY_Georgian_las">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1603"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_man"
              value="16781531"
              c:type="CLUTTER_KEY_Georgian_man">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1604"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_nar"
              value="16781532"
              c:type="CLUTTER_KEY_Georgian_nar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1605"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_on"
              value="16781533"
              c:type="CLUTTER_KEY_Georgian_on">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1606"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_par"
              value="16781534"
              c:type="CLUTTER_KEY_Georgian_par">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1607"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_phar"
              value="16781540"
              c:type="CLUTTER_KEY_Georgian_phar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1613"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_qar"
              value="16781543"
              c:type="CLUTTER_KEY_Georgian_qar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1616"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_rae"
              value="16781536"
              c:type="CLUTTER_KEY_Georgian_rae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1609"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_san"
              value="16781537"
              c:type="CLUTTER_KEY_Georgian_san">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1610"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_shin"
              value="16781544"
              c:type="CLUTTER_KEY_Georgian_shin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1617"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_tan"
              value="16781527"
              c:type="CLUTTER_KEY_Georgian_tan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1600"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_tar"
              value="16781538"
              c:type="CLUTTER_KEY_Georgian_tar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1611"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_un"
              value="16781539"
              c:type="CLUTTER_KEY_Georgian_un">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1612"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_vin"
              value="16781525"
              c:type="CLUTTER_KEY_Georgian_vin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1598"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_we"
              value="16781555"
              c:type="CLUTTER_KEY_Georgian_we">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1628"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_xan"
              value="16781550"
              c:type="CLUTTER_KEY_Georgian_xan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1623"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_zen"
              value="16781526"
              c:type="CLUTTER_KEY_Georgian_zen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1599"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Georgian_zhar"
              value="16781535"
              c:type="CLUTTER_KEY_Georgian_zhar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1608"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Go" value="269025119" c:type="CLUTTER_KEY_Go">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ALPHA"
              value="1985"
              c:type="CLUTTER_KEY_Greek_ALPHA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1044"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ALPHAaccent"
              value="1953"
              c:type="CLUTTER_KEY_Greek_ALPHAaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1021"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_BETA"
              value="1986"
              c:type="CLUTTER_KEY_Greek_BETA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1045"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_CHI" value="2007" c:type="CLUTTER_KEY_Greek_CHI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1066"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_DELTA"
              value="1988"
              c:type="CLUTTER_KEY_Greek_DELTA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1047"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_EPSILON"
              value="1989"
              c:type="CLUTTER_KEY_Greek_EPSILON">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1048"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_EPSILONaccent"
              value="1954"
              c:type="CLUTTER_KEY_Greek_EPSILONaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1022"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ETA" value="1991" c:type="CLUTTER_KEY_Greek_ETA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1050"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ETAaccent"
              value="1955"
              c:type="CLUTTER_KEY_Greek_ETAaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1023"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_GAMMA"
              value="1987"
              c:type="CLUTTER_KEY_Greek_GAMMA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1046"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTA"
              value="1993"
              c:type="CLUTTER_KEY_Greek_IOTA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1052"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAaccent"
              value="1956"
              c:type="CLUTTER_KEY_Greek_IOTAaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1024"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAdiaeresis"
              value="1957"
              c:type="CLUTTER_KEY_Greek_IOTAdiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1026"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_IOTAdieresis"
              value="1957"
              c:type="CLUTTER_KEY_Greek_IOTAdieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1025"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_KAPPA"
              value="1994"
              c:type="CLUTTER_KEY_Greek_KAPPA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1053"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_LAMBDA"
              value="1995"
              c:type="CLUTTER_KEY_Greek_LAMBDA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1055"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_LAMDA"
              value="1995"
              c:type="CLUTTER_KEY_Greek_LAMDA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1054"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_MU" value="1996" c:type="CLUTTER_KEY_Greek_MU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1056"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_NU" value="1997" c:type="CLUTTER_KEY_Greek_NU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1057"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMEGA"
              value="2009"
              c:type="CLUTTER_KEY_Greek_OMEGA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1068"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMEGAaccent"
              value="1963"
              c:type="CLUTTER_KEY_Greek_OMEGAaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1030"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMICRON"
              value="1999"
              c:type="CLUTTER_KEY_Greek_OMICRON">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1059"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_OMICRONaccent"
              value="1959"
              c:type="CLUTTER_KEY_Greek_OMICRONaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1027"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PHI" value="2006" c:type="CLUTTER_KEY_Greek_PHI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1065"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PI" value="2000" c:type="CLUTTER_KEY_Greek_PI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1060"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_PSI" value="2008" c:type="CLUTTER_KEY_Greek_PSI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1067"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_RHO" value="2001" c:type="CLUTTER_KEY_Greek_RHO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1061"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_SIGMA"
              value="2002"
              c:type="CLUTTER_KEY_Greek_SIGMA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1062"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_TAU" value="2004" c:type="CLUTTER_KEY_Greek_TAU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1063"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_THETA"
              value="1992"
              c:type="CLUTTER_KEY_Greek_THETA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1051"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILON"
              value="2005"
              c:type="CLUTTER_KEY_Greek_UPSILON">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1064"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILONaccent"
              value="1960"
              c:type="CLUTTER_KEY_Greek_UPSILONaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1028"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_UPSILONdieresis"
              value="1961"
              c:type="CLUTTER_KEY_Greek_UPSILONdieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1029"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_XI" value="1998" c:type="CLUTTER_KEY_Greek_XI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1058"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_ZETA"
              value="1990"
              c:type="CLUTTER_KEY_Greek_ZETA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1049"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_accentdieresis"
              value="1966"
              c:type="CLUTTER_KEY_Greek_accentdieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1031"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_alpha"
              value="2017"
              c:type="CLUTTER_KEY_Greek_alpha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1069"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_alphaaccent"
              value="1969"
              c:type="CLUTTER_KEY_Greek_alphaaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1033"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_beta"
              value="2018"
              c:type="CLUTTER_KEY_Greek_beta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1070"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_chi" value="2039" c:type="CLUTTER_KEY_Greek_chi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1092"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_delta"
              value="2020"
              c:type="CLUTTER_KEY_Greek_delta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1072"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_epsilon"
              value="2021"
              c:type="CLUTTER_KEY_Greek_epsilon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1073"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_epsilonaccent"
              value="1970"
              c:type="CLUTTER_KEY_Greek_epsilonaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1034"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_eta" value="2023" c:type="CLUTTER_KEY_Greek_eta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1075"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_etaaccent"
              value="1971"
              c:type="CLUTTER_KEY_Greek_etaaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1035"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_finalsmallsigma"
              value="2035"
              c:type="CLUTTER_KEY_Greek_finalsmallsigma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1088"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_gamma"
              value="2019"
              c:type="CLUTTER_KEY_Greek_gamma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1071"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_horizbar"
              value="1967"
              c:type="CLUTTER_KEY_Greek_horizbar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1032"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iota"
              value="2025"
              c:type="CLUTTER_KEY_Greek_iota">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1077"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotaaccent"
              value="1972"
              c:type="CLUTTER_KEY_Greek_iotaaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1036"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotaaccentdieresis"
              value="1974"
              c:type="CLUTTER_KEY_Greek_iotaaccentdieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1038"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_iotadieresis"
              value="1973"
              c:type="CLUTTER_KEY_Greek_iotadieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1037"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_kappa"
              value="2026"
              c:type="CLUTTER_KEY_Greek_kappa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1078"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_lambda"
              value="2027"
              c:type="CLUTTER_KEY_Greek_lambda">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1080"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_lamda"
              value="2027"
              c:type="CLUTTER_KEY_Greek_lamda">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1079"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_mu" value="2028" c:type="CLUTTER_KEY_Greek_mu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1081"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_nu" value="2029" c:type="CLUTTER_KEY_Greek_nu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1082"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omega"
              value="2041"
              c:type="CLUTTER_KEY_Greek_omega">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1094"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omegaaccent"
              value="1979"
              c:type="CLUTTER_KEY_Greek_omegaaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1043"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omicron"
              value="2031"
              c:type="CLUTTER_KEY_Greek_omicron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1084"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_omicronaccent"
              value="1975"
              c:type="CLUTTER_KEY_Greek_omicronaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1039"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_phi" value="2038" c:type="CLUTTER_KEY_Greek_phi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1091"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_pi" value="2032" c:type="CLUTTER_KEY_Greek_pi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1085"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_psi" value="2040" c:type="CLUTTER_KEY_Greek_psi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1093"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_rho" value="2033" c:type="CLUTTER_KEY_Greek_rho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1086"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_sigma"
              value="2034"
              c:type="CLUTTER_KEY_Greek_sigma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1087"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_switch"
              value="65406"
              c:type="CLUTTER_KEY_Greek_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1095"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_tau" value="2036" c:type="CLUTTER_KEY_Greek_tau">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1089"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_theta"
              value="2024"
              c:type="CLUTTER_KEY_Greek_theta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1076"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilon"
              value="2037"
              c:type="CLUTTER_KEY_Greek_upsilon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1090"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilonaccent"
              value="1976"
              c:type="CLUTTER_KEY_Greek_upsilonaccent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1040"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilonaccentdieresis"
              value="1978"
              c:type="CLUTTER_KEY_Greek_upsilonaccentdieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1042"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_upsilondieresis"
              value="1977"
              c:type="CLUTTER_KEY_Greek_upsilondieresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1041"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_xi" value="2030" c:type="CLUTTER_KEY_Greek_xi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1083"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Greek_zeta"
              value="2022"
              c:type="CLUTTER_KEY_Greek_zeta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1074"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Green" value="269025188" c:type="CLUTTER_KEY_Green">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_H" value="72" c:type="CLUTTER_KEY_H">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="421"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul" value="65329" c:type="CLUTTER_KEY_Hangul">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1396"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_A" value="3775" c:type="CLUTTER_KEY_Hangul_A">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1442"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AE" value="3776" c:type="CLUTTER_KEY_Hangul_AE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1443"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AraeA"
              value="3830"
              c:type="CLUTTER_KEY_Hangul_AraeA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1497"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_AraeAE"
              value="3831"
              c:type="CLUTTER_KEY_Hangul_AraeAE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1498"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Banja"
              value="65337"
              c:type="CLUTTER_KEY_Hangul_Banja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1404"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Cieuc"
              value="3770"
              c:type="CLUTTER_KEY_Hangul_Cieuc">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1437"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Codeinput"
              value="65335"
              c:type="CLUTTER_KEY_Hangul_Codeinput">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1402"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Dikeud"
              value="3751"
              c:type="CLUTTER_KEY_Hangul_Dikeud">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1418"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_E" value="3780" c:type="CLUTTER_KEY_Hangul_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1447"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_EO" value="3779" c:type="CLUTTER_KEY_Hangul_EO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1446"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_EU" value="3793" c:type="CLUTTER_KEY_Hangul_EU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1460"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_End"
              value="65331"
              c:type="CLUTTER_KEY_Hangul_End">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1398"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Hanja"
              value="65332"
              c:type="CLUTTER_KEY_Hangul_Hanja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1399"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Hieuh"
              value="3774"
              c:type="CLUTTER_KEY_Hangul_Hieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1441"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_I" value="3795" c:type="CLUTTER_KEY_Hangul_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1462"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Ieung"
              value="3767"
              c:type="CLUTTER_KEY_Hangul_Ieung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1434"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Cieuc"
              value="3818"
              c:type="CLUTTER_KEY_Hangul_J_Cieuc">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1485"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Dikeud"
              value="3802"
              c:type="CLUTTER_KEY_Hangul_J_Dikeud">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1469"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Hieuh"
              value="3822"
              c:type="CLUTTER_KEY_Hangul_J_Hieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1489"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Ieung"
              value="3816"
              c:type="CLUTTER_KEY_Hangul_J_Ieung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1483"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Jieuj"
              value="3817"
              c:type="CLUTTER_KEY_Hangul_J_Jieuj">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1484"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Khieuq"
              value="3819"
              c:type="CLUTTER_KEY_Hangul_J_Khieuq">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1486"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Kiyeog"
              value="3796"
              c:type="CLUTTER_KEY_Hangul_J_Kiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1463"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_KiyeogSios"
              value="3798"
              c:type="CLUTTER_KEY_Hangul_J_KiyeogSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1465"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_KkogjiDalrinIeung"
              value="3833"
              c:type="CLUTTER_KEY_Hangul_J_KkogjiDalrinIeung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1500"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Mieum"
              value="3811"
              c:type="CLUTTER_KEY_Hangul_J_Mieum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1478"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Nieun"
              value="3799"
              c:type="CLUTTER_KEY_Hangul_J_Nieun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1466"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_NieunHieuh"
              value="3801"
              c:type="CLUTTER_KEY_Hangul_J_NieunHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1468"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_NieunJieuj"
              value="3800"
              c:type="CLUTTER_KEY_Hangul_J_NieunJieuj">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1467"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_PanSios"
              value="3832"
              c:type="CLUTTER_KEY_Hangul_J_PanSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1499"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Phieuf"
              value="3821"
              c:type="CLUTTER_KEY_Hangul_J_Phieuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1488"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Pieub"
              value="3812"
              c:type="CLUTTER_KEY_Hangul_J_Pieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1479"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_PieubSios"
              value="3813"
              c:type="CLUTTER_KEY_Hangul_J_PieubSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1480"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Rieul"
              value="3803"
              c:type="CLUTTER_KEY_Hangul_J_Rieul">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1470"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulHieuh"
              value="3810"
              c:type="CLUTTER_KEY_Hangul_J_RieulHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1477"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulKiyeog"
              value="3804"
              c:type="CLUTTER_KEY_Hangul_J_RieulKiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1471"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulMieum"
              value="3805"
              c:type="CLUTTER_KEY_Hangul_J_RieulMieum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1472"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulPhieuf"
              value="3809"
              c:type="CLUTTER_KEY_Hangul_J_RieulPhieuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1476"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulPieub"
              value="3806"
              c:type="CLUTTER_KEY_Hangul_J_RieulPieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1473"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulSios"
              value="3807"
              c:type="CLUTTER_KEY_Hangul_J_RieulSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1474"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_RieulTieut"
              value="3808"
              c:type="CLUTTER_KEY_Hangul_J_RieulTieut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1475"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Sios"
              value="3814"
              c:type="CLUTTER_KEY_Hangul_J_Sios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1481"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_SsangKiyeog"
              value="3797"
              c:type="CLUTTER_KEY_Hangul_J_SsangKiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1464"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_SsangSios"
              value="3815"
              c:type="CLUTTER_KEY_Hangul_J_SsangSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1482"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_Tieut"
              value="3820"
              c:type="CLUTTER_KEY_Hangul_J_Tieut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1487"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_J_YeorinHieuh"
              value="3834"
              c:type="CLUTTER_KEY_Hangul_J_YeorinHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1501"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jamo"
              value="65333"
              c:type="CLUTTER_KEY_Hangul_Jamo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1400"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jeonja"
              value="65336"
              c:type="CLUTTER_KEY_Hangul_Jeonja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1403"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Jieuj"
              value="3768"
              c:type="CLUTTER_KEY_Hangul_Jieuj">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1435"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Khieuq"
              value="3771"
              c:type="CLUTTER_KEY_Hangul_Khieuq">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1438"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Kiyeog"
              value="3745"
              c:type="CLUTTER_KEY_Hangul_Kiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1412"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_KiyeogSios"
              value="3747"
              c:type="CLUTTER_KEY_Hangul_KiyeogSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1414"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_KkogjiDalrinIeung"
              value="3827"
              c:type="CLUTTER_KEY_Hangul_KkogjiDalrinIeung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1494"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Mieum"
              value="3761"
              c:type="CLUTTER_KEY_Hangul_Mieum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1428"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_MultipleCandidate"
              value="65341"
              c:type="CLUTTER_KEY_Hangul_MultipleCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1408"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Nieun"
              value="3748"
              c:type="CLUTTER_KEY_Hangul_Nieun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1415"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_NieunHieuh"
              value="3750"
              c:type="CLUTTER_KEY_Hangul_NieunHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1417"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_NieunJieuj"
              value="3749"
              c:type="CLUTTER_KEY_Hangul_NieunJieuj">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1416"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_O" value="3783" c:type="CLUTTER_KEY_Hangul_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1450"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_OE" value="3786" c:type="CLUTTER_KEY_Hangul_OE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1453"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PanSios"
              value="3826"
              c:type="CLUTTER_KEY_Hangul_PanSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1493"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Phieuf"
              value="3773"
              c:type="CLUTTER_KEY_Hangul_Phieuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1440"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Pieub"
              value="3762"
              c:type="CLUTTER_KEY_Hangul_Pieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1429"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PieubSios"
              value="3764"
              c:type="CLUTTER_KEY_Hangul_PieubSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1431"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PostHanja"
              value="65339"
              c:type="CLUTTER_KEY_Hangul_PostHanja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1406"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PreHanja"
              value="65338"
              c:type="CLUTTER_KEY_Hangul_PreHanja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1405"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_PreviousCandidate"
              value="65342"
              c:type="CLUTTER_KEY_Hangul_PreviousCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1409"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Rieul"
              value="3753"
              c:type="CLUTTER_KEY_Hangul_Rieul">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1420"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulHieuh"
              value="3760"
              c:type="CLUTTER_KEY_Hangul_RieulHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1427"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulKiyeog"
              value="3754"
              c:type="CLUTTER_KEY_Hangul_RieulKiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1421"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulMieum"
              value="3755"
              c:type="CLUTTER_KEY_Hangul_RieulMieum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1422"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulPhieuf"
              value="3759"
              c:type="CLUTTER_KEY_Hangul_RieulPhieuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1426"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulPieub"
              value="3756"
              c:type="CLUTTER_KEY_Hangul_RieulPieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1423"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulSios"
              value="3757"
              c:type="CLUTTER_KEY_Hangul_RieulSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1424"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulTieut"
              value="3758"
              c:type="CLUTTER_KEY_Hangul_RieulTieut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1425"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_RieulYeorinHieuh"
              value="3823"
              c:type="CLUTTER_KEY_Hangul_RieulYeorinHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1490"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Romaja"
              value="65334"
              c:type="CLUTTER_KEY_Hangul_Romaja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1401"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SingleCandidate"
              value="65340"
              c:type="CLUTTER_KEY_Hangul_SingleCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1407"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Sios"
              value="3765"
              c:type="CLUTTER_KEY_Hangul_Sios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1432"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Special"
              value="65343"
              c:type="CLUTTER_KEY_Hangul_Special">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1410"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangDikeud"
              value="3752"
              c:type="CLUTTER_KEY_Hangul_SsangDikeud">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1419"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangJieuj"
              value="3769"
              c:type="CLUTTER_KEY_Hangul_SsangJieuj">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1436"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangKiyeog"
              value="3746"
              c:type="CLUTTER_KEY_Hangul_SsangKiyeog">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1413"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangPieub"
              value="3763"
              c:type="CLUTTER_KEY_Hangul_SsangPieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1430"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SsangSios"
              value="3766"
              c:type="CLUTTER_KEY_Hangul_SsangSios">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1433"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Start"
              value="65330"
              c:type="CLUTTER_KEY_Hangul_Start">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1397"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumMieum"
              value="3824"
              c:type="CLUTTER_KEY_Hangul_SunkyeongeumMieum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1491"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumPhieuf"
              value="3828"
              c:type="CLUTTER_KEY_Hangul_SunkyeongeumPhieuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1495"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_SunkyeongeumPieub"
              value="3825"
              c:type="CLUTTER_KEY_Hangul_SunkyeongeumPieub">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1492"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_Tieut"
              value="3772"
              c:type="CLUTTER_KEY_Hangul_Tieut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1439"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_U" value="3788" c:type="CLUTTER_KEY_Hangul_U">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1455"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WA" value="3784" c:type="CLUTTER_KEY_Hangul_WA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1451"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WAE"
              value="3785"
              c:type="CLUTTER_KEY_Hangul_WAE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1452"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WE" value="3790" c:type="CLUTTER_KEY_Hangul_WE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1457"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WEO"
              value="3789"
              c:type="CLUTTER_KEY_Hangul_WEO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1456"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_WI" value="3791" c:type="CLUTTER_KEY_Hangul_WI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1458"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YA" value="3777" c:type="CLUTTER_KEY_Hangul_YA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1444"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YAE"
              value="3778"
              c:type="CLUTTER_KEY_Hangul_YAE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1445"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YE" value="3782" c:type="CLUTTER_KEY_Hangul_YE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1449"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YEO"
              value="3781"
              c:type="CLUTTER_KEY_Hangul_YEO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1448"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YI" value="3794" c:type="CLUTTER_KEY_Hangul_YI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1461"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YO" value="3787" c:type="CLUTTER_KEY_Hangul_YO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1454"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YU" value="3792" c:type="CLUTTER_KEY_Hangul_YU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1459"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_YeorinHieuh"
              value="3829"
              c:type="CLUTTER_KEY_Hangul_YeorinHieuh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1496"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hangul_switch"
              value="65406"
              c:type="CLUTTER_KEY_Hangul_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1411"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hankaku" value="65321" c:type="CLUTTER_KEY_Hankaku">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="59"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hcircumflex"
              value="678"
              c:type="CLUTTER_KEY_Hcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="635"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hebrew_switch"
              value="65406"
              c:type="CLUTTER_KEY_Hebrew_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1311"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Help" value="65386" c:type="CLUTTER_KEY_Help">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="90"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Henkan" value="65315" c:type="CLUTTER_KEY_Henkan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="53"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Henkan_Mode"
              value="65315"
              c:type="CLUTTER_KEY_Henkan_Mode">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="52"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hibernate"
              value="269025192"
              c:type="CLUTTER_KEY_Hibernate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2285"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hiragana" value="65317" c:type="CLUTTER_KEY_Hiragana">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="55"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hiragana_Katakana"
              value="65319"
              c:type="CLUTTER_KEY_Hiragana_Katakana">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="57"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_History"
              value="269025079"
              c:type="CLUTTER_KEY_History">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Home" value="65360" c:type="CLUTTER_KEY_Home">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="70"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_HomePage"
              value="269025048"
              c:type="CLUTTER_KEY_HomePage">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_HotLinks"
              value="269025082"
              c:type="CLUTTER_KEY_HotLinks">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hstroke" value="673" c:type="CLUTTER_KEY_Hstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="634"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hyper_L" value="65517" c:type="CLUTTER_KEY_Hyper_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Hyper_R" value="65518" c:type="CLUTTER_KEY_Hyper_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_I" value="73" c:type="CLUTTER_KEY_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="422"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Center_Object"
              value="65075"
              c:type="CLUTTER_KEY_ISO_Center_Object">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="244"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Continuous_Underline"
              value="65072"
              c:type="CLUTTER_KEY_ISO_Continuous_Underline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="241"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Discontinuous_Underline"
              value="65073"
              c:type="CLUTTER_KEY_ISO_Discontinuous_Underline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="242"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Emphasize"
              value="65074"
              c:type="CLUTTER_KEY_ISO_Emphasize">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="243"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Enter"
              value="65076"
              c:type="CLUTTER_KEY_ISO_Enter">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="245"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Down"
              value="65071"
              c:type="CLUTTER_KEY_ISO_Fast_Cursor_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="240"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Left"
              value="65068"
              c:type="CLUTTER_KEY_ISO_Fast_Cursor_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Right"
              value="65069"
              c:type="CLUTTER_KEY_ISO_Fast_Cursor_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="238"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Fast_Cursor_Up"
              value="65070"
              c:type="CLUTTER_KEY_ISO_Fast_Cursor_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="239"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_First_Group"
              value="65036"
              c:type="CLUTTER_KEY_ISO_First_Group">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_First_Group_Lock"
              value="65037"
              c:type="CLUTTER_KEY_ISO_First_Group_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="222"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Latch"
              value="65030"
              c:type="CLUTTER_KEY_ISO_Group_Latch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Lock"
              value="65031"
              c:type="CLUTTER_KEY_ISO_Group_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Group_Shift"
              value="65406"
              c:type="CLUTTER_KEY_ISO_Group_Shift">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Last_Group"
              value="65038"
              c:type="CLUTTER_KEY_ISO_Last_Group">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="223"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Last_Group_Lock"
              value="65039"
              c:type="CLUTTER_KEY_ISO_Last_Group_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="224"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Left_Tab"
              value="65056"
              c:type="CLUTTER_KEY_ISO_Left_Tab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="225"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level2_Latch"
              value="65026"
              c:type="CLUTTER_KEY_ISO_Level2_Latch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Latch"
              value="65028"
              c:type="CLUTTER_KEY_ISO_Level3_Latch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Lock"
              value="65029"
              c:type="CLUTTER_KEY_ISO_Level3_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level3_Shift"
              value="65027"
              c:type="CLUTTER_KEY_ISO_Level3_Shift">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Latch"
              value="65042"
              c:type="CLUTTER_KEY_ISO_Level5_Latch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Lock"
              value="65043"
              c:type="CLUTTER_KEY_ISO_Level5_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Level5_Shift"
              value="65041"
              c:type="CLUTTER_KEY_ISO_Level5_Shift">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Lock" value="65025" c:type="CLUTTER_KEY_ISO_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Move_Line_Down"
              value="65058"
              c:type="CLUTTER_KEY_ISO_Move_Line_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="227"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Move_Line_Up"
              value="65057"
              c:type="CLUTTER_KEY_ISO_Move_Line_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="226"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Next_Group"
              value="65032"
              c:type="CLUTTER_KEY_ISO_Next_Group">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Next_Group_Lock"
              value="65033"
              c:type="CLUTTER_KEY_ISO_Next_Group_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Line_Down"
              value="65060"
              c:type="CLUTTER_KEY_ISO_Partial_Line_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Line_Up"
              value="65059"
              c:type="CLUTTER_KEY_ISO_Partial_Line_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="228"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Space_Left"
              value="65061"
              c:type="CLUTTER_KEY_ISO_Partial_Space_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="230"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Partial_Space_Right"
              value="65062"
              c:type="CLUTTER_KEY_ISO_Partial_Space_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="231"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Prev_Group"
              value="65034"
              c:type="CLUTTER_KEY_ISO_Prev_Group">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Prev_Group_Lock"
              value="65035"
              c:type="CLUTTER_KEY_ISO_Prev_Group_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="220"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Both_Margins"
              value="65067"
              c:type="CLUTTER_KEY_ISO_Release_Both_Margins">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="236"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Margin_Left"
              value="65065"
              c:type="CLUTTER_KEY_ISO_Release_Margin_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="234"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Release_Margin_Right"
              value="65066"
              c:type="CLUTTER_KEY_ISO_Release_Margin_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="235"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Set_Margin_Left"
              value="65063"
              c:type="CLUTTER_KEY_ISO_Set_Margin_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="232"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ISO_Set_Margin_Right"
              value="65064"
              c:type="CLUTTER_KEY_ISO_Set_Margin_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="233"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iabovedot" value="681" c:type="CLUTTER_KEY_Iabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="636"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iacute" value="205" c:type="CLUTTER_KEY_Iacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="522"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ibelowdot"
              value="16785098"
              c:type="CLUTTER_KEY_Ibelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1692"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ibreve" value="16777516" c:type="CLUTTER_KEY_Ibreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1633"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Icircumflex"
              value="206"
              c:type="CLUTTER_KEY_Icircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="523"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Idiaeresis"
              value="207"
              c:type="CLUTTER_KEY_Idiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="524"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Igrave" value="204" c:type="CLUTTER_KEY_Igrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="521"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ihook" value="16785096" c:type="CLUTTER_KEY_Ihook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1690"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Imacron" value="975" c:type="CLUTTER_KEY_Imacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="675"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Insert" value="65379" c:type="CLUTTER_KEY_Insert">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="84"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Iogonek" value="967" c:type="CLUTTER_KEY_Iogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="673"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Itilde" value="933" c:type="CLUTTER_KEY_Itilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="659"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_J" value="74" c:type="CLUTTER_KEY_J">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="423"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Jcircumflex"
              value="684"
              c:type="CLUTTER_KEY_Jcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="638"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_K" value="75" c:type="CLUTTER_KEY_K">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="424"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_0" value="65456" c:type="CLUTTER_KEY_KP_0">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_1" value="65457" c:type="CLUTTER_KEY_KP_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_2" value="65458" c:type="CLUTTER_KEY_KP_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_3" value="65459" c:type="CLUTTER_KEY_KP_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_4" value="65460" c:type="CLUTTER_KEY_KP_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_5" value="65461" c:type="CLUTTER_KEY_KP_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_6" value="65462" c:type="CLUTTER_KEY_KP_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_7" value="65463" c:type="CLUTTER_KEY_KP_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_8" value="65464" c:type="CLUTTER_KEY_KP_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_9" value="65465" c:type="CLUTTER_KEY_KP_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Add" value="65451" c:type="CLUTTER_KEY_KP_Add">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Begin" value="65437" c:type="CLUTTER_KEY_KP_Begin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Decimal"
              value="65454"
              c:type="CLUTTER_KEY_KP_Decimal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Delete"
              value="65439"
              c:type="CLUTTER_KEY_KP_Delete">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Divide"
              value="65455"
              c:type="CLUTTER_KEY_KP_Divide">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Down" value="65433" c:type="CLUTTER_KEY_KP_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_End" value="65436" c:type="CLUTTER_KEY_KP_End">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Enter" value="65421" c:type="CLUTTER_KEY_KP_Enter">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="97"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Equal" value="65469" c:type="CLUTTER_KEY_KP_Equal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F1" value="65425" c:type="CLUTTER_KEY_KP_F1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="98"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F2" value="65426" c:type="CLUTTER_KEY_KP_F2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="99"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F3" value="65427" c:type="CLUTTER_KEY_KP_F3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_F4" value="65428" c:type="CLUTTER_KEY_KP_F4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Home" value="65429" c:type="CLUTTER_KEY_KP_Home">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Insert"
              value="65438"
              c:type="CLUTTER_KEY_KP_Insert">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Left" value="65430" c:type="CLUTTER_KEY_KP_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Multiply"
              value="65450"
              c:type="CLUTTER_KEY_KP_Multiply">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Next" value="65435" c:type="CLUTTER_KEY_KP_Next">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Page_Down"
              value="65435"
              c:type="CLUTTER_KEY_KP_Page_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Page_Up"
              value="65434"
              c:type="CLUTTER_KEY_KP_Page_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Prior" value="65434" c:type="CLUTTER_KEY_KP_Prior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Right" value="65432" c:type="CLUTTER_KEY_KP_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Separator"
              value="65452"
              c:type="CLUTTER_KEY_KP_Separator">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Space" value="65408" c:type="CLUTTER_KEY_KP_Space">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="95"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Subtract"
              value="65453"
              c:type="CLUTTER_KEY_KP_Subtract">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Tab" value="65417" c:type="CLUTTER_KEY_KP_Tab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="96"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KP_Up" value="65431" c:type="CLUTTER_KEY_KP_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kana_Lock"
              value="65325"
              c:type="CLUTTER_KEY_Kana_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="63"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kana_Shift"
              value="65326"
              c:type="CLUTTER_KEY_Kana_Shift">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="64"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kanji" value="65313" c:type="CLUTTER_KEY_Kanji">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="50"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kanji_Bangou"
              value="65335"
              c:type="CLUTTER_KEY_Kanji_Bangou">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="67"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Katakana" value="65318" c:type="CLUTTER_KEY_Katakana">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="56"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdBrightnessDown"
              value="269025030"
              c:type="CLUTTER_KEY_KbdBrightnessDown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdBrightnessUp"
              value="269025029"
              c:type="CLUTTER_KEY_KbdBrightnessUp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_KbdLightOnOff"
              value="269025028"
              c:type="CLUTTER_KEY_KbdLightOnOff">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Kcedilla" value="979" c:type="CLUTTER_KEY_Kcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="678"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Korean_Won"
              value="3839"
              c:type="CLUTTER_KEY_Korean_Won">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1502"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L" value="76" c:type="CLUTTER_KEY_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="425"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L1" value="65480" c:type="CLUTTER_KEY_L1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L10" value="65489" c:type="CLUTTER_KEY_L10">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L2" value="65481" c:type="CLUTTER_KEY_L2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L3" value="65482" c:type="CLUTTER_KEY_L3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L4" value="65483" c:type="CLUTTER_KEY_L4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L5" value="65484" c:type="CLUTTER_KEY_L5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L6" value="65485" c:type="CLUTTER_KEY_L6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L7" value="65486" c:type="CLUTTER_KEY_L7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L8" value="65487" c:type="CLUTTER_KEY_L8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_L9" value="65488" c:type="CLUTTER_KEY_L9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lacute" value="453" c:type="CLUTTER_KEY_Lacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="603"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Last_Virtual_Screen"
              value="65236"
              c:type="CLUTTER_KEY_Last_Virtual_Screen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="301"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch0"
              value="269025088"
              c:type="CLUTTER_KEY_Launch0">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch1"
              value="269025089"
              c:type="CLUTTER_KEY_Launch1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch2"
              value="269025090"
              c:type="CLUTTER_KEY_Launch2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch3"
              value="269025091"
              c:type="CLUTTER_KEY_Launch3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch4"
              value="269025092"
              c:type="CLUTTER_KEY_Launch4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch5"
              value="269025093"
              c:type="CLUTTER_KEY_Launch5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch6"
              value="269025094"
              c:type="CLUTTER_KEY_Launch6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch7"
              value="269025095"
              c:type="CLUTTER_KEY_Launch7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch8"
              value="269025096"
              c:type="CLUTTER_KEY_Launch8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Launch9"
              value="269025097"
              c:type="CLUTTER_KEY_Launch9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchA"
              value="269025098"
              c:type="CLUTTER_KEY_LaunchA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchB"
              value="269025099"
              c:type="CLUTTER_KEY_LaunchB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchC"
              value="269025100"
              c:type="CLUTTER_KEY_LaunchC">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchD"
              value="269025101"
              c:type="CLUTTER_KEY_LaunchD">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchE"
              value="269025102"
              c:type="CLUTTER_KEY_LaunchE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LaunchF"
              value="269025103"
              c:type="CLUTTER_KEY_LaunchF">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lbelowdot"
              value="16784950"
              c:type="CLUTTER_KEY_Lbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1648"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lcaron" value="421" c:type="CLUTTER_KEY_Lcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="580"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lcedilla" value="934" c:type="CLUTTER_KEY_Lcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="660"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Left" value="65361" c:type="CLUTTER_KEY_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="71"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LightBulb"
              value="269025077"
              c:type="CLUTTER_KEY_LightBulb">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Linefeed" value="65290" c:type="CLUTTER_KEY_Linefeed">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="37"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LiraSign"
              value="16785572"
              c:type="CLUTTER_KEY_LiraSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1746"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LogGrabInfo"
              value="269024805"
              c:type="CLUTTER_KEY_LogGrabInfo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LogOff" value="269025121" c:type="CLUTTER_KEY_LogOff">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_LogWindowTree"
              value="269024804"
              c:type="CLUTTER_KEY_LogWindowTree">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2306"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Lstroke" value="419" c:type="CLUTTER_KEY_Lstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="579"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_M" value="77" c:type="CLUTTER_KEY_M">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="426"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mabovedot"
              value="16784960"
              c:type="CLUTTER_KEY_Mabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="702"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_DSE"
              value="1717"
              c:type="CLUTTER_KEY_Macedonia_DSE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="940"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_GJE"
              value="1714"
              c:type="CLUTTER_KEY_Macedonia_GJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="936"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_KJE"
              value="1724"
              c:type="CLUTTER_KEY_Macedonia_KJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="952"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_dse"
              value="1701"
              c:type="CLUTTER_KEY_Macedonia_dse">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="917"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_gje"
              value="1698"
              c:type="CLUTTER_KEY_Macedonia_gje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="913"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Macedonia_kje"
              value="1708"
              c:type="CLUTTER_KEY_Macedonia_kje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="929"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mae_Koho" value="65342" c:type="CLUTTER_KEY_Mae_Koho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="69"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mail" value="269025049" c:type="CLUTTER_KEY_Mail">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MailForward"
              value="269025168"
              c:type="CLUTTER_KEY_MailForward">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2261"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Market" value="269025122" c:type="CLUTTER_KEY_Market">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2220"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Massyo" value="65324" c:type="CLUTTER_KEY_Massyo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="62"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meeting"
              value="269025123"
              c:type="CLUTTER_KEY_Meeting">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Memo" value="269025054" c:type="CLUTTER_KEY_Memo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Menu" value="65383" c:type="CLUTTER_KEY_Menu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="87"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MenuKB" value="269025125" c:type="CLUTTER_KEY_MenuKB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2222"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MenuPB" value="269025126" c:type="CLUTTER_KEY_MenuPB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2223"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Messenger"
              value="269025166"
              c:type="CLUTTER_KEY_Messenger">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2259"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meta_L" value="65511" c:type="CLUTTER_KEY_Meta_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Meta_R" value="65512" c:type="CLUTTER_KEY_Meta_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MillSign"
              value="16785573"
              c:type="CLUTTER_KEY_MillSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1747"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ModeLock"
              value="269025025"
              c:type="CLUTTER_KEY_ModeLock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Mode_switch"
              value="65406"
              c:type="CLUTTER_KEY_Mode_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="92"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MonBrightnessDown"
              value="269025027"
              c:type="CLUTTER_KEY_MonBrightnessDown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MonBrightnessUp"
              value="269025026"
              c:type="CLUTTER_KEY_MonBrightnessUp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MouseKeys_Accel_Enable"
              value="65143"
              c:type="CLUTTER_KEY_MouseKeys_Accel_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="310"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MouseKeys_Enable"
              value="65142"
              c:type="CLUTTER_KEY_MouseKeys_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="309"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Muhenkan" value="65314" c:type="CLUTTER_KEY_Muhenkan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="51"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Multi_key"
              value="65312"
              c:type="CLUTTER_KEY_Multi_key">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="45"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MultipleCandidate"
              value="65341"
              c:type="CLUTTER_KEY_MultipleCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="48"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Music" value="269025170" c:type="CLUTTER_KEY_Music">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2263"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MyComputer"
              value="269025075"
              c:type="CLUTTER_KEY_MyComputer">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_MySites"
              value="269025127"
              c:type="CLUTTER_KEY_MySites">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2224"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_N" value="78" c:type="CLUTTER_KEY_N">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="427"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Nacute" value="465" c:type="CLUTTER_KEY_Nacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="610"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_NairaSign"
              value="16785574"
              c:type="CLUTTER_KEY_NairaSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1748"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ncaron" value="466" c:type="CLUTTER_KEY_Ncaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="611"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ncedilla" value="977" c:type="CLUTTER_KEY_Ncedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="676"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_New" value="269025128" c:type="CLUTTER_KEY_New">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2225"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_NewSheqelSign"
              value="16785578"
              c:type="CLUTTER_KEY_NewSheqelSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1752"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_News" value="269025129" c:type="CLUTTER_KEY_News">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2226"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next" value="65366" c:type="CLUTTER_KEY_Next">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="77"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next_VMode"
              value="269024802"
              c:type="CLUTTER_KEY_Next_VMode">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2304"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Next_Virtual_Screen"
              value="65234"
              c:type="CLUTTER_KEY_Next_Virtual_Screen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="300"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ntilde" value="209" c:type="CLUTTER_KEY_Ntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="527"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Num_Lock" value="65407" c:type="CLUTTER_KEY_Num_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="94"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_O" value="79" c:type="CLUTTER_KEY_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="428"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OE" value="5052" c:type="CLUTTER_KEY_OE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="718"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Oacute" value="211" c:type="CLUTTER_KEY_Oacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="529"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Obarred" value="16777631" c:type="CLUTTER_KEY_Obarred">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1637"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Obelowdot"
              value="16785100"
              c:type="CLUTTER_KEY_Obelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1694"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocaron" value="16777681" c:type="CLUTTER_KEY_Ocaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1636"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflex"
              value="212"
              c:type="CLUTTER_KEY_Ocircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="530"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexacute"
              value="16785104"
              c:type="CLUTTER_KEY_Ocircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1698"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexbelowdot"
              value="16785112"
              c:type="CLUTTER_KEY_Ocircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1706"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexgrave"
              value="16785106"
              c:type="CLUTTER_KEY_Ocircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1700"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflexhook"
              value="16785108"
              c:type="CLUTTER_KEY_Ocircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1702"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ocircumflextilde"
              value="16785110"
              c:type="CLUTTER_KEY_Ocircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1704"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Odiaeresis"
              value="214"
              c:type="CLUTTER_KEY_Odiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="532"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Odoubleacute"
              value="469"
              c:type="CLUTTER_KEY_Odoubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="612"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OfficeHome"
              value="269025130"
              c:type="CLUTTER_KEY_OfficeHome">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2227"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ograve" value="210" c:type="CLUTTER_KEY_Ograve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="528"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohook" value="16785102" c:type="CLUTTER_KEY_Ohook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1696"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorn" value="16777632" c:type="CLUTTER_KEY_Ohorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1738"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornacute"
              value="16785114"
              c:type="CLUTTER_KEY_Ohornacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1708"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornbelowdot"
              value="16785122"
              c:type="CLUTTER_KEY_Ohornbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1716"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorngrave"
              value="16785116"
              c:type="CLUTTER_KEY_Ohorngrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1710"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohornhook"
              value="16785118"
              c:type="CLUTTER_KEY_Ohornhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1712"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ohorntilde"
              value="16785120"
              c:type="CLUTTER_KEY_Ohorntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1714"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Omacron" value="978" c:type="CLUTTER_KEY_Omacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="677"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ooblique" value="216" c:type="CLUTTER_KEY_Ooblique">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="535"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Open" value="269025131" c:type="CLUTTER_KEY_Open">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2228"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_OpenURL"
              value="269025080"
              c:type="CLUTTER_KEY_OpenURL">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Option" value="269025132" c:type="CLUTTER_KEY_Option">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Oslash" value="216" c:type="CLUTTER_KEY_Oslash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="534"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Otilde" value="213" c:type="CLUTTER_KEY_Otilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="531"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Overlay1_Enable"
              value="65144"
              c:type="CLUTTER_KEY_Overlay1_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="311"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Overlay2_Enable"
              value="65145"
              c:type="CLUTTER_KEY_Overlay2_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="312"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_P" value="80" c:type="CLUTTER_KEY_P">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="429"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pabovedot"
              value="16784982"
              c:type="CLUTTER_KEY_Pabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="704"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Page_Down"
              value="65366"
              c:type="CLUTTER_KEY_Page_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="78"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Page_Up" value="65365" c:type="CLUTTER_KEY_Page_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="76"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Paste" value="269025133" c:type="CLUTTER_KEY_Paste">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2230"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pause" value="65299" c:type="CLUTTER_KEY_Pause">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="40"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PesetaSign"
              value="16785575"
              c:type="CLUTTER_KEY_PesetaSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1749"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Phone" value="269025134" c:type="CLUTTER_KEY_Phone">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2231"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pictures"
              value="269025169"
              c:type="CLUTTER_KEY_Pictures">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Accelerate"
              value="65274"
              c:type="CLUTTER_KEY_Pointer_Accelerate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="341"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button1"
              value="65257"
              c:type="CLUTTER_KEY_Pointer_Button1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="323"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button2"
              value="65258"
              c:type="CLUTTER_KEY_Pointer_Button2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="324"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button3"
              value="65259"
              c:type="CLUTTER_KEY_Pointer_Button3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="325"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button4"
              value="65260"
              c:type="CLUTTER_KEY_Pointer_Button4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="326"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button5"
              value="65261"
              c:type="CLUTTER_KEY_Pointer_Button5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="327"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Button_Dflt"
              value="65256"
              c:type="CLUTTER_KEY_Pointer_Button_Dflt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="322"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick1"
              value="65263"
              c:type="CLUTTER_KEY_Pointer_DblClick1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="329"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick2"
              value="65264"
              c:type="CLUTTER_KEY_Pointer_DblClick2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="330"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick3"
              value="65265"
              c:type="CLUTTER_KEY_Pointer_DblClick3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="331"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick4"
              value="65266"
              c:type="CLUTTER_KEY_Pointer_DblClick4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="332"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick5"
              value="65267"
              c:type="CLUTTER_KEY_Pointer_DblClick5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="333"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DblClick_Dflt"
              value="65262"
              c:type="CLUTTER_KEY_Pointer_DblClick_Dflt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="328"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DfltBtnNext"
              value="65275"
              c:type="CLUTTER_KEY_Pointer_DfltBtnNext">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="342"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DfltBtnPrev"
              value="65276"
              c:type="CLUTTER_KEY_Pointer_DfltBtnPrev">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="343"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Down"
              value="65251"
              c:type="CLUTTER_KEY_Pointer_Down">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="317"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DownLeft"
              value="65254"
              c:type="CLUTTER_KEY_Pointer_DownLeft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="320"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_DownRight"
              value="65255"
              c:type="CLUTTER_KEY_Pointer_DownRight">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="321"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag1"
              value="65269"
              c:type="CLUTTER_KEY_Pointer_Drag1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="335"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag2"
              value="65270"
              c:type="CLUTTER_KEY_Pointer_Drag2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="336"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag3"
              value="65271"
              c:type="CLUTTER_KEY_Pointer_Drag3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="337"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag4"
              value="65272"
              c:type="CLUTTER_KEY_Pointer_Drag4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="338"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag5"
              value="65277"
              c:type="CLUTTER_KEY_Pointer_Drag5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="339"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Drag_Dflt"
              value="65268"
              c:type="CLUTTER_KEY_Pointer_Drag_Dflt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="334"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_EnableKeys"
              value="65273"
              c:type="CLUTTER_KEY_Pointer_EnableKeys">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="340"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Left"
              value="65248"
              c:type="CLUTTER_KEY_Pointer_Left">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="314"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Right"
              value="65249"
              c:type="CLUTTER_KEY_Pointer_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="315"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_Up"
              value="65250"
              c:type="CLUTTER_KEY_Pointer_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="316"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_UpLeft"
              value="65252"
              c:type="CLUTTER_KEY_Pointer_UpLeft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="318"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Pointer_UpRight"
              value="65253"
              c:type="CLUTTER_KEY_Pointer_UpRight">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="319"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PowerDown"
              value="269025057"
              c:type="CLUTTER_KEY_PowerDown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PowerOff"
              value="269025066"
              c:type="CLUTTER_KEY_PowerOff">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prev_VMode"
              value="269024803"
              c:type="CLUTTER_KEY_Prev_VMode">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2305"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prev_Virtual_Screen"
              value="65233"
              c:type="CLUTTER_KEY_Prev_Virtual_Screen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="299"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_PreviousCandidate"
              value="65342"
              c:type="CLUTTER_KEY_PreviousCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="49"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Print" value="65377" c:type="CLUTTER_KEY_Print">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="82"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Prior" value="65365" c:type="CLUTTER_KEY_Prior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="75"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Q" value="81" c:type="CLUTTER_KEY_Q">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="430"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R" value="82" c:type="CLUTTER_KEY_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="431"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R1" value="65490" c:type="CLUTTER_KEY_R1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R10" value="65499" c:type="CLUTTER_KEY_R10">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R11" value="65500" c:type="CLUTTER_KEY_R11">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R12" value="65501" c:type="CLUTTER_KEY_R12">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R13" value="65502" c:type="CLUTTER_KEY_R13">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R14" value="65503" c:type="CLUTTER_KEY_R14">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R15" value="65504" c:type="CLUTTER_KEY_R15">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R2" value="65491" c:type="CLUTTER_KEY_R2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R3" value="65492" c:type="CLUTTER_KEY_R3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R4" value="65493" c:type="CLUTTER_KEY_R4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R5" value="65494" c:type="CLUTTER_KEY_R5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R6" value="65495" c:type="CLUTTER_KEY_R6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R7" value="65496" c:type="CLUTTER_KEY_R7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R8" value="65497" c:type="CLUTTER_KEY_R8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_R9" value="65498" c:type="CLUTTER_KEY_R9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Racute" value="448" c:type="CLUTTER_KEY_Racute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="601"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Rcaron" value="472" c:type="CLUTTER_KEY_Rcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="613"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Rcedilla" value="931" c:type="CLUTTER_KEY_Rcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="658"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Red" value="269025187" c:type="CLUTTER_KEY_Red">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2280"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Redo" value="65382" c:type="CLUTTER_KEY_Redo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="86"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Refresh"
              value="269025065"
              c:type="CLUTTER_KEY_Refresh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Reload" value="269025139" c:type="CLUTTER_KEY_Reload">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2233"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RepeatKeys_Enable"
              value="65138"
              c:type="CLUTTER_KEY_RepeatKeys_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="305"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Reply" value="269025138" c:type="CLUTTER_KEY_Reply">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2232"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Return" value="65293" c:type="CLUTTER_KEY_Return">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="39"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Right" value="65363" c:type="CLUTTER_KEY_Right">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="73"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerDown"
              value="269025060"
              c:type="CLUTTER_KEY_RockerDown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerEnter"
              value="269025061"
              c:type="CLUTTER_KEY_RockerEnter">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RockerUp"
              value="269025059"
              c:type="CLUTTER_KEY_RockerUp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Romaji" value="65316" c:type="CLUTTER_KEY_Romaji">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="54"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotateWindows"
              value="269025140"
              c:type="CLUTTER_KEY_RotateWindows">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2234"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotationKB"
              value="269025142"
              c:type="CLUTTER_KEY_RotationKB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2236"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RotationPB"
              value="269025141"
              c:type="CLUTTER_KEY_RotationPB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2235"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_RupeeSign"
              value="16785576"
              c:type="CLUTTER_KEY_RupeeSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1750"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_S" value="83" c:type="CLUTTER_KEY_S">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="432"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SCHWA" value="16777615" c:type="CLUTTER_KEY_SCHWA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1644"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sabovedot"
              value="16784992"
              c:type="CLUTTER_KEY_Sabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="706"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sacute" value="422" c:type="CLUTTER_KEY_Sacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="581"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Save" value="269025143" c:type="CLUTTER_KEY_Save">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scaron" value="425" c:type="CLUTTER_KEY_Scaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="582"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scedilla" value="426" c:type="CLUTTER_KEY_Scedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="583"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scircumflex"
              value="734"
              c:type="CLUTTER_KEY_Scircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="649"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScreenSaver"
              value="269025069"
              c:type="CLUTTER_KEY_ScreenSaver">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollClick"
              value="269025146"
              c:type="CLUTTER_KEY_ScrollClick">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2240"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollDown"
              value="269025145"
              c:type="CLUTTER_KEY_ScrollDown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2239"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ScrollUp"
              value="269025144"
              c:type="CLUTTER_KEY_ScrollUp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2238"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Scroll_Lock"
              value="65300"
              c:type="CLUTTER_KEY_Scroll_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="41"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Search" value="269025051" c:type="CLUTTER_KEY_Search">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Select" value="65376" c:type="CLUTTER_KEY_Select">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="81"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SelectButton"
              value="269025184"
              c:type="CLUTTER_KEY_SelectButton">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2277"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Send" value="269025147" c:type="CLUTTER_KEY_Send">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2241"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_DJE"
              value="1713"
              c:type="CLUTTER_KEY_Serbian_DJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="935"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_DZE"
              value="1727"
              c:type="CLUTTER_KEY_Serbian_DZE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="956"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_JE"
              value="1720"
              c:type="CLUTTER_KEY_Serbian_JE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="946"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_LJE"
              value="1721"
              c:type="CLUTTER_KEY_Serbian_LJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="948"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_NJE"
              value="1722"
              c:type="CLUTTER_KEY_Serbian_NJE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="950"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_TSHE"
              value="1723"
              c:type="CLUTTER_KEY_Serbian_TSHE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="951"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_dje"
              value="1697"
              c:type="CLUTTER_KEY_Serbian_dje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="912"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_dze"
              value="1711"
              c:type="CLUTTER_KEY_Serbian_dze">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="933"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_je"
              value="1704"
              c:type="CLUTTER_KEY_Serbian_je">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="923"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_lje"
              value="1705"
              c:type="CLUTTER_KEY_Serbian_lje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="925"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_nje"
              value="1706"
              c:type="CLUTTER_KEY_Serbian_nje">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="927"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Serbian_tshe"
              value="1707"
              c:type="CLUTTER_KEY_Serbian_tshe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="928"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_L" value="65505" c:type="CLUTTER_KEY_Shift_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_Lock"
              value="65510"
              c:type="CLUTTER_KEY_Shift_Lock">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shift_R" value="65506" c:type="CLUTTER_KEY_Shift_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Shop" value="269025078" c:type="CLUTTER_KEY_Shop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SingleCandidate"
              value="65340"
              c:type="CLUTTER_KEY_SingleCandidate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="47"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_a" value="16780677" c:type="CLUTTER_KEY_Sinh_a">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2055"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_aa" value="16780678" c:type="CLUTTER_KEY_Sinh_aa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2056"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_aa2"
              value="16780751"
              c:type="CLUTTER_KEY_Sinh_aa2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ae" value="16780679" c:type="CLUTTER_KEY_Sinh_ae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2057"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ae2"
              value="16780752"
              c:type="CLUTTER_KEY_Sinh_ae2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_aee"
              value="16780680"
              c:type="CLUTTER_KEY_Sinh_aee">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2058"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_aee2"
              value="16780753"
              c:type="CLUTTER_KEY_Sinh_aee2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ai" value="16780691" c:type="CLUTTER_KEY_Sinh_ai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2069"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ai2"
              value="16780763"
              c:type="CLUTTER_KEY_Sinh_ai2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_al" value="16780746" c:type="CLUTTER_KEY_Sinh_al">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_au" value="16780694" c:type="CLUTTER_KEY_Sinh_au">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2072"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_au2"
              value="16780766"
              c:type="CLUTTER_KEY_Sinh_au2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ba" value="16780726" c:type="CLUTTER_KEY_Sinh_ba">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_bha"
              value="16780727"
              c:type="CLUTTER_KEY_Sinh_bha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ca" value="16780704" c:type="CLUTTER_KEY_Sinh_ca">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2079"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_cha"
              value="16780705"
              c:type="CLUTTER_KEY_Sinh_cha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2080"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_dda"
              value="16780713"
              c:type="CLUTTER_KEY_Sinh_dda">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2088"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ddha"
              value="16780714"
              c:type="CLUTTER_KEY_Sinh_ddha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2089"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_dha"
              value="16780719"
              c:type="CLUTTER_KEY_Sinh_dha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2094"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_dhha"
              value="16780720"
              c:type="CLUTTER_KEY_Sinh_dhha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2095"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_e" value="16780689" c:type="CLUTTER_KEY_Sinh_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2067"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_e2" value="16780761" c:type="CLUTTER_KEY_Sinh_e2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ee" value="16780690" c:type="CLUTTER_KEY_Sinh_ee">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2068"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ee2"
              value="16780762"
              c:type="CLUTTER_KEY_Sinh_ee2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_fa" value="16780742" c:type="CLUTTER_KEY_Sinh_fa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ga" value="16780700" c:type="CLUTTER_KEY_Sinh_ga">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2075"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_gha"
              value="16780701"
              c:type="CLUTTER_KEY_Sinh_gha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2076"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_h2" value="16780675" c:type="CLUTTER_KEY_Sinh_h2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2054"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ha" value="16780740" c:type="CLUTTER_KEY_Sinh_ha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_i" value="16780681" c:type="CLUTTER_KEY_Sinh_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2059"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_i2" value="16780754" c:type="CLUTTER_KEY_Sinh_i2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ii" value="16780682" c:type="CLUTTER_KEY_Sinh_ii">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2060"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ii2"
              value="16780755"
              c:type="CLUTTER_KEY_Sinh_ii2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ja" value="16780706" c:type="CLUTTER_KEY_Sinh_ja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2081"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_jha"
              value="16780707"
              c:type="CLUTTER_KEY_Sinh_jha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2082"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_jnya"
              value="16780709"
              c:type="CLUTTER_KEY_Sinh_jnya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2084"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ka" value="16780698" c:type="CLUTTER_KEY_Sinh_ka">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2073"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_kha"
              value="16780699"
              c:type="CLUTTER_KEY_Sinh_kha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2074"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_kunddaliya"
              value="16780788"
              c:type="CLUTTER_KEY_Sinh_kunddaliya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_la" value="16780733" c:type="CLUTTER_KEY_Sinh_la">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_lla"
              value="16780741"
              c:type="CLUTTER_KEY_Sinh_lla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_lu" value="16780687" c:type="CLUTTER_KEY_Sinh_lu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2065"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_lu2"
              value="16780767"
              c:type="CLUTTER_KEY_Sinh_lu2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_luu"
              value="16780688"
              c:type="CLUTTER_KEY_Sinh_luu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2066"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_luu2"
              value="16780787"
              c:type="CLUTTER_KEY_Sinh_luu2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ma" value="16780728" c:type="CLUTTER_KEY_Sinh_ma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_mba"
              value="16780729"
              c:type="CLUTTER_KEY_Sinh_mba">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_na" value="16780721" c:type="CLUTTER_KEY_Sinh_na">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2096"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ndda"
              value="16780716"
              c:type="CLUTTER_KEY_Sinh_ndda">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2091"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ndha"
              value="16780723"
              c:type="CLUTTER_KEY_Sinh_ndha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2097"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ng" value="16780674" c:type="CLUTTER_KEY_Sinh_ng">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2053"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ng2"
              value="16780702"
              c:type="CLUTTER_KEY_Sinh_ng2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2077"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_nga"
              value="16780703"
              c:type="CLUTTER_KEY_Sinh_nga">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2078"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_nja"
              value="16780710"
              c:type="CLUTTER_KEY_Sinh_nja">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2085"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_nna"
              value="16780715"
              c:type="CLUTTER_KEY_Sinh_nna">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2090"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_nya"
              value="16780708"
              c:type="CLUTTER_KEY_Sinh_nya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2083"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_o" value="16780692" c:type="CLUTTER_KEY_Sinh_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2070"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_o2" value="16780764" c:type="CLUTTER_KEY_Sinh_o2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_oo" value="16780693" c:type="CLUTTER_KEY_Sinh_oo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2071"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_oo2"
              value="16780765"
              c:type="CLUTTER_KEY_Sinh_oo2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_pa" value="16780724" c:type="CLUTTER_KEY_Sinh_pa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2098"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_pha"
              value="16780725"
              c:type="CLUTTER_KEY_Sinh_pha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2099"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ra" value="16780731" c:type="CLUTTER_KEY_Sinh_ra">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ri" value="16780685" c:type="CLUTTER_KEY_Sinh_ri">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2063"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_rii"
              value="16780686"
              c:type="CLUTTER_KEY_Sinh_rii">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2064"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ru2"
              value="16780760"
              c:type="CLUTTER_KEY_Sinh_ru2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ruu2"
              value="16780786"
              c:type="CLUTTER_KEY_Sinh_ruu2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_sa" value="16780739" c:type="CLUTTER_KEY_Sinh_sa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_sha"
              value="16780737"
              c:type="CLUTTER_KEY_Sinh_sha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ssha"
              value="16780738"
              c:type="CLUTTER_KEY_Sinh_ssha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_tha"
              value="16780717"
              c:type="CLUTTER_KEY_Sinh_tha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2092"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_thha"
              value="16780718"
              c:type="CLUTTER_KEY_Sinh_thha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2093"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_tta"
              value="16780711"
              c:type="CLUTTER_KEY_Sinh_tta">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2086"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ttha"
              value="16780712"
              c:type="CLUTTER_KEY_Sinh_ttha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2087"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_u" value="16780683" c:type="CLUTTER_KEY_Sinh_u">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2061"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_u2" value="16780756" c:type="CLUTTER_KEY_Sinh_u2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_uu" value="16780684" c:type="CLUTTER_KEY_Sinh_uu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2062"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_uu2"
              value="16780758"
              c:type="CLUTTER_KEY_Sinh_uu2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_va" value="16780736" c:type="CLUTTER_KEY_Sinh_va">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sinh_ya" value="16780730" c:type="CLUTTER_KEY_Sinh_ya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sleep" value="269025071" c:type="CLUTTER_KEY_Sleep">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SlowKeys_Enable"
              value="65139"
              c:type="CLUTTER_KEY_SlowKeys_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="306"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Spell" value="269025148" c:type="CLUTTER_KEY_Spell">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2242"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_SplitScreen"
              value="269025149"
              c:type="CLUTTER_KEY_SplitScreen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2243"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Standby"
              value="269025040"
              c:type="CLUTTER_KEY_Standby">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Start" value="269025050" c:type="CLUTTER_KEY_Start">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_StickyKeys_Enable"
              value="65141"
              c:type="CLUTTER_KEY_StickyKeys_Enable">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="308"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Stop" value="269025064" c:type="CLUTTER_KEY_Stop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Subtitle"
              value="269025178"
              c:type="CLUTTER_KEY_Subtitle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Super_L" value="65515" c:type="CLUTTER_KEY_Super_L">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Super_R" value="65516" c:type="CLUTTER_KEY_Super_R">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Support"
              value="269025150"
              c:type="CLUTTER_KEY_Support">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2244"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Suspend"
              value="269025191"
              c:type="CLUTTER_KEY_Suspend">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2284"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_1"
              value="269024769"
              c:type="CLUTTER_KEY_Switch_VT_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_10"
              value="269024778"
              c:type="CLUTTER_KEY_Switch_VT_10">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2299"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_11"
              value="269024779"
              c:type="CLUTTER_KEY_Switch_VT_11">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2300"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_12"
              value="269024780"
              c:type="CLUTTER_KEY_Switch_VT_12">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2301"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_2"
              value="269024770"
              c:type="CLUTTER_KEY_Switch_VT_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2291"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_3"
              value="269024771"
              c:type="CLUTTER_KEY_Switch_VT_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2292"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_4"
              value="269024772"
              c:type="CLUTTER_KEY_Switch_VT_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2293"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_5"
              value="269024773"
              c:type="CLUTTER_KEY_Switch_VT_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2294"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_6"
              value="269024774"
              c:type="CLUTTER_KEY_Switch_VT_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2295"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_7"
              value="269024775"
              c:type="CLUTTER_KEY_Switch_VT_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2296"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_8"
              value="269024776"
              c:type="CLUTTER_KEY_Switch_VT_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2297"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Switch_VT_9"
              value="269024777"
              c:type="CLUTTER_KEY_Switch_VT_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Sys_Req" value="65301" c:type="CLUTTER_KEY_Sys_Req">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="42"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_T" value="84" c:type="CLUTTER_KEY_T">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="433"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_THORN" value="222" c:type="CLUTTER_KEY_THORN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="541"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tab" value="65289" c:type="CLUTTER_KEY_Tab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="36"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tabovedot"
              value="16785002"
              c:type="CLUTTER_KEY_Tabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="708"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TaskPane"
              value="269025151"
              c:type="CLUTTER_KEY_TaskPane">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2245"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tcaron" value="427" c:type="CLUTTER_KEY_Tcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="584"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tcedilla" value="478" c:type="CLUTTER_KEY_Tcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="616"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Terminal"
              value="269025152"
              c:type="CLUTTER_KEY_Terminal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Terminate_Server"
              value="65237"
              c:type="CLUTTER_KEY_Terminate_Server">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="302"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_baht" value="3551" c:type="CLUTTER_KEY_Thai_baht">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1371"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_bobaimai"
              value="3514"
              c:type="CLUTTER_KEY_Thai_bobaimai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1337"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochan"
              value="3496"
              c:type="CLUTTER_KEY_Thai_chochan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1319"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochang"
              value="3498"
              c:type="CLUTTER_KEY_Thai_chochang">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1321"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_choching"
              value="3497"
              c:type="CLUTTER_KEY_Thai_choching">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1320"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_chochoe"
              value="3500"
              c:type="CLUTTER_KEY_Thai_chochoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1323"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_dochada"
              value="3502"
              c:type="CLUTTER_KEY_Thai_dochada">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1325"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_dodek"
              value="3508"
              c:type="CLUTTER_KEY_Thai_dodek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1331"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_fofa" value="3517" c:type="CLUTTER_KEY_Thai_fofa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1340"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_fofan"
              value="3519"
              c:type="CLUTTER_KEY_Thai_fofan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1342"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_hohip"
              value="3531"
              c:type="CLUTTER_KEY_Thai_hohip">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1354"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_honokhuk"
              value="3534"
              c:type="CLUTTER_KEY_Thai_honokhuk">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1357"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhai"
              value="3490"
              c:type="CLUTTER_KEY_Thai_khokhai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1313"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhon"
              value="3493"
              c:type="CLUTTER_KEY_Thai_khokhon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1316"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhuat"
              value="3491"
              c:type="CLUTTER_KEY_Thai_khokhuat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1314"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khokhwai"
              value="3492"
              c:type="CLUTTER_KEY_Thai_khokhwai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1315"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_khorakhang"
              value="3494"
              c:type="CLUTTER_KEY_Thai_khorakhang">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1317"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_kokai"
              value="3489"
              c:type="CLUTTER_KEY_Thai_kokai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1312"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lakkhangyao"
              value="3557"
              c:type="CLUTTER_KEY_Thai_lakkhangyao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1377"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekchet"
              value="3575"
              c:type="CLUTTER_KEY_Thai_lekchet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1393"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekha"
              value="3573"
              c:type="CLUTTER_KEY_Thai_lekha">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1391"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekhok"
              value="3574"
              c:type="CLUTTER_KEY_Thai_lekhok">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1392"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekkao"
              value="3577"
              c:type="CLUTTER_KEY_Thai_lekkao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1395"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leknung"
              value="3569"
              c:type="CLUTTER_KEY_Thai_leknung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1387"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lekpaet"
              value="3576"
              c:type="CLUTTER_KEY_Thai_lekpaet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1394"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksam"
              value="3571"
              c:type="CLUTTER_KEY_Thai_leksam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1389"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksi"
              value="3572"
              c:type="CLUTTER_KEY_Thai_leksi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1390"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksong"
              value="3570"
              c:type="CLUTTER_KEY_Thai_leksong">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1388"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_leksun"
              value="3568"
              c:type="CLUTTER_KEY_Thai_leksun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1386"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lochula"
              value="3532"
              c:type="CLUTTER_KEY_Thai_lochula">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1355"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_loling"
              value="3525"
              c:type="CLUTTER_KEY_Thai_loling">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1348"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_lu" value="3526" c:type="CLUTTER_KEY_Thai_lu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1349"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maichattawa"
              value="3563"
              c:type="CLUTTER_KEY_Thai_maichattawa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1383"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maiek"
              value="3560"
              c:type="CLUTTER_KEY_Thai_maiek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1380"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maihanakat"
              value="3537"
              c:type="CLUTTER_KEY_Thai_maihanakat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1360"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maihanakat_maitho"
              value="3550"
              c:type="CLUTTER_KEY_Thai_maihanakat_maitho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1370"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitaikhu"
              value="3559"
              c:type="CLUTTER_KEY_Thai_maitaikhu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1379"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitho"
              value="3561"
              c:type="CLUTTER_KEY_Thai_maitho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1381"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maitri"
              value="3562"
              c:type="CLUTTER_KEY_Thai_maitri">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1382"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_maiyamok"
              value="3558"
              c:type="CLUTTER_KEY_Thai_maiyamok">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1378"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_moma" value="3521" c:type="CLUTTER_KEY_Thai_moma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1344"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_ngongu"
              value="3495"
              c:type="CLUTTER_KEY_Thai_ngongu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1318"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nikhahit"
              value="3565"
              c:type="CLUTTER_KEY_Thai_nikhahit">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1385"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nonen"
              value="3507"
              c:type="CLUTTER_KEY_Thai_nonen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1330"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_nonu" value="3513" c:type="CLUTTER_KEY_Thai_nonu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1336"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_oang" value="3533" c:type="CLUTTER_KEY_Thai_oang">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1356"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_paiyannoi"
              value="3535"
              c:type="CLUTTER_KEY_Thai_paiyannoi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1358"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phinthu"
              value="3546"
              c:type="CLUTTER_KEY_Thai_phinthu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1369"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phophan"
              value="3518"
              c:type="CLUTTER_KEY_Thai_phophan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1341"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phophung"
              value="3516"
              c:type="CLUTTER_KEY_Thai_phophung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1339"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_phosamphao"
              value="3520"
              c:type="CLUTTER_KEY_Thai_phosamphao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1343"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_popla"
              value="3515"
              c:type="CLUTTER_KEY_Thai_popla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1338"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_rorua"
              value="3523"
              c:type="CLUTTER_KEY_Thai_rorua">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1346"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_ru" value="3524" c:type="CLUTTER_KEY_Thai_ru">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1347"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraa"
              value="3536"
              c:type="CLUTTER_KEY_Thai_saraa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1359"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaa"
              value="3538"
              c:type="CLUTTER_KEY_Thai_saraaa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1361"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraae"
              value="3553"
              c:type="CLUTTER_KEY_Thai_saraae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1373"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaimaimalai"
              value="3556"
              c:type="CLUTTER_KEY_Thai_saraaimaimalai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1376"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraaimaimuan"
              value="3555"
              c:type="CLUTTER_KEY_Thai_saraaimaimuan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1375"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraam"
              value="3539"
              c:type="CLUTTER_KEY_Thai_saraam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1362"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarae"
              value="3552"
              c:type="CLUTTER_KEY_Thai_sarae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1372"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarai"
              value="3540"
              c:type="CLUTTER_KEY_Thai_sarai">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1363"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraii"
              value="3541"
              c:type="CLUTTER_KEY_Thai_saraii">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1364"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarao"
              value="3554"
              c:type="CLUTTER_KEY_Thai_sarao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1374"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarau"
              value="3544"
              c:type="CLUTTER_KEY_Thai_sarau">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1367"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_saraue"
              value="3542"
              c:type="CLUTTER_KEY_Thai_saraue">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1365"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarauee"
              value="3543"
              c:type="CLUTTER_KEY_Thai_sarauee">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1366"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sarauu"
              value="3545"
              c:type="CLUTTER_KEY_Thai_sarauu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1368"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sorusi"
              value="3529"
              c:type="CLUTTER_KEY_Thai_sorusi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1352"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sosala"
              value="3528"
              c:type="CLUTTER_KEY_Thai_sosala">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1351"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_soso" value="3499" c:type="CLUTTER_KEY_Thai_soso">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1322"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_sosua"
              value="3530"
              c:type="CLUTTER_KEY_Thai_sosua">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1353"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thanthakhat"
              value="3564"
              c:type="CLUTTER_KEY_Thai_thanthakhat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1384"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thonangmontho"
              value="3505"
              c:type="CLUTTER_KEY_Thai_thonangmontho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1328"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thophuthao"
              value="3506"
              c:type="CLUTTER_KEY_Thai_thophuthao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1329"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothahan"
              value="3511"
              c:type="CLUTTER_KEY_Thai_thothahan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1334"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothan"
              value="3504"
              c:type="CLUTTER_KEY_Thai_thothan">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1327"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothong"
              value="3512"
              c:type="CLUTTER_KEY_Thai_thothong">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1335"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_thothung"
              value="3510"
              c:type="CLUTTER_KEY_Thai_thothung">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1333"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_topatak"
              value="3503"
              c:type="CLUTTER_KEY_Thai_topatak">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1326"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_totao"
              value="3509"
              c:type="CLUTTER_KEY_Thai_totao">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1332"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_wowaen"
              value="3527"
              c:type="CLUTTER_KEY_Thai_wowaen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1350"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_yoyak"
              value="3522"
              c:type="CLUTTER_KEY_Thai_yoyak">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1345"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thai_yoying"
              value="3501"
              c:type="CLUTTER_KEY_Thai_yoying">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1324"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Thorn" value="222" c:type="CLUTTER_KEY_Thorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="542"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Time" value="269025183" c:type="CLUTTER_KEY_Time">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2276"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ToDoList"
              value="269025055"
              c:type="CLUTTER_KEY_ToDoList">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tools" value="269025153" c:type="CLUTTER_KEY_Tools">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2247"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TopMenu"
              value="269025186"
              c:type="CLUTTER_KEY_TopMenu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2279"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TouchpadOff"
              value="269025201"
              c:type="CLUTTER_KEY_TouchpadOff">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2288"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TouchpadOn"
              value="269025200"
              c:type="CLUTTER_KEY_TouchpadOn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2287"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_TouchpadToggle"
              value="269025193"
              c:type="CLUTTER_KEY_TouchpadToggle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2286"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Touroku" value="65323" c:type="CLUTTER_KEY_Touroku">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="61"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Travel" value="269025154" c:type="CLUTTER_KEY_Travel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2248"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Tslash" value="940" c:type="CLUTTER_KEY_Tslash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="663"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_U" value="85" c:type="CLUTTER_KEY_U">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="434"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_UWB" value="269025174" c:type="CLUTTER_KEY_UWB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2267"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uacute" value="218" c:type="CLUTTER_KEY_Uacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="537"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ubelowdot"
              value="16785124"
              c:type="CLUTTER_KEY_Ubelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1718"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ubreve" value="733" c:type="CLUTTER_KEY_Ubreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="648"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ucircumflex"
              value="219"
              c:type="CLUTTER_KEY_Ucircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="538"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Udiaeresis"
              value="220"
              c:type="CLUTTER_KEY_Udiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="539"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Udoubleacute"
              value="475"
              c:type="CLUTTER_KEY_Udoubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="615"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ugrave" value="217" c:type="CLUTTER_KEY_Ugrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="536"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhook" value="16785126" c:type="CLUTTER_KEY_Uhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1720"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorn" value="16777647" c:type="CLUTTER_KEY_Uhorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1740"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornacute"
              value="16785128"
              c:type="CLUTTER_KEY_Uhornacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1722"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornbelowdot"
              value="16785136"
              c:type="CLUTTER_KEY_Uhornbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1730"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorngrave"
              value="16785130"
              c:type="CLUTTER_KEY_Uhorngrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1724"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhornhook"
              value="16785132"
              c:type="CLUTTER_KEY_Uhornhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1726"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uhorntilde"
              value="16785134"
              c:type="CLUTTER_KEY_Uhorntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1728"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_GHE_WITH_UPTURN"
              value="1725"
              c:type="CLUTTER_KEY_Ukrainian_GHE_WITH_UPTURN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="953"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_I"
              value="1718"
              c:type="CLUTTER_KEY_Ukrainian_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="941"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_IE"
              value="1716"
              c:type="CLUTTER_KEY_Ukrainian_IE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="938"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_YI"
              value="1719"
              c:type="CLUTTER_KEY_Ukrainian_YI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="943"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_ghe_with_upturn"
              value="1709"
              c:type="CLUTTER_KEY_Ukrainian_ghe_with_upturn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="930"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_i"
              value="1702"
              c:type="CLUTTER_KEY_Ukrainian_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="918"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_ie"
              value="1700"
              c:type="CLUTTER_KEY_Ukrainian_ie">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="915"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukrainian_yi"
              value="1703"
              c:type="CLUTTER_KEY_Ukrainian_yi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="920"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_I"
              value="1718"
              c:type="CLUTTER_KEY_Ukranian_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="942"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_JE"
              value="1716"
              c:type="CLUTTER_KEY_Ukranian_JE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="939"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_YI"
              value="1719"
              c:type="CLUTTER_KEY_Ukranian_YI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="944"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_i"
              value="1702"
              c:type="CLUTTER_KEY_Ukranian_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="919"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_je"
              value="1700"
              c:type="CLUTTER_KEY_Ukranian_je">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="916"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ukranian_yi"
              value="1703"
              c:type="CLUTTER_KEY_Ukranian_yi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="921"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Umacron" value="990" c:type="CLUTTER_KEY_Umacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="681"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Undo" value="65381" c:type="CLUTTER_KEY_Undo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="85"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ungrab" value="269024800" c:type="CLUTTER_KEY_Ungrab">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2302"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uogonek" value="985" c:type="CLUTTER_KEY_Uogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="679"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Up" value="65362" c:type="CLUTTER_KEY_Up">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="72"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Uring" value="473" c:type="CLUTTER_KEY_Uring">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="614"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_User1KB"
              value="269025157"
              c:type="CLUTTER_KEY_User1KB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2250"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_User2KB"
              value="269025158"
              c:type="CLUTTER_KEY_User2KB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2251"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_UserPB" value="269025156" c:type="CLUTTER_KEY_UserPB">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2249"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Utilde" value="989" c:type="CLUTTER_KEY_Utilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="680"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_V" value="86" c:type="CLUTTER_KEY_V">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="435"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_VendorHome"
              value="269025076"
              c:type="CLUTTER_KEY_VendorHome">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Video" value="269025159" c:type="CLUTTER_KEY_Video">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2252"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_View" value="269025185" c:type="CLUTTER_KEY_View">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2278"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_VoidSymbol"
              value="16777215"
              c:type="CLUTTER_KEY_VoidSymbol">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="34"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_W" value="87" c:type="CLUTTER_KEY_W">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="436"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WLAN" value="269025173" c:type="CLUTTER_KEY_WLAN">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2266"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WWW" value="269025070" c:type="CLUTTER_KEY_WWW">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wacute" value="16785026" c:type="CLUTTER_KEY_Wacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="712"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WakeUp" value="269025067" c:type="CLUTTER_KEY_WakeUp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wcircumflex"
              value="16777588"
              c:type="CLUTTER_KEY_Wcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="692"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wdiaeresis"
              value="16785028"
              c:type="CLUTTER_KEY_Wdiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="714"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WebCam" value="269025167" c:type="CLUTTER_KEY_WebCam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2260"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Wgrave" value="16785024" c:type="CLUTTER_KEY_Wgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="710"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WheelButton"
              value="269025160"
              c:type="CLUTTER_KEY_WheelButton">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2253"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WindowClear"
              value="269025109"
              c:type="CLUTTER_KEY_WindowClear">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_WonSign" value="16785577" c:type="CLUTTER_KEY_WonSign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1751"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Word" value="269025161" c:type="CLUTTER_KEY_Word">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_X" value="88" c:type="CLUTTER_KEY_X">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="437"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Xabovedot"
              value="16785034"
              c:type="CLUTTER_KEY_Xabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1632"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Xfer" value="269025162" c:type="CLUTTER_KEY_Xfer">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2255"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Y" value="89" c:type="CLUTTER_KEY_Y">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="438"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yacute" value="221" c:type="CLUTTER_KEY_Yacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="540"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ybelowdot"
              value="16785140"
              c:type="CLUTTER_KEY_Ybelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1732"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ycircumflex"
              value="16777590"
              c:type="CLUTTER_KEY_Ycircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="694"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ydiaeresis"
              value="5054"
              c:type="CLUTTER_KEY_Ydiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="720"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yellow" value="269025189" c:type="CLUTTER_KEY_Yellow">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2282"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ygrave" value="16785138" c:type="CLUTTER_KEY_Ygrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="716"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Yhook" value="16785142" c:type="CLUTTER_KEY_Yhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1734"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Ytilde" value="16785144" c:type="CLUTTER_KEY_Ytilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1736"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Z" value="90" c:type="CLUTTER_KEY_Z">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="439"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zabovedot" value="431" c:type="CLUTTER_KEY_Zabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="587"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zacute" value="428" c:type="CLUTTER_KEY_Zacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="585"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zcaron" value="430" c:type="CLUTTER_KEY_Zcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="586"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zen_Koho" value="65341" c:type="CLUTTER_KEY_Zen_Koho">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="68"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zenkaku" value="65320" c:type="CLUTTER_KEY_Zenkaku">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="58"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zenkaku_Hankaku"
              value="65322"
              c:type="CLUTTER_KEY_Zenkaku_Hankaku">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="60"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ZoomIn" value="269025163" c:type="CLUTTER_KEY_ZoomIn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2256"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ZoomOut"
              value="269025164"
              c:type="CLUTTER_KEY_ZoomOut">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2257"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_Zstroke" value="16777653" c:type="CLUTTER_KEY_Zstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1634"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_a" value="97" c:type="CLUTTER_KEY_a">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="447"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aacute" value="225" c:type="CLUTTER_KEY_aacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="545"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abelowdot"
              value="16785057"
              c:type="CLUTTER_KEY_abelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1651"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abovedot" value="511" c:type="CLUTTER_KEY_abovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="633"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abreve" value="483" c:type="CLUTTER_KEY_abreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="618"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abreveacute"
              value="16785071"
              c:type="CLUTTER_KEY_abreveacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1665"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevebelowdot"
              value="16785079"
              c:type="CLUTTER_KEY_abrevebelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1673"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevegrave"
              value="16785073"
              c:type="CLUTTER_KEY_abrevegrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1667"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevehook"
              value="16785075"
              c:type="CLUTTER_KEY_abrevehook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1669"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_abrevetilde"
              value="16785077"
              c:type="CLUTTER_KEY_abrevetilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1671"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflex"
              value="226"
              c:type="CLUTTER_KEY_acircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="546"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexacute"
              value="16785061"
              c:type="CLUTTER_KEY_acircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1655"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexbelowdot"
              value="16785069"
              c:type="CLUTTER_KEY_acircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1663"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexgrave"
              value="16785063"
              c:type="CLUTTER_KEY_acircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1657"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflexhook"
              value="16785065"
              c:type="CLUTTER_KEY_acircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1659"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acircumflextilde"
              value="16785067"
              c:type="CLUTTER_KEY_acircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1661"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_acute" value="180" c:type="CLUTTER_KEY_acute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="497"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_adiaeresis"
              value="228"
              c:type="CLUTTER_KEY_adiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="548"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ae" value="230" c:type="CLUTTER_KEY_ae">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="550"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_agrave" value="224" c:type="CLUTTER_KEY_agrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="544"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ahook" value="16785059" c:type="CLUTTER_KEY_ahook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1653"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_amacron" value="992" c:type="CLUTTER_KEY_amacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="682"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ampersand" value="38" c:type="CLUTTER_KEY_ampersand">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="386"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aogonek" value="433" c:type="CLUTTER_KEY_aogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="588"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_apostrophe" value="39" c:type="CLUTTER_KEY_apostrophe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="387"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_approxeq"
              value="16785992"
              c:type="CLUTTER_KEY_approxeq">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1783"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_approximate"
              value="2248"
              c:type="CLUTTER_KEY_approximate">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1127"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_aring" value="229" c:type="CLUTTER_KEY_aring">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="549"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asciicircum"
              value="94"
              c:type="CLUTTER_KEY_asciicircum">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="443"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asciitilde"
              value="126"
              c:type="CLUTTER_KEY_asciitilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="476"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_asterisk" value="42" c:type="CLUTTER_KEY_asterisk">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="391"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_at" value="64" c:type="CLUTTER_KEY_at">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="413"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_atilde" value="227" c:type="CLUTTER_KEY_atilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="547"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_b" value="98" c:type="CLUTTER_KEY_b">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="448"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_babovedot"
              value="16784899"
              c:type="CLUTTER_KEY_babovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="697"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_backslash" value="92" c:type="CLUTTER_KEY_backslash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="441"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ballotcross"
              value="2804"
              c:type="CLUTTER_KEY_ballotcross">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1241"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bar" value="124" c:type="CLUTTER_KEY_bar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="474"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_because" value="16785973" c:type="CLUTTER_KEY_because">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1782"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_blank" value="2527" c:type="CLUTTER_KEY_blank">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1145"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botintegral"
              value="2213"
              c:type="CLUTTER_KEY_botintegral">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1100"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftparens"
              value="2220"
              c:type="CLUTTER_KEY_botleftparens">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1107"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftsqbracket"
              value="2216"
              c:type="CLUTTER_KEY_botleftsqbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1103"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botleftsummation"
              value="2226"
              c:type="CLUTTER_KEY_botleftsummation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1113"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightparens"
              value="2222"
              c:type="CLUTTER_KEY_botrightparens">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1109"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightsqbracket"
              value="2218"
              c:type="CLUTTER_KEY_botrightsqbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1105"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botrightsummation"
              value="2230"
              c:type="CLUTTER_KEY_botrightsummation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1117"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bott" value="2550" c:type="CLUTTER_KEY_bott">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1166"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_botvertsummationconnector"
              value="2228"
              c:type="CLUTTER_KEY_botvertsummationconnector">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1115"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braceleft" value="123" c:type="CLUTTER_KEY_braceleft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="473"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braceright"
              value="125"
              c:type="CLUTTER_KEY_braceright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="475"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bracketleft"
              value="91"
              c:type="CLUTTER_KEY_bracketleft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="440"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_bracketright"
              value="93"
              c:type="CLUTTER_KEY_bracketright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="442"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_blank"
              value="16787456"
              c:type="CLUTTER_KEY_braille_blank">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1797"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_1"
              value="65521"
              c:type="CLUTTER_KEY_braille_dot_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1787"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_10"
              value="65530"
              c:type="CLUTTER_KEY_braille_dot_10">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1796"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_2"
              value="65522"
              c:type="CLUTTER_KEY_braille_dot_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1788"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_3"
              value="65523"
              c:type="CLUTTER_KEY_braille_dot_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1789"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_4"
              value="65524"
              c:type="CLUTTER_KEY_braille_dot_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1790"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_5"
              value="65525"
              c:type="CLUTTER_KEY_braille_dot_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1791"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_6"
              value="65526"
              c:type="CLUTTER_KEY_braille_dot_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1792"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_7"
              value="65527"
              c:type="CLUTTER_KEY_braille_dot_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1793"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_8"
              value="65528"
              c:type="CLUTTER_KEY_braille_dot_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1794"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dot_9"
              value="65529"
              c:type="CLUTTER_KEY_braille_dot_9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1795"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1"
              value="16787457"
              c:type="CLUTTER_KEY_braille_dots_1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1798"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12"
              value="16787459"
              c:type="CLUTTER_KEY_braille_dots_12">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1800"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123"
              value="16787463"
              c:type="CLUTTER_KEY_braille_dots_123">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1804"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234"
              value="16787471"
              c:type="CLUTTER_KEY_braille_dots_1234">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1812"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12345"
              value="16787487"
              c:type="CLUTTER_KEY_braille_dots_12345">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1828"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123456"
              value="16787519"
              c:type="CLUTTER_KEY_braille_dots_123456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1860"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234567"
              value="16787583"
              c:type="CLUTTER_KEY_braille_dots_1234567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1924"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12345678"
              value="16787711"
              c:type="CLUTTER_KEY_braille_dots_12345678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2052"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234568"
              value="16787647"
              c:type="CLUTTER_KEY_braille_dots_1234568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1988"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123457"
              value="16787551"
              c:type="CLUTTER_KEY_braille_dots_123457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1892"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234578"
              value="16787679"
              c:type="CLUTTER_KEY_braille_dots_1234578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2020"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123458"
              value="16787615"
              c:type="CLUTTER_KEY_braille_dots_123458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1956"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12346"
              value="16787503"
              c:type="CLUTTER_KEY_braille_dots_12346">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1844"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123467"
              value="16787567"
              c:type="CLUTTER_KEY_braille_dots_123467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1908"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1234678"
              value="16787695"
              c:type="CLUTTER_KEY_braille_dots_1234678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2036"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123468"
              value="16787631"
              c:type="CLUTTER_KEY_braille_dots_123468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1972"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12347"
              value="16787535"
              c:type="CLUTTER_KEY_braille_dots_12347">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1876"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123478"
              value="16787663"
              c:type="CLUTTER_KEY_braille_dots_123478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2004"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12348"
              value="16787599"
              c:type="CLUTTER_KEY_braille_dots_12348">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1940"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1235"
              value="16787479"
              c:type="CLUTTER_KEY_braille_dots_1235">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1820"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12356"
              value="16787511"
              c:type="CLUTTER_KEY_braille_dots_12356">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1852"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123567"
              value="16787575"
              c:type="CLUTTER_KEY_braille_dots_123567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1916"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1235678"
              value="16787703"
              c:type="CLUTTER_KEY_braille_dots_1235678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2044"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123568"
              value="16787639"
              c:type="CLUTTER_KEY_braille_dots_123568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1980"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12357"
              value="16787543"
              c:type="CLUTTER_KEY_braille_dots_12357">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1884"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123578"
              value="16787671"
              c:type="CLUTTER_KEY_braille_dots_123578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2012"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12358"
              value="16787607"
              c:type="CLUTTER_KEY_braille_dots_12358">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1948"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1236"
              value="16787495"
              c:type="CLUTTER_KEY_braille_dots_1236">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1836"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12367"
              value="16787559"
              c:type="CLUTTER_KEY_braille_dots_12367">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1900"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_123678"
              value="16787687"
              c:type="CLUTTER_KEY_braille_dots_123678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2028"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12368"
              value="16787623"
              c:type="CLUTTER_KEY_braille_dots_12368">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1964"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1237"
              value="16787527"
              c:type="CLUTTER_KEY_braille_dots_1237">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1868"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12378"
              value="16787655"
              c:type="CLUTTER_KEY_braille_dots_12378">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1996"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1238"
              value="16787591"
              c:type="CLUTTER_KEY_braille_dots_1238">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1932"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124"
              value="16787467"
              c:type="CLUTTER_KEY_braille_dots_124">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1808"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1245"
              value="16787483"
              c:type="CLUTTER_KEY_braille_dots_1245">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1824"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12456"
              value="16787515"
              c:type="CLUTTER_KEY_braille_dots_12456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1856"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124567"
              value="16787579"
              c:type="CLUTTER_KEY_braille_dots_124567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1920"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1245678"
              value="16787707"
              c:type="CLUTTER_KEY_braille_dots_1245678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2048"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124568"
              value="16787643"
              c:type="CLUTTER_KEY_braille_dots_124568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1984"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12457"
              value="16787547"
              c:type="CLUTTER_KEY_braille_dots_12457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1888"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124578"
              value="16787675"
              c:type="CLUTTER_KEY_braille_dots_124578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2016"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12458"
              value="16787611"
              c:type="CLUTTER_KEY_braille_dots_12458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1952"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1246"
              value="16787499"
              c:type="CLUTTER_KEY_braille_dots_1246">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1840"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12467"
              value="16787563"
              c:type="CLUTTER_KEY_braille_dots_12467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1904"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_124678"
              value="16787691"
              c:type="CLUTTER_KEY_braille_dots_124678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2032"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12468"
              value="16787627"
              c:type="CLUTTER_KEY_braille_dots_12468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1968"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1247"
              value="16787531"
              c:type="CLUTTER_KEY_braille_dots_1247">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1872"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12478"
              value="16787659"
              c:type="CLUTTER_KEY_braille_dots_12478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2000"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1248"
              value="16787595"
              c:type="CLUTTER_KEY_braille_dots_1248">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1936"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_125"
              value="16787475"
              c:type="CLUTTER_KEY_braille_dots_125">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1816"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1256"
              value="16787507"
              c:type="CLUTTER_KEY_braille_dots_1256">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1848"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12567"
              value="16787571"
              c:type="CLUTTER_KEY_braille_dots_12567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1912"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_125678"
              value="16787699"
              c:type="CLUTTER_KEY_braille_dots_125678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2040"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12568"
              value="16787635"
              c:type="CLUTTER_KEY_braille_dots_12568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1976"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1257"
              value="16787539"
              c:type="CLUTTER_KEY_braille_dots_1257">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1880"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12578"
              value="16787667"
              c:type="CLUTTER_KEY_braille_dots_12578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2008"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1258"
              value="16787603"
              c:type="CLUTTER_KEY_braille_dots_1258">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1944"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_126"
              value="16787491"
              c:type="CLUTTER_KEY_braille_dots_126">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1832"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1267"
              value="16787555"
              c:type="CLUTTER_KEY_braille_dots_1267">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1896"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_12678"
              value="16787683"
              c:type="CLUTTER_KEY_braille_dots_12678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2024"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1268"
              value="16787619"
              c:type="CLUTTER_KEY_braille_dots_1268">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1960"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_127"
              value="16787523"
              c:type="CLUTTER_KEY_braille_dots_127">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1864"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1278"
              value="16787651"
              c:type="CLUTTER_KEY_braille_dots_1278">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1992"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_128"
              value="16787587"
              c:type="CLUTTER_KEY_braille_dots_128">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1928"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13"
              value="16787461"
              c:type="CLUTTER_KEY_braille_dots_13">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1802"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134"
              value="16787469"
              c:type="CLUTTER_KEY_braille_dots_134">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1810"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1345"
              value="16787485"
              c:type="CLUTTER_KEY_braille_dots_1345">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1826"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13456"
              value="16787517"
              c:type="CLUTTER_KEY_braille_dots_13456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1858"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134567"
              value="16787581"
              c:type="CLUTTER_KEY_braille_dots_134567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1922"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1345678"
              value="16787709"
              c:type="CLUTTER_KEY_braille_dots_1345678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2050"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134568"
              value="16787645"
              c:type="CLUTTER_KEY_braille_dots_134568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1986"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13457"
              value="16787549"
              c:type="CLUTTER_KEY_braille_dots_13457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1890"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134578"
              value="16787677"
              c:type="CLUTTER_KEY_braille_dots_134578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2018"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13458"
              value="16787613"
              c:type="CLUTTER_KEY_braille_dots_13458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1954"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1346"
              value="16787501"
              c:type="CLUTTER_KEY_braille_dots_1346">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1842"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13467"
              value="16787565"
              c:type="CLUTTER_KEY_braille_dots_13467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1906"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_134678"
              value="16787693"
              c:type="CLUTTER_KEY_braille_dots_134678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2034"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13468"
              value="16787629"
              c:type="CLUTTER_KEY_braille_dots_13468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1970"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1347"
              value="16787533"
              c:type="CLUTTER_KEY_braille_dots_1347">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1874"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13478"
              value="16787661"
              c:type="CLUTTER_KEY_braille_dots_13478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2002"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1348"
              value="16787597"
              c:type="CLUTTER_KEY_braille_dots_1348">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1938"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_135"
              value="16787477"
              c:type="CLUTTER_KEY_braille_dots_135">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1818"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1356"
              value="16787509"
              c:type="CLUTTER_KEY_braille_dots_1356">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1850"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13567"
              value="16787573"
              c:type="CLUTTER_KEY_braille_dots_13567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1914"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_135678"
              value="16787701"
              c:type="CLUTTER_KEY_braille_dots_135678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2042"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13568"
              value="16787637"
              c:type="CLUTTER_KEY_braille_dots_13568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1978"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1357"
              value="16787541"
              c:type="CLUTTER_KEY_braille_dots_1357">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1882"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13578"
              value="16787669"
              c:type="CLUTTER_KEY_braille_dots_13578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2010"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1358"
              value="16787605"
              c:type="CLUTTER_KEY_braille_dots_1358">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1946"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_136"
              value="16787493"
              c:type="CLUTTER_KEY_braille_dots_136">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1834"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1367"
              value="16787557"
              c:type="CLUTTER_KEY_braille_dots_1367">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1898"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_13678"
              value="16787685"
              c:type="CLUTTER_KEY_braille_dots_13678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2026"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1368"
              value="16787621"
              c:type="CLUTTER_KEY_braille_dots_1368">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1962"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_137"
              value="16787525"
              c:type="CLUTTER_KEY_braille_dots_137">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1866"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1378"
              value="16787653"
              c:type="CLUTTER_KEY_braille_dots_1378">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1994"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_138"
              value="16787589"
              c:type="CLUTTER_KEY_braille_dots_138">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1930"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14"
              value="16787465"
              c:type="CLUTTER_KEY_braille_dots_14">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1806"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_145"
              value="16787481"
              c:type="CLUTTER_KEY_braille_dots_145">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1822"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1456"
              value="16787513"
              c:type="CLUTTER_KEY_braille_dots_1456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1854"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14567"
              value="16787577"
              c:type="CLUTTER_KEY_braille_dots_14567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1918"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_145678"
              value="16787705"
              c:type="CLUTTER_KEY_braille_dots_145678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2046"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14568"
              value="16787641"
              c:type="CLUTTER_KEY_braille_dots_14568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1982"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1457"
              value="16787545"
              c:type="CLUTTER_KEY_braille_dots_1457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1886"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14578"
              value="16787673"
              c:type="CLUTTER_KEY_braille_dots_14578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2014"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1458"
              value="16787609"
              c:type="CLUTTER_KEY_braille_dots_1458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1950"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_146"
              value="16787497"
              c:type="CLUTTER_KEY_braille_dots_146">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1838"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1467"
              value="16787561"
              c:type="CLUTTER_KEY_braille_dots_1467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1902"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_14678"
              value="16787689"
              c:type="CLUTTER_KEY_braille_dots_14678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2030"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1468"
              value="16787625"
              c:type="CLUTTER_KEY_braille_dots_1468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1966"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_147"
              value="16787529"
              c:type="CLUTTER_KEY_braille_dots_147">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1870"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1478"
              value="16787657"
              c:type="CLUTTER_KEY_braille_dots_1478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1998"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_148"
              value="16787593"
              c:type="CLUTTER_KEY_braille_dots_148">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1934"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_15"
              value="16787473"
              c:type="CLUTTER_KEY_braille_dots_15">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1814"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_156"
              value="16787505"
              c:type="CLUTTER_KEY_braille_dots_156">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1846"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1567"
              value="16787569"
              c:type="CLUTTER_KEY_braille_dots_1567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1910"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_15678"
              value="16787697"
              c:type="CLUTTER_KEY_braille_dots_15678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2038"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1568"
              value="16787633"
              c:type="CLUTTER_KEY_braille_dots_1568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1974"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_157"
              value="16787537"
              c:type="CLUTTER_KEY_braille_dots_157">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1878"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1578"
              value="16787665"
              c:type="CLUTTER_KEY_braille_dots_1578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2006"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_158"
              value="16787601"
              c:type="CLUTTER_KEY_braille_dots_158">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1942"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_16"
              value="16787489"
              c:type="CLUTTER_KEY_braille_dots_16">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1830"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_167"
              value="16787553"
              c:type="CLUTTER_KEY_braille_dots_167">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1894"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_1678"
              value="16787681"
              c:type="CLUTTER_KEY_braille_dots_1678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2022"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_168"
              value="16787617"
              c:type="CLUTTER_KEY_braille_dots_168">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1958"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_17"
              value="16787521"
              c:type="CLUTTER_KEY_braille_dots_17">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1862"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_178"
              value="16787649"
              c:type="CLUTTER_KEY_braille_dots_178">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1990"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_18"
              value="16787585"
              c:type="CLUTTER_KEY_braille_dots_18">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1926"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2"
              value="16787458"
              c:type="CLUTTER_KEY_braille_dots_2">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1799"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23"
              value="16787462"
              c:type="CLUTTER_KEY_braille_dots_23">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1803"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234"
              value="16787470"
              c:type="CLUTTER_KEY_braille_dots_234">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1811"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2345"
              value="16787486"
              c:type="CLUTTER_KEY_braille_dots_2345">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1827"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23456"
              value="16787518"
              c:type="CLUTTER_KEY_braille_dots_23456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1859"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234567"
              value="16787582"
              c:type="CLUTTER_KEY_braille_dots_234567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1923"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2345678"
              value="16787710"
              c:type="CLUTTER_KEY_braille_dots_2345678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2051"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234568"
              value="16787646"
              c:type="CLUTTER_KEY_braille_dots_234568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1987"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23457"
              value="16787550"
              c:type="CLUTTER_KEY_braille_dots_23457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1891"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234578"
              value="16787678"
              c:type="CLUTTER_KEY_braille_dots_234578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2019"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23458"
              value="16787614"
              c:type="CLUTTER_KEY_braille_dots_23458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1955"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2346"
              value="16787502"
              c:type="CLUTTER_KEY_braille_dots_2346">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1843"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23467"
              value="16787566"
              c:type="CLUTTER_KEY_braille_dots_23467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1907"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_234678"
              value="16787694"
              c:type="CLUTTER_KEY_braille_dots_234678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2035"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23468"
              value="16787630"
              c:type="CLUTTER_KEY_braille_dots_23468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1971"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2347"
              value="16787534"
              c:type="CLUTTER_KEY_braille_dots_2347">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1875"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23478"
              value="16787662"
              c:type="CLUTTER_KEY_braille_dots_23478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2003"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2348"
              value="16787598"
              c:type="CLUTTER_KEY_braille_dots_2348">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1939"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_235"
              value="16787478"
              c:type="CLUTTER_KEY_braille_dots_235">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1819"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2356"
              value="16787510"
              c:type="CLUTTER_KEY_braille_dots_2356">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1851"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23567"
              value="16787574"
              c:type="CLUTTER_KEY_braille_dots_23567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1915"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_235678"
              value="16787702"
              c:type="CLUTTER_KEY_braille_dots_235678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2043"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23568"
              value="16787638"
              c:type="CLUTTER_KEY_braille_dots_23568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1979"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2357"
              value="16787542"
              c:type="CLUTTER_KEY_braille_dots_2357">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1883"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23578"
              value="16787670"
              c:type="CLUTTER_KEY_braille_dots_23578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2011"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2358"
              value="16787606"
              c:type="CLUTTER_KEY_braille_dots_2358">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1947"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_236"
              value="16787494"
              c:type="CLUTTER_KEY_braille_dots_236">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1835"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2367"
              value="16787558"
              c:type="CLUTTER_KEY_braille_dots_2367">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1899"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_23678"
              value="16787686"
              c:type="CLUTTER_KEY_braille_dots_23678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2027"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2368"
              value="16787622"
              c:type="CLUTTER_KEY_braille_dots_2368">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1963"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_237"
              value="16787526"
              c:type="CLUTTER_KEY_braille_dots_237">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1867"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2378"
              value="16787654"
              c:type="CLUTTER_KEY_braille_dots_2378">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1995"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_238"
              value="16787590"
              c:type="CLUTTER_KEY_braille_dots_238">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1931"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24"
              value="16787466"
              c:type="CLUTTER_KEY_braille_dots_24">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1807"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_245"
              value="16787482"
              c:type="CLUTTER_KEY_braille_dots_245">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1823"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2456"
              value="16787514"
              c:type="CLUTTER_KEY_braille_dots_2456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1855"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24567"
              value="16787578"
              c:type="CLUTTER_KEY_braille_dots_24567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1919"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_245678"
              value="16787706"
              c:type="CLUTTER_KEY_braille_dots_245678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2047"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24568"
              value="16787642"
              c:type="CLUTTER_KEY_braille_dots_24568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1983"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2457"
              value="16787546"
              c:type="CLUTTER_KEY_braille_dots_2457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1887"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24578"
              value="16787674"
              c:type="CLUTTER_KEY_braille_dots_24578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2015"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2458"
              value="16787610"
              c:type="CLUTTER_KEY_braille_dots_2458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1951"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_246"
              value="16787498"
              c:type="CLUTTER_KEY_braille_dots_246">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1839"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2467"
              value="16787562"
              c:type="CLUTTER_KEY_braille_dots_2467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1903"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_24678"
              value="16787690"
              c:type="CLUTTER_KEY_braille_dots_24678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2031"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2468"
              value="16787626"
              c:type="CLUTTER_KEY_braille_dots_2468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1967"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_247"
              value="16787530"
              c:type="CLUTTER_KEY_braille_dots_247">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1871"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2478"
              value="16787658"
              c:type="CLUTTER_KEY_braille_dots_2478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1999"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_248"
              value="16787594"
              c:type="CLUTTER_KEY_braille_dots_248">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1935"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_25"
              value="16787474"
              c:type="CLUTTER_KEY_braille_dots_25">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1815"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_256"
              value="16787506"
              c:type="CLUTTER_KEY_braille_dots_256">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1847"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2567"
              value="16787570"
              c:type="CLUTTER_KEY_braille_dots_2567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1911"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_25678"
              value="16787698"
              c:type="CLUTTER_KEY_braille_dots_25678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2039"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2568"
              value="16787634"
              c:type="CLUTTER_KEY_braille_dots_2568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1975"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_257"
              value="16787538"
              c:type="CLUTTER_KEY_braille_dots_257">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1879"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2578"
              value="16787666"
              c:type="CLUTTER_KEY_braille_dots_2578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2007"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_258"
              value="16787602"
              c:type="CLUTTER_KEY_braille_dots_258">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1943"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_26"
              value="16787490"
              c:type="CLUTTER_KEY_braille_dots_26">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1831"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_267"
              value="16787554"
              c:type="CLUTTER_KEY_braille_dots_267">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1895"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_2678"
              value="16787682"
              c:type="CLUTTER_KEY_braille_dots_2678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2023"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_268"
              value="16787618"
              c:type="CLUTTER_KEY_braille_dots_268">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1959"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_27"
              value="16787522"
              c:type="CLUTTER_KEY_braille_dots_27">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1863"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_278"
              value="16787650"
              c:type="CLUTTER_KEY_braille_dots_278">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1991"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_28"
              value="16787586"
              c:type="CLUTTER_KEY_braille_dots_28">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1927"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3"
              value="16787460"
              c:type="CLUTTER_KEY_braille_dots_3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1801"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34"
              value="16787468"
              c:type="CLUTTER_KEY_braille_dots_34">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1809"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_345"
              value="16787484"
              c:type="CLUTTER_KEY_braille_dots_345">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1825"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3456"
              value="16787516"
              c:type="CLUTTER_KEY_braille_dots_3456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1857"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34567"
              value="16787580"
              c:type="CLUTTER_KEY_braille_dots_34567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1921"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_345678"
              value="16787708"
              c:type="CLUTTER_KEY_braille_dots_345678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2049"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34568"
              value="16787644"
              c:type="CLUTTER_KEY_braille_dots_34568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1985"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3457"
              value="16787548"
              c:type="CLUTTER_KEY_braille_dots_3457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1889"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34578"
              value="16787676"
              c:type="CLUTTER_KEY_braille_dots_34578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2017"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3458"
              value="16787612"
              c:type="CLUTTER_KEY_braille_dots_3458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1953"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_346"
              value="16787500"
              c:type="CLUTTER_KEY_braille_dots_346">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1841"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3467"
              value="16787564"
              c:type="CLUTTER_KEY_braille_dots_3467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1905"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_34678"
              value="16787692"
              c:type="CLUTTER_KEY_braille_dots_34678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2033"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3468"
              value="16787628"
              c:type="CLUTTER_KEY_braille_dots_3468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1969"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_347"
              value="16787532"
              c:type="CLUTTER_KEY_braille_dots_347">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1873"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3478"
              value="16787660"
              c:type="CLUTTER_KEY_braille_dots_3478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2001"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_348"
              value="16787596"
              c:type="CLUTTER_KEY_braille_dots_348">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1937"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_35"
              value="16787476"
              c:type="CLUTTER_KEY_braille_dots_35">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1817"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_356"
              value="16787508"
              c:type="CLUTTER_KEY_braille_dots_356">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1849"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3567"
              value="16787572"
              c:type="CLUTTER_KEY_braille_dots_3567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1913"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_35678"
              value="16787700"
              c:type="CLUTTER_KEY_braille_dots_35678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2041"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3568"
              value="16787636"
              c:type="CLUTTER_KEY_braille_dots_3568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1977"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_357"
              value="16787540"
              c:type="CLUTTER_KEY_braille_dots_357">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1881"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3578"
              value="16787668"
              c:type="CLUTTER_KEY_braille_dots_3578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2009"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_358"
              value="16787604"
              c:type="CLUTTER_KEY_braille_dots_358">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1945"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_36"
              value="16787492"
              c:type="CLUTTER_KEY_braille_dots_36">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1833"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_367"
              value="16787556"
              c:type="CLUTTER_KEY_braille_dots_367">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1897"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_3678"
              value="16787684"
              c:type="CLUTTER_KEY_braille_dots_3678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2025"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_368"
              value="16787620"
              c:type="CLUTTER_KEY_braille_dots_368">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1961"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_37"
              value="16787524"
              c:type="CLUTTER_KEY_braille_dots_37">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1865"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_378"
              value="16787652"
              c:type="CLUTTER_KEY_braille_dots_378">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1993"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_38"
              value="16787588"
              c:type="CLUTTER_KEY_braille_dots_38">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1929"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4"
              value="16787464"
              c:type="CLUTTER_KEY_braille_dots_4">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1805"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_45"
              value="16787480"
              c:type="CLUTTER_KEY_braille_dots_45">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1821"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_456"
              value="16787512"
              c:type="CLUTTER_KEY_braille_dots_456">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1853"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4567"
              value="16787576"
              c:type="CLUTTER_KEY_braille_dots_4567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1917"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_45678"
              value="16787704"
              c:type="CLUTTER_KEY_braille_dots_45678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2045"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4568"
              value="16787640"
              c:type="CLUTTER_KEY_braille_dots_4568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1981"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_457"
              value="16787544"
              c:type="CLUTTER_KEY_braille_dots_457">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1885"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4578"
              value="16787672"
              c:type="CLUTTER_KEY_braille_dots_4578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2013"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_458"
              value="16787608"
              c:type="CLUTTER_KEY_braille_dots_458">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1949"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_46"
              value="16787496"
              c:type="CLUTTER_KEY_braille_dots_46">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1837"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_467"
              value="16787560"
              c:type="CLUTTER_KEY_braille_dots_467">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1901"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_4678"
              value="16787688"
              c:type="CLUTTER_KEY_braille_dots_4678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2029"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_468"
              value="16787624"
              c:type="CLUTTER_KEY_braille_dots_468">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1965"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_47"
              value="16787528"
              c:type="CLUTTER_KEY_braille_dots_47">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1869"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_478"
              value="16787656"
              c:type="CLUTTER_KEY_braille_dots_478">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1997"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_48"
              value="16787592"
              c:type="CLUTTER_KEY_braille_dots_48">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1933"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_5"
              value="16787472"
              c:type="CLUTTER_KEY_braille_dots_5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1813"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_56"
              value="16787504"
              c:type="CLUTTER_KEY_braille_dots_56">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1845"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_567"
              value="16787568"
              c:type="CLUTTER_KEY_braille_dots_567">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1909"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_5678"
              value="16787696"
              c:type="CLUTTER_KEY_braille_dots_5678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2037"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_568"
              value="16787632"
              c:type="CLUTTER_KEY_braille_dots_568">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1973"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_57"
              value="16787536"
              c:type="CLUTTER_KEY_braille_dots_57">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1877"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_578"
              value="16787664"
              c:type="CLUTTER_KEY_braille_dots_578">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2005"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_58"
              value="16787600"
              c:type="CLUTTER_KEY_braille_dots_58">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1941"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_6"
              value="16787488"
              c:type="CLUTTER_KEY_braille_dots_6">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1829"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_67"
              value="16787552"
              c:type="CLUTTER_KEY_braille_dots_67">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1893"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_678"
              value="16787680"
              c:type="CLUTTER_KEY_braille_dots_678">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2021"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_68"
              value="16787616"
              c:type="CLUTTER_KEY_braille_dots_68">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1957"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_7"
              value="16787520"
              c:type="CLUTTER_KEY_braille_dots_7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1861"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_78"
              value="16787648"
              c:type="CLUTTER_KEY_braille_dots_78">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1989"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_braille_dots_8"
              value="16787584"
              c:type="CLUTTER_KEY_braille_dots_8">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1925"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_breve" value="418" c:type="CLUTTER_KEY_breve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="578"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_brokenbar" value="166" c:type="CLUTTER_KEY_brokenbar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="483"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_c" value="99" c:type="CLUTTER_KEY_c">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="449"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_c_h" value="65187" c:type="CLUTTER_KEY_c_h">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="347"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cabovedot" value="741" c:type="CLUTTER_KEY_cabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="650"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cacute" value="486" c:type="CLUTTER_KEY_cacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="620"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_careof" value="2744" c:type="CLUTTER_KEY_careof">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1190"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_caret" value="2812" c:type="CLUTTER_KEY_caret">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1249"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_caron" value="439" c:type="CLUTTER_KEY_caron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="593"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccaron" value="488" c:type="CLUTTER_KEY_ccaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="621"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccedilla" value="231" c:type="CLUTTER_KEY_ccedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="551"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ccircumflex"
              value="742"
              c:type="CLUTTER_KEY_ccircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="651"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cedilla" value="184" c:type="CLUTTER_KEY_cedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="501"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cent" value="162" c:type="CLUTTER_KEY_cent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="479"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ch" value="65184" c:type="CLUTTER_KEY_ch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="344"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_checkerboard"
              value="2529"
              c:type="CLUTTER_KEY_checkerboard">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1147"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_checkmark" value="2803" c:type="CLUTTER_KEY_checkmark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1240"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_circle" value="3023" c:type="CLUTTER_KEY_circle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1265"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_club" value="2796" c:type="CLUTTER_KEY_club">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1234"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_colon" value="58" c:type="CLUTTER_KEY_colon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="407"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_comma" value="44" c:type="CLUTTER_KEY_comma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="393"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_containsas"
              value="16785931"
              c:type="CLUTTER_KEY_containsas">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1776"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_copyright" value="169" c:type="CLUTTER_KEY_copyright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="486"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cr" value="2532" c:type="CLUTTER_KEY_cr">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1150"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_crossinglines"
              value="2542"
              c:type="CLUTTER_KEY_crossinglines">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1158"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cuberoot"
              value="16785947"
              c:type="CLUTTER_KEY_cuberoot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1778"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_currency" value="164" c:type="CLUTTER_KEY_currency">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="481"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_cursor" value="2815" c:type="CLUTTER_KEY_cursor">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1252"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_d" value="100" c:type="CLUTTER_KEY_d">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="450"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dabovedot"
              value="16784907"
              c:type="CLUTTER_KEY_dabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="699"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dagger" value="2801" c:type="CLUTTER_KEY_dagger">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1238"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dcaron" value="495" c:type="CLUTTER_KEY_dcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="624"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_A" value="65153" c:type="CLUTTER_KEY_dead_A">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="286"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_E" value="65155" c:type="CLUTTER_KEY_dead_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="288"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_I" value="65157" c:type="CLUTTER_KEY_dead_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_O" value="65159" c:type="CLUTTER_KEY_dead_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="292"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_U" value="65161" c:type="CLUTTER_KEY_dead_U">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="294"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_a" value="65152" c:type="CLUTTER_KEY_dead_a">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="285"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovecomma"
              value="65124"
              c:type="CLUTTER_KEY_dead_abovecomma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="267"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovedot"
              value="65110"
              c:type="CLUTTER_KEY_dead_abovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="253"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovereversedcomma"
              value="65125"
              c:type="CLUTTER_KEY_dead_abovereversedcomma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="269"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_abovering"
              value="65112"
              c:type="CLUTTER_KEY_dead_abovering">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="255"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_aboveverticalline"
              value="65169"
              c:type="CLUTTER_KEY_dead_aboveverticalline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="282"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_acute"
              value="65105"
              c:type="CLUTTER_KEY_dead_acute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="247"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowbreve"
              value="65131"
              c:type="CLUTTER_KEY_dead_belowbreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="276"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowcircumflex"
              value="65129"
              c:type="CLUTTER_KEY_dead_belowcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="274"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowcomma"
              value="65134"
              c:type="CLUTTER_KEY_dead_belowcomma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="279"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowdiaeresis"
              value="65132"
              c:type="CLUTTER_KEY_dead_belowdiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="277"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowdot"
              value="65120"
              c:type="CLUTTER_KEY_dead_belowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="263"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowmacron"
              value="65128"
              c:type="CLUTTER_KEY_dead_belowmacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="273"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowring"
              value="65127"
              c:type="CLUTTER_KEY_dead_belowring">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="272"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowtilde"
              value="65130"
              c:type="CLUTTER_KEY_dead_belowtilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="275"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_belowverticalline"
              value="65170"
              c:type="CLUTTER_KEY_dead_belowverticalline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="283"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_breve"
              value="65109"
              c:type="CLUTTER_KEY_dead_breve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="252"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_capital_schwa"
              value="65163"
              c:type="CLUTTER_KEY_dead_capital_schwa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="296"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_caron"
              value="65114"
              c:type="CLUTTER_KEY_dead_caron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="257"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_cedilla"
              value="65115"
              c:type="CLUTTER_KEY_dead_cedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="258"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_circumflex"
              value="65106"
              c:type="CLUTTER_KEY_dead_circumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="248"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_currency"
              value="65135"
              c:type="CLUTTER_KEY_dead_currency">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="280"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_dasia"
              value="65125"
              c:type="CLUTTER_KEY_dead_dasia">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="270"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_diaeresis"
              value="65111"
              c:type="CLUTTER_KEY_dead_diaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_doubleacute"
              value="65113"
              c:type="CLUTTER_KEY_dead_doubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="256"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_doublegrave"
              value="65126"
              c:type="CLUTTER_KEY_dead_doublegrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_e" value="65154" c:type="CLUTTER_KEY_dead_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="287"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_grave"
              value="65104"
              c:type="CLUTTER_KEY_dead_grave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_greek"
              value="65164"
              c:type="CLUTTER_KEY_dead_greek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="297"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_hook"
              value="65121"
              c:type="CLUTTER_KEY_dead_hook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="264"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_horn"
              value="65122"
              c:type="CLUTTER_KEY_dead_horn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="265"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_i" value="65156" c:type="CLUTTER_KEY_dead_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="289"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_invertedbreve"
              value="65133"
              c:type="CLUTTER_KEY_dead_invertedbreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="278"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_iota"
              value="65117"
              c:type="CLUTTER_KEY_dead_iota">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="260"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_longsolidusoverlay"
              value="65171"
              c:type="CLUTTER_KEY_dead_longsolidusoverlay">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="284"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_lowline"
              value="65168"
              c:type="CLUTTER_KEY_dead_lowline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_macron"
              value="65108"
              c:type="CLUTTER_KEY_dead_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="251"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_o" value="65158" c:type="CLUTTER_KEY_dead_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="291"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_ogonek"
              value="65116"
              c:type="CLUTTER_KEY_dead_ogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="259"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_perispomeni"
              value="65107"
              c:type="CLUTTER_KEY_dead_perispomeni">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="250"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_psili"
              value="65124"
              c:type="CLUTTER_KEY_dead_psili">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="268"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_semivoiced_sound"
              value="65119"
              c:type="CLUTTER_KEY_dead_semivoiced_sound">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_small_schwa"
              value="65162"
              c:type="CLUTTER_KEY_dead_small_schwa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="295"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_stroke"
              value="65123"
              c:type="CLUTTER_KEY_dead_stroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="266"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_tilde"
              value="65107"
              c:type="CLUTTER_KEY_dead_tilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="249"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_u" value="65160" c:type="CLUTTER_KEY_dead_u">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="293"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dead_voiced_sound"
              value="65118"
              c:type="CLUTTER_KEY_dead_voiced_sound">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="261"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_decimalpoint"
              value="2749"
              c:type="CLUTTER_KEY_decimalpoint">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1193"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_degree" value="176" c:type="CLUTTER_KEY_degree">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="493"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_diaeresis" value="168" c:type="CLUTTER_KEY_diaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="485"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_diamond" value="2797" c:type="CLUTTER_KEY_diamond">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1235"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_digitspace"
              value="2725"
              c:type="CLUTTER_KEY_digitspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1173"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dintegral"
              value="16785964"
              c:type="CLUTTER_KEY_dintegral">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1780"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_division" value="247" c:type="CLUTTER_KEY_division">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="567"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dollar" value="36" c:type="CLUTTER_KEY_dollar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="384"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubbaselinedot"
              value="2735"
              c:type="CLUTTER_KEY_doubbaselinedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1181"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubleacute"
              value="445"
              c:type="CLUTTER_KEY_doubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="598"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doubledagger"
              value="2802"
              c:type="CLUTTER_KEY_doubledagger">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1239"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_doublelowquotemark"
              value="2814"
              c:type="CLUTTER_KEY_doublelowquotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1251"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downarrow" value="2302" c:type="CLUTTER_KEY_downarrow">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1144"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downcaret" value="2984" c:type="CLUTTER_KEY_downcaret">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1255"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downshoe" value="3030" c:type="CLUTTER_KEY_downshoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1267"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downstile" value="3012" c:type="CLUTTER_KEY_downstile">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1260"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_downtack" value="3010" c:type="CLUTTER_KEY_downtack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1258"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_dstroke" value="496" c:type="CLUTTER_KEY_dstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="625"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_e" value="101" c:type="CLUTTER_KEY_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="451"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eabovedot" value="1004" c:type="CLUTTER_KEY_eabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="684"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eacute" value="233" c:type="CLUTTER_KEY_eacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="553"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ebelowdot"
              value="16785081"
              c:type="CLUTTER_KEY_ebelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1675"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecaron" value="492" c:type="CLUTTER_KEY_ecaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="623"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflex"
              value="234"
              c:type="CLUTTER_KEY_ecircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="554"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexacute"
              value="16785087"
              c:type="CLUTTER_KEY_ecircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1681"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexbelowdot"
              value="16785095"
              c:type="CLUTTER_KEY_ecircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1689"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexgrave"
              value="16785089"
              c:type="CLUTTER_KEY_ecircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1683"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflexhook"
              value="16785091"
              c:type="CLUTTER_KEY_ecircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1685"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ecircumflextilde"
              value="16785093"
              c:type="CLUTTER_KEY_ecircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1687"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ediaeresis"
              value="235"
              c:type="CLUTTER_KEY_ediaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="555"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_egrave" value="232" c:type="CLUTTER_KEY_egrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="552"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ehook" value="16785083" c:type="CLUTTER_KEY_ehook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1677"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eightsubscript"
              value="16785544"
              c:type="CLUTTER_KEY_eightsubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1770"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eightsuperior"
              value="16785528"
              c:type="CLUTTER_KEY_eightsuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1760"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_elementof"
              value="16785928"
              c:type="CLUTTER_KEY_elementof">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1774"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ellipsis" value="2734" c:type="CLUTTER_KEY_ellipsis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1180"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_em3space" value="2723" c:type="CLUTTER_KEY_em3space">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1171"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_em4space" value="2724" c:type="CLUTTER_KEY_em4space">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1172"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emacron" value="954" c:type="CLUTTER_KEY_emacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="667"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emdash" value="2729" c:type="CLUTTER_KEY_emdash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1177"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emfilledcircle"
              value="2782"
              c:type="CLUTTER_KEY_emfilledcircle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1220"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emfilledrect"
              value="2783"
              c:type="CLUTTER_KEY_emfilledrect">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1221"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emopencircle"
              value="2766"
              c:type="CLUTTER_KEY_emopencircle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1205"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emopenrectangle"
              value="2767"
              c:type="CLUTTER_KEY_emopenrectangle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1206"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emptyset"
              value="16785925"
              c:type="CLUTTER_KEY_emptyset">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1773"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_emspace" value="2721" c:type="CLUTTER_KEY_emspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1169"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_endash" value="2730" c:type="CLUTTER_KEY_endash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1178"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enfilledcircbullet"
              value="2790"
              c:type="CLUTTER_KEY_enfilledcircbullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1228"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enfilledsqbullet"
              value="2791"
              c:type="CLUTTER_KEY_enfilledsqbullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1229"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eng" value="959" c:type="CLUTTER_KEY_eng">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="671"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enopencircbullet"
              value="2784"
              c:type="CLUTTER_KEY_enopencircbullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1222"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enopensquarebullet"
              value="2785"
              c:type="CLUTTER_KEY_enopensquarebullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1223"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_enspace" value="2722" c:type="CLUTTER_KEY_enspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1170"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eogonek" value="490" c:type="CLUTTER_KEY_eogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="622"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_equal" value="61" c:type="CLUTTER_KEY_equal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="410"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_eth" value="240" c:type="CLUTTER_KEY_eth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="560"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_etilde" value="16785085" c:type="CLUTTER_KEY_etilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1679"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_exclam" value="33" c:type="CLUTTER_KEY_exclam">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="381"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_exclamdown"
              value="161"
              c:type="CLUTTER_KEY_exclamdown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="478"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ezh" value="16777874" c:type="CLUTTER_KEY_ezh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1647"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_f" value="102" c:type="CLUTTER_KEY_f">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="452"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fabovedot"
              value="16784927"
              c:type="CLUTTER_KEY_fabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="701"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_femalesymbol"
              value="2808"
              c:type="CLUTTER_KEY_femalesymbol">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1245"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ff" value="2531" c:type="CLUTTER_KEY_ff">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1149"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_figdash" value="2747" c:type="CLUTTER_KEY_figdash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1191"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledlefttribullet"
              value="2780"
              c:type="CLUTTER_KEY_filledlefttribullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledrectbullet"
              value="2779"
              c:type="CLUTTER_KEY_filledrectbullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1217"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledrighttribullet"
              value="2781"
              c:type="CLUTTER_KEY_filledrighttribullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1219"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledtribulletdown"
              value="2793"
              c:type="CLUTTER_KEY_filledtribulletdown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1231"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_filledtribulletup"
              value="2792"
              c:type="CLUTTER_KEY_filledtribulletup">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1230"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fiveeighths"
              value="2757"
              c:type="CLUTTER_KEY_fiveeighths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1198"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesixths"
              value="2743"
              c:type="CLUTTER_KEY_fivesixths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1189"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesubscript"
              value="16785541"
              c:type="CLUTTER_KEY_fivesubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1767"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fivesuperior"
              value="16785525"
              c:type="CLUTTER_KEY_fivesuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1757"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fourfifths"
              value="2741"
              c:type="CLUTTER_KEY_fourfifths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1187"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_foursubscript"
              value="16785540"
              c:type="CLUTTER_KEY_foursubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1766"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_foursuperior"
              value="16785524"
              c:type="CLUTTER_KEY_foursuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1756"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_fourthroot"
              value="16785948"
              c:type="CLUTTER_KEY_fourthroot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1779"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_function" value="2294" c:type="CLUTTER_KEY_function">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1140"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_g" value="103" c:type="CLUTTER_KEY_g">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="453"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gabovedot" value="757" c:type="CLUTTER_KEY_gabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="652"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gbreve" value="699" c:type="CLUTTER_KEY_gbreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="642"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcaron" value="16777703" c:type="CLUTTER_KEY_gcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1641"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcedilla" value="955" c:type="CLUTTER_KEY_gcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="668"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_gcircumflex"
              value="760"
              c:type="CLUTTER_KEY_gcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="653"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_grave" value="96" c:type="CLUTTER_KEY_grave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="445"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_greater" value="62" c:type="CLUTTER_KEY_greater">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="411"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_greaterthanequal"
              value="2238"
              c:type="CLUTTER_KEY_greaterthanequal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1121"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_guillemotleft"
              value="171"
              c:type="CLUTTER_KEY_guillemotleft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="488"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_guillemotright"
              value="187"
              c:type="CLUTTER_KEY_guillemotright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="504"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_h" value="104" c:type="CLUTTER_KEY_h">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="454"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hairspace" value="2728" c:type="CLUTTER_KEY_hairspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1176"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hcircumflex"
              value="694"
              c:type="CLUTTER_KEY_hcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="640"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_heart" value="2798" c:type="CLUTTER_KEY_heart">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1236"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_aleph"
              value="3296"
              c:type="CLUTTER_KEY_hebrew_aleph">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1273"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_ayin"
              value="3314"
              c:type="CLUTTER_KEY_hebrew_ayin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1298"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_bet"
              value="3297"
              c:type="CLUTTER_KEY_hebrew_bet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1274"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_beth"
              value="3297"
              c:type="CLUTTER_KEY_hebrew_beth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1275"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_chet"
              value="3303"
              c:type="CLUTTER_KEY_hebrew_chet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1284"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_dalet"
              value="3299"
              c:type="CLUTTER_KEY_hebrew_dalet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1278"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_daleth"
              value="3299"
              c:type="CLUTTER_KEY_hebrew_daleth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1279"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_doublelowline"
              value="3295"
              c:type="CLUTTER_KEY_hebrew_doublelowline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1272"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalkaph"
              value="3306"
              c:type="CLUTTER_KEY_hebrew_finalkaph">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1289"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalmem"
              value="3309"
              c:type="CLUTTER_KEY_hebrew_finalmem">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1292"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalnun"
              value="3311"
              c:type="CLUTTER_KEY_hebrew_finalnun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1294"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalpe"
              value="3315"
              c:type="CLUTTER_KEY_hebrew_finalpe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1299"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalzade"
              value="3317"
              c:type="CLUTTER_KEY_hebrew_finalzade">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1301"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_finalzadi"
              value="3317"
              c:type="CLUTTER_KEY_hebrew_finalzadi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1302"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_gimel"
              value="3298"
              c:type="CLUTTER_KEY_hebrew_gimel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1276"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_gimmel"
              value="3298"
              c:type="CLUTTER_KEY_hebrew_gimmel">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1277"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_he" value="3300" c:type="CLUTTER_KEY_hebrew_he">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1280"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_het"
              value="3303"
              c:type="CLUTTER_KEY_hebrew_het">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1285"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_kaph"
              value="3307"
              c:type="CLUTTER_KEY_hebrew_kaph">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1290"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_kuf"
              value="3319"
              c:type="CLUTTER_KEY_hebrew_kuf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1306"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_lamed"
              value="3308"
              c:type="CLUTTER_KEY_hebrew_lamed">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1291"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_mem"
              value="3310"
              c:type="CLUTTER_KEY_hebrew_mem">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1293"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_nun"
              value="3312"
              c:type="CLUTTER_KEY_hebrew_nun">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1295"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_pe" value="3316" c:type="CLUTTER_KEY_hebrew_pe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1300"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_qoph"
              value="3319"
              c:type="CLUTTER_KEY_hebrew_qoph">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1305"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_resh"
              value="3320"
              c:type="CLUTTER_KEY_hebrew_resh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1307"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_samech"
              value="3313"
              c:type="CLUTTER_KEY_hebrew_samech">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1296"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_samekh"
              value="3313"
              c:type="CLUTTER_KEY_hebrew_samekh">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1297"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_shin"
              value="3321"
              c:type="CLUTTER_KEY_hebrew_shin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1308"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_taf"
              value="3322"
              c:type="CLUTTER_KEY_hebrew_taf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1310"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_taw"
              value="3322"
              c:type="CLUTTER_KEY_hebrew_taw">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1309"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_tet"
              value="3304"
              c:type="CLUTTER_KEY_hebrew_tet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1286"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_teth"
              value="3304"
              c:type="CLUTTER_KEY_hebrew_teth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1287"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_waw"
              value="3301"
              c:type="CLUTTER_KEY_hebrew_waw">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_yod"
              value="3305"
              c:type="CLUTTER_KEY_hebrew_yod">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1288"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zade"
              value="3318"
              c:type="CLUTTER_KEY_hebrew_zade">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1303"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zadi"
              value="3318"
              c:type="CLUTTER_KEY_hebrew_zadi">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1304"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zain"
              value="3302"
              c:type="CLUTTER_KEY_hebrew_zain">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1282"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hebrew_zayin"
              value="3302"
              c:type="CLUTTER_KEY_hebrew_zayin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1283"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hexagram" value="2778" c:type="CLUTTER_KEY_hexagram">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1216"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizconnector"
              value="2211"
              c:type="CLUTTER_KEY_horizconnector">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1098"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan1"
              value="2543"
              c:type="CLUTTER_KEY_horizlinescan1">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1159"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan3"
              value="2544"
              c:type="CLUTTER_KEY_horizlinescan3">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1160"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan5"
              value="2545"
              c:type="CLUTTER_KEY_horizlinescan5">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1161"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan7"
              value="2546"
              c:type="CLUTTER_KEY_horizlinescan7">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1162"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_horizlinescan9"
              value="2547"
              c:type="CLUTTER_KEY_horizlinescan9">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1163"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hstroke" value="689" c:type="CLUTTER_KEY_hstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="639"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ht" value="2530" c:type="CLUTTER_KEY_ht">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1148"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_hyphen" value="173" c:type="CLUTTER_KEY_hyphen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="490"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_i" value="105" c:type="CLUTTER_KEY_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="455"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iTouch" value="269025120" c:type="CLUTTER_KEY_iTouch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="2218"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iacute" value="237" c:type="CLUTTER_KEY_iacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="557"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ibelowdot"
              value="16785099"
              c:type="CLUTTER_KEY_ibelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1693"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ibreve" value="16777517" c:type="CLUTTER_KEY_ibreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1639"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_icircumflex"
              value="238"
              c:type="CLUTTER_KEY_icircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="558"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_identical" value="2255" c:type="CLUTTER_KEY_identical">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1131"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_idiaeresis"
              value="239"
              c:type="CLUTTER_KEY_idiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="559"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_idotless" value="697" c:type="CLUTTER_KEY_idotless">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="641"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ifonlyif" value="2253" c:type="CLUTTER_KEY_ifonlyif">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1129"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_igrave" value="236" c:type="CLUTTER_KEY_igrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="556"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ihook" value="16785097" c:type="CLUTTER_KEY_ihook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1691"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_imacron" value="1007" c:type="CLUTTER_KEY_imacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="685"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_implies" value="2254" c:type="CLUTTER_KEY_implies">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1130"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_includedin"
              value="2266"
              c:type="CLUTTER_KEY_includedin">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1133"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_includes" value="2267" c:type="CLUTTER_KEY_includes">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1134"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_infinity" value="2242" c:type="CLUTTER_KEY_infinity">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1125"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_integral" value="2239" c:type="CLUTTER_KEY_integral">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1122"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_intersection"
              value="2268"
              c:type="CLUTTER_KEY_intersection">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1135"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_iogonek" value="999" c:type="CLUTTER_KEY_iogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="683"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_itilde" value="949" c:type="CLUTTER_KEY_itilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="665"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_j" value="106" c:type="CLUTTER_KEY_j">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="456"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_jcircumflex"
              value="700"
              c:type="CLUTTER_KEY_jcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="643"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_jot" value="3018" c:type="CLUTTER_KEY_jot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1262"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_k" value="107" c:type="CLUTTER_KEY_k">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="457"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_A" value="1201" c:type="CLUTTER_KEY_kana_A">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="740"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_CHI" value="1217" c:type="CLUTTER_KEY_kana_CHI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="756"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_E" value="1204" c:type="CLUTTER_KEY_kana_E">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="743"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_FU" value="1228" c:type="CLUTTER_KEY_kana_FU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="769"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HA" value="1226" c:type="CLUTTER_KEY_kana_HA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="767"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HE" value="1229" c:type="CLUTTER_KEY_kana_HE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="771"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HI" value="1227" c:type="CLUTTER_KEY_kana_HI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="768"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HO" value="1230" c:type="CLUTTER_KEY_kana_HO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="772"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_HU" value="1228" c:type="CLUTTER_KEY_kana_HU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="770"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_I" value="1202" c:type="CLUTTER_KEY_kana_I">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="741"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KA" value="1206" c:type="CLUTTER_KEY_kana_KA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="745"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KE" value="1209" c:type="CLUTTER_KEY_kana_KE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="748"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KI" value="1207" c:type="CLUTTER_KEY_kana_KI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="746"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KO" value="1210" c:type="CLUTTER_KEY_kana_KO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="749"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_KU" value="1208" c:type="CLUTTER_KEY_kana_KU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="747"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MA" value="1231" c:type="CLUTTER_KEY_kana_MA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="773"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_ME" value="1234" c:type="CLUTTER_KEY_kana_ME">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="776"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MI" value="1232" c:type="CLUTTER_KEY_kana_MI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="774"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MO" value="1235" c:type="CLUTTER_KEY_kana_MO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="777"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_MU" value="1233" c:type="CLUTTER_KEY_kana_MU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="775"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_N" value="1245" c:type="CLUTTER_KEY_kana_N">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="787"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NA" value="1221" c:type="CLUTTER_KEY_kana_NA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="762"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NE" value="1224" c:type="CLUTTER_KEY_kana_NE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="765"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NI" value="1222" c:type="CLUTTER_KEY_kana_NI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="763"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NO" value="1225" c:type="CLUTTER_KEY_kana_NO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="766"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_NU" value="1223" c:type="CLUTTER_KEY_kana_NU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="764"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_O" value="1205" c:type="CLUTTER_KEY_kana_O">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="744"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RA" value="1239" c:type="CLUTTER_KEY_kana_RA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="781"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RE" value="1242" c:type="CLUTTER_KEY_kana_RE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="784"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RI" value="1240" c:type="CLUTTER_KEY_kana_RI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="782"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RO" value="1243" c:type="CLUTTER_KEY_kana_RO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="785"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_RU" value="1241" c:type="CLUTTER_KEY_kana_RU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="783"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SA" value="1211" c:type="CLUTTER_KEY_kana_SA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="750"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SE" value="1214" c:type="CLUTTER_KEY_kana_SE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="753"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SHI" value="1212" c:type="CLUTTER_KEY_kana_SHI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="751"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SO" value="1215" c:type="CLUTTER_KEY_kana_SO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="754"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_SU" value="1213" c:type="CLUTTER_KEY_kana_SU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="752"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TA" value="1216" c:type="CLUTTER_KEY_kana_TA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="755"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TE" value="1219" c:type="CLUTTER_KEY_kana_TE">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="760"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TI" value="1217" c:type="CLUTTER_KEY_kana_TI">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="757"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TO" value="1220" c:type="CLUTTER_KEY_kana_TO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="761"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TSU" value="1218" c:type="CLUTTER_KEY_kana_TSU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="758"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_TU" value="1218" c:type="CLUTTER_KEY_kana_TU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="759"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_U" value="1203" c:type="CLUTTER_KEY_kana_U">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="742"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_WA" value="1244" c:type="CLUTTER_KEY_kana_WA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="786"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_WO" value="1190" c:type="CLUTTER_KEY_kana_WO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="728"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YA" value="1236" c:type="CLUTTER_KEY_kana_YA">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="778"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YO" value="1238" c:type="CLUTTER_KEY_kana_YO">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="780"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_YU" value="1237" c:type="CLUTTER_KEY_kana_YU">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="779"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_a" value="1191" c:type="CLUTTER_KEY_kana_a">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="729"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_closingbracket"
              value="1187"
              c:type="CLUTTER_KEY_kana_closingbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="724"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_comma"
              value="1188"
              c:type="CLUTTER_KEY_kana_comma">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="725"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_conjunctive"
              value="1189"
              c:type="CLUTTER_KEY_kana_conjunctive">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="726"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_e" value="1194" c:type="CLUTTER_KEY_kana_e">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="732"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_fullstop"
              value="1185"
              c:type="CLUTTER_KEY_kana_fullstop">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="722"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_i" value="1192" c:type="CLUTTER_KEY_kana_i">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="730"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_middledot"
              value="1189"
              c:type="CLUTTER_KEY_kana_middledot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="727"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_o" value="1195" c:type="CLUTTER_KEY_kana_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="733"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_openingbracket"
              value="1186"
              c:type="CLUTTER_KEY_kana_openingbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="723"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_switch"
              value="65406"
              c:type="CLUTTER_KEY_kana_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="790"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_tsu" value="1199" c:type="CLUTTER_KEY_kana_tsu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="737"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_tu" value="1199" c:type="CLUTTER_KEY_kana_tu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="738"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_u" value="1193" c:type="CLUTTER_KEY_kana_u">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="731"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_ya" value="1196" c:type="CLUTTER_KEY_kana_ya">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="734"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_yo" value="1198" c:type="CLUTTER_KEY_kana_yo">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="736"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kana_yu" value="1197" c:type="CLUTTER_KEY_kana_yu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="735"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kappa" value="930" c:type="CLUTTER_KEY_kappa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="657"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kcedilla" value="1011" c:type="CLUTTER_KEY_kcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="688"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_kra" value="930" c:type="CLUTTER_KEY_kra">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="656"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_l" value="108" c:type="CLUTTER_KEY_l">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="458"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lacute" value="485" c:type="CLUTTER_KEY_lacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="619"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_latincross"
              value="2777"
              c:type="CLUTTER_KEY_latincross">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1215"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lbelowdot"
              value="16784951"
              c:type="CLUTTER_KEY_lbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1649"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lcaron" value="437" c:type="CLUTTER_KEY_lcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="591"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lcedilla" value="950" c:type="CLUTTER_KEY_lcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="666"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftanglebracket"
              value="2748"
              c:type="CLUTTER_KEY_leftanglebracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1192"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftarrow" value="2299" c:type="CLUTTER_KEY_leftarrow">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1141"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftcaret" value="2979" c:type="CLUTTER_KEY_leftcaret">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1253"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftdoublequotemark"
              value="2770"
              c:type="CLUTTER_KEY_leftdoublequotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1209"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftmiddlecurlybrace"
              value="2223"
              c:type="CLUTTER_KEY_leftmiddlecurlybrace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1110"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftopentriangle"
              value="2764"
              c:type="CLUTTER_KEY_leftopentriangle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1203"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftpointer"
              value="2794"
              c:type="CLUTTER_KEY_leftpointer">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1232"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftradical"
              value="2209"
              c:type="CLUTTER_KEY_leftradical">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1096"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftshoe" value="3034" c:type="CLUTTER_KEY_leftshoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1269"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftsinglequotemark"
              value="2768"
              c:type="CLUTTER_KEY_leftsinglequotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1207"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_leftt" value="2548" c:type="CLUTTER_KEY_leftt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1164"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lefttack" value="3036" c:type="CLUTTER_KEY_lefttack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1270"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_less" value="60" c:type="CLUTTER_KEY_less">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="409"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lessthanequal"
              value="2236"
              c:type="CLUTTER_KEY_lessthanequal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1119"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lf" value="2533" c:type="CLUTTER_KEY_lf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1151"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_logicaland"
              value="2270"
              c:type="CLUTTER_KEY_logicaland">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1137"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_logicalor" value="2271" c:type="CLUTTER_KEY_logicalor">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1138"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lowleftcorner"
              value="2541"
              c:type="CLUTTER_KEY_lowleftcorner">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1157"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lowrightcorner"
              value="2538"
              c:type="CLUTTER_KEY_lowrightcorner">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1154"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_lstroke" value="435" c:type="CLUTTER_KEY_lstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="590"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_m" value="109" c:type="CLUTTER_KEY_m">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="459"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_mabovedot"
              value="16784961"
              c:type="CLUTTER_KEY_mabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="703"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_macron" value="175" c:type="CLUTTER_KEY_macron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="492"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_malesymbol"
              value="2807"
              c:type="CLUTTER_KEY_malesymbol">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1244"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_maltesecross"
              value="2800"
              c:type="CLUTTER_KEY_maltesecross">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1237"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_marker" value="2751" c:type="CLUTTER_KEY_marker">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1195"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_masculine" value="186" c:type="CLUTTER_KEY_masculine">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="503"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_minus" value="45" c:type="CLUTTER_KEY_minus">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="394"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_minutes" value="2774" c:type="CLUTTER_KEY_minutes">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1213"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_mu" value="181" c:type="CLUTTER_KEY_mu">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="498"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_multiply" value="215" c:type="CLUTTER_KEY_multiply">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="533"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_musicalflat"
              value="2806"
              c:type="CLUTTER_KEY_musicalflat">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1243"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_musicalsharp"
              value="2805"
              c:type="CLUTTER_KEY_musicalsharp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1242"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_n" value="110" c:type="CLUTTER_KEY_n">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="460"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nabla" value="2245" c:type="CLUTTER_KEY_nabla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1126"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nacute" value="497" c:type="CLUTTER_KEY_nacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="626"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ncaron" value="498" c:type="CLUTTER_KEY_ncaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="627"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ncedilla" value="1009" c:type="CLUTTER_KEY_ncedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="686"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ninesubscript"
              value="16785545"
              c:type="CLUTTER_KEY_ninesubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1771"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ninesuperior"
              value="16785529"
              c:type="CLUTTER_KEY_ninesuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1761"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nl" value="2536" c:type="CLUTTER_KEY_nl">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1152"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_nobreakspace"
              value="160"
              c:type="CLUTTER_KEY_nobreakspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="477"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notapproxeq"
              value="16785991"
              c:type="CLUTTER_KEY_notapproxeq">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1784"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notelementof"
              value="16785929"
              c:type="CLUTTER_KEY_notelementof">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1775"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notequal" value="2237" c:type="CLUTTER_KEY_notequal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1120"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notidentical"
              value="16786018"
              c:type="CLUTTER_KEY_notidentical">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1785"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_notsign" value="172" c:type="CLUTTER_KEY_notsign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="489"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ntilde" value="241" c:type="CLUTTER_KEY_ntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="561"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_numbersign" value="35" c:type="CLUTTER_KEY_numbersign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="383"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_numerosign"
              value="1712"
              c:type="CLUTTER_KEY_numerosign">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="934"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_o" value="111" c:type="CLUTTER_KEY_o">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="461"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oacute" value="243" c:type="CLUTTER_KEY_oacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="563"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_obarred" value="16777845" c:type="CLUTTER_KEY_obarred">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1643"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_obelowdot"
              value="16785101"
              c:type="CLUTTER_KEY_obelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1695"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocaron" value="16777682" c:type="CLUTTER_KEY_ocaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1642"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflex"
              value="244"
              c:type="CLUTTER_KEY_ocircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="564"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexacute"
              value="16785105"
              c:type="CLUTTER_KEY_ocircumflexacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1699"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexbelowdot"
              value="16785113"
              c:type="CLUTTER_KEY_ocircumflexbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1707"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexgrave"
              value="16785107"
              c:type="CLUTTER_KEY_ocircumflexgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1701"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflexhook"
              value="16785109"
              c:type="CLUTTER_KEY_ocircumflexhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1703"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ocircumflextilde"
              value="16785111"
              c:type="CLUTTER_KEY_ocircumflextilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1705"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_odiaeresis"
              value="246"
              c:type="CLUTTER_KEY_odiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="566"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_odoubleacute"
              value="501"
              c:type="CLUTTER_KEY_odoubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="628"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oe" value="5053" c:type="CLUTTER_KEY_oe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="719"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ogonek" value="434" c:type="CLUTTER_KEY_ogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="589"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ograve" value="242" c:type="CLUTTER_KEY_ograve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="562"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohook" value="16785103" c:type="CLUTTER_KEY_ohook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1697"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorn" value="16777633" c:type="CLUTTER_KEY_ohorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1739"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornacute"
              value="16785115"
              c:type="CLUTTER_KEY_ohornacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1709"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornbelowdot"
              value="16785123"
              c:type="CLUTTER_KEY_ohornbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1717"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorngrave"
              value="16785117"
              c:type="CLUTTER_KEY_ohorngrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1711"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohornhook"
              value="16785119"
              c:type="CLUTTER_KEY_ohornhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1713"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ohorntilde"
              value="16785121"
              c:type="CLUTTER_KEY_ohorntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1715"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_omacron" value="1010" c:type="CLUTTER_KEY_omacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="687"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oneeighth" value="2755" c:type="CLUTTER_KEY_oneeighth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1196"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onefifth" value="2738" c:type="CLUTTER_KEY_onefifth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1184"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onehalf" value="189" c:type="CLUTTER_KEY_onehalf">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="506"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onequarter"
              value="188"
              c:type="CLUTTER_KEY_onequarter">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="505"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesixth" value="2742" c:type="CLUTTER_KEY_onesixth">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1188"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesubscript"
              value="16785537"
              c:type="CLUTTER_KEY_onesubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1763"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onesuperior"
              value="185"
              c:type="CLUTTER_KEY_onesuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="502"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_onethird" value="2736" c:type="CLUTTER_KEY_onethird">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1182"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ooblique" value="248" c:type="CLUTTER_KEY_ooblique">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="569"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_openrectbullet"
              value="2786"
              c:type="CLUTTER_KEY_openrectbullet">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1224"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_openstar" value="2789" c:type="CLUTTER_KEY_openstar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1227"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_opentribulletdown"
              value="2788"
              c:type="CLUTTER_KEY_opentribulletdown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1226"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_opentribulletup"
              value="2787"
              c:type="CLUTTER_KEY_opentribulletup">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1225"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ordfeminine"
              value="170"
              c:type="CLUTTER_KEY_ordfeminine">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="487"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_oslash" value="248" c:type="CLUTTER_KEY_oslash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="568"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_otilde" value="245" c:type="CLUTTER_KEY_otilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="565"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_overbar" value="3008" c:type="CLUTTER_KEY_overbar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1257"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_overline" value="1150" c:type="CLUTTER_KEY_overline">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="721"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_p" value="112" c:type="CLUTTER_KEY_p">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="462"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_pabovedot"
              value="16784983"
              c:type="CLUTTER_KEY_pabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="705"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_paragraph" value="182" c:type="CLUTTER_KEY_paragraph">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="499"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_parenleft" value="40" c:type="CLUTTER_KEY_parenleft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="389"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_parenright" value="41" c:type="CLUTTER_KEY_parenright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="390"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_partdifferential"
              value="16785922"
              c:type="CLUTTER_KEY_partdifferential">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1772"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_partialderivative"
              value="2287"
              c:type="CLUTTER_KEY_partialderivative">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1139"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_percent" value="37" c:type="CLUTTER_KEY_percent">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="385"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_period" value="46" c:type="CLUTTER_KEY_period">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="395"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_periodcentered"
              value="183"
              c:type="CLUTTER_KEY_periodcentered">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="500"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_permille" value="2773" c:type="CLUTTER_KEY_permille">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1212"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_phonographcopyright"
              value="2811"
              c:type="CLUTTER_KEY_phonographcopyright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1248"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_plus" value="43" c:type="CLUTTER_KEY_plus">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="392"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_plusminus" value="177" c:type="CLUTTER_KEY_plusminus">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="494"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_prescription"
              value="2772"
              c:type="CLUTTER_KEY_prescription">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1211"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_prolongedsound"
              value="1200"
              c:type="CLUTTER_KEY_prolongedsound">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="739"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_punctspace"
              value="2726"
              c:type="CLUTTER_KEY_punctspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1174"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_q" value="113" c:type="CLUTTER_KEY_q">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="463"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quad" value="3020" c:type="CLUTTER_KEY_quad">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1263"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_question" value="63" c:type="CLUTTER_KEY_question">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="412"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_questiondown"
              value="191"
              c:type="CLUTTER_KEY_questiondown">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="508"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quotedbl" value="34" c:type="CLUTTER_KEY_quotedbl">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="382"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quoteleft" value="96" c:type="CLUTTER_KEY_quoteleft">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="446"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_quoteright" value="39" c:type="CLUTTER_KEY_quoteright">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="388"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_r" value="114" c:type="CLUTTER_KEY_r">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="464"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_racute" value="480" c:type="CLUTTER_KEY_racute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="617"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_radical" value="2262" c:type="CLUTTER_KEY_radical">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1132"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rcaron" value="504" c:type="CLUTTER_KEY_rcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="629"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rcedilla" value="947" c:type="CLUTTER_KEY_rcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="664"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_registered"
              value="174"
              c:type="CLUTTER_KEY_registered">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="491"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightanglebracket"
              value="2750"
              c:type="CLUTTER_KEY_rightanglebracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1194"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightarrow"
              value="2301"
              c:type="CLUTTER_KEY_rightarrow">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1143"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightcaret"
              value="2982"
              c:type="CLUTTER_KEY_rightcaret">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1254"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightdoublequotemark"
              value="2771"
              c:type="CLUTTER_KEY_rightdoublequotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1210"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightmiddlecurlybrace"
              value="2224"
              c:type="CLUTTER_KEY_rightmiddlecurlybrace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1111"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightmiddlesummation"
              value="2231"
              c:type="CLUTTER_KEY_rightmiddlesummation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightopentriangle"
              value="2765"
              c:type="CLUTTER_KEY_rightopentriangle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1204"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightpointer"
              value="2795"
              c:type="CLUTTER_KEY_rightpointer">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1233"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightshoe" value="3032" c:type="CLUTTER_KEY_rightshoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1268"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightsinglequotemark"
              value="2769"
              c:type="CLUTTER_KEY_rightsinglequotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1208"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_rightt" value="2549" c:type="CLUTTER_KEY_rightt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1165"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_righttack" value="3068" c:type="CLUTTER_KEY_righttack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1271"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_s" value="115" c:type="CLUTTER_KEY_s">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="465"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sabovedot"
              value="16784993"
              c:type="CLUTTER_KEY_sabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="707"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sacute" value="438" c:type="CLUTTER_KEY_sacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="592"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scaron" value="441" c:type="CLUTTER_KEY_scaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="594"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scedilla" value="442" c:type="CLUTTER_KEY_scedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="595"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_schwa" value="16777817" c:type="CLUTTER_KEY_schwa">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1645"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_scircumflex"
              value="766"
              c:type="CLUTTER_KEY_scircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="655"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_script_switch"
              value="65406"
              c:type="CLUTTER_KEY_script_switch">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="93"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_seconds" value="2775" c:type="CLUTTER_KEY_seconds">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1214"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_section" value="167" c:type="CLUTTER_KEY_section">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="484"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_semicolon" value="59" c:type="CLUTTER_KEY_semicolon">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="408"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_semivoicedsound"
              value="1247"
              c:type="CLUTTER_KEY_semivoicedsound">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="789"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_seveneighths"
              value="2758"
              c:type="CLUTTER_KEY_seveneighths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1199"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sevensubscript"
              value="16785543"
              c:type="CLUTTER_KEY_sevensubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1769"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sevensuperior"
              value="16785527"
              c:type="CLUTTER_KEY_sevensuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1759"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_signaturemark"
              value="2762"
              c:type="CLUTTER_KEY_signaturemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1201"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_signifblank"
              value="2732"
              c:type="CLUTTER_KEY_signifblank">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1179"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_similarequal"
              value="2249"
              c:type="CLUTTER_KEY_similarequal">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1128"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_singlelowquotemark"
              value="2813"
              c:type="CLUTTER_KEY_singlelowquotemark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1250"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sixsubscript"
              value="16785542"
              c:type="CLUTTER_KEY_sixsubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1768"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sixsuperior"
              value="16785526"
              c:type="CLUTTER_KEY_sixsuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1758"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_slash" value="47" c:type="CLUTTER_KEY_slash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="396"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_soliddiamond"
              value="2528"
              c:type="CLUTTER_KEY_soliddiamond">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1146"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_space" value="32" c:type="CLUTTER_KEY_space">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="380"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_squareroot"
              value="16785946"
              c:type="CLUTTER_KEY_squareroot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1777"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ssharp" value="223" c:type="CLUTTER_KEY_ssharp">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="543"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_sterling" value="163" c:type="CLUTTER_KEY_sterling">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="480"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_stricteq"
              value="16786019"
              c:type="CLUTTER_KEY_stricteq">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1786"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_t" value="116" c:type="CLUTTER_KEY_t">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="466"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tabovedot"
              value="16785003"
              c:type="CLUTTER_KEY_tabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="709"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tcaron" value="443" c:type="CLUTTER_KEY_tcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="596"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tcedilla" value="510" c:type="CLUTTER_KEY_tcedilla">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="632"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_telephone" value="2809" c:type="CLUTTER_KEY_telephone">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1246"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_telephonerecorder"
              value="2810"
              c:type="CLUTTER_KEY_telephonerecorder">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1247"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_therefore" value="2240" c:type="CLUTTER_KEY_therefore">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1123"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_thinspace" value="2727" c:type="CLUTTER_KEY_thinspace">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1175"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_thorn" value="254" c:type="CLUTTER_KEY_thorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="575"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threeeighths"
              value="2756"
              c:type="CLUTTER_KEY_threeeighths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1197"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threefifths"
              value="2740"
              c:type="CLUTTER_KEY_threefifths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1186"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threequarters"
              value="190"
              c:type="CLUTTER_KEY_threequarters">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="507"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threesubscript"
              value="16785539"
              c:type="CLUTTER_KEY_threesubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1765"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_threesuperior"
              value="179"
              c:type="CLUTTER_KEY_threesuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="496"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tintegral"
              value="16785965"
              c:type="CLUTTER_KEY_tintegral">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1781"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topintegral"
              value="2212"
              c:type="CLUTTER_KEY_topintegral">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1099"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftparens"
              value="2219"
              c:type="CLUTTER_KEY_topleftparens">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1106"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftradical"
              value="2210"
              c:type="CLUTTER_KEY_topleftradical">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1097"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftsqbracket"
              value="2215"
              c:type="CLUTTER_KEY_topleftsqbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1102"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topleftsummation"
              value="2225"
              c:type="CLUTTER_KEY_topleftsummation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1112"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightparens"
              value="2221"
              c:type="CLUTTER_KEY_toprightparens">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1108"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightsqbracket"
              value="2217"
              c:type="CLUTTER_KEY_toprightsqbracket">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1104"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_toprightsummation"
              value="2229"
              c:type="CLUTTER_KEY_toprightsummation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1116"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topt" value="2551" c:type="CLUTTER_KEY_topt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1167"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_topvertsummationconnector"
              value="2227"
              c:type="CLUTTER_KEY_topvertsummationconnector">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1114"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_trademark" value="2761" c:type="CLUTTER_KEY_trademark">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1200"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_trademarkincircle"
              value="2763"
              c:type="CLUTTER_KEY_trademarkincircle">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1202"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_tslash" value="956" c:type="CLUTTER_KEY_tslash">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="669"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twofifths" value="2739" c:type="CLUTTER_KEY_twofifths">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1185"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twosubscript"
              value="16785538"
              c:type="CLUTTER_KEY_twosubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1764"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twosuperior"
              value="178"
              c:type="CLUTTER_KEY_twosuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="495"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_twothirds" value="2737" c:type="CLUTTER_KEY_twothirds">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1183"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_u" value="117" c:type="CLUTTER_KEY_u">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="467"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uacute" value="250" c:type="CLUTTER_KEY_uacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="571"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ubelowdot"
              value="16785125"
              c:type="CLUTTER_KEY_ubelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1719"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ubreve" value="765" c:type="CLUTTER_KEY_ubreve">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="654"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ucircumflex"
              value="251"
              c:type="CLUTTER_KEY_ucircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="572"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_udiaeresis"
              value="252"
              c:type="CLUTTER_KEY_udiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="573"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_udoubleacute"
              value="507"
              c:type="CLUTTER_KEY_udoubleacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="631"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ugrave" value="249" c:type="CLUTTER_KEY_ugrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="570"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhook" value="16785127" c:type="CLUTTER_KEY_uhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1721"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorn" value="16777648" c:type="CLUTTER_KEY_uhorn">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1741"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornacute"
              value="16785129"
              c:type="CLUTTER_KEY_uhornacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1723"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornbelowdot"
              value="16785137"
              c:type="CLUTTER_KEY_uhornbelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1731"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorngrave"
              value="16785131"
              c:type="CLUTTER_KEY_uhorngrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1725"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhornhook"
              value="16785133"
              c:type="CLUTTER_KEY_uhornhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1727"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uhorntilde"
              value="16785135"
              c:type="CLUTTER_KEY_uhorntilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1729"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_umacron" value="1022" c:type="CLUTTER_KEY_umacron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="691"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_underbar" value="3014" c:type="CLUTTER_KEY_underbar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1261"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_underscore" value="95" c:type="CLUTTER_KEY_underscore">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="444"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_union" value="2269" c:type="CLUTTER_KEY_union">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1136"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uogonek" value="1017" c:type="CLUTTER_KEY_uogonek">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="689"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uparrow" value="2300" c:type="CLUTTER_KEY_uparrow">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1142"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upcaret" value="2985" c:type="CLUTTER_KEY_upcaret">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1256"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upleftcorner"
              value="2540"
              c:type="CLUTTER_KEY_upleftcorner">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1156"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uprightcorner"
              value="2539"
              c:type="CLUTTER_KEY_uprightcorner">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1155"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upshoe" value="3011" c:type="CLUTTER_KEY_upshoe">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1259"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_upstile" value="3027" c:type="CLUTTER_KEY_upstile">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1266"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uptack" value="3022" c:type="CLUTTER_KEY_uptack">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1264"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_uring" value="505" c:type="CLUTTER_KEY_uring">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="630"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_utilde" value="1021" c:type="CLUTTER_KEY_utilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="690"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_v" value="118" c:type="CLUTTER_KEY_v">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="468"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_variation" value="2241" c:type="CLUTTER_KEY_variation">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1124"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vertbar" value="2552" c:type="CLUTTER_KEY_vertbar">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1168"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vertconnector"
              value="2214"
              c:type="CLUTTER_KEY_vertconnector">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1101"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_voicedsound"
              value="1246"
              c:type="CLUTTER_KEY_voicedsound">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="788"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_vt" value="2537" c:type="CLUTTER_KEY_vt">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1153"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_w" value="119" c:type="CLUTTER_KEY_w">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="469"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wacute" value="16785027" c:type="CLUTTER_KEY_wacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="713"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wcircumflex"
              value="16777589"
              c:type="CLUTTER_KEY_wcircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="693"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wdiaeresis"
              value="16785029"
              c:type="CLUTTER_KEY_wdiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="715"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_wgrave" value="16785025" c:type="CLUTTER_KEY_wgrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="711"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_x" value="120" c:type="CLUTTER_KEY_x">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="470"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_xabovedot"
              value="16785035"
              c:type="CLUTTER_KEY_xabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1638"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_y" value="121" c:type="CLUTTER_KEY_y">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="471"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yacute" value="253" c:type="CLUTTER_KEY_yacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="574"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ybelowdot"
              value="16785141"
              c:type="CLUTTER_KEY_ybelowdot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1733"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ycircumflex"
              value="16777591"
              c:type="CLUTTER_KEY_ycircumflex">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="695"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ydiaeresis"
              value="255"
              c:type="CLUTTER_KEY_ydiaeresis">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="576"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yen" value="165" c:type="CLUTTER_KEY_yen">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="482"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ygrave" value="16785139" c:type="CLUTTER_KEY_ygrave">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="717"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_yhook" value="16785143" c:type="CLUTTER_KEY_yhook">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1735"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_ytilde" value="16785145" c:type="CLUTTER_KEY_ytilde">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1737"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_z" value="122" c:type="CLUTTER_KEY_z">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="472"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zabovedot" value="447" c:type="CLUTTER_KEY_zabovedot">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="600"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zacute" value="444" c:type="CLUTTER_KEY_zacute">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="597"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zcaron" value="446" c:type="CLUTTER_KEY_zcaron">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="599"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zerosubscript"
              value="16785536"
              c:type="CLUTTER_KEY_zerosubscript">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1762"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zerosuperior"
              value="16785520"
              c:type="CLUTTER_KEY_zerosuperior">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1755"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="KEY_zstroke" value="16777654" c:type="CLUTTER_KEY_zstroke">
      <source-position filename="../clutter/clutter/clutter-keysyms.h"
                       line="1640"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <record name="KbdA11ySettings" c:type="ClutterKbdA11ySettings">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-seat.h"
           line="40">The #ClutterKbdA11ySettings structure contains keyboard accessibility
settings</doc>
      <source-position filename="../clutter/clutter/clutter-seat.h" line="56"/>
      <field name="controls" writable="1">
        <type name="KeyboardA11yFlags" c:type="ClutterKeyboardA11yFlags"/>
      </field>
      <field name="slowkeys_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="debounce_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="timeout_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="mousekeys_init_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="mousekeys_max_speed" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="mousekeys_accel_time" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <record name="KeyEvent" c:type="ClutterKeyEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="146">Key event</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="177"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="148">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="149">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="150">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="151">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="152">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="modifier_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="153">key modifiers</doc>
        <type name="ModifierType" c:type="ClutterModifierType"/>
      </field>
      <field name="keyval" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="154">raw key value</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="hardware_keycode" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="155">raw hardware key value</doc>
        <type name="guint16" c:type="guint16"/>
      </field>
      <field name="unicode_value" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="156">Unicode representation</doc>
        <type name="gunichar" c:type="gunichar"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="157">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
    </record>
    <enumeration name="KeyState"
                 glib:type-name="ClutterKeyState"
                 glib:get-type="clutter_key_state_get_type"
                 c:type="ClutterKeyState">
      <member name="released"
              value="0"
              c:identifier="CLUTTER_KEY_STATE_RELEASED"
              glib:nick="released">
      </member>
      <member name="pressed"
              value="1"
              c:identifier="CLUTTER_KEY_STATE_PRESSED"
              glib:nick="pressed">
      </member>
    </enumeration>
    <bitfield name="KeyboardA11yFlags"
              glib:type-name="ClutterKeyboardA11yFlags"
              glib:get-type="clutter_keyboard_a11y_flags_get_type"
              c:type="ClutterKeyboardA11yFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="390">Keyboard accessibility features applied to a ClutterInputDevice keyboard.</doc>
      <member name="keyboard_enabled"
              value="1"
              c:identifier="CLUTTER_A11Y_KEYBOARD_ENABLED"
              glib:nick="keyboard-enabled">
      </member>
      <member name="timeout_enabled"
              value="2"
              c:identifier="CLUTTER_A11Y_TIMEOUT_ENABLED"
              glib:nick="timeout-enabled">
      </member>
      <member name="mouse_keys_enabled"
              value="4"
              c:identifier="CLUTTER_A11Y_MOUSE_KEYS_ENABLED"
              glib:nick="mouse-keys-enabled">
      </member>
      <member name="slow_keys_enabled"
              value="8"
              c:identifier="CLUTTER_A11Y_SLOW_KEYS_ENABLED"
              glib:nick="slow-keys-enabled">
      </member>
      <member name="slow_keys_beep_press"
              value="16"
              c:identifier="CLUTTER_A11Y_SLOW_KEYS_BEEP_PRESS"
              glib:nick="slow-keys-beep-press">
      </member>
      <member name="slow_keys_beep_accept"
              value="32"
              c:identifier="CLUTTER_A11Y_SLOW_KEYS_BEEP_ACCEPT"
              glib:nick="slow-keys-beep-accept">
      </member>
      <member name="slow_keys_beep_reject"
              value="64"
              c:identifier="CLUTTER_A11Y_SLOW_KEYS_BEEP_REJECT"
              glib:nick="slow-keys-beep-reject">
      </member>
      <member name="bounce_keys_enabled"
              value="128"
              c:identifier="CLUTTER_A11Y_BOUNCE_KEYS_ENABLED"
              glib:nick="bounce-keys-enabled">
      </member>
      <member name="bounce_keys_beep_reject"
              value="256"
              c:identifier="CLUTTER_A11Y_BOUNCE_KEYS_BEEP_REJECT"
              glib:nick="bounce-keys-beep-reject">
      </member>
      <member name="toggle_keys_enabled"
              value="512"
              c:identifier="CLUTTER_A11Y_TOGGLE_KEYS_ENABLED"
              glib:nick="toggle-keys-enabled">
      </member>
      <member name="sticky_keys_enabled"
              value="1024"
              c:identifier="CLUTTER_A11Y_STICKY_KEYS_ENABLED"
              glib:nick="sticky-keys-enabled">
      </member>
      <member name="sticky_keys_two_key_off"
              value="2048"
              c:identifier="CLUTTER_A11Y_STICKY_KEYS_TWO_KEY_OFF"
              glib:nick="sticky-keys-two-key-off">
      </member>
      <member name="sticky_keys_beep"
              value="4096"
              c:identifier="CLUTTER_A11Y_STICKY_KEYS_BEEP"
              glib:nick="sticky-keys-beep">
      </member>
      <member name="feature_state_change_beep"
              value="8192"
              c:identifier="CLUTTER_A11Y_FEATURE_STATE_CHANGE_BEEP"
              glib:nick="feature-state-change-beep">
      </member>
    </bitfield>
    <class name="KeyframeTransition"
           c:symbol-prefix="keyframe_transition"
           c:type="ClutterKeyframeTransition"
           version="1.12"
           parent="PropertyTransition"
           glib:type-name="ClutterKeyframeTransition"
           glib:get-type="clutter_keyframe_transition_get_type"
           glib:type-struct="KeyframeTransitionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-keyframe-transition.h"
           line="46">The `ClutterKeyframeTransition` structure contains only private
data and should be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="76"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_keyframe_transition_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="390">Creates a new #ClutterKeyframeTransition for @property_name.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-keyframe-transition.c"
               line="396">the newly allocated
  #ClutterKeyframeTransition instance. Use g_object_unref() when
  done to free its resources.</doc>
          <type name="Transition" c:type="ClutterTransition*"/>
        </return-value>
        <parameters>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="392">the property to animate</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="clear"
              c:identifier="clutter_keyframe_transition_clear"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="609">Removes all key frames from @transition.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="611">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_frame"
              c:identifier="clutter_keyframe_transition_get_key_frame"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="687">Retrieves the details of the key frame at @index_ inside @transition.

The @transition must already have key frames set, and @index_ must be
smaller than the number of key frames.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="689">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="690">the index of the key frame</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="key"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="691">return location for the key, or %NULL</doc>
            <type name="gdouble" c:type="double*"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="692">return location for the easing mode, or %NULL</doc>
            <type name="AnimationMode" c:type="ClutterAnimationMode*"/>
          </parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="693">a #GValue initialized with the type of
  the values</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_n_key_frames"
              c:identifier="clutter_keyframe_transition_get_n_key_frames"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="629">Retrieves the number of key frames inside @transition.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-keyframe-transition.c"
               line="635">the number of key frames</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="631">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set"
              c:identifier="clutter_keyframe_transition_set"
              version="1.12"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="541">Sets the key frames of the @transition.

This variadic arguments function is a convenience for C developers;
language bindings should use clutter_keyframe_transition_set_key_frames(),
clutter_keyframe_transition_set_modes(), and
clutter_keyframe_transition_set_values() instead.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="543">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="gtype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="544">the type of the values to use for the key frames</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="n_key_frames" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="545">the number of key frames between the initial
  and final values</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="547">a list of tuples, containing the key frame index, the value
  at the key frame, and the animation mode</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_frame"
              c:identifier="clutter_keyframe_transition_set_key_frame"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="650">Sets the details of the key frame at @index_ inside @transition.

The @transition must already have a key frame at @index_, and @index_
must be smaller than the number of key frames inside @transition.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="652">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="653">the index of the key frame</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="654">the key of the key frame</doc>
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="655">the easing mode of the key frame</doc>
            <type name="AnimationMode" c:type="ClutterAnimationMode"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="656">a #GValue containing the value of the key frame</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_frames"
              c:identifier="clutter_keyframe_transition_set_key_frames"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="410">Sets the keys for each key frame inside @transition.

If @transition does not hold any key frame, @n_key_frames key frames
will be created; if @transition already has key frames, @key_frames must
have at least as many elements as the number of key frames.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="412">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="n_key_frames" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="413">the number of values</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="key_frames" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="414">an array of keys between 0.0
  and 1.0, one for each key frame</doc>
            <array length="0" zero-terminated="0" c:type="const double*">
              <type name="gdouble" c:type="double"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_modes"
              c:identifier="clutter_keyframe_transition_set_modes"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="499">Sets the easing modes for each key frame inside @transition.

If @transition does not hold any key frame, @n_modes key frames will
be created; if @transition already has key frames, @modes must have
at least as many elements as the number of key frames.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="501">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="n_modes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="502">the number of easing modes</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="modes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="503">an array of easing modes, one for
  each key frame</doc>
            <array length="0"
                   zero-terminated="0"
                   c:type="const ClutterAnimationMode*">
              <type name="AnimationMode" c:type="ClutterAnimationMode"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_values"
              c:identifier="clutter_keyframe_transition_set_values"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keyframe-transition.c"
             line="452">Sets the values for each key frame inside @transition.

If @transition does not hold any key frame, @n_values key frames will
be created; if @transition already has key frames, @values must have
at least as many elements as the number of key frames.</doc>
        <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="454">a #ClutterKeyframeTransition</doc>
            <type name="KeyframeTransition"
                  c:type="ClutterKeyframeTransition*"/>
          </instance-parameter>
          <parameter name="n_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="455">the number of values</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-keyframe-transition.c"
                 line="456">an array of values, one for each
  key frame</doc>
            <array length="0" zero-terminated="0" c:type="const GValue*">
              <type name="GObject.Value" c:type="GValue"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="PropertyTransition" c:type="ClutterPropertyTransition"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="KeyframeTransitionPrivate"
              c:type="ClutterKeyframeTransitionPrivate*"/>
      </field>
    </class>
    <record name="KeyframeTransitionClass"
            c:type="ClutterKeyframeTransitionClass"
            glib:is-gtype-struct-for="KeyframeTransition"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-keyframe-transition.h"
           line="62">The `ClutterKeyframeTransitionClass` structure contains only
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="76"/>
      <field name="parent_class" readable="0" private="1">
        <type name="PropertyTransitionClass"
              c:type="ClutterPropertyTransitionClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="KeyframeTransitionPrivate"
            c:type="ClutterKeyframeTransitionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-keyframe-transition.h"
                       line="43"/>
    </record>
    <class name="Keymap"
           c:symbol-prefix="keymap"
           c:type="ClutterKeymap"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterKeymap"
           glib:get-type="clutter_keymap_get_type"
           glib:type-struct="KeymapClass">
      <source-position filename="../clutter/clutter/clutter-keymap.h"
                       line="44"/>
      <virtual-method name="get_caps_lock_state" invoker="get_caps_lock_state">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="42"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_direction" invoker="get_direction">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="43"/>
        <return-value transfer-ownership="none">
          <type name="Pango.Direction" c:type="PangoDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_num_lock_state" invoker="get_num_lock_state">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_caps_lock_state"
              c:identifier="clutter_keymap_get_caps_lock_state">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_direction" c:identifier="clutter_keymap_get_direction">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <type name="Pango.Direction" c:type="PangoDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_num_lock_state"
              c:identifier="clutter_keymap_get_num_lock_state">
        <source-position filename="../clutter/clutter/clutter-keymap.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="keymap" transfer-ownership="none">
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="state-changed" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="KeymapClass"
            c:type="ClutterKeymapClass"
            glib:is-gtype-struct-for="Keymap">
      <source-position filename="../clutter/clutter/clutter-keymap.h"
                       line="44"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_num_lock_state">
        <callback name="get_num_lock_state">
          <source-position filename="../clutter/clutter/clutter-keymap.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="ClutterKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_caps_lock_state">
        <callback name="get_caps_lock_state">
          <source-position filename="../clutter/clutter/clutter-keymap.h"
                           line="42"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="ClutterKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_direction">
        <callback name="get_direction">
          <source-position filename="../clutter/clutter/clutter-keymap.h"
                           line="43"/>
          <return-value transfer-ownership="none">
            <type name="Pango.Direction" c:type="PangoDirection"/>
          </return-value>
          <parameters>
            <parameter name="keymap" transfer-ownership="none">
              <type name="Keymap" c:type="ClutterKeymap*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="Knot"
            c:type="ClutterKnot"
            version="0.2"
            glib:type-name="ClutterKnot"
            glib:get-type="clutter_knot_get_type"
            c:symbol-prefix="knot">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="259">Point in a path behaviour.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="272"/>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="261">X coordinate of the knot</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="262">Y coordinate of the knot</doc>
        <type name="gint" c:type="gint"/>
      </field>
      <method name="copy" c:identifier="clutter_knot_copy" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1537">Makes an allocated copy of a knot.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="277"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1543">the copied knot.</doc>
          <type name="Knot" c:type="ClutterKnot*"/>
        </return-value>
        <parameters>
          <instance-parameter name="knot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1539">a #ClutterKnot</doc>
            <type name="Knot" c:type="const ClutterKnot*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal" c:identifier="clutter_knot_equal" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1571">Compares to knot and checks if the point to the same location.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="281"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1578">%TRUE if the knots point to the same location.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="knot_a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1573">First knot</doc>
            <type name="Knot" c:type="const ClutterKnot*"/>
          </instance-parameter>
          <parameter name="knot_b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1574">Second knot</doc>
            <type name="Knot" c:type="const ClutterKnot*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_knot_free" version="0.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1556">Frees the memory of an allocated knot.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="knot" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1558">a #ClutterKnot</doc>
            <type name="Knot" c:type="ClutterKnot*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="LAYER_NODE"
                    c:identifier="CLUTTER_LAYER_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="187"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_MANAGER"
                    c:identifier="CLUTTER_LAYOUT_MANAGER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_MANAGER_CLASS"
                    c:identifier="CLUTTER_LAYOUT_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_MANAGER_GET_CLASS"
                    c:identifier="CLUTTER_LAYOUT_MANAGER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_META"
                    c:identifier="CLUTTER_LAYOUT_META"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_META_CLASS"
                    c:identifier="CLUTTER_LAYOUT_META_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="LAYOUT_META_GET_CLASS"
                    c:identifier="CLUTTER_LAYOUT_META_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="LayerNode"
           c:symbol-prefix="layer_node"
           c:type="ClutterLayerNode"
           parent="PaintNode"
           glib:type-name="ClutterLayerNode"
           glib:get-type="clutter_layer_node_get_type"
           glib:type-struct="LayerNodeClass"
           glib:fundamental="1">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="199"/>
      <constructor name="new" c:identifier="clutter_layer_node_new">
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="205"/>
        <return-value transfer-ownership="full">
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="projection" transfer-ownership="none">
            <type name="Cogl.Matrix" c:type="const CoglMatrix*"/>
          </parameter>
          <parameter name="viewport" transfer-ownership="none">
            <type name="cairo.Rectangle" c:type="const cairo_rectangle_t*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="opacity" transfer-ownership="none">
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="LayerNodeClass"
            c:type="ClutterLayerNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="LayerNode">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="199"/>
    </record>
    <class name="LayoutManager"
           c:symbol-prefix="layout_manager"
           c:type="ClutterLayoutManager"
           version="1.2"
           parent="GObject.InitiallyUnowned"
           abstract="1"
           glib:type-name="ClutterLayoutManager"
           glib:get-type="clutter_layout_manager_get_type"
           glib:type-struct="LayoutManagerClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-layout-manager.h"
           line="45">The #ClutterLayoutManager structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="150"/>
      <virtual-method name="allocate" invoker="allocate" version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="520">Allocates the children of @container given an area

See also clutter_actor_allocate()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="522">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="523">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="allocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="524">the #ClutterActorBox containing the allocated area
  of @container</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="526">the allocation flags</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="begin_animation" introspectable="0">
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="130"/>
        <return-value>
          <type name="Alpha" c:type="ClutterAlpha*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <type name="gulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_child_meta" introspectable="0">
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="125"/>
        <return-value>
          <type name="LayoutMeta" c:type="ClutterLayoutMeta*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_animation">
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_animation_progress">
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_child_meta_type">
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferred_height"
                      invoker="get_preferred_height"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="485">Computes the minimum and natural heights of the @container according
to @manager.

See also clutter_actor_get_preferred_height()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="487">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="488">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="for_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="489">the width for which the height should be computed, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="490">return location for the minimum height
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="nat_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="492">return location for the natural height
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_preferred_width"
                      invoker="get_preferred_width"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="450">Computes the minimum and natural widths of the @container according
to @manager.

See also clutter_actor_get_preferred_width()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="452">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="453">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="for_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="454">the height for which the width should be computed, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="455">return location for the minimum width
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="nat_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="457">return location for the natural width
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="layout_changed"
                      invoker="layout_changed"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="550">Emits the #ClutterLayoutManager::layout-changed signal on @manager

This function should only be called by implementations of the
#ClutterLayoutManager class</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="552">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_container"
                      invoker="set_container"
                      version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="577">If the #ClutterLayoutManager sub-class allows it, allow
adding a weak reference of the @container using @manager
from within the layout manager

The layout manager should not increase the reference
count of the @container</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="579">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="580">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="allocate"
              c:identifier="clutter_layout_manager_allocate"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="520">Allocates the children of @container given an area

See also clutter_actor_allocate()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="522">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="523">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="allocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="524">the #ClutterActorBox containing the allocated area
  of @container</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="526">the allocation flags</doc>
            <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get"
              c:identifier="clutter_layout_manager_child_get"
              version="1.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="883">Retrieves the values for a list of properties out of the
#ClutterLayoutMeta created by @manager and attached to the
child of a @container</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="885">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="886">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="887">a #ClutterActor child of @container</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="888">the name of the first property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="889">a list of property name and return location for the value pairs</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="child_get_property"
              c:identifier="clutter_layout_manager_child_get_property"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="972">Gets a property on the #ClutterLayoutMeta created by @manager and
attached to a child of @container

The #GValue must already be initialized to the type of the property
and has to be unset with g_value_unset() after extracting the real
value out of it</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="974">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="975">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="976">a #ClutterActor child of @container</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="977">the name of the property to get</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="978">a #GValue with the value of the property to get</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set"
              c:identifier="clutter_layout_manager_child_set"
              version="1.2"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="741">Sets a list of properties and their values on the #ClutterLayoutMeta
associated by @manager to a child of @container

Languages bindings should use clutter_layout_manager_child_set_property()
instead</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="743">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="744">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="745">a #ClutterActor child of @container</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="first_property" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="746">the first property name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="747">a list of property name and value pairs</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="child_set_property"
              c:identifier="clutter_layout_manager_child_set_property"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="830">Sets a property on the #ClutterLayoutMeta created by @manager and
attached to a child of @container</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="204"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="832">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="833">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="834">a #ClutterActor child of @container</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="835">the name of the property to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="836">a #GValue with the value of the property to set</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_child_property"
              c:identifier="clutter_layout_manager_find_child_property"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="1029">Retrieves the #GParamSpec for the layout property @name inside
the #ClutterLayoutMeta sub-class used by @manager</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-layout-manager.c"
               line="1037">a #GParamSpec describing the property,
  or %NULL if no property with that name exists. The returned
  #GParamSpec is owned by the layout manager and should not be
  modified or freed</doc>
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="1031">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="1032">the name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_meta"
              c:identifier="clutter_layout_manager_get_child_meta"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="666">Retrieves the #ClutterLayoutMeta that the layout @manager associated
to the @actor child of @container, eventually by creating one if the
#ClutterLayoutManager supports layout properties</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-layout-manager.c"
               line="676">a #ClutterLayoutMeta, or %NULL if the
  #ClutterLayoutManager does not have layout properties. The returned
  layout meta instance is owned by the #ClutterLayoutManager and it
  should not be unreferenced</doc>
          <type name="LayoutMeta" c:type="ClutterLayoutMeta*"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="668">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="669">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="670">a #ClutterActor child of @container</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_height"
              c:identifier="clutter_layout_manager_get_preferred_height"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="485">Computes the minimum and natural heights of the @container according
to @manager.

See also clutter_actor_get_preferred_height()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="487">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="488">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="for_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="489">the width for which the height should be computed, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="490">return location for the minimum height
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="nat_height_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="492">return location for the natural height
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_preferred_width"
              c:identifier="clutter_layout_manager_get_preferred_width"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="450">Computes the minimum and natural widths of the @container according
to @manager.

See also clutter_actor_get_preferred_width()</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="452">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="453">the #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
          <parameter name="for_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="454">the height for which the width should be computed, or -1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="min_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="455">return location for the minimum width
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="nat_width_p"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="457">return location for the natural width
  of the layout, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="layout_changed"
              c:identifier="clutter_layout_manager_layout_changed"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="550">Emits the #ClutterLayoutManager::layout-changed signal on @manager

This function should only be called by implementations of the
#ClutterLayoutManager class</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="552">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_child_properties"
              c:identifier="clutter_layout_manager_list_child_properties"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="1067">Retrieves all the #GParamSpec&lt;!-- --&gt;s for the layout properties
stored inside the #ClutterLayoutMeta sub-class used by @manager</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="183"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-layout-manager.c"
               line="1076">the newly-allocated,
  %NULL-terminated array of #GParamSpec&lt;!-- --&gt;s. Use g_free() to free the
  resources allocated for the array</doc>
          <array length="0" zero-terminated="0" c:type="GParamSpec**">
            <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="1069">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="n_pspecs"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="1070">return location for the number of returned
  #GParamSpec&lt;!-- --&gt;s</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_container"
              c:identifier="clutter_layout_manager_set_container"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="577">If the #ClutterLayoutManager sub-class allows it, allow
adding a weak reference of the @container using @manager
from within the layout manager

The layout manager should not increase the reference
count of the @container</doc>
        <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="579">a #ClutterLayoutManager</doc>
            <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
          </instance-parameter>
          <parameter name="container"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-manager.c"
                 line="580">a #ClutterContainer using @manager</doc>
            <type name="Container" c:type="ClutterContainer*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="dummy" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <glib:signal name="layout-changed" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-manager.c"
             line="406">The ::layout-changed signal is emitted each time a layout manager
has been changed. Every #ClutterActor using the @manager instance
as a layout manager should connect a handler to the ::layout-changed
signal and queue a relayout on themselves:

|[
  static void layout_changed (ClutterLayoutManager *manager,
                              ClutterActor         *self)
  {
    clutter_actor_queue_relayout (self);
  }
  ...
    self-&gt;manager = g_object_ref_sink (manager);
    g_signal_connect (self-&gt;manager, "layout-changed",
                      G_CALLBACK (layout_changed),
                      self);
]|

Sub-classes of #ClutterLayoutManager that implement a layout that
can be controlled or changed using parameters should emit the
::layout-changed signal whenever one of the parameters changes,
by using clutter_layout_manager_layout_changed().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LayoutManagerClass"
            c:type="ClutterLayoutManagerClass"
            glib:is-gtype-struct-for="LayoutManager"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-layout-manager.h"
           line="61">The #ClutterLayoutManagerClass structure contains only private
data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                       line="150"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
      <field name="get_preferred_width">
        <callback name="get_preferred_width">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="106"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="452">a #ClutterLayoutManager</doc>
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="453">the #ClutterContainer using @manager</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="for_height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="454">the height for which the width should be computed, or -1</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="min_width_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="455">return location for the minimum width
  of the layout, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="nat_width_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="457">return location for the natural width
  of the layout, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_preferred_height">
        <callback name="get_preferred_height">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="111"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="487">a #ClutterLayoutManager</doc>
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="488">the #ClutterContainer using @manager</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="for_width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="489">the width for which the height should be computed, or -1</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="min_height_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="490">return location for the minimum height
  of the layout, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
            <parameter name="nat_height_p"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full"
                       optional="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="492">return location for the natural height
  of the layout, or %NULL</doc>
              <type name="gfloat" c:type="gfloat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="allocate">
        <callback name="allocate">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="116"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="522">a #ClutterLayoutManager</doc>
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="container" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="523">the #ClutterContainer using @manager</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="allocation" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="524">the #ClutterActorBox containing the allocated area
  of @container</doc>
              <type name="ActorBox" c:type="const ClutterActorBox*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="526">the allocation flags</doc>
              <type name="AllocationFlags" c:type="ClutterAllocationFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_container">
        <callback name="set_container">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="579">a #ClutterLayoutManager</doc>
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="container"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="580">a #ClutterContainer using @manager</doc>
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_child_meta_type">
        <callback name="get_child_meta_type">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="124"/>
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_child_meta" introspectable="0">
        <callback name="create_child_meta" introspectable="0">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="125"/>
          <return-value>
            <type name="LayoutMeta" c:type="ClutterLayoutMeta*"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="container" transfer-ownership="none">
              <type name="Container" c:type="ClutterContainer*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="begin_animation" introspectable="0">
        <callback name="begin_animation" introspectable="0">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="130"/>
          <return-value>
            <type name="Alpha" c:type="ClutterAlpha*"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
            <parameter name="duration" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="mode" transfer-ownership="none">
              <type name="gulong" c:type="gulong"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_animation_progress">
        <callback name="get_animation_progress">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="134"/>
          <return-value transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_animation">
        <callback name="end_animation">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="136"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="layout_changed">
        <callback name="layout_changed">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="138"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="manager" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-layout-manager.c"
                   line="552">a #ClutterLayoutManager</doc>
              <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_padding_1" introspectable="0">
        <callback name="_clutter_padding_1">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="142"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_2" introspectable="0">
        <callback name="_clutter_padding_2">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="143"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_3" introspectable="0">
        <callback name="_clutter_padding_3">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="144"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_4" introspectable="0">
        <callback name="_clutter_padding_4">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="145"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_5" introspectable="0">
        <callback name="_clutter_padding_5">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="146"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_6" introspectable="0">
        <callback name="_clutter_padding_6">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="147"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_7" introspectable="0">
        <callback name="_clutter_padding_7">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="148"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding_8" introspectable="0">
        <callback name="_clutter_padding_8">
          <source-position filename="../clutter/clutter/clutter-layout-manager.h"
                           line="149"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="LayoutMeta"
           c:symbol-prefix="layout_meta"
           c:type="ClutterLayoutMeta"
           version="1.2"
           parent="ChildMeta"
           abstract="1"
           glib:type-name="ClutterLayoutMeta"
           glib:get-type="clutter_layout_meta_get_type"
           glib:type-struct="LayoutMetaClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-layout-meta.h"
           line="49">Sub-class of #ClutterChildMeta specific for layout managers

A #ClutterLayoutManager sub-class should create a #ClutterLayoutMeta
instance by overriding the #ClutterLayoutManager::create_child_meta()
virtual function</doc>
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="93"/>
      <method name="get_manager"
              c:identifier="clutter_layout_meta_get_manager"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-meta.c"
             line="130">Retrieves the actor wrapped by @data</doc>
        <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-layout-meta.c"
               line="136">a #ClutterLayoutManager</doc>
          <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-layout-meta.c"
                 line="132">a #ClutterLayoutMeta</doc>
            <type name="LayoutMeta" c:type="ClutterLayoutMeta*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="manager"
                version="1.2"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-meta.c"
             line="108">The #ClutterLayoutManager that created this #ClutterLayoutMeta.</doc>
        <type name="LayoutManager"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="ChildMeta" c:type="ClutterChildMeta"/>
      </field>
      <field name="manager">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-layout-meta.h"
             line="51">the layout manager handling this data</doc>
        <type name="LayoutManager" c:type="ClutterLayoutManager*"/>
      </field>
      <field name="dummy0" readable="0" private="1">
        <type name="gint32" c:type="gint32"/>
      </field>
      <field name="dummy1" readable="0" private="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
    </class>
    <record name="LayoutMetaClass"
            c:type="ClutterLayoutMetaClass"
            glib:is-gtype-struct-for="LayoutMeta"
            version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-layout-meta.h"
           line="75">The #ClutterLayoutMetaClass contains only private data and
should never be accessed directly</doc>
      <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                       line="93"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ChildMetaClass" c:type="ClutterChildMetaClass"/>
      </field>
      <field name="_clutter_padding1" introspectable="0">
        <callback name="_clutter_padding1">
          <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding2" introspectable="0">
        <callback name="_clutter_padding2">
          <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding3" introspectable="0">
        <callback name="_clutter_padding3">
          <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_padding4" introspectable="0">
        <callback name="_clutter_padding4">
          <source-position filename="../clutter/clutter/clutter-layout-meta.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="LongPressState"
                 version="1.8"
                 glib:type-name="ClutterLongPressState"
                 glib:get-type="clutter_long_press_state_get_type"
                 c:type="ClutterLongPressState">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="711">The states for the #ClutterClickAction::long-press signal.</doc>
      <member name="query"
              value="0"
              c:identifier="CLUTTER_LONG_PRESS_QUERY"
              glib:nick="query">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="713">Queries the action whether it supports
  long presses</doc>
      </member>
      <member name="activate"
              value="1"
              c:identifier="CLUTTER_LONG_PRESS_ACTIVATE"
              glib:nick="activate">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="715">Activates the action on a long press</doc>
      </member>
      <member name="cancel"
              value="2"
              c:identifier="CLUTTER_LONG_PRESS_CANCEL"
              glib:nick="cancel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="716">The long press was cancelled</doc>
      </member>
    </enumeration>
    <function-macro name="MACRO_DEPRECATED_FOR"
                    c:identifier="CLUTTER_MACRO_DEPRECATED_FOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="124"/>
      <parameters>
        <parameter name="f">
        </parameter>
      </parameters>
    </function-macro>
    <record name="Margin"
            c:type="ClutterMargin"
            version="1.10"
            glib:type-name="ClutterMargin"
            glib:get-type="clutter_margin_get_type"
            c:symbol-prefix="margin">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="360">A representation of the components of a margin.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="377"/>
      <field name="left" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="362">the margin from the left</doc>
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="right" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="363">the margin from the right</doc>
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="top" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="364">the margin from the top</doc>
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="bottom" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="365">the margin from the bottom</doc>
        <type name="gfloat" c:type="float"/>
      </field>
      <constructor name="new" c:identifier="clutter_margin_new" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="48">Creates a new #ClutterMargin.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="383"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="53">a newly allocated #ClutterMargin. Use
  clutter_margin_free() to free the resources associated with it when
  done.</doc>
          <type name="Margin" c:type="ClutterMargin*"/>
        </return-value>
      </constructor>
      <method name="copy" c:identifier="clutter_margin_copy" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="65">Creates a new #ClutterMargin and copies the contents of @margin_ into
the newly created structure.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="385"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="72">a copy of the #ClutterMargin.</doc>
          <type name="Margin" c:type="ClutterMargin*"/>
        </return-value>
        <parameters>
          <instance-parameter name="margin_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-base-types.c"
                 line="67">a #ClutterMargin</doc>
            <type name="Margin" c:type="const ClutterMargin*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_margin_free" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="85">Frees the resources allocated by clutter_margin_new() and
clutter_margin_copy().</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="387"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="margin_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-base-types.c"
                 line="87">a #ClutterMargin</doc>
            <type name="Margin" c:type="ClutterMargin*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="ModifierType"
              version="0.4"
              glib:type-name="ClutterModifierType"
              glib:get-type="clutter_modifier_type_get_type"
              c:type="ClutterModifierType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="313">Masks applied to a #ClutterEvent by modifiers.

Note that Clutter may add internal values to events which include
reserved values such as %CLUTTER_MODIFIER_RESERVED_13_MASK.  Your code
should preserve and ignore them.  You can use %CLUTTER_MODIFIER_MASK to
remove all reserved values.</doc>
      <member name="shift_mask"
              value="1"
              c:identifier="CLUTTER_SHIFT_MASK"
              glib:nick="shift-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="315">Mask applied by the Shift key</doc>
      </member>
      <member name="lock_mask"
              value="2"
              c:identifier="CLUTTER_LOCK_MASK"
              glib:nick="lock-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="316">Mask applied by the Caps Lock key</doc>
      </member>
      <member name="control_mask"
              value="4"
              c:identifier="CLUTTER_CONTROL_MASK"
              glib:nick="control-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="317">Mask applied by the Control key</doc>
      </member>
      <member name="mod1_mask"
              value="8"
              c:identifier="CLUTTER_MOD1_MASK"
              glib:nick="mod1-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="318">Mask applied by the first Mod key</doc>
      </member>
      <member name="mod2_mask"
              value="16"
              c:identifier="CLUTTER_MOD2_MASK"
              glib:nick="mod2-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="319">Mask applied by the second Mod key</doc>
      </member>
      <member name="mod3_mask"
              value="32"
              c:identifier="CLUTTER_MOD3_MASK"
              glib:nick="mod3-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="320">Mask applied by the third Mod key</doc>
      </member>
      <member name="mod4_mask"
              value="64"
              c:identifier="CLUTTER_MOD4_MASK"
              glib:nick="mod4-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="321">Mask applied by the fourth Mod key</doc>
      </member>
      <member name="mod5_mask"
              value="128"
              c:identifier="CLUTTER_MOD5_MASK"
              glib:nick="mod5-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="322">Mask applied by the fifth Mod key</doc>
      </member>
      <member name="button1_mask"
              value="256"
              c:identifier="CLUTTER_BUTTON1_MASK"
              glib:nick="button1-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="323">Mask applied by the first pointer button</doc>
      </member>
      <member name="button2_mask"
              value="512"
              c:identifier="CLUTTER_BUTTON2_MASK"
              glib:nick="button2-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="324">Mask applied by the second pointer button</doc>
      </member>
      <member name="button3_mask"
              value="1024"
              c:identifier="CLUTTER_BUTTON3_MASK"
              glib:nick="button3-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="325">Mask applied by the third pointer button</doc>
      </member>
      <member name="button4_mask"
              value="2048"
              c:identifier="CLUTTER_BUTTON4_MASK"
              glib:nick="button4-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="326">Mask applied by the fourth pointer button</doc>
      </member>
      <member name="button5_mask"
              value="4096"
              c:identifier="CLUTTER_BUTTON5_MASK"
              glib:nick="button5-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="327">Mask applied by the fifth pointer button</doc>
      </member>
      <member name="modifier_reserved_13_mask"
              value="8192"
              c:identifier="CLUTTER_MODIFIER_RESERVED_13_MASK"
              glib:nick="modifier-reserved-13-mask">
      </member>
      <member name="modifier_reserved_14_mask"
              value="16384"
              c:identifier="CLUTTER_MODIFIER_RESERVED_14_MASK"
              glib:nick="modifier-reserved-14-mask">
      </member>
      <member name="modifier_reserved_15_mask"
              value="32768"
              c:identifier="CLUTTER_MODIFIER_RESERVED_15_MASK"
              glib:nick="modifier-reserved-15-mask">
      </member>
      <member name="modifier_reserved_16_mask"
              value="65536"
              c:identifier="CLUTTER_MODIFIER_RESERVED_16_MASK"
              glib:nick="modifier-reserved-16-mask">
      </member>
      <member name="modifier_reserved_17_mask"
              value="131072"
              c:identifier="CLUTTER_MODIFIER_RESERVED_17_MASK"
              glib:nick="modifier-reserved-17-mask">
      </member>
      <member name="modifier_reserved_18_mask"
              value="262144"
              c:identifier="CLUTTER_MODIFIER_RESERVED_18_MASK"
              glib:nick="modifier-reserved-18-mask">
      </member>
      <member name="modifier_reserved_19_mask"
              value="524288"
              c:identifier="CLUTTER_MODIFIER_RESERVED_19_MASK"
              glib:nick="modifier-reserved-19-mask">
      </member>
      <member name="modifier_reserved_20_mask"
              value="1048576"
              c:identifier="CLUTTER_MODIFIER_RESERVED_20_MASK"
              glib:nick="modifier-reserved-20-mask">
      </member>
      <member name="modifier_reserved_21_mask"
              value="2097152"
              c:identifier="CLUTTER_MODIFIER_RESERVED_21_MASK"
              glib:nick="modifier-reserved-21-mask">
      </member>
      <member name="modifier_reserved_22_mask"
              value="4194304"
              c:identifier="CLUTTER_MODIFIER_RESERVED_22_MASK"
              glib:nick="modifier-reserved-22-mask">
      </member>
      <member name="modifier_reserved_23_mask"
              value="8388608"
              c:identifier="CLUTTER_MODIFIER_RESERVED_23_MASK"
              glib:nick="modifier-reserved-23-mask">
      </member>
      <member name="modifier_reserved_24_mask"
              value="16777216"
              c:identifier="CLUTTER_MODIFIER_RESERVED_24_MASK"
              glib:nick="modifier-reserved-24-mask">
      </member>
      <member name="modifier_reserved_25_mask"
              value="33554432"
              c:identifier="CLUTTER_MODIFIER_RESERVED_25_MASK"
              glib:nick="modifier-reserved-25-mask">
      </member>
      <member name="super_mask"
              value="67108864"
              c:identifier="CLUTTER_SUPER_MASK"
              glib:nick="super-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="328">Mask applied by the Super key</doc>
      </member>
      <member name="hyper_mask"
              value="134217728"
              c:identifier="CLUTTER_HYPER_MASK"
              glib:nick="hyper-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="329">Mask applied by the Hyper key</doc>
      </member>
      <member name="meta_mask"
              value="268435456"
              c:identifier="CLUTTER_META_MASK"
              glib:nick="meta-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="330">Mask applied by the Meta key</doc>
      </member>
      <member name="modifier_reserved_29_mask"
              value="536870912"
              c:identifier="CLUTTER_MODIFIER_RESERVED_29_MASK"
              glib:nick="modifier-reserved-29-mask">
      </member>
      <member name="release_mask"
              value="1073741824"
              c:identifier="CLUTTER_RELEASE_MASK"
              glib:nick="release-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="331">Mask applied during release</doc>
      </member>
      <member name="modifier_mask"
              value="1543512063"
              c:identifier="CLUTTER_MODIFIER_MASK"
              glib:nick="modifier-mask">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="332">A mask covering all modifier types</doc>
      </member>
    </bitfield>
    <record name="MotionEvent" c:type="ClutterMotionEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="277">Event for the pointer motion</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="308"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="279">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="280">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="281">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="282">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="283">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="284">event X coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="285">event Y coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="modifier_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="286">button modifiers</doc>
        <type name="ModifierType" c:type="ClutterModifierType"/>
      </field>
      <field name="axes" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="287">reserved for future use</doc>
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="288">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
    </record>
    <constant name="NO_FPU"
              value="0"
              c:type="CLUTTER_NO_FPU"
              deprecated="1"
              deprecated-version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-macros.h"
           line="71">Set to 1 if Clutter was built without FPU (i.e fixed math), 0 otherwise</doc>
      <doc-deprecated xml:space="preserve">This macro is no longer defined (identical code is used
 regardless the presence of FPU).</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="79"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="OFFSCREEN_EFFECT"
                    c:identifier="CLUTTER_OFFSCREEN_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="38"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OFFSCREEN_EFFECT_CLASS"
                    c:identifier="CLUTTER_OFFSCREEN_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="40"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="OFFSCREEN_EFFECT_GET_CLASS"
                    c:identifier="CLUTTER_OFFSCREEN_EFFECT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="42"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <class name="OffscreenEffect"
           c:symbol-prefix="offscreen_effect"
           c:type="ClutterOffscreenEffect"
           version="1.4"
           parent="Effect"
           abstract="1"
           glib:type-name="ClutterOffscreenEffect"
           glib:get-type="clutter_offscreen_effect_get_type"
           glib:type-struct="OffscreenEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-offscreen-effect.h"
           line="48">The #ClutterOffscreenEffect structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="93"/>
      <virtual-method name="create_texture"
                      invoker="create_texture"
                      version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="625">Calls the create_texture() virtual function of the @effect</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="633">a handle to a Cogl texture, or
  %NULL. The returned handle has its reference
  count increased.</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="627">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="628">the minimum width of the target texture</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="629">the minimum height of the target texture</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint_target" invoker="paint_target" version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="606">Calls the paint_target() virtual function of the @effect</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="608">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="609">a #ClutterPaintContext</doc>
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_texture"
              c:identifier="clutter_offscreen_effect_create_texture"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="625">Calls the create_texture() virtual function of the @effect</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="108"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="633">a handle to a Cogl texture, or
  %NULL. The returned handle has its reference
  count increased.</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="627">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="628">the minimum width of the target texture</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="629">the minimum height of the target texture</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_target"
              c:identifier="clutter_offscreen_effect_get_target"
              version="1.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="581">Retrieves the material used as a render target for the offscreen
buffer created by @effect

You should only use the returned #CoglMaterial when painting. The
returned material might change between different frames.</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="591">a #CoglMaterial or %NULL. The
  returned material is owned by Clutter and it should not be
  modified or freed</doc>
          <type name="Cogl.Material" c:type="CoglMaterial*"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="583">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_target_rect"
              c:identifier="clutter_offscreen_effect_get_target_rect"
              version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="695">Retrieves the origin and size of the offscreen buffer used by @effect to
paint the actor to which it has been applied.

This function should only be called by #ClutterOffscreenEffect
implementations, from within the #ClutterOffscreenEffectClass.paint_target()
virtual function.</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="707">%TRUE if the offscreen buffer has a valid rectangle,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="697">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="698">return location for the target area</doc>
            <type name="Graphene.Rect" c:type="graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_target_size"
              c:identifier="clutter_offscreen_effect_get_target_size"
              version="1.8"
              deprecated="1"
              deprecated-version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="652">Retrieves the size of the offscreen buffer used by @effect to
paint the actor to which it has been applied.

This function should only be called by #ClutterOffscreenEffect
implementations, from within the #ClutterOffscreenEffectClass.paint_target()
virtual function.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_offscreen_effect_get_target_rect() instead</doc-deprecated>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="665">%TRUE if the offscreen buffer has a valid size,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="654">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="655">return location for the target width, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="656">return location for the target height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_texture"
              c:identifier="clutter_offscreen_effect_get_texture"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="552">Retrieves the texture used as a render target for the offscreen
buffer created by @effect

You should only use the returned texture when painting. The texture
may change after ClutterEffect::pre_paint is called so the effect
implementation should update any references to the texture after
chaining-up to the parent's pre_paint implementation. This can be
used instead of clutter_offscreen_effect_get_target() when the
effect subclass wants to paint using its own material.</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-offscreen-effect.c"
               line="566">a #CoglHandle or %NULL. The
  returned texture is owned by Clutter and it should not be
  modified or freed</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="554">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="paint_target"
              c:identifier="clutter_offscreen_effect_paint_target"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-offscreen-effect.c"
             line="606">Calls the paint_target() virtual function of the @effect</doc>
        <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="608">a #ClutterOffscreenEffect</doc>
            <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="609">a #ClutterPaintContext</doc>
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="Effect" c:type="ClutterEffect"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="OffscreenEffectPrivate"
              c:type="ClutterOffscreenEffectPrivate*"/>
      </field>
    </class>
    <record name="OffscreenEffectClass"
            c:type="ClutterOffscreenEffectClass"
            glib:is-gtype-struct-for="OffscreenEffect"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-offscreen-effect.h"
           line="64">The #ClutterOffscreenEffectClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="93"/>
      <field name="parent_class" readable="0" private="1">
        <type name="EffectClass" c:type="ClutterEffectClass"/>
      </field>
      <field name="create_texture">
        <callback name="create_texture">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="79"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-offscreen-effect.c"
                 line="633">a handle to a Cogl texture, or
  %NULL. The returned handle has its reference
  count increased.</doc>
            <type name="Cogl.Handle" c:type="CoglHandle"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-offscreen-effect.c"
                   line="627">a #ClutterOffscreenEffect</doc>
              <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-offscreen-effect.c"
                   line="628">the minimum width of the target texture</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-offscreen-effect.c"
                   line="629">the minimum height of the target texture</doc>
              <type name="gfloat" c:type="gfloat"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint_target">
        <callback name="paint_target">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-offscreen-effect.c"
                   line="608">a #ClutterOffscreenEffect</doc>
              <type name="OffscreenEffect" c:type="ClutterOffscreenEffect*"/>
            </parameter>
            <parameter name="paint_context" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-offscreen-effect.c"
                   line="609">a #ClutterPaintContext</doc>
              <type name="PaintContext" c:type="ClutterPaintContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_offscreen1" introspectable="0">
        <callback name="_clutter_offscreen1">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen2" introspectable="0">
        <callback name="_clutter_offscreen2">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen3" introspectable="0">
        <callback name="_clutter_offscreen3">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen4" introspectable="0">
        <callback name="_clutter_offscreen4">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen5" introspectable="0">
        <callback name="_clutter_offscreen5">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen6" introspectable="0">
        <callback name="_clutter_offscreen6">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_offscreen7" introspectable="0">
        <callback name="_clutter_offscreen7">
          <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OffscreenEffectPrivate"
            c:type="ClutterOffscreenEffectPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-offscreen-effect.h"
                       line="45"/>
    </record>
    <bitfield name="OffscreenRedirect"
              version="1.8"
              glib:type-name="ClutterOffscreenRedirect"
              glib:get-type="clutter_offscreen_redirect_get_type"
              c:type="ClutterOffscreenRedirect">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="534">Possible flags to pass to clutter_actor_set_offscreen_redirect().</doc>
      <member name="automatic_for_opacity"
              value="1"
              c:identifier="CLUTTER_OFFSCREEN_REDIRECT_AUTOMATIC_FOR_OPACITY"
              glib:nick="automatic-for-opacity">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="536">Only redirect
  the actor if it is semi-transparent and its has_overlaps()
  virtual returns %TRUE.</doc>
      </member>
      <member name="always"
              value="2"
              c:identifier="CLUTTER_OFFSCREEN_REDIRECT_ALWAYS"
              glib:nick="always">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="539">Always redirect the actor to an
  offscreen buffer even if it is fully opaque.</doc>
      </member>
      <member name="on_idle"
              value="4"
              c:identifier="CLUTTER_OFFSCREEN_REDIRECT_ON_IDLE"
              glib:nick="on-idle">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="541">Only redirect the actor if it is the
  most efficient thing to do based on its recent repaint behaviour. That
  means when its contents are changing less frequently than it's being used
  on stage.</doc>
      </member>
    </bitfield>
    <enumeration name="Orientation"
                 version="1.12"
                 glib:type-name="ClutterOrientation"
                 glib:get-type="clutter_orientation_get_type"
                 c:type="ClutterOrientation">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1420">Represents the orientation of actors or layout managers.</doc>
      <member name="horizontal"
              value="0"
              c:identifier="CLUTTER_ORIENTATION_HORIZONTAL"
              glib:nick="horizontal">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1422">An horizontal orientation</doc>
      </member>
      <member name="vertical"
              value="1"
              c:identifier="CLUTTER_ORIENTATION_VERTICAL"
              glib:nick="vertical">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1423">A vertical orientation</doc>
      </member>
    </enumeration>
    <function-macro name="PAGE_TURN_EFFECT"
                    c:identifier="CLUTTER_PAGE_TURN_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAINT_NODE"
                    c:identifier="CLUTTER_PAINT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAN_ACTION"
                    c:identifier="CLUTTER_PAN_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAN_ACTION_CLASS"
                    c:identifier="CLUTTER_PAN_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="47"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PAN_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_PAN_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="49"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PARAM_SPEC_COLOR"
                    c:identifier="CLUTTER_PARAM_SPEC_COLOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="147"/>
      <parameters>
        <parameter name="pspec">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PARAM_SPEC_UNITS"
                    c:identifier="CLUTTER_PARAM_SPEC_UNITS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="124"/>
      <parameters>
        <parameter name="pspec">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH" c:identifier="CLUTTER_PATH" introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path.h" line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_CLASS"
                    c:identifier="CLUTTER_PATH_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path.h" line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_CONSTRAINT"
                    c:identifier="CLUTTER_PATH_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PATH_GET_CLASS"
                    c:identifier="CLUTTER_PATH_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-path.h" line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PATH_RELATIVE" value="32" c:type="CLUTTER_PATH_RELATIVE">
      <source-position filename="../clutter/clutter/clutter-enums.h"
                       line="1281"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="PIPELINE_NODE"
                    c:identifier="CLUTTER_PIPELINE_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="104"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="PRIORITY_REDRAW"
              value="50"
              c:type="CLUTTER_PRIORITY_REDRAW"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.h"
           line="107">Priority of the redraws. This is chosen to be lower than the GTK+
redraw and resize priorities, because in application with both
GTK+ and Clutter it's more likely that the Clutter part will be
continually animating (and thus able to starve GTK+) than
vice-versa.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="118"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <function-macro name="PRIVATE_FIELD"
                    c:identifier="CLUTTER_PRIVATE_FIELD"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="88"/>
      <parameters>
        <parameter name="x">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROPERTY_TRANSITION"
                    c:identifier="CLUTTER_PROPERTY_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROPERTY_TRANSITION_CLASS"
                    c:identifier="CLUTTER_PROPERTY_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PROPERTY_TRANSITION_GET_CLASS"
                    c:identifier="CLUTTER_PROPERTY_TRANSITION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <record name="PadButtonEvent" c:type="ClutterPadButtonEvent">
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="514"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="button" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="group" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="device" writable="1">
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
      <field name="mode" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <record name="PadRingEvent" c:type="ClutterPadRingEvent">
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="546"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="device" writable="1">
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
      <field name="ring_source" writable="1">
        <type name="InputDevicePadSource"
              c:type="ClutterInputDevicePadSource"/>
      </field>
      <field name="ring_number" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="group" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="angle" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="mode" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <record name="PadStripEvent" c:type="ClutterPadStripEvent">
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="530"/>
      <field name="type" writable="1">
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="device" writable="1">
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
      <field name="strip_source" writable="1">
        <type name="InputDevicePadSource"
              c:type="ClutterInputDevicePadSource"/>
      </field>
      <field name="strip_number" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="group" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="value" writable="1">
        <type name="gdouble" c:type="gdouble"/>
      </field>
      <field name="mode" writable="1">
        <type name="guint32" c:type="guint32"/>
      </field>
    </record>
    <class name="PageTurnEffect"
           c:symbol-prefix="page_turn_effect"
           c:type="ClutterPageTurnEffect"
           version="1.4"
           parent="DeformEffect"
           glib:type-name="ClutterPageTurnEffect"
           glib:get-type="clutter_page_turn_effect_get_type"
           glib:type-struct="PageTurnEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-page-turn-effect.h"
           line="43">#ClutterPageTurnEffect is an opaque structure
whose members can only be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                       line="52"/>
      <constructor name="new"
                   c:identifier="clutter_page_turn_effect_new"
                   version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="274">Creates a new #ClutterPageTurnEffect instance with the given parameters</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-page-turn-effect.c"
               line="282">the newly created #ClutterPageTurnEffect</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
        <parameters>
          <parameter name="period" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="276">the period of the page curl, between 0.0 and 1.0</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="277">the angle of the page curl, between 0.0 and 360.0</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="radius" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="278">the radius of the page curl, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_angle"
              c:identifier="clutter_page_turn_effect_get_angle"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="366">Retrieves the value set using clutter_page_turn_effect_get_angle()</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-page-turn-effect.c"
               line="372">the angle of the page curling</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="368">a #ClutterPageTurnEffect:</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_period"
              c:identifier="clutter_page_turn_effect_get_period"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="325">Retrieves the value set using clutter_page_turn_effect_get_period()</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-page-turn-effect.c"
               line="331">the period of the page curling</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="327">a #ClutterPageTurnEffect</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_radius"
              c:identifier="clutter_page_turn_effect_get_radius"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="406">Retrieves the value set using clutter_page_turn_effect_set_radius()</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-page-turn-effect.c"
               line="412">the radius of the page curling</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="408">a #ClutterPageTurnEffect</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_angle"
              c:identifier="clutter_page_turn_effect_set_angle"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="343">Sets the angle of the page curling, in degrees</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="345">#ClutterPageTurnEffect</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="346">the angle of the page curl, in degrees</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_period"
              c:identifier="clutter_page_turn_effect_set_period"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="301">Sets the period of the page curling, between 0.0 (no curling)
and 1.0 (fully curled)</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="303">a #ClutterPageTurnEffect</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
          <parameter name="period" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="304">the period of the page curl, between 0.0 and 1.0</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_radius"
              c:identifier="clutter_page_turn_effect_set_radius"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="384">Sets the radius of the page curling</doc>
        <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="386">a #ClutterPageTurnEffect:</doc>
            <type name="PageTurnEffect" c:type="ClutterPageTurnEffect*"/>
          </instance-parameter>
          <parameter name="radius" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-page-turn-effect.c"
                 line="387">the radius of the page curling, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <property name="angle"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="231">The angle of the page rotation, in degrees, between 0.0 and 360.0</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="period"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="214">The period of the page turn, between 0.0 (no curling) and
1.0 (fully curled)</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="radius"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-page-turn-effect.c"
             line="247">The radius of the page curl, in pixels</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="PageTurnEffectClass"
            c:type="ClutterPageTurnEffectClass"
            disguised="1"
            glib:is-gtype-struct-for="PageTurnEffect">
      <source-position filename="../clutter/clutter/clutter-page-turn-effect.h"
                       line="52"/>
    </record>
    <record name="PaintContext"
            c:type="ClutterPaintContext"
            glib:type-name="ClutterPaintContext"
            glib:get-type="clutter_paint_context_get_type"
            c:symbol-prefix="paint_context">
      <source-position filename="../clutter/clutter/clutter-paint-context.h"
                       line="30"/>
      <constructor name="new_for_framebuffer"
                   c:identifier="clutter_paint_context_new_for_framebuffer"
                   introspectable="0">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="PaintContext" c:type="ClutterPaintContext*"/>
        </return-value>
        <parameters>
          <parameter name="framebuffer" transfer-ownership="none">
            <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="destroy" c:identifier="clutter_paint_context_destroy">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_framebuffer"
              c:identifier="clutter_paint_context_get_framebuffer">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-context.c"
               line="139">The #CoglFramebuffer used for drawing</doc>
          <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-context.c"
                 line="137">The #ClutterPaintContext</doc>
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_redraw_clip"
              c:identifier="clutter_paint_context_get_redraw_clip">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <type name="cairo.Region" c:type="const cairo_region_t*"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stage_view"
              c:identifier="clutter_paint_context_get_stage_view"
              introspectable="0">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="53"/>
        <return-value>
          <type name="StageView" c:type="ClutterStageView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pop_framebuffer"
              c:identifier="clutter_paint_context_pop_framebuffer">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="push_framebuffer"
              c:identifier="clutter_paint_context_push_framebuffer">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
          <parameter name="framebuffer" transfer-ownership="none">
            <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="clutter_paint_context_ref">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="41"/>
        <return-value transfer-ownership="full">
          <type name="PaintContext" c:type="ClutterPaintContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="clutter_paint_context_unref">
        <source-position filename="../clutter/clutter/clutter-paint-context.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <class name="PaintNode"
           c:symbol-prefix="paint_node"
           c:type="ClutterPaintNode"
           version="1.10"
           abstract="1"
           glib:type-name="ClutterPaintNode"
           glib:get-type="clutter_paint_node_get_type"
           glib:type-struct="PaintNodeClass"
           glib:fundamental="1"
           glib:ref-func="clutter_paint_node_ref"
           glib:unref-func="clutter_paint_node_unref"
           glib:set-value-func="clutter_value_set_paint_node"
           glib:get-value-func="clutter_value_get_paint_node">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="44">The `ClutterPaintNode` structure contains only private data
and it should be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="42"/>
      <method name="add_child"
              c:identifier="clutter_paint_node_add_child"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="368">Adds @child to the list of children of @node.

This function will acquire a reference on @child.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="370">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="371">the child #ClutterPaintNode to add</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_multitexture_rectangle"
              c:identifier="clutter_paint_node_add_multitexture_rectangle">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="927">Adds a rectangle region to the @node, with multitexture coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="929">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="930">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="text_coords" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="931">array of multitexture values</doc>
            <type name="gfloat" c:type="const float*"/>
          </parameter>
          <parameter name="text_coords_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="932">number of items of @text_coords</doc>
            <type name="guint" c:type="unsigned int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_path"
              c:identifier="clutter_paint_node_add_path"
              version="1.10"
              introspectable="0"
              stability="Unstable">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="953">Adds a region described as a path to the @node.

This function acquires a reference on the passed @path, so it
is safe to call cogl_object_unref() when it returns.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="955">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="956">a Cogl path</doc>
            <type c:type="CoglPath*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_primitive"
              c:identifier="clutter_paint_node_add_primitive"
              version="1.10"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="981">Adds a region described by a Cogl primitive to the @node.

This function acquires a reference on @primitive, so it is safe
to call cogl_object_unref() when it returns.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="983">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="primitive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="984">a Cogl primitive</doc>
            <type c:type="CoglPrimitive*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_rectangle"
              c:identifier="clutter_paint_node_add_rectangle"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="869">Adds a rectangle region to the @node, as described by the
passed @rect.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="871">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="872">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_texture_rectangle"
              c:identifier="clutter_paint_node_add_texture_rectangle"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="894">Adds a rectangle region to the @node, with texture coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="896">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="897">a #ClutterActorBox</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
          <parameter name="x_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="898">the left X coordinate of the texture</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="y_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="899">the top Y coordinate of the texture</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="x_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="900">the right X coordinate of the texture</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="y_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="901">the bottom Y coordinate of the texture</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_framebuffer"
              c:identifier="clutter_paint_node_get_framebuffer">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="1212">Retrieves the #CoglFramebuffer that @node will draw
into, if it the root node has a custom framebuffer set.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="1219">a #CoglFramebuffer or %NULL if no custom one is
set.</doc>
          <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="1214">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="paint" c:identifier="clutter_paint_node_paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="1008">Paints the @node using the class implementation, traversing
its children, if any.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="1010">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="paint_context" transfer-ownership="none">
            <type name="PaintContext" c:type="ClutterPaintContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="clutter_paint_node_ref" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="327">Acquires a reference on @node.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="48"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="333">the #ClutterPaintNode</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="329">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_name"
              c:identifier="clutter_paint_node_set_name"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="289">Sets a user-readable @name for @node.

The @name will be used for debugging purposes.

The @node will intern @name using g_intern_string(). If you have access to a
static string, use clutter_paint_node_set_static_name() instead.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="291">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="292">a string annotating the @node</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_static_name"
              c:identifier="clutter_paint_node_set_static_name"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="312">Like clutter_paint_node_set_name() but uses a static or interned string
containing the name.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unref"
              c:identifier="clutter_paint_node_unref"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="347">Releases a reference on @node.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-node.h"
                         line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-node.c"
                 line="349">a #ClutterPaintNode</doc>
            <type name="PaintNode" c:type="ClutterPaintNode*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="PaintNodeClass"
            c:type="ClutterPaintNodeClass"
            glib:is-gtype-struct-for="PaintNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="53">The `ClutterPaintNodeClass` structure contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="42"/>
    </record>
    <record name="PaintNodePrivate"
            c:type="ClutterPaintNodePrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="41"/>
    </record>
    <record name="PaintVolume"
            c:type="ClutterPaintVolume"
            version="1.4"
            glib:type-name="ClutterPaintVolume"
            glib:get-type="clutter_paint_volume_get_type"
            c:symbol-prefix="paint_volume">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="109">#ClutterPaintVolume is an opaque structure
whose members cannot be directly accessed.

A #ClutterPaintVolume represents an
a bounding volume whose internal representation isn't defined but
can be set and queried in terms of an axis aligned bounding box.

A #ClutterPaintVolume for a #ClutterActor
is defined to be relative from the current actor modelview matrix.

Other internal representation and methods for describing the
bounding volume may be added in the future.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="127"/>
      <method name="copy"
              c:identifier="clutter_paint_volume_copy"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="119">Copies @pv into a new #ClutterPaintVolume</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="324"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-volume.c"
               line="125">a newly allocated copy of a #ClutterPaintVolume</doc>
          <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="121">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free"
              c:identifier="clutter_paint_volume_free"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="151">Frees the resources allocated by @pv</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="326"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="153">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_depth"
              c:identifier="clutter_paint_volume_get_depth"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="466">Retrieves the depth of the volume's, axis aligned, bounding box.

In other words; this takes into account what actor's coordinate
space @pv belongs too and conceptually fits an axis aligned box
around the volume. It returns the size of that bounding box as
measured along the z-axis.

If, for example, clutter_actor_get_transformed_paint_volume()
is used to transform a 2D child actor that is 100px wide, 100px
high and 0px deep into container coordinates then the depth might
not simply be 0px if the child actor has a 3D rotation applied to
it.

Remember: if clutter_actor_get_transformed_paint_volume() is
used then the transformed volume will be defined relative to the
container actor and in container coordinates a 2D child actor
can have a 3D bounding volume.

There are no accuracy guarantees for the reported depth,
except that it must always be greater than, or equal to, the actor's
depth. This is because actors may report simple, loose fitting paint
volumes for efficiency.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="348"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-volume.c"
               line="493">the depth, in units of @pv's local coordinate system.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="468">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_height"
              c:identifier="clutter_paint_volume_get_height"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="373">Retrieves the height of the volume's, axis aligned, bounding box.

In other words; this takes into account what actor's coordinate
space @pv belongs too and conceptually fits an axis aligned box
around the volume. It returns the size of that bounding box as
measured along the y-axis.

If, for example, clutter_actor_get_transformed_paint_volume()
is used to transform a 2D child actor that is 100px wide, 100px
high and 0px deep into container coordinates then the height might
not simply be 100px if the child actor has a 3D rotation applied to
it.

Remember: if clutter_actor_get_transformed_paint_volume() is
used then a transformed child volume will be defined relative to the
ancestor container actor and so a 2D child actor
can have a 3D bounding volume.

There are no accuracy guarantees for the reported height,
except that it must always be greater than, or equal to, the actor's
height. This is because actors may report simple, loose fitting paint
volumes for efficiency.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="343"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-volume.c"
               line="400">the height, in units of @pv's local coordinate system.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="375">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_origin"
              c:identifier="clutter_paint_volume_get_origin"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="210">Retrieves the origin of the #ClutterPaintVolume.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="332"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="212">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="vertex"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="213">the return location for a #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_width"
              c:identifier="clutter_paint_volume_get_width"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="281">Retrieves the width of the volume's, axis aligned, bounding box.

In other words; this takes into account what actor's coordinate
space @pv belongs too and conceptually fits an axis aligned box
around the volume. It returns the size of that bounding box as
measured along the x-axis.

If, for example, clutter_actor_get_transformed_paint_volume()
is used to transform a 2D child actor that is 100px wide, 100px
high and 0px deep into container coordinates then the width might
not simply be 100px if the child actor has a 3D rotation applied to
it.

Remember: if clutter_actor_get_transformed_paint_volume() is
used then a transformed child volume will be defined relative to the
ancestor container actor and so a 2D child actor can have a 3D
bounding volume.

There are no accuracy guarantees for the reported width,
except that it must always be greater than, or equal to, the
actor's width. This is because actors may report simple, loose
fitting paint volumes for efficiency.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="338"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-volume.c"
               line="308">the width, in units of @pv's local coordinate system.</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="283">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_depth"
              c:identifier="clutter_paint_volume_set_depth"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="425">Sets the depth of the paint volume. The depth is measured along
the z axis in the actor coordinates that @pv is associated with.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="345"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="427">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="depth" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="428">the depth of the paint volume, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_from_allocation"
              c:identifier="clutter_paint_volume_set_from_allocation"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="1022">Sets the #ClutterPaintVolume from the allocation of @actor.

This function should be used when overriding the
#ClutterActorClass.get_paint_volume() by #ClutterActor sub-classes
that do not paint outside their allocation.

A typical example is:

|[
static gboolean
my_actor_get_paint_volume (ClutterActor       *self,
                           ClutterPaintVolume *volume)
{
  return clutter_paint_volume_set_from_allocation (volume, self);
}
]|</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="357"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-volume.c"
               line="1044">%TRUE if the paint volume was successfully set, and %FALSE
  otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="1024">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="1025">a #ClutterActor</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_height"
              c:identifier="clutter_paint_volume_set_height"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="333">Sets the height of the paint volume. The height is measured along
the y axis in the actor coordinates that @pv is associated with.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="340"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="335">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="336">the height of the paint volume, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_origin"
              c:identifier="clutter_paint_volume_set_origin"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="170">Sets the origin of the paint volume.

The origin is defined as the X, Y and Z coordinates of the top-left
corner of an actor's paint volume, in actor coordinates.

The default is origin is assumed at: (0, 0, 0)</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="329"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="172">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="origin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="173">a #graphene_point3d_t</doc>
            <type name="Graphene.Point3D" c:type="const graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width"
              c:identifier="clutter_paint_volume_set_width"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="240">Sets the width of the paint volume. The width is measured along
the x axis in the actor coordinates that @pv is associated with.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="335"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="242">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="243">the width of the paint volume, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="union"
              c:identifier="clutter_paint_volume_union"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="518">Updates the geometry of @pv to encompass @pv and @another_pv.

There are no guarantees about how precisely the two volumes
will be unioned.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="350"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="520">The first #ClutterPaintVolume and destination for resulting
     union</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="another_pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="522">A second #ClutterPaintVolume to union with @pv</doc>
            <type name="PaintVolume" c:type="const ClutterPaintVolume*"/>
          </parameter>
        </parameters>
      </method>
      <method name="union_box"
              c:identifier="clutter_paint_volume_union_box"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-volume.c"
             line="645">Unions the 2D region represented by @box to a #ClutterPaintVolume.

This function is similar to clutter_paint_volume_union(), but it is
specific for 2D regions.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="353"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pv" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="647">a #ClutterPaintVolume</doc>
            <type name="PaintVolume" c:type="ClutterPaintVolume*"/>
          </instance-parameter>
          <parameter name="box" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-volume.c"
                 line="648">a #ClutterActorBox to union to @pv</doc>
            <type name="ActorBox" c:type="const ClutterActorBox*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="PanAction"
           c:symbol-prefix="pan_action"
           c:type="ClutterPanAction"
           version="1.12"
           parent="GestureAction"
           glib:type-name="ClutterPanAction"
           glib:get-type="clutter_pan_action_get_type"
           glib:type-struct="PanActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-pan-action.h"
           line="55">The #ClutterPanAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="100"/>
      <constructor name="new"
                   c:identifier="clutter_pan_action_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="596">Creates a new #ClutterPanAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="601">the newly created #ClutterPanAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="pan">
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="is_interpolated" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="pan_stopped">
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_acceleration_factor"
              c:identifier="clutter_pan_action_get_acceleration_factor"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="771">Retrieves the initial acceleration factor for interpolated ::pan events.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="126"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="777">The initial acceleration factor for interpolated events.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="773">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_constrained_motion_delta"
              c:identifier="clutter_pan_action_get_constrained_motion_delta"
              version="1.24">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="854">Retrieves the delta, in stage space, dependent on the current state
of the #ClutterPanAction, and respecting the constraint specified by the
#ClutterPanAction:pan-axis property.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="866">the distance since last motion event</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="856">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="857">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="delta_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="859">return location for the X delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="delta_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="860">return location for the Y delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_deceleration"
              c:identifier="clutter_pan_action_get_deceleration"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="733">Retrieves the deceleration rate of interpolated ::pan events.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="739">The deceleration rate of the interpolated events.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="735">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate"
              c:identifier="clutter_pan_action_get_interpolate"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="689">Checks if the action should emit ::pan events even after releasing
the pointer during a panning gesture, to emulate some kind of
kinetic inertia.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="697">%TRUE if interpolated events emission is active.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="691">a #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolated_coords"
              c:identifier="clutter_pan_action_get_interpolated_coords"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="788">Retrieves the coordinates, in stage space, of the latest interpolated
event, analogous to clutter_gesture_action_get_motion_coords().</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="790">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="interpolated_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="791">return location for the latest
  interpolated event's X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="interpolated_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="793">return location for the latest
  interpolated event's Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolated_delta"
              c:identifier="clutter_pan_action_get_interpolated_delta"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="819">Retrieves the delta, in stage space, since the latest interpolated
event, analogous to clutter_gesture_action_get_motion_delta().</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="830">the distance since the latest interpolated event</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="821">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="delta_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="822">return location for the X delta since
  the latest interpolated event</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="delta_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="824">return location for the Y delta since
  the latest interpolated event</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_coords"
              c:identifier="clutter_pan_action_get_motion_coords"
              version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="967">Retrieves the coordinates, in stage space, dependent on the current state
of the #ClutterPanAction. If it is inactive, both fields will be
set to 0. If it is panning by user action, the values will be equivalent
to those returned by clutter_gesture_action_get_motion_coords().
If it is interpolating with some form of kinetic scrolling, the values
will be equivalent to those returned by
clutter_pan_action_get_interpolated_coords(). This is a convenience
method designed to be used in replacement "pan" signal handlers.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="969">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="970">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="motion_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="972">return location for the X coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="motion_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="973">return location for the Y coordinate</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_delta"
              c:identifier="clutter_pan_action_get_motion_delta"
              version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="915">Retrieves the delta, in stage space, dependent on the current state
of the #ClutterPanAction. If it is inactive, both fields will be
set to 0. If it is panning by user action, the values will be equivalent
to those returned by clutter_gesture_action_get_motion_delta().
If it is interpolating with some form of kinetic scrolling, the values
will be equivalent to those returned by
clutter_pan_action_get_interpolated_delta(). This is a convenience
method designed to be used in replacement "pan" signal handlers.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="917">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="918">the touch point index, with 0 being the first touch
  point received by the action</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="delta_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="920">return location for the X delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="delta_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="921">return location for the Y delta</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pan_axis"
              c:identifier="clutter_pan_action_get_pan_axis"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="640">Retrieves the axis constraint set by clutter_pan_action_set_pan_axis()</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="646">the axis constraint</doc>
          <type name="PanAxis" c:type="ClutterPanAxis"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="642">a #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_acceleration_factor"
              c:identifier="clutter_pan_action_set_acceleration_factor"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="750">Factor applied to the momentum velocity at the time of releasing the
pointer when generating interpolated ::pan events.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="752">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="753">The acceleration factor</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_deceleration"
              c:identifier="clutter_pan_action_set_deceleration"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="710">Sets the deceleration rate of the interpolated ::pan events generated
after a pan gesture. This is approximately the value that the momentum
at the time of releasing the pointer is divided by every 60th of a second.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="712">A #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="rate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="713">The deceleration rate</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate"
              c:identifier="clutter_pan_action_set_interpolate"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="659">Sets whether the action should emit interpolated ::pan events
after the drag has ended, to emulate the gesture kinetic inertia.</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="661">a #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="should_interpolate" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="662">whether to enable interpolated pan events</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pan_axis"
              c:identifier="clutter_pan_action_set_pan_axis"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="611">Restricts the panning action to a specific axis</doc>
        <source-position filename="../clutter/clutter/clutter-pan-action.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="613">a #ClutterPanAction</doc>
            <type name="PanAction" c:type="ClutterPanAction*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="614">the axis to constraint the panning to</doc>
            <type name="PanAxis" c:type="ClutterPanAxis"/>
          </parameter>
        </parameters>
      </method>
      <property name="acceleration-factor"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="513">The initial acceleration factor

The kinetic momentum measured at the time of releasing the pointer will
be multiplied by the factor specified by this property before being used
to generate interpolated ::pan events.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="deceleration"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="496">The rate at which the interpolated panning will decelerate in

#ClutterPanAction will emit interpolated ::pan events with decreasing
scroll deltas, using the rate specified by this property.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="interpolate"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="482">Whether interpolated events emission is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="pan-axis"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="467">Constraints the panning action to the specified axis</doc>
        <type name="PanAxis"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GestureAction" c:type="ClutterGestureAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PanActionPrivate" c:type="ClutterPanActionPrivate*"/>
      </field>
      <glib:signal name="pan" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="539">The ::pan signal is emitted to keep track of the motion during
a pan gesture. @is_interpolated is set to %TRUE during the
interpolation phase of the pan, after the drag has ended and
the :interpolate property was set to %TRUE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-pan-action.c"
               line="551">%TRUE if the pan should continue, and %FALSE if
  the pan should be cancelled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="542">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="is_interpolated" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="543">if the event is the result of interpolating
                  the motion velocity at the end of the drag</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pan-stopped" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-pan-action.c"
             line="567">The ::pan-stopped signal is emitted at the end of the interpolation
phase of the pan action, only when :interpolate is set to %TRUE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-pan-action.c"
                 line="570">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PanActionClass"
            c:type="ClutterPanActionClass"
            glib:is-gtype-struct-for="PanAction"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-pan-action.h"
           line="71">The #ClutterPanActionClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="100"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GestureActionClass" c:type="ClutterGestureActionClass"/>
      </field>
      <field name="pan">
        <callback name="pan">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="PanAction" c:type="ClutterPanAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="is_interpolated" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pan_stopped">
        <callback name="pan_stopped">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="PanAction" c:type="ClutterPanAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_pan_action1" introspectable="0">
        <callback name="_clutter_pan_action1">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_pan_action2" introspectable="0">
        <callback name="_clutter_pan_action2">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_pan_action3" introspectable="0">
        <callback name="_clutter_pan_action3">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_pan_action4" introspectable="0">
        <callback name="_clutter_pan_action4">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_pan_action5" introspectable="0">
        <callback name="_clutter_pan_action5">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_pan_action6" introspectable="0">
        <callback name="_clutter_pan_action6">
          <source-position filename="../clutter/clutter/clutter-pan-action.h"
                           line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="PanActionPrivate"
            c:type="ClutterPanActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-pan-action.h"
                       line="52"/>
    </record>
    <enumeration name="PanAxis"
                 version="1.12"
                 glib:type-name="ClutterPanAxis"
                 glib:get-type="clutter_pan_axis_get_type"
                 c:type="ClutterPanAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1174">The axis of the constraint that should be applied on the
panning action</doc>
      <member name="axis_none"
              value="0"
              c:identifier="CLUTTER_PAN_AXIS_NONE"
              glib:nick="axis-none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1176">No constraint</doc>
      </member>
      <member name="x_axis"
              value="1"
              c:identifier="CLUTTER_PAN_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1177">Set a constraint on the X axis</doc>
      </member>
      <member name="y_axis"
              value="2"
              c:identifier="CLUTTER_PAN_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1178">Set a constraint on the Y axis</doc>
      </member>
      <member name="axis_auto"
              value="3"
              c:identifier="CLUTTER_PAN_AXIS_AUTO"
              glib:nick="axis-auto">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1179">Constrain panning automatically based on initial
  movement (available since 1.24)</doc>
      </member>
    </enumeration>
    <class name="ParamSpecColor"
           c:symbol-prefix="param_color"
           c:type="ClutterParamSpecColor"
           version="1.0"
           introspectable="0"
           parent="GObject.ParamSpec"
           glib:type-name="ClutterParamSpecColor"
           glib:get-type="clutter_param_color_get_type"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.h"
           line="162">A #GParamSpec subclass for defining properties holding
a #ClutterColor.</doc>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.ParamSpec" c:type="GParamSpec"/>
      </field>
      <field name="default_value">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.h"
             line="164">default color value</doc>
        <type name="Color" c:type="ClutterColor*"/>
      </field>
    </class>
    <class name="ParamSpecUnit"
           c:symbol-prefix="param_units"
           parent="GObject.ParamSpec"
           glib:type-name="ClutterParamSpecUnit"
           glib:get-type="clutter_param_units_get_type"
           glib:fundamental="1">
    </class>
    <record name="ParamSpecUnits"
            c:type="ClutterParamSpecUnits"
            version="1.0"
            introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.h"
           line="139">#GParamSpec subclass for unit based properties.</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="161"/>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.ParamSpec" c:type="GParamSpec"/>
      </field>
      <field name="default_type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.h"
             line="141">default type</doc>
        <type name="UnitType" c:type="ClutterUnitType"/>
      </field>
      <field name="default_value" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.h"
             line="142">default value</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="minimum" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.h"
             line="143">lower boundary</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="maximum" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.h"
             line="144">higher boundary</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <class name="Path"
           c:symbol-prefix="path"
           c:type="ClutterPath"
           version="1.0"
           parent="GObject.InitiallyUnowned"
           glib:type-name="ClutterPath"
           glib:get-type="clutter_path_get_type"
           glib:type-struct="PathClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-path.h"
           line="60">The #ClutterPath struct contains only private data and should
be accessed with the functions below.</doc>
      <source-position filename="../clutter/clutter/clutter-path.h" line="87"/>
      <constructor name="new" c:identifier="clutter_path_new" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="241">Creates a new #ClutterPath instance with no nodes.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="246">the newly created #ClutterPath</doc>
          <type name="Path" c:type="ClutterPath*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_description"
                   c:identifier="clutter_path_new_with_description"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="258">Creates a new #ClutterPath instance with the nodes described in
@desc. See clutter_path_add_string() for details of the format of
the string.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="266">the newly created #ClutterPath</doc>
          <type name="Path" c:type="ClutterPath*"/>
        </return-value>
        <parameters>
          <parameter name="desc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="260">a string describing the path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_cairo_path"
              c:identifier="clutter_path_add_cairo_path"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="757">Add the nodes of the Cairo path to the end of @path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="759">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="cpath" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="760">a Cairo path</doc>
            <type name="cairo.Path" c:type="const cairo_path_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_close"
              c:identifier="clutter_path_add_close"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="495">Adds a %CLUTTER_PATH_CLOSE type node to the path. This creates a
straight line from the last node to the last %CLUTTER_PATH_MOVE_TO
type node.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="129"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="497">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_curve_to"
              c:identifier="clutter_path_add_curve_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="430">Adds a %CLUTTER_PATH_CURVE_TO type node to the path. This causes
the actor to follow a bezier from the last node to (@x_3, @y_3) using
(@x_1, @y_1) and (@x_2,@y_2) as control points.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="113"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="432">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="433">the x coordinate of the first control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="434">the y coordinate of the first control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="435">the x coordinate of the second control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="436">the y coordinate of the second control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x_3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="437">the x coordinate of the third control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="438">the y coordinate of the third control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_line_to"
              c:identifier="clutter_path_add_line_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="388">Adds a %CLUTTER_PATH_LINE_TO type node to the path. This causes the
actor to move to the new coordinates in a straight line.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="390">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="391">the x coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="392">the y coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_move_to"
              c:identifier="clutter_path_add_move_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="345">Adds a %CLUTTER_PATH_MOVE_TO type node to the path. This is usually
used as the first node in a path. It can also be used in the middle
of the path to cause the actor to jump to the new coordinate.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="347">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="348">the x coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="349">the y coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_node"
              c:identifier="clutter_path_add_node"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="732">Adds @node to the end of the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="734">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="735">a #ClutterPathNode</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_rel_curve_to"
              c:identifier="clutter_path_add_rel_curve_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="463">Same as clutter_path_add_curve_to() except the coordinates are
relative to the previous node.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="465">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="466">the x coordinate of the first control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="467">the y coordinate of the first control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="468">the x coordinate of the second control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="469">the y coordinate of the second control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x_3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="470">the x coordinate of the third control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y_3" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="471">the y coordinate of the third control point</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_rel_line_to"
              c:identifier="clutter_path_add_rel_line_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="409">Same as clutter_path_add_line_to() except the coordinates are
relative to the previous node.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="411">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="412">the x coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="413">the y coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_rel_move_to"
              c:identifier="clutter_path_add_rel_move_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="367">Same as clutter_path_add_move_to() except the coordinates are
relative to the previous node.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="369">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="370">the x coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="371">the y coordinate</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_string"
              c:identifier="clutter_path_add_string"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="679">Adds new nodes to the end of the path as described in @str. The
format is a subset of the SVG path format. Each node is represented
by a letter and is followed by zero, one or three pairs of
coordinates. The coordinates can be separated by spaces or a
comma. The types are:

 - `M`: Adds a %CLUTTER_PATH_MOVE_TO node. Takes one pair of coordinates.
 - `L`: Adds a %CLUTTER_PATH_LINE_TO node. Takes one pair of coordinates.
 - `C`: Adds a %CLUTTER_PATH_CURVE_TO node. Takes three pairs of coordinates.
 - `z`: Adds a %CLUTTER_PATH_CLOSE node. No coordinates are needed.

The M, L and C commands can also be specified in lower case which
means the coordinates are relative to the previous node.

For example, to move an actor in a 100 by 100 pixel square centered
on the point 300,300 you could use the following path:

|[
  M 250,350 l 0 -100 L 350,250 l 0 100 z
]|

If the path description isn't valid %FALSE will be returned and no
nodes will be added.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="708">%TRUE is the path description was valid or %FALSE
otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="681">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="682">a string describing the new nodes</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear" c:identifier="clutter_path_clear" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="278">Removes all nodes from the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="280">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="foreach" c:identifier="clutter_path_foreach" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="950">Calls a function for each node of the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="952">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="953">the function to call with each node</doc>
            <type name="PathCallback" c:type="ClutterPathCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="954">user data to pass to the function</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_description"
              c:identifier="clutter_path_get_description"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1120">Returns a newly allocated string describing the path in the same
format as used by clutter_path_add_string().</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="163"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1127">a string description of the path. Free with g_free().</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1122">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="clutter_path_get_length"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1426">Retrieves an approximation of the total length of the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1432">the length of the path.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1428">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_nodes"
              c:identifier="clutter_path_get_n_nodes"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="872">Retrieves the number of nodes in the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="878">the number of nodes.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="874">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_node"
              c:identifier="clutter_path_get_node"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="894">Retrieves the node of the path indexed by @index.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="896">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="897">the node number to retrieve</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="node"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="898">a location to store a copy of the node</doc>
            <type name="PathNode" c:type="ClutterPathNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_nodes"
              c:identifier="clutter_path_get_nodes"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="923">Returns a #GSList of #ClutterPathNode&lt;!-- --&gt;s. The list should be
freed with g_slist_free(). The nodes are owned by the path and
should not be freed. Altering the path may cause the nodes in the
list to become invalid so you should copy them if you want to keep
the list.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="146"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="933">a
  list of nodes in the path.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="PathNode"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="925">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="clutter_path_get_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1330">The value in @progress represents a position along the path where
0.0 is the beginning and 1.0 is the end of the path. An
interpolated position is then stored in @position.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1340">index of the node used to calculate the position.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1332">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1333">a position along the path as a fraction of its length</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1334">location to store the position</doc>
            <type name="Knot" c:type="ClutterKnot*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_node"
              c:identifier="clutter_path_insert_node"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="974">Inserts @node into the path before the node at the given offset. If
@index_ is negative it will append the node to the end of the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="976">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="977">offset of where to insert the node</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="978">the node to insert</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_node"
              c:identifier="clutter_path_remove_node"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1012">Removes the node at the given offset from the path.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1014">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1015">index of the node to remove</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_node"
              c:identifier="clutter_path_replace_node"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1053">Replaces the node at offset @index_ with @node.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1055">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="index_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1056">index to the existing node</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1057">the replacement node</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="clutter_path_set_description"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1085">Replaces all of the nodes in the path with nodes described by
@str. See clutter_path_add_string() for details of the format.

If the string is invalid then %FALSE is returned and the path is
unaltered.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1096">%TRUE is the path was valid, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1087">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1088">a string describing the path</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_cairo_path"
              c:identifier="clutter_path_to_cairo_path"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="853">Add the nodes of the ClutterPath to the path in the Cairo context.</doc>
        <source-position filename="../clutter/clutter/clutter-path.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="855">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </instance-parameter>
          <parameter name="cr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="856">a Cairo context</doc>
            <type name="cairo.Context" c:type="cairo_t*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="length" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.InitiallyUnowned" c:type="GInitiallyUnowned"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PathPrivate" c:type="ClutterPathPrivate*"/>
      </field>
    </class>
    <callback name="PathCallback" c:type="ClutterPathCallback" version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-path.h"
           line="47">This function is passed to clutter_path_foreach() and will be
called for each node contained in the path.</doc>
      <source-position filename="../clutter/clutter/clutter-path.h" line="57"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="node" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.h"
               line="49">the node</doc>
          <type name="PathNode" c:type="const ClutterPathNode*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.h"
               line="50">optional data passed to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="PathClass"
            c:type="ClutterPathClass"
            glib:is-gtype-struct-for="Path"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-path.h"
           line="76">The #ClutterPathClass struct contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-path.h" line="87"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.InitiallyUnownedClass"
              c:type="GInitiallyUnownedClass"/>
      </field>
    </record>
    <class name="PathConstraint"
           c:symbol-prefix="path_constraint"
           c:type="ClutterPathConstraint"
           version="1.6"
           parent="Constraint"
           glib:type-name="ClutterPathConstraint"
           glib:get-type="clutter_path_constraint_get_type"
           glib:type-struct="PathConstraintClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-path-constraint.h"
           line="41">#ClutterPathConstraint is an opaque structure
whose members cannot be directly accessed</doc>
      <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                       line="50"/>
      <constructor name="new"
                   c:identifier="clutter_path_constraint_new"
                   version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="272">Creates a new #ClutterPathConstraint with the given @path and @offset</doc>
        <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path-constraint.c"
               line="279">the newly created #ClutterPathConstraint</doc>
          <type name="Constraint" c:type="ClutterConstraint*"/>
        </return-value>
        <parameters>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="274">a #ClutterPath, or %NULL</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="275">the offset along the #ClutterPath</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_offset"
              c:identifier="clutter_path_constraint_get_offset"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="378">Retrieves the offset along the #ClutterPath used by @constraint.</doc>
        <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path-constraint.c"
               line="384">the offset</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="380">a #ClutterPathConstraint</doc>
            <type name="PathConstraint" c:type="ClutterPathConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_path"
              c:identifier="clutter_path_constraint_get_path"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="332">Retrieves a pointer to the #ClutterPath used by @constraint.</doc>
        <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                         line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path-constraint.c"
               line="338">the #ClutterPath used by the
  #ClutterPathConstraint, or %NULL. The returned #ClutterPath is owned
  by the constraint and it should not be unreferenced</doc>
          <type name="Path" c:type="ClutterPath*"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="334">a #ClutterPathConstraint</doc>
            <type name="PathConstraint" c:type="ClutterPathConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_offset"
              c:identifier="clutter_path_constraint_set_offset"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="352">Sets the offset along the #ClutterPath used by @constraint.</doc>
        <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="354">a #ClutterPathConstraint</doc>
            <type name="PathConstraint" c:type="ClutterPathConstraint*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="355">the offset along the path</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_path"
              c:identifier="clutter_path_constraint_set_path"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="295">Sets the @path to be followed by the #ClutterPathConstraint.

The @constraint will take ownership of the #ClutterPath passed to this
function.</doc>
        <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="297">a #ClutterPathConstraint</doc>
            <type name="PathConstraint" c:type="ClutterPathConstraint*"/>
          </instance-parameter>
          <parameter name="path"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="298">a #ClutterPath</doc>
            <type name="Path" c:type="ClutterPath*"/>
          </parameter>
        </parameters>
      </method>
      <property name="offset"
                version="1.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="215">The offset along the #ClutterPathConstraint:path, between -1.0 and 2.0.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="path"
                version="1.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="201">The #ClutterPath used to constrain the position of an actor.</doc>
        <type name="Path"/>
      </property>
      <glib:signal name="node-reached" when="last" version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path-constraint.c"
             line="241">The ::node-reached signal is emitted each time a
#ClutterPathConstraint:offset value results in the actor
passing a #ClutterPathNode</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="244">the #ClutterActor using the @constraint</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path-constraint.c"
                 line="245">the index of the node that has been reached</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="PathConstraintClass"
            c:type="ClutterPathConstraintClass"
            disguised="1"
            glib:is-gtype-struct-for="PathConstraint">
      <source-position filename="../clutter/clutter/clutter-path-constraint.h"
                       line="50"/>
    </record>
    <record name="PathNode"
            c:type="ClutterPathNode"
            version="1.0"
            glib:type-name="ClutterPathNode"
            glib:get-type="clutter_path_node_get_type"
            c:symbol-prefix="path_node">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="284">Represents a single node of a #ClutterPath.

Some of the coordinates in @points may be unused for some node
types. %CLUTTER_PATH_MOVE_TO and %CLUTTER_PATH_LINE_TO use only one
pair of coordinates, %CLUTTER_PATH_CURVE_TO uses all three and
%CLUTTER_PATH_CLOSE uses none.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="303"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="286">the node's type</doc>
        <type name="PathNodeType" c:type="ClutterPathNodeType"/>
      </field>
      <field name="points" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="287">the coordinates of the node</doc>
        <array zero-terminated="0" fixed-size="3">
          <type name="Knot" c:type="ClutterKnot"/>
        </array>
      </field>
      <method name="copy" c:identifier="clutter_path_node_copy" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1461">Makes an allocated copy of a node.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="309"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1467">the copied node.</doc>
          <type name="PathNode" c:type="ClutterPathNode*"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1463">a #ClutterPathNode</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="equal"
              c:identifier="clutter_path_node_equal"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1492">Compares two nodes and checks if they are the same type with the
same coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="313"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-path.c"
               line="1500">%TRUE if the nodes are the same.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="node_a" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1494">First node</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </instance-parameter>
          <parameter name="node_b" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1495">Second node</doc>
            <type name="PathNode" c:type="const ClutterPathNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_path_node_free" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-path.c"
             line="1477">Frees the memory of an allocated node.</doc>
        <source-position filename="../clutter/clutter/clutter-types.h"
                         line="311"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-path.c"
                 line="1479">a #ClutterPathNode</doc>
            <type name="PathNode" c:type="ClutterPathNode*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="PathNodeType"
                 version="1.0"
                 glib:type-name="ClutterPathNodeType"
                 glib:get-type="clutter_path_node_type_get_type"
                 c:type="ClutterPathNodeType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1283">Types of nodes in a #ClutterPath.</doc>
      <member name="move_to"
              value="0"
              c:identifier="CLUTTER_PATH_MOVE_TO"
              glib:nick="move-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1285">jump to the given position</doc>
      </member>
      <member name="line_to"
              value="1"
              c:identifier="CLUTTER_PATH_LINE_TO"
              glib:nick="line-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1286">create a line from the last node to the
  given position</doc>
      </member>
      <member name="curve_to"
              value="2"
              c:identifier="CLUTTER_PATH_CURVE_TO"
              glib:nick="curve-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1288">bezier curve using the last position and
  three control points.</doc>
      </member>
      <member name="close"
              value="3"
              c:identifier="CLUTTER_PATH_CLOSE"
              glib:nick="close">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1290">create a line from the last node to the last
  %CLUTTER_PATH_MOVE_TO node.</doc>
      </member>
      <member name="rel_move_to"
              value="32"
              c:identifier="CLUTTER_PATH_REL_MOVE_TO"
              glib:nick="rel-move-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1292">same as %CLUTTER_PATH_MOVE_TO but with
  coordinates relative to the last node.</doc>
      </member>
      <member name="rel_line_to"
              value="33"
              c:identifier="CLUTTER_PATH_REL_LINE_TO"
              glib:nick="rel-line-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1294">same as %CLUTTER_PATH_LINE_TO but with
  coordinates relative to the last node.</doc>
      </member>
      <member name="rel_curve_to"
              value="34"
              c:identifier="CLUTTER_PATH_REL_CURVE_TO"
              glib:nick="rel-curve-to">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1296">same as %CLUTTER_PATH_CURVE_TO but with
  coordinates relative to the last node.</doc>
      </member>
    </enumeration>
    <record name="PathPrivate" c:type="ClutterPathPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-path.h" line="45"/>
    </record>
    <record name="Perspective"
            c:type="ClutterPerspective"
            version="0.4"
            glib:type-name="ClutterPerspective"
            glib:get-type="clutter_perspective_get_type"
            c:symbol-prefix="perspective">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-stage.h"
           line="96">Stage perspective definition. #ClutterPerspective is only used by
the fixed point version of clutter_stage_set_perspective().</doc>
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="117"/>
      <field name="fovy" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.h"
             line="98">the field of view angle, in degrees, in the y direction</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="aspect" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.h"
             line="99">the aspect ratio that determines the field of view in the x
  direction. The aspect ratio is the ratio of x (width) to y (height)</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="z_near" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.h"
             line="101">the distance from the viewer to the near clipping
  plane (always positive)</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="z_far" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.h"
             line="103">the distance from the viewer to the far clipping
  plane (always positive)</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <record name="PickContext"
            c:type="ClutterPickContext"
            glib:type-name="ClutterPickContext"
            glib:get-type="clutter_pick_context_get_type"
            c:symbol-prefix="pick_context">
      <source-position filename="../clutter/clutter/clutter-pick-context.h"
                       line="30"/>
      <method name="destroy" c:identifier="clutter_pick_context_destroy">
        <source-position filename="../clutter/clutter/clutter-pick-context.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_framebuffer"
              c:identifier="clutter_pick_context_get_framebuffer"
              introspectable="0">
        <source-position filename="../clutter/clutter/clutter-pick-context.h"
                         line="47"/>
        <return-value>
          <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="clutter_pick_context_ref">
        <source-position filename="../clutter/clutter/clutter-pick-context.h"
                         line="38"/>
        <return-value transfer-ownership="full">
          <type name="PickContext" c:type="ClutterPickContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="unref" c:identifier="clutter_pick_context_unref">
        <source-position filename="../clutter/clutter/clutter-pick-context.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pick_context" transfer-ownership="none">
            <type name="PickContext" c:type="ClutterPickContext*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <bitfield name="PickDebugFlag"
              glib:type-name="ClutterPickDebugFlag"
              glib:get-type="clutter_pick_debug_flag_get_type"
              c:type="ClutterPickDebugFlag">
      <member name="picking"
              value="1"
              c:identifier="CLUTTER_DEBUG_NOP_PICKING"
              glib:nick="picking">
      </member>
    </bitfield>
    <enumeration name="PickMode"
                 version="1.0"
                 glib:type-name="ClutterPickMode"
                 glib:get-type="clutter_pick_mode_get_type"
                 c:type="ClutterPickMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1138">Controls the paint cycle of the scene graph when in pick mode</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_PICK_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1140">Do not paint any actor</doc>
      </member>
      <member name="reactive"
              value="1"
              c:identifier="CLUTTER_PICK_REACTIVE"
              glib:nick="reactive">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1141">Paint only the reactive actors</doc>
      </member>
      <member name="all"
              value="2"
              c:identifier="CLUTTER_PICK_ALL"
              glib:nick="all">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1142">Paint all actors</doc>
      </member>
    </enumeration>
    <class name="PipelineNode"
           c:symbol-prefix="pipeline_node"
           c:type="ClutterPipelineNode"
           version="1.10"
           parent="PaintNode"
           glib:type-name="ClutterPipelineNode"
           glib:get-type="clutter_pipeline_node_get_type"
           glib:type-struct="PipelineNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="107">The #ClutterTextNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="116"/>
      <constructor name="new"
                   c:identifier="clutter_pipeline_node_new"
                   version="1.10"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-nodes.c"
             line="557">Creates a new #ClutterPaintNode that will use the @pipeline to
paint its contents.

This function will acquire a reference on the passed @pipeline,
so it is safe to call cogl_object_unref() when it returns.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-nodes.c"
               line="567">the newly created #ClutterPaintNode.
  Use clutter_paint_node_unref() when done.</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="pipeline"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="559">a Cogl pipeline state object, or %NULL</doc>
            <type name="Cogl.Pipeline" c:type="CoglPipeline*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="PipelineNodeClass"
            c:type="ClutterPipelineNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="PipelineNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.c"
           line="377">The `ClutterPipelineNodeClass` structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="116"/>
    </record>
    <enumeration name="PointerA11yDwellClickType"
                 glib:type-name="ClutterPointerA11yDwellClickType"
                 glib:get-type="clutter_pointer_a11y_dwell_click_type_get_type"
                 c:type="ClutterPointerA11yDwellClickType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="442">Dwell click types.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="444">Internal use only</doc>
      </member>
      <member name="primary"
              value="1"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_PRIMARY"
              glib:nick="primary">
      </member>
      <member name="secondary"
              value="2"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_SECONDARY"
              glib:nick="secondary">
      </member>
      <member name="middle"
              value="3"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_MIDDLE"
              glib:nick="middle">
      </member>
      <member name="double"
              value="4"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_DOUBLE"
              glib:nick="double">
      </member>
      <member name="drag"
              value="5"
              c:identifier="CLUTTER_A11Y_DWELL_CLICK_TYPE_DRAG"
              glib:nick="drag">
      </member>
    </enumeration>
    <enumeration name="PointerA11yDwellDirection"
                 glib:type-name="ClutterPointerA11yDwellDirection"
                 glib:get-type="clutter_pointer_a11y_dwell_direction_get_type"
                 c:type="ClutterPointerA11yDwellDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="463">Dwell gesture directions.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_A11Y_DWELL_DIRECTION_NONE"
              glib:nick="none">
      </member>
      <member name="left"
              value="1"
              c:identifier="CLUTTER_A11Y_DWELL_DIRECTION_LEFT"
              glib:nick="left">
      </member>
      <member name="right"
              value="2"
              c:identifier="CLUTTER_A11Y_DWELL_DIRECTION_RIGHT"
              glib:nick="right">
      </member>
      <member name="up"
              value="3"
              c:identifier="CLUTTER_A11Y_DWELL_DIRECTION_UP"
              glib:nick="up">
      </member>
      <member name="down"
              value="4"
              c:identifier="CLUTTER_A11Y_DWELL_DIRECTION_DOWN"
              glib:nick="down">
      </member>
    </enumeration>
    <enumeration name="PointerA11yDwellMode"
                 glib:type-name="ClutterPointerA11yDwellMode"
                 glib:get-type="clutter_pointer_a11y_dwell_mode_get_type"
                 c:type="ClutterPointerA11yDwellMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="482">Dwell mode.</doc>
      <member name="window"
              value="0"
              c:identifier="CLUTTER_A11Y_DWELL_MODE_WINDOW"
              glib:nick="window">
      </member>
      <member name="gesture"
              value="1"
              c:identifier="CLUTTER_A11Y_DWELL_MODE_GESTURE"
              glib:nick="gesture">
      </member>
    </enumeration>
    <bitfield name="PointerA11yFlags"
              glib:type-name="ClutterPointerA11yFlags"
              glib:get-type="clutter_pointer_a11y_flags_get_type"
              c:type="ClutterPointerA11yFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="428">Pointer accessibility features applied to a ClutterInputDevice pointer.</doc>
      <member name="secondary_click_enabled"
              value="1"
              c:identifier="CLUTTER_A11Y_SECONDARY_CLICK_ENABLED"
              glib:nick="secondary-click-enabled">
      </member>
      <member name="dwell_enabled"
              value="2"
              c:identifier="CLUTTER_A11Y_DWELL_ENABLED"
              glib:nick="dwell-enabled">
      </member>
    </bitfield>
    <record name="PointerA11ySettings" c:type="ClutterPointerA11ySettings">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-seat.h"
           line="58">The #ClutterPointerA11ySettings structure contains pointer accessibility
settings</doc>
      <source-position filename="../clutter/clutter/clutter-seat.h" line="77"/>
      <field name="controls" writable="1">
        <type name="PointerA11yFlags" c:type="ClutterPointerA11yFlags"/>
      </field>
      <field name="dwell_click_type" writable="1">
        <type name="PointerA11yDwellClickType"
              c:type="ClutterPointerA11yDwellClickType"/>
      </field>
      <field name="dwell_mode" writable="1">
        <type name="PointerA11yDwellMode"
              c:type="ClutterPointerA11yDwellMode"/>
      </field>
      <field name="dwell_gesture_single" writable="1">
        <type name="PointerA11yDwellDirection"
              c:type="ClutterPointerA11yDwellDirection"/>
      </field>
      <field name="dwell_gesture_double" writable="1">
        <type name="PointerA11yDwellDirection"
              c:type="ClutterPointerA11yDwellDirection"/>
      </field>
      <field name="dwell_gesture_drag" writable="1">
        <type name="PointerA11yDwellDirection"
              c:type="ClutterPointerA11yDwellDirection"/>
      </field>
      <field name="dwell_gesture_secondary" writable="1">
        <type name="PointerA11yDwellDirection"
              c:type="ClutterPointerA11yDwellDirection"/>
      </field>
      <field name="secondary_click_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="dwell_delay" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
      <field name="dwell_threshold" writable="1">
        <type name="gint" c:type="gint"/>
      </field>
    </record>
    <enumeration name="PointerA11yTimeoutType"
                 glib:type-name="ClutterPointerA11yTimeoutType"
                 glib:get-type="clutter_pointer_a11y_timeout_type_get_type"
                 c:type="ClutterPointerA11yTimeoutType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="495">Pointer accessibility timeout type.</doc>
      <member name="secondary_click"
              value="0"
              c:identifier="CLUTTER_A11Y_TIMEOUT_TYPE_SECONDARY_CLICK"
              glib:nick="secondary-click">
      </member>
      <member name="dwell"
              value="1"
              c:identifier="CLUTTER_A11Y_TIMEOUT_TYPE_DWELL"
              glib:nick="dwell">
      </member>
      <member name="gesture"
              value="2"
              c:identifier="CLUTTER_A11Y_TIMEOUT_TYPE_GESTURE"
              glib:nick="gesture">
      </member>
    </enumeration>
    <callback name="ProgressFunc" c:type="ClutterProgressFunc" version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-types.h"
           line="389">Prototype of the progress function used to compute the value
between the two ends @a and @b of an interval depending on
the value of @progress.

The #GValue in @retval is already initialized with the same
type as @a and @b.

This function will be called by #ClutterInterval if the
type of the values of the interval was registered using
clutter_interval_register_progress_func().</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="412"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-types.h"
             line="407">%TRUE if the function successfully computed
  the value and stored it inside @retval</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="391">the initial value of an interval</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="392">the final value of an interval</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="progress" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="393">the progress factor, between 0 and 1</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="retval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-types.h"
               line="394">the value used to store the progress</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="PropertyTransition"
           c:symbol-prefix="property_transition"
           c:type="ClutterPropertyTransition"
           version="1.10"
           parent="Transition"
           glib:type-name="ClutterPropertyTransition"
           glib:get-type="clutter_property_transition_get_type"
           glib:type-struct="PropertyTransitionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-property-transition.h"
           line="46">The #ClutterPropertyTransition structure contains
private data and should only be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="76"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_property_transition_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-property-transition.c"
             line="281">Creates a new #ClutterPropertyTransition.</doc>
        <source-position filename="../clutter/clutter/clutter-property-transition.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-property-transition.c"
               line="287">the newly created #ClutterPropertyTransition.
  Use g_object_unref() when done</doc>
          <type name="Transition" c:type="ClutterTransition*"/>
        </return-value>
        <parameters>
          <parameter name="property_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-property-transition.c"
                 line="283">a property of @animatable, or %NULL</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_property_name"
              c:identifier="clutter_property_transition_get_property_name"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-property-transition.c"
             line="339">Retrieves the value of the #ClutterPropertyTransition:property-name
property.</doc>
        <source-position filename="../clutter/clutter/clutter-property-transition.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-property-transition.c"
               line="346">the name of the property being animated, or %NULL if
  none is set. The returned string is owned by the @transition and
  it should not be freed.</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-property-transition.c"
                 line="341">a #ClutterPropertyTransition</doc>
            <type name="PropertyTransition"
                  c:type="ClutterPropertyTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_property_name"
              c:identifier="clutter_property_transition_set_property_name"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-property-transition.c"
             line="300">Sets the #ClutterPropertyTransition:property-name property of @transition.</doc>
        <source-position filename="../clutter/clutter/clutter-property-transition.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-property-transition.c"
                 line="302">a #ClutterPropertyTransition</doc>
            <type name="PropertyTransition"
                  c:type="ClutterPropertyTransition*"/>
          </instance-parameter>
          <parameter name="property_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-property-transition.c"
                 line="303">a property name</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="property-name"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-property-transition.c"
             line="258">The name of the property of a #ClutterAnimatable to animate.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Transition" c:type="ClutterTransition"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="PropertyTransitionPrivate"
              c:type="ClutterPropertyTransitionPrivate*"/>
      </field>
    </class>
    <record name="PropertyTransitionClass"
            c:type="ClutterPropertyTransitionClass"
            glib:is-gtype-struct-for="PropertyTransition"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-property-transition.h"
           line="62">The #ClutterPropertyTransitionClass structure
contains private data.</doc>
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="76"/>
      <field name="parent_class" readable="0" private="1">
        <type name="TransitionClass" c:type="ClutterTransitionClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="PropertyTransitionPrivate"
            c:type="ClutterPropertyTransitionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-property-transition.h"
                       line="43"/>
    </record>
    <record name="ProximityEvent"
            c:type="ClutterProximityEvent"
            version="1.28">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="221">Event for tool proximity in tablet devices</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="243"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="223">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="224">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="225">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="226">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="227">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="228">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
    </record>
    <function-macro name="RECTANGLE"
                    c:identifier="CLUTTER_RECTANGLE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECTANGLE_CLASS"
                    c:identifier="CLUTTER_RECTANGLE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="RECTANGLE_GET_CLASS"
                    c:identifier="CLUTTER_RECTANGLE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="42"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ROOT_NODE"
                    c:identifier="CLUTTER_ROOT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="166"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ROTATE_ACTION"
                    c:identifier="CLUTTER_ROTATE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ROTATE_ACTION_CLASS"
                    c:identifier="CLUTTER_ROTATE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ROTATE_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_ROTATE_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="Rectangle"
           c:symbol-prefix="rectangle"
           c:type="ClutterRectangle"
           version="0.2"
           parent="Actor"
           glib:type-name="ClutterRectangle"
           glib:get-type="clutter_rectangle_get_type"
           glib:type-struct="RectangleClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-rectangle.h"
           line="48">The #ClutterRectangle structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="81"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_rectangle_new"
                   deprecated="1"
                   deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="385">Creates a new #ClutterActor with a rectangular shape.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_new() instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-rectangle.c"
               line="390">a new #ClutterRectangle</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_color"
                   c:identifier="clutter_rectangle_new_with_color"
                   deprecated="1"
                   deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="400">Creates a new #ClutterActor with a rectangular shape
and of the given @color.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_new() and
  clutter_actor_set_background_color() instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-rectangle.c"
               line="407">a new #ClutterRectangle</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="402">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_border_color"
              c:identifier="clutter_rectangle_get_border_color"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="552">Gets the color of the border used by @rectangle and places
it into @color.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and a #ClutterCanvas to draw
  the border with Cairo</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="554">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="555">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_border_width"
              c:identifier="clutter_rectangle_get_border_width"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="490">Gets the width (in pixels) of the border used by @rectangle</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and a #ClutterCanvas content
  to draw the border using Cairo</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-rectangle.c"
               line="496">the border's width</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="492">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="clutter_rectangle_get_color"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="420">Retrieves the color of @rectangle.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and clutter_actor_get_background_color()
  instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="422">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="423">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_border_color"
              c:identifier="clutter_rectangle_set_border_color"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="582">Sets the color of the border used by @rectangle using @color</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and a #ClutterCanvas to draw
  the border with Cairo</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="584">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="585">the color of the border</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_border_width"
              c:identifier="clutter_rectangle_set_border_width"
              version="0.2"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="511">Sets the width (in pixel) of the border used by @rectangle.
A @width of 0 will unset the border.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and a #ClutterCanvas content
  to draw the border using Cairo</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="513">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="514">the width of the border</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="clutter_rectangle_set_color"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="447">Sets the color of @rectangle.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterActor and clutter_actor_set_background_color()
  instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="rectangle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="449">a #ClutterRectangle</doc>
            <type name="Rectangle" c:type="ClutterRectangle*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-rectangle.c"
                 line="450">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="border-color"
                version="0.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="325">The color of the border of the rectangle.</doc>
        <type name="Color"/>
      </property>
      <property name="border-width"
                version="0.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="339">The width of the border of the rectangle, in pixels.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="color" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="313">The color of the rectangle.</doc>
        <type name="Color"/>
      </property>
      <property name="has-border"
                version="0.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-rectangle.c"
             line="354">Whether the #ClutterRectangle should be displayed with a border.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="RectanglePrivate" c:type="ClutterRectanglePrivate*"/>
      </field>
    </class>
    <record name="RectangleClass"
            c:type="ClutterRectangleClass"
            glib:is-gtype-struct-for="Rectangle"
            version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-rectangle.h"
           line="64">The #ClutterRectangleClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="81"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="_clutter_rectangle1" introspectable="0">
        <callback name="_clutter_rectangle1">
          <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rectangle2" introspectable="0">
        <callback name="_clutter_rectangle2">
          <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rectangle3" introspectable="0">
        <callback name="_clutter_rectangle3">
          <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rectangle4" introspectable="0">
        <callback name="_clutter_rectangle4">
          <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="RectanglePrivate"
            c:type="ClutterRectanglePrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/deprecated/clutter-rectangle.h"
                       line="46"/>
    </record>
    <bitfield name="RepaintFlags"
              version="1.10"
              glib:type-name="ClutterRepaintFlags"
              glib:get-type="clutter_repaint_flags_get_type"
              c:type="ClutterRepaintFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1343">Flags to pass to clutter_threads_add_repaint_func_full().</doc>
      <member name="pre_paint"
              value="1"
              c:identifier="CLUTTER_REPAINT_FLAGS_PRE_PAINT"
              glib:nick="pre-paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1345">Run the repaint function prior to
  painting the stages</doc>
      </member>
      <member name="post_paint"
              value="2"
              c:identifier="CLUTTER_REPAINT_FLAGS_POST_PAINT"
              glib:nick="post-paint">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1347">Run the repaint function after
  painting the stages</doc>
      </member>
      <member name="queue_redraw_on_add"
              value="4"
              c:identifier="CLUTTER_REPAINT_FLAGS_QUEUE_REDRAW_ON_ADD"
              glib:nick="queue-redraw-on-add">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1349">Ensure that a new frame
  is queued after adding the repaint function</doc>
      </member>
    </bitfield>
    <enumeration name="RequestMode"
                 version="0.8"
                 glib:type-name="ClutterRequestMode"
                 glib:get-type="clutter_request_mode_get_type"
                 c:type="ClutterRequestMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="102">Specifies the type of requests for a #ClutterActor.</doc>
      <member name="height_for_width"
              value="0"
              c:identifier="CLUTTER_REQUEST_HEIGHT_FOR_WIDTH"
              glib:nick="height-for-width">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="104">Height for width requests</doc>
      </member>
      <member name="width_for_height"
              value="1"
              c:identifier="CLUTTER_REQUEST_WIDTH_FOR_HEIGHT"
              glib:nick="width-for-height">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="105">Width for height requests</doc>
      </member>
      <member name="content_size"
              value="2"
              c:identifier="CLUTTER_REQUEST_CONTENT_SIZE"
              glib:nick="content-size">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="106">Use the preferred size of the
  #ClutterContent, if it has any (available since 1.22)</doc>
      </member>
    </enumeration>
    <class name="RootNode"
           c:symbol-prefix="root_node"
           c:type="ClutterRootNode"
           parent="PaintNode"
           glib:type-name="ClutterRootNode"
           glib:get-type="clutter_root_node_get_type"
           glib:type-struct="RootNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="169">The #ClutterRootNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="176"/>
      <constructor name="new" c:identifier="clutter_root_node_new">
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="182"/>
        <return-value transfer-ownership="full">
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="framebuffer" transfer-ownership="none">
            <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
          </parameter>
          <parameter name="clear_color" transfer-ownership="none">
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
          <parameter name="clear_flags" transfer-ownership="none">
            <type name="Cogl.BufferBit" c:type="CoglBufferBit"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="RootNodeClass"
            c:type="ClutterRootNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="RootNode">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="176"/>
    </record>
    <class name="RotateAction"
           c:symbol-prefix="rotate_action"
           c:type="ClutterRotateAction"
           version="1.12"
           parent="GestureAction"
           glib:type-name="ClutterRotateAction"
           glib:get-type="clutter_rotate_action_get_type"
           glib:type-struct="RotateActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-rotate-action.h"
           line="47">The #ClutterRotateAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="90"/>
      <constructor name="new"
                   c:identifier="clutter_rotate_action_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-rotate-action.c"
             line="237">Creates a new #ClutterRotateAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-rotate-action.c"
               line="242">the newly created #ClutterRotateAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="rotate">
        <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="RotateAction" c:type="ClutterRotateAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="angle" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GestureAction" c:type="ClutterGestureAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="RotateActionPrivate" c:type="ClutterRotateActionPrivate*"/>
      </field>
      <glib:signal name="rotate" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-rotate-action.c"
             line="198">The ::rotate signal is emitted when a rotate gesture is
recognized on the attached actor and when the gesture is
cancelled (in this case with an angle value of 0).</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-rotate-action.c"
               line="209">%TRUE if the rotation should continue, and %FALSE if
  the rotation should be cancelled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-rotate-action.c"
                 line="201">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="angle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-rotate-action.c"
                 line="202">the difference of angle of rotation between the initial
rotation and the current rotation</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="RotateActionClass"
            c:type="ClutterRotateActionClass"
            glib:is-gtype-struct-for="RotateAction"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-rotate-action.h"
           line="63">The #ClutterRotateActionClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="90"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GestureActionClass" c:type="ClutterGestureActionClass"/>
      </field>
      <field name="rotate">
        <callback name="rotate">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="78"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="RotateAction" c:type="ClutterRotateAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="angle" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_rotate_action1" introspectable="0">
        <callback name="_clutter_rotate_action1">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action2" introspectable="0">
        <callback name="_clutter_rotate_action2">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action3" introspectable="0">
        <callback name="_clutter_rotate_action3">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action4" introspectable="0">
        <callback name="_clutter_rotate_action4">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action5" introspectable="0">
        <callback name="_clutter_rotate_action5">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action6" introspectable="0">
        <callback name="_clutter_rotate_action6">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_rotate_action7" introspectable="0">
        <callback name="_clutter_rotate_action7">
          <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="RotateActionPrivate"
            c:type="ClutterRotateActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-rotate-action.h"
                       line="44"/>
    </record>
    <enumeration name="RotateAxis"
                 version="0.4"
                 glib:type-name="ClutterRotateAxis"
                 glib:get-type="clutter_rotate_axis_get_type"
                 c:type="ClutterRotateAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="68">Axis of a rotation.</doc>
      <member name="x_axis"
              value="0"
              c:identifier="CLUTTER_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="70">Rotate around the X axis</doc>
      </member>
      <member name="y_axis"
              value="1"
              c:identifier="CLUTTER_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="71">Rotate around the Y axis</doc>
      </member>
      <member name="z_axis"
              value="2"
              c:identifier="CLUTTER_Z_AXIS"
              glib:nick="z-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="72">Rotate around the Z axis</doc>
      </member>
    </enumeration>
    <enumeration name="RotateDirection"
                 version="0.4"
                 deprecated="1"
                 deprecated-version="1.22"
                 glib:type-name="ClutterRotateDirection"
                 glib:get-type="clutter_rotate_direction_get_type"
                 c:type="ClutterRotateDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="85">Direction of a rotation.</doc>
      <member name="cw"
              value="0"
              c:identifier="CLUTTER_ROTATE_CW"
              glib:nick="cw">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="87">Clockwise rotation</doc>
      </member>
      <member name="ccw"
              value="1"
              c:identifier="CLUTTER_ROTATE_CCW"
              glib:nick="ccw">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="88">Counter-clockwise rotation</doc>
      </member>
    </enumeration>
    <function-macro name="SCRIPT"
                    c:identifier="CLUTTER_SCRIPT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCRIPTABLE"
                    c:identifier="CLUTTER_SCRIPTABLE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scriptable.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCRIPTABLE_GET_IFACE"
                    c:identifier="CLUTTER_SCRIPTABLE_GET_IFACE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scriptable.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCRIPT_CLASS"
                    c:identifier="CLUTTER_SCRIPT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCRIPT_GET_CLASS"
                    c:identifier="CLUTTER_SCRIPT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLL_ACTOR"
                    c:identifier="CLUTTER_SCROLL_ACTOR"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="35"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLL_ACTOR_CLASS"
                    c:identifier="CLUTTER_SCROLL_ACTOR_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SCROLL_ACTOR_GET_CLASS"
                    c:identifier="CLUTTER_SCROLL_ACTOR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SETTINGS"
                    c:identifier="CLUTTER_SETTINGS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-settings.h"
                       line="13"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SHADER_EFFECT"
                    c:identifier="CLUTTER_SHADER_EFFECT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SHADER_EFFECT_CLASS"
                    c:identifier="CLUTTER_SHADER_EFFECT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SHADER_EFFECT_GET_CLASS"
                    c:identifier="CLUTTER_SHADER_EFFECT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SNAP_CONSTRAINT"
                    c:identifier="CLUTTER_SNAP_CONSTRAINT"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE"
                    c:identifier="CLUTTER_STAGE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE_CLASS"
                    c:identifier="CLUTTER_STAGE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE_GET_CLASS"
                    c:identifier="CLUTTER_STAGE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE_MANAGER"
                    c:identifier="CLUTTER_STAGE_MANAGER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE_MANAGER_CLASS"
                    c:identifier="CLUTTER_STAGE_MANAGER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="38"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STAGE_MANAGER_GET_CLASS"
                    c:identifier="CLUTTER_STAGE_MANAGER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <constant name="STAGE_TYPE"
              value="deprecated"
              c:type="CLUTTER_STAGE_TYPE"
              version="0.8"
              deprecated="1"
              deprecated-version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-macros.h"
           line="57">The default GObject type for the Clutter stage.</doc>
      <doc-deprecated xml:space="preserve">The macro evaluates to "deprecated" as Clutter can
  be compiled against multiple windowing systems. You can use the
  CLUTTER_WINDOWING_* macros for compile-time checks, and the type
  check macros for run-time checks.</doc-deprecated>
      <source-position filename="../clutter/clutter/clutter-macros.h"
                       line="69"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="STATE"
                    c:identifier="CLUTTER_STATE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="33"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STATE_CLASS"
                    c:identifier="CLUTTER_STATE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="34"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="STATE_GET_CLASS"
                    c:identifier="CLUTTER_STATE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SWIPE_ACTION"
                    c:identifier="CLUTTER_SWIPE_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SWIPE_ACTION_CLASS"
                    c:identifier="CLUTTER_SWIPE_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="43"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SWIPE_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_SWIPE_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="45"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="ScalingFilter"
                 version="1.10"
                 glib:type-name="ClutterScalingFilter"
                 glib:get-type="clutter_scaling_filter_get_type"
                 c:type="ClutterScalingFilter">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1400">The scaling filters to be used with the #ClutterActor:minification-filter
and #ClutterActor:magnification-filter properties.</doc>
      <member name="linear"
              value="0"
              c:identifier="CLUTTER_SCALING_FILTER_LINEAR"
              glib:nick="linear">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1402">Linear interpolation filter</doc>
      </member>
      <member name="nearest"
              value="1"
              c:identifier="CLUTTER_SCALING_FILTER_NEAREST"
              glib:nick="nearest">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1403">Nearest neighbor interpolation filter</doc>
      </member>
      <member name="trilinear"
              value="2"
              c:identifier="CLUTTER_SCALING_FILTER_TRILINEAR"
              glib:nick="trilinear">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1404">Trilinear minification filter, with
  mipmap generation; this filter linearly interpolates on every axis,
  as well as between mipmap levels.</doc>
      </member>
    </enumeration>
    <class name="Script"
           c:symbol-prefix="script"
           c:type="ClutterScript"
           version="0.6"
           parent="GObject.Object"
           glib:type-name="ClutterScript"
           glib:get-type="clutter_script_get_type"
           glib:type-struct="ScriptClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-script.h"
           line="100">The #ClutterScript structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="146"/>
      <constructor name="new" c:identifier="clutter_script_new" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="462">Creates a new #ClutterScript instance. #ClutterScript can be used to load
objects definitions for scenegraph elements, like actors, or behavioural
elements, like timelines. The definitions must be encoded using the
JavaScript Object Notation (JSON) language.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="152"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="470">the newly created #ClutterScript instance. Use
  g_object_unref() when done.</doc>
          <type name="Script" c:type="ClutterScript*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_type_from_name"
                      invoker="get_type_from_name"
                      version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="828">Looks up a type by name, using the virtual function that
#ClutterScript has for that purpose. This function should
rarely be used.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="837">the type for the requested type name, or
  %G_TYPE_INVALID if not corresponding type was found.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="830">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="type_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="831">name of the type to look up</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_search_paths"
              c:identifier="clutter_script_add_search_paths"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1186">Adds @paths to the list of search paths held by @script.

The search paths are used by clutter_script_lookup_filename(), which
can be used to define search paths for the textures source file name
or other custom, file-based properties.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1188">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1189">an array of strings containing
  different search paths</doc>
            <array length="1" zero-terminated="0" c:type="const gchar* const*">
              <type name="utf8" c:type="gchar*"/>
            </array>
          </parameter>
          <parameter name="n_paths" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1191">the length of the passed array</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_states"
              c:identifier="clutter_script_add_states"
              version="1.8"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1355">Associates a #ClutterState to the #ClutterScript instance using the given
name.

The #ClutterScript instance will use @state to resolve target states when
connecting signal handlers.

The #ClutterScript instance will take a reference on the #ClutterState
passed to this function.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="183"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1357">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1358">a name for the @state, or %NULL to
  set the default #ClutterState</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1360">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_signals"
              c:identifier="clutter_script_connect_signals"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="930">Connects all the signals defined into a UI definition file to their
handlers.

This method invokes clutter_script_connect_signals_full() internally
and uses  #GModule's introspective features (by opening the current
module's scope) to look at the application's symbol table.

Note that this function will not work if #GModule is not supported by
the platform Clutter is running on.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="932">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="933">data to be passed to the signal handlers, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_signals_full"
              c:identifier="clutter_script_connect_signals_full"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1144">Connects all the signals defined into a UI definition file to their
handlers.

This function allows to control how the signal handlers are
going to be connected to their respective signals. It is meant
primarily for language bindings to allow resolving the function
names using the native API, but it can also be used on platforms
that do not support GModule.

Applications should use clutter_script_connect_signals().</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="195"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1146">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="call"
                     closure="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1147">signal connection function</doc>
            <type name="ScriptConnectFunc" c:type="ClutterScriptConnectFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1148">data to be passed to the signal handlers, or %NULL</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_objects"
              c:identifier="clutter_script_ensure_objects"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="808">Ensure that every object defined inside @script is correctly
constructed. You should rarely need to use this function.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="810">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_object"
              c:identifier="clutter_script_get_object"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="620">Retrieves the object bound to @name. This function does not increment
the reference count of the returned object.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="628">the named object, or %NULL if no object
  with the given name was available</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="622">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="623">the name of the object to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_objects"
              c:identifier="clutter_script_get_objects"
              version="0.6"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="677">Retrieves a list of objects for the given names. After @script, object
names/return location pairs should be listed, with a %NULL pointer
ending the list, like:

|[
  GObject *my_label, *a_button, *main_timeline;

  clutter_script_get_objects (script,
                              "my-label", &amp;my_label,
                              "a-button", &amp;a_button,
                              "main-timeline", &amp;main_timeline,
                              NULL);
]|

Note: This function does not increment the reference count of the
returned objects.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="701">the number of objects returned.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="679">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="first_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="680">the name of the first object to retrieve</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="681">return location for a #GObject, then additional names, ending
  with %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="get_states"
              c:identifier="clutter_script_get_states"
              version="1.8"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1391">Retrieves the #ClutterState for the given @state_name.

If @name is %NULL, this function will return the default
#ClutterState instance.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="1401">a pointer to the #ClutterState for the
  given name. The #ClutterState is owned by the #ClutterScript instance
  and it should not be unreferenced</doc>
          <type name="State" c:type="ClutterState*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1393">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1394">the name of the #ClutterState, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_translation_domain"
              c:identifier="clutter_script_get_translation_domain"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1445">Retrieves the translation domain set using
clutter_script_set_translation_domain().</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="214"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="1452">the translation domain, if any is set,
  or %NULL</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1447">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_type_from_name"
              c:identifier="clutter_script_get_type_from_name"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="828">Looks up a type by name, using the virtual function that
#ClutterScript has for that purpose. This function should
rarely be used.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="837">the type for the requested type name, or
  %G_TYPE_INVALID if not corresponding type was found.</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="830">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="type_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="831">name of the type to look up</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_objects"
              c:identifier="clutter_script_list_objects"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1312">Retrieves all the objects created by @script.

Note: this function does not increment the reference count of the
objects it returns.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="175"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="1321">a list
  of #GObject&lt;!-- --&gt;s, or %NULL. The objects are owned by the
  #ClutterScript instance. Use g_list_free() on the returned list when
  done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="GObject.Object"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1314">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_from_data"
              c:identifier="clutter_script_load_from_data"
              version="0.6"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="528">Loads the definitions from @data into @script and merges with
the currently loaded ones, if any.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="158"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="539">on error, zero is returned and @error is set
  accordingly. On success, the merge id for the UI definitions is
  returned. You can use the merge id with clutter_script_unmerge_objects().</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="530">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="531">a buffer containing the definitions</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="532">the length of the buffer, or -1 if @data is a NUL-terminated
  buffer</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_from_file"
              c:identifier="clutter_script_load_from_file"
              version="0.6"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="481">Loads the definitions from @filename into @script and merges with
the currently loaded ones, if any.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="490">on error, zero is returned and @error is set
  accordingly. On success, the merge id for the UI definitions is
  returned. You can use the merge id with clutter_script_unmerge_objects().</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="483">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="484">the full path to the definition file</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_from_resource"
              c:identifier="clutter_script_load_from_resource"
              version="1.10"
              throws="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="581">Loads the definitions from a resource file into @script and merges with
the currently loaded ones, if any.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="590">on error, zero is returned and @error is set
  accordingly. On success, the merge id for the UI definitions is
  returned. You can use the merge id with clutter_script_unmerge_objects().</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="583">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="resource_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="584">the resource path of the file to parse</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_filename"
              c:identifier="clutter_script_lookup_filename"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1247">Looks up @filename inside the search paths of @script. If @filename
is found, its full path will be returned .</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="204"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="1255">the full path of @filename or %NULL if no path was
  found.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1249">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1250">the name of the file to lookup</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_translation_domain"
              c:identifier="clutter_script_set_translation_domain"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="1421">Sets the translation domain for @script.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1423">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="domain"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="1424">the translation domain, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmerge_objects"
              c:identifier="clutter_script_unmerge_objects"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="751">Unmerges the objects identified by @merge_id.</doc>
        <source-position filename="../clutter/clutter/clutter-script.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="753">a #ClutterScript</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </instance-parameter>
          <parameter name="merge_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="754">merge id returned when loading a UI definition</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="filename" version="0.6" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="399">The path of the currently parsed file. If #ClutterScript:filename-set
is %FALSE then the value of this property is undefined.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="filename-set" version="0.6" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="383">Whether the #ClutterScript:filename property is set. If this property
is %TRUE then the currently parsed data comes from a file, and the
file name is stored inside the #ClutterScript:filename property.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="translation-domain"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="414">The translation domain, used to localize strings marked as translatable
inside a UI definition.

If #ClutterScript:translation-domain is set to %NULL, #ClutterScript
will use gettext(), otherwise g_dgettext() will be used.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ScriptPrivate" c:type="ClutterScriptPrivate*"/>
      </field>
    </class>
    <record name="ScriptClass"
            c:type="ClutterScriptClass"
            glib:is-gtype-struct-for="Script"
            version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-script.h"
           line="116">The #ClutterScriptClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="146"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_type_from_name">
        <callback name="get_type_from_name">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="133"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-script.c"
                 line="837">the type for the requested type name, or
  %G_TYPE_INVALID if not corresponding type was found.</doc>
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-script.c"
                   line="830">a #ClutterScript</doc>
              <type name="Script" c:type="ClutterScript*"/>
            </parameter>
            <parameter name="type_name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-script.c"
                   line="831">name of the type to look up</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="138"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="139"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="140"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="141"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="142"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="143"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved7" introspectable="0">
        <callback name="_clutter_reserved7">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="144"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved8" introspectable="0">
        <callback name="_clutter_reserved8">
          <source-position filename="../clutter/clutter/clutter-script.h"
                           line="145"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <callback name="ScriptConnectFunc"
              c:type="ClutterScriptConnectFunc"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-script.h"
           line="46">This is the signature of a function used to connect signals.  It is used
by the clutter_script_connect_signals_full() function.  It is mainly
intended for interpreted language bindings, but could be useful where the
programmer wants more control over the signal connection process.</doc>
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="63"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="script" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="48">a #ClutterScript</doc>
          <type name="Script" c:type="ClutterScript*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="49">the object to connect</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="50">the name of the signal</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="handler_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="51">the name of the signal handler</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="connect_object" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="52">the object to connect the signal to, or %NULL</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="53">signal connection flags</doc>
          <type name="GObject.ConnectFlags" c:type="GConnectFlags"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="6">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.h"
               line="54">user data to pass to the signal handler</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="ScriptError"
                 version="0.6"
                 glib:type-name="ClutterScriptError"
                 glib:get-type="clutter_script_error_get_type"
                 c:type="ClutterScriptError"
                 glib:error-domain="clutter-script-error">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-script.h"
           line="71">#ClutterScript error enumeration.</doc>
      <member name="type_function"
              value="0"
              c:identifier="CLUTTER_SCRIPT_ERROR_INVALID_TYPE_FUNCTION"
              glib:nick="type-function">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.h"
             line="73">Type function not found
  or invalid</doc>
      </member>
      <member name="property"
              value="1"
              c:identifier="CLUTTER_SCRIPT_ERROR_INVALID_PROPERTY"
              glib:nick="property">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.h"
             line="75">Property not found or invalid</doc>
      </member>
      <member name="value"
              value="2"
              c:identifier="CLUTTER_SCRIPT_ERROR_INVALID_VALUE"
              glib:nick="value">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.h"
             line="76">Invalid value</doc>
      </member>
      <function name="quark" c:identifier="clutter_script_error_quark">
        <return-value transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="ScriptPrivate" c:type="ClutterScriptPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="43"/>
    </record>
    <interface name="Scriptable"
               c:symbol-prefix="scriptable"
               c:type="ClutterScriptable"
               version="0.6"
               glib:type-name="ClutterScriptable"
               glib:get-type="clutter_scriptable_get_type"
               glib:type-struct="ScriptableIface">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-scriptable.h"
           line="46">#ClutterScriptable is an opaque structure whose members cannot be directly
accessed</doc>
      <source-position filename="../clutter/clutter/clutter-scriptable.h"
                       line="88"/>
      <virtual-method name="get_id" invoker="get_id" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="94">Retrieves the id of @scriptable set using clutter_scriptable_set_id().</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scriptable.c"
               line="100">the id of the object. The returned string is owned by
  the scriptable object and should never be modified of freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="96">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="parse_custom_node"
                      invoker="parse_custom_node"
                      version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="119">Parses the passed JSON node. The implementation must set the type
of the passed #GValue pointer using g_value_init().</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scriptable.c"
               line="130">%TRUE if the node was successfully parsed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="121">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="122">the #ClutterScript creating the scriptable instance</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="123">the generic value to be set</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="124">the name of the node</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="125">the JSON node to be parsed</doc>
            <type name="Json.Node" c:type="JsonNode*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_custom_property"
                      invoker="set_custom_property"
                      version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="155">Overrides the common properties setting. The underlying virtual
function should be used when implementing custom properties.</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="157">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="158">the #ClutterScript creating the scriptable instance</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="159">the name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="160">the value of the property</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_id" invoker="set_id" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="61">Sets @id_ as the unique Clutter script it for this instance of
#ClutterScriptableIface.

This name can be used by user interface designer applications to
define a unique name for an object constructable using the UI
definition language parsed by #ClutterScript.</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="63">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="id_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="64">the #ClutterScript id of the object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_id"
              c:identifier="clutter_scriptable_get_id"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="94">Retrieves the id of @scriptable set using clutter_scriptable_set_id().</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scriptable.c"
               line="100">the id of the object. The returned string is owned by
  the scriptable object and should never be modified of freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="96">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="parse_custom_node"
              c:identifier="clutter_scriptable_parse_custom_node"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="119">Parses the passed JSON node. The implementation must set the type
of the passed #GValue pointer using g_value_init().</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scriptable.c"
               line="130">%TRUE if the node was successfully parsed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="121">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="122">the #ClutterScript creating the scriptable instance</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="123">the generic value to be set</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="124">the name of the node</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="125">the JSON node to be parsed</doc>
            <type name="Json.Node" c:type="JsonNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_property"
              c:identifier="clutter_scriptable_set_custom_property"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="155">Overrides the common properties setting. The underlying virtual
function should be used when implementing custom properties.</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="157">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="script" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="158">the #ClutterScript creating the scriptable instance</doc>
            <type name="Script" c:type="ClutterScript*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="159">the name of the property</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="160">the value of the property</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_id"
              c:identifier="clutter_scriptable_set_id"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scriptable.c"
             line="61">Sets @id_ as the unique Clutter script it for this instance of
#ClutterScriptableIface.

This name can be used by user interface designer applications to
define a unique name for an object constructable using the UI
definition language parsed by #ClutterScript.</doc>
        <source-position filename="../clutter/clutter/clutter-scriptable.h"
                         line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="scriptable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="63">a #ClutterScriptable</doc>
            <type name="Scriptable" c:type="ClutterScriptable*"/>
          </instance-parameter>
          <parameter name="id_" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="64">the #ClutterScript id of the object</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ScriptableIface"
            c:type="ClutterScriptableIface"
            glib:is-gtype-struct-for="Scriptable"
            version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-scriptable.h"
           line="55">Interface for implementing "scriptable" objects. An object implementing
this interface can override the parsing and properties setting sequence
when loading a UI definition data with #ClutterScript</doc>
      <source-position filename="../clutter/clutter/clutter-scriptable.h"
                       line="88"/>
      <field name="g_iface" readable="0" private="1">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="set_id">
        <callback name="set_id">
          <source-position filename="../clutter/clutter/clutter-scriptable.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="scriptable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="63">a #ClutterScriptable</doc>
              <type name="Scriptable" c:type="ClutterScriptable*"/>
            </parameter>
            <parameter name="id_" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="64">the #ClutterScript id of the object</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_id">
        <callback name="get_id">
          <source-position filename="../clutter/clutter/clutter-scriptable.h"
                           line="77"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="100">the id of the object. The returned string is owned by
  the scriptable object and should never be modified of freed</doc>
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="scriptable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="96">a #ClutterScriptable</doc>
              <type name="Scriptable" c:type="ClutterScriptable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_custom_node">
        <callback name="parse_custom_node">
          <source-position filename="../clutter/clutter/clutter-scriptable.h"
                           line="79"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scriptable.c"
                 line="130">%TRUE if the node was successfully parsed, %FALSE otherwise.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="scriptable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="121">a #ClutterScriptable</doc>
              <type name="Scriptable" c:type="ClutterScriptable*"/>
            </parameter>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="122">the #ClutterScript creating the scriptable instance</doc>
              <type name="Script" c:type="ClutterScript*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="123">the generic value to be set</doc>
              <type name="GObject.Value" c:type="GValue*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="124">the name of the node</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="node" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="125">the JSON node to be parsed</doc>
              <type name="Json.Node" c:type="JsonNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_custom_property">
        <callback name="set_custom_property">
          <source-position filename="../clutter/clutter/clutter-scriptable.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="scriptable" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="157">a #ClutterScriptable</doc>
              <type name="Scriptable" c:type="ClutterScriptable*"/>
            </parameter>
            <parameter name="script" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="158">the #ClutterScript creating the scriptable instance</doc>
              <type name="Script" c:type="ClutterScript*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="159">the name of the property</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-scriptable.c"
                   line="160">the value of the property</doc>
              <type name="GObject.Value" c:type="const GValue*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ScrollActor"
           c:symbol-prefix="scroll_actor"
           c:type="ClutterScrollActor"
           version="1.12"
           parent="Actor"
           glib:type-name="ClutterScrollActor"
           glib:get-type="clutter_scroll_actor_get_type"
           glib:type-struct="ScrollActorClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-scroll-actor.h"
           line="44">The #ClutterScrollActor structure contains only
private data, and should be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="74"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_scroll_actor_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="261">Creates a new #ClutterScrollActor.</doc>
        <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scroll-actor.c"
               line="266">The newly created #ClutterScrollActor
  instance.</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <method name="get_scroll_mode"
              c:identifier="clutter_scroll_actor_get_scroll_mode"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="304">Retrieves the #ClutterScrollActor:scroll-mode property</doc>
        <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-scroll-actor.c"
               line="310">the scrolling mode</doc>
          <type name="ScrollMode" c:type="ClutterScrollMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="306">a #ClutterScrollActor</doc>
            <type name="ScrollActor" c:type="ClutterScrollActor*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="scroll_to_point"
              c:identifier="clutter_scroll_actor_scroll_to_point"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="322">Scrolls the contents of @actor so that @point is the new origin
of the visible area.

The coordinates of @point must be relative to the @actor.

This function will use the currently set easing state of the @actor
to transition from the current scroll origin to the new one.</doc>
        <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="324">a #ClutterScrollActor</doc>
            <type name="ScrollActor" c:type="ClutterScrollActor*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="325">a #graphene_point_t</doc>
            <type name="Graphene.Point" c:type="const graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to_rect"
              c:identifier="clutter_scroll_actor_scroll_to_rect"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="410">Scrolls @actor so that @rect is in the visible portion.</doc>
        <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="412">a #ClutterScrollActor</doc>
            <type name="ScrollActor" c:type="ClutterScrollActor*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="413">a #ClutterRect</doc>
            <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_scroll_mode"
              c:identifier="clutter_scroll_actor_set_scroll_mode"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="277">Sets the #ClutterScrollActor:scroll-mode property.</doc>
        <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="279">a #ClutterScrollActor</doc>
            <type name="ScrollActor" c:type="ClutterScrollActor*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-scroll-actor.c"
                 line="280">a #ClutterScrollMode</doc>
            <type name="ScrollMode" c:type="ClutterScrollMode"/>
          </parameter>
        </parameters>
      </method>
      <property name="scroll-mode"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-scroll-actor.c"
             line="173">The scrollin direction.</doc>
        <type name="ScrollMode"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ScrollActorPrivate" c:type="ClutterScrollActorPrivate*"/>
      </field>
    </class>
    <record name="ScrollActorClass"
            c:type="ClutterScrollActorClass"
            glib:is-gtype-struct-for="ScrollActor"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-scroll-actor.h"
           line="60">The #ClutterScrollActor structure contains only
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="74"/>
      <field name="parent_instance" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="ScrollActorPrivate"
            c:type="ClutterScrollActorPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-scroll-actor.h"
                       line="41"/>
    </record>
    <enumeration name="ScrollDirection"
                 version="0.4"
                 glib:type-name="ClutterScrollDirection"
                 glib:get-type="clutter_scroll_direction_get_type"
                 c:type="ClutterScrollDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="944">Direction of a pointer scroll event.

The %CLUTTER_SCROLL_SMOOTH value implies that the #ClutterScrollEvent
has precise scrolling delta information.</doc>
      <member name="up"
              value="0"
              c:identifier="CLUTTER_SCROLL_UP"
              glib:nick="up">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="946">Scroll up</doc>
      </member>
      <member name="down"
              value="1"
              c:identifier="CLUTTER_SCROLL_DOWN"
              glib:nick="down">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="947">Scroll down</doc>
      </member>
      <member name="left"
              value="2"
              c:identifier="CLUTTER_SCROLL_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="948">Scroll left</doc>
      </member>
      <member name="right"
              value="3"
              c:identifier="CLUTTER_SCROLL_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="949">Scroll right</doc>
      </member>
      <member name="smooth"
              value="4"
              c:identifier="CLUTTER_SCROLL_SMOOTH"
              glib:nick="smooth">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="950">Precise scrolling delta (available in 1.10)</doc>
      </member>
    </enumeration>
    <record name="ScrollEvent" c:type="ClutterScrollEvent" version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="310">Scroll wheel (or similar device) event</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="347"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="312">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="313">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="314">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="315">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="316">event source actor</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="317">event X coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="318">event Y coordinate</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="direction" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="319">direction of the scrolling</doc>
        <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
      </field>
      <field name="modifier_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="320">button modifiers</doc>
        <type name="ModifierType" c:type="ClutterModifierType"/>
      </field>
      <field name="axes" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="321">reserved for future use</doc>
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="322">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
      <field name="scroll_source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="324">the source of scroll events. This field is available since 1.26</doc>
        <type name="ScrollSource" c:type="ClutterScrollSource"/>
      </field>
      <field name="finish_flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="325">the axes that were stopped in this event. This field is available since 1.26</doc>
        <type name="ScrollFinishFlags" c:type="ClutterScrollFinishFlags"/>
      </field>
    </record>
    <bitfield name="ScrollFinishFlags"
              version="1.26"
              glib:type-name="ClutterScrollFinishFlags"
              glib:get-type="clutter_scroll_finish_flags_get_type"
              c:type="ClutterScrollFinishFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1618">Flags used to notify the axes that were stopped in a #ClutterScrollEvent.
These can be used to trigger post-scroll effects like kinetic scrolling.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_SCROLL_FINISHED_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1620">no axis was stopped.</doc>
      </member>
      <member name="horizontal"
              value="1"
              c:identifier="CLUTTER_SCROLL_FINISHED_HORIZONTAL"
              glib:nick="horizontal">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1621">The horizontal axis stopped.</doc>
      </member>
      <member name="vertical"
              value="2"
              c:identifier="CLUTTER_SCROLL_FINISHED_VERTICAL"
              glib:nick="vertical">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1622">The vertical axis stopped.</doc>
      </member>
    </bitfield>
    <bitfield name="ScrollMode"
              version="1.12"
              glib:type-name="ClutterScrollMode"
              glib:get-type="clutter_scroll_mode_get_type"
              c:type="ClutterScrollMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1435">Scroll modes.</doc>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_SCROLL_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1437">Ignore scrolling</doc>
      </member>
      <member name="horizontally"
              value="1"
              c:identifier="CLUTTER_SCROLL_HORIZONTALLY"
              glib:nick="horizontally">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1438">Scroll only horizontally</doc>
      </member>
      <member name="vertically"
              value="2"
              c:identifier="CLUTTER_SCROLL_VERTICALLY"
              glib:nick="vertically">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1439">Scroll only vertically</doc>
      </member>
      <member name="both"
              value="3"
              c:identifier="CLUTTER_SCROLL_BOTH"
              glib:nick="both">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1440">Scroll in both directions</doc>
      </member>
    </bitfield>
    <enumeration name="ScrollSource"
                 version="1.26"
                 glib:type-name="ClutterScrollSource"
                 glib:get-type="clutter_scroll_source_get_type"
                 c:type="ClutterScrollSource">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1595">The scroll source determines the source of the scroll event. Keep in mind
that the source device #ClutterInputDeviceType is not enough to infer
the scroll source.</doc>
      <member name="unknown"
              value="0"
              c:identifier="CLUTTER_SCROLL_SOURCE_UNKNOWN"
              glib:nick="unknown">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1597">Source of scroll events is unknown.</doc>
      </member>
      <member name="wheel"
              value="1"
              c:identifier="CLUTTER_SCROLL_SOURCE_WHEEL"
              glib:nick="wheel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1598">The scroll event is originated by a mouse wheel.</doc>
      </member>
      <member name="finger"
              value="2"
              c:identifier="CLUTTER_SCROLL_SOURCE_FINGER"
              glib:nick="finger">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1599">The scroll event is originated by one or more
  fingers on the device (eg. touchpads).</doc>
      </member>
      <member name="continuous"
              value="3"
              c:identifier="CLUTTER_SCROLL_SOURCE_CONTINUOUS"
              glib:nick="continuous">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1601">The scroll event is originated by the
  motion of some device (eg. a scroll button is set).</doc>
      </member>
    </enumeration>
    <class name="Seat"
           c:symbol-prefix="seat"
           c:type="ClutterSeat"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="ClutterSeat"
           glib:get-type="clutter_seat_get_type"
           glib:type-struct="SeatClass">
      <source-position filename="../clutter/clutter/clutter-seat.h"
                       line="128"/>
      <virtual-method name="apply_kbd_a11y_settings">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="none">
            <type name="KbdA11ySettings" c:type="ClutterKbdA11ySettings*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="bell_notify" invoker="bell_notify">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="compress_motion" invoker="compress_motion">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
          <parameter name="to_discard" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_event_data">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="src" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_virtual_device"
                      invoker="create_virtual_device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="615">Creates a virtual input device.</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="125"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="622">a newly created virtual device</doc>
          <type name="VirtualInputDevice" c:type="ClutterVirtualInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="617">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="device_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="618">the type of the virtual device</doc>
            <type name="InputDeviceType" c:type="ClutterInputDeviceType"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="free_event_data">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_keyboard" invoker="get_keyboard">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="341">Returns the master keyboard</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="347">the master keyboard</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="343">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_keymap" invoker="get_keymap">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="382">Returns the seat keymap</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="388">the seat keymap</doc>
          <type name="Keymap" c:type="ClutterKeymap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="384">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_pointer" invoker="get_pointer">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="325">Returns the master pointer</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="331">the master pointer</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="327">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_supported_virtual_device_types"
                      invoker="get_supported_virtual_device_types">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="VirtualDeviceType" c:type="ClutterVirtualDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="list_devices" invoker="list_devices">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="357">Returns the list of HW devices</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="99"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="363">A list
  of #ClutterInputDevice. The elements of the returned list are owned by
  Clutter and may not be freed, the returned list should be freed using
  g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="InputDevice"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="359">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="warp_pointer" invoker="warp_pointer">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="bell_notify" c:identifier="clutter_seat_bell_notify">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="compress_motion"
              c:identifier="clutter_seat_compress_motion">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
          <parameter name="to_discard" transfer-ownership="none">
            <type name="Event" c:type="const ClutterEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_virtual_device"
              c:identifier="clutter_seat_create_virtual_device">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="615">Creates a virtual input device.</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="173"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="622">a newly created virtual device</doc>
          <type name="VirtualInputDevice" c:type="ClutterVirtualInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="617">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="device_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="618">the type of the virtual device</doc>
            <type name="InputDeviceType" c:type="ClutterInputDeviceType"/>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_a11y_state"
              c:identifier="clutter_seat_ensure_a11y_state">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_kbd_a11y_settings"
              c:identifier="clutter_seat_get_kbd_a11y_settings">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="none">
            <type name="KbdA11ySettings" c:type="ClutterKbdA11ySettings*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_keyboard" c:identifier="clutter_seat_get_keyboard">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="341">Returns the master keyboard</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="347">the master keyboard</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="343">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_keymap" c:identifier="clutter_seat_get_keymap">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="382">Returns the seat keymap</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="388">the seat keymap</doc>
          <type name="Keymap" c:type="ClutterKeymap*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="384">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer" c:identifier="clutter_seat_get_pointer">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="325">Returns the master pointer</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="131"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="331">the master pointer</doc>
          <type name="InputDevice" c:type="ClutterInputDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="327">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer_a11y_settings"
              c:identifier="clutter_seat_get_pointer_a11y_settings">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="500">Gets the current pointer accessibility settings</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="502">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="503">a pointer to a #ClutterPointerA11ySettings</doc>
            <type name="PointerA11ySettings"
                  c:type="ClutterPointerA11ySettings*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_virtual_device_types"
              c:identifier="clutter_seat_get_supported_virtual_device_types">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <type name="VirtualDeviceType" c:type="ClutterVirtualDeviceType"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_touch_mode" c:identifier="clutter_seat_get_touch_mode">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="676">Gets the current touch-mode state of the #ClutterSeat @seat.
The #ClutterSeat:touch-mode property is set to %TRUE if the following
requirements are fulfilled:

 - A touchscreen is available
 - A tablet mode switch, if present, is enabled</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="687">%TRUE if the device is a tablet that doesn't have an external
  keyboard attached, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="678">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="inhibit_unfocus"
              c:identifier="clutter_seat_inhibit_unfocus">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="536">Inhibits unsetting of the pointer focus-surface for the #ClutterSeat @seat,
this allows to keep using the pointer even when it's hidden.

This property is refcounted, so clutter_seat_uninhibit_unfocus() must be
called the exact same number of times as clutter_seat_inhibit_unfocus()
was called before.</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="538">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_unfocus_inhibited"
              c:identifier="clutter_seat_is_unfocus_inhibited">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="594">Gets whether unsetting of the pointer focus-surface is inhibited
for the #ClutterSeat @seat.</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="601">%TRUE if unsetting is inhibited, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="596">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_devices" c:identifier="clutter_seat_list_devices">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="357">Returns the list of HW devices</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="135"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-seat.c"
               line="363">A list
  of #ClutterInputDevice. The elements of the returned list are owned by
  Clutter and may not be freed, the returned list should be freed using
  g_list_free() when done.</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="InputDevice"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="359">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_kbd_a11y_settings"
              c:identifier="clutter_seat_set_kbd_a11y_settings">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="none">
            <type name="KbdA11ySettings" c:type="ClutterKbdA11ySettings*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pointer_a11y_dwell_click_type"
              c:identifier="clutter_seat_set_pointer_a11y_dwell_click_type">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="518">Sets the dwell click type</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="520">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="click_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="521">type of click as #ClutterPointerA11yDwellClickType</doc>
            <type name="PointerA11yDwellClickType"
                  c:type="ClutterPointerA11yDwellClickType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pointer_a11y_settings"
              c:identifier="clutter_seat_set_pointer_a11y_settings">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="474">Sets the pointer accessibility settings</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="476">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="settings" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="477">a pointer to a #ClutterPointerA11ySettings</doc>
            <type name="PointerA11ySettings"
                  c:type="ClutterPointerA11ySettings*"/>
          </parameter>
        </parameters>
      </method>
      <method name="uninhibit_unfocus"
              c:identifier="clutter_seat_uninhibit_unfocus">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="562">Disables the inhibiting of unsetting of the pointer focus-surface
previously enabled by calling clutter_seat_inhibit_unfocus().

This property is refcounted, so clutter_seat_uninhibit_unfocus() must be
called the exact same number of times as clutter_seat_inhibit_unfocus()
was called before.</doc>
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="167"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="564">a #ClutterSeat</doc>
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="warp_pointer" c:identifier="clutter_seat_warp_pointer">
        <source-position filename="../clutter/clutter/clutter-seat.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="seat" transfer-ownership="none">
            <type name="Seat" c:type="ClutterSeat*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <property name="backend"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Backend"/>
      </property>
      <property name="touch-mode" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="304">The current touch-mode of the #ClutterSeat, it is set to %TRUE if the
requirements documented in clutter_seat_get_touch_mode() are fulfilled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="device-added" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="InputDevice"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-removed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="InputDevice"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="is-unfocus-inhibited-changed" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="281">The ::is-unfocus-inhibited-changed signal is emitted when the
property to inhibit the unsetting of the focus-surface of the
#ClutterSeat changed. To get the current state of this property,
use clutter_seat_is_unfocus_inhibited().</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="kbd-a11y-flags-changed" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="190">The ::kbd-a11y-flags-changed signal is emitted each time the
ClutterKeyboardA11yFlags configuration is changed as the result of
keyboard accessibility operations.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="settings_flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="193">the new ClutterKeyboardA11yFlags configuration</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="changed_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="194">the ClutterKeyboardA11yFlags changed</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="kbd-a11y-mods-state-changed" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="167">The ::kbd-a11y-mods-state-changed signal is emitted each time either the
latched modifiers mask or locked modifiers mask are changed as the
result of keyboard accessibilty's sticky keys operations.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="latched_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="170">the latched modifier mask from stickykeys</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="locked_mask" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="171">the locked modifier mask from stickykeys</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ptr-a11y-dwell-click-type-changed" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="213">The ::ptr-a11y-dwell-click-type-changed signal is emitted each time
the ClutterPointerA11yDwellClickType mode is changed as the result
of pointer accessibility operations.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="click_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="216">the new #ClutterPointerA11yDwellClickType mode</doc>
            <type name="PointerA11yDwellClickType"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ptr-a11y-timeout-started" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="230">The ::ptr-a11y-timeout-started signal is emitted when a
pointer accessibility timeout delay is started, so that upper
layers can notify the user with some visual feedback.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="233">the core pointer #ClutterInputDevice</doc>
            <type name="InputDevice"/>
          </parameter>
          <parameter name="timeout_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="234">the type of timeout #ClutterPointerA11yTimeoutType</doc>
            <type name="PointerA11yTimeoutType"/>
          </parameter>
          <parameter name="delay" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="235">the delay in ms before secondary-click is triggered.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ptr-a11y-timeout-stopped" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-seat.c"
             line="255">The ::ptr-a11y-timeout-stopped signal is emitted when a running
pointer accessibility timeout delay is stopped, either because
it's triggered at the end of the delay or cancelled, so that
upper layers can notify the user with some visual feedback.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="device" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="258">the core pointer #ClutterInputDevice</doc>
            <type name="InputDevice"/>
          </parameter>
          <parameter name="timeout_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="259">the type of timeout #ClutterPointerA11yTimeoutType</doc>
            <type name="PointerA11yTimeoutType"/>
          </parameter>
          <parameter name="clicked" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="260">%TRUE if the timeout finished and triggered a click</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="tool-changed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="InputDevice"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="InputDeviceTool"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SeatClass"
            c:type="ClutterSeatClass"
            glib:is-gtype-struct-for="Seat">
      <source-position filename="../clutter/clutter/clutter-seat.h"
                       line="128"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_pointer">
        <callback name="get_pointer">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="331">the master pointer</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="327">a #ClutterSeat</doc>
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_keyboard">
        <callback name="get_keyboard">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="347">the master keyboard</doc>
            <type name="InputDevice" c:type="ClutterInputDevice*"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="343">a #ClutterSeat</doc>
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="list_devices">
        <callback name="list_devices">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="99"/>
          <return-value transfer-ownership="container">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="363">A list
  of #ClutterInputDevice. The elements of the returned list are owned by
  Clutter and may not be freed, the returned list should be freed using
  g_list_free() when done.</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="InputDevice"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="359">a #ClutterSeat</doc>
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="bell_notify">
        <callback name="bell_notify">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="101"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_keymap">
        <callback name="get_keymap">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="388">the seat keymap</doc>
            <type name="Keymap" c:type="ClutterKeymap*"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="384">a #ClutterSeat</doc>
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="compress_motion">
        <callback name="compress_motion">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
            <parameter name="to_discard" transfer-ownership="none">
              <type name="Event" c:type="const ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="warp_pointer">
        <callback name="warp_pointer">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="109"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_event_data">
        <callback name="copy_event_data">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="src" transfer-ownership="none">
              <type name="Event" c:type="const ClutterEvent*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="free_event_data">
        <callback name="free_event_data">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="apply_kbd_a11y_settings">
        <callback name="apply_kbd_a11y_settings">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="settings" transfer-ownership="none">
              <type name="KbdA11ySettings" c:type="ClutterKbdA11ySettings*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_virtual_device">
        <callback name="create_virtual_device">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="125"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-seat.c"
                 line="622">a newly created virtual device</doc>
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="617">a #ClutterSeat</doc>
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
            <parameter name="device_type" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-seat.c"
                   line="618">the type of the virtual device</doc>
              <type name="InputDeviceType" c:type="ClutterInputDeviceType"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_supported_virtual_device_types">
        <callback name="get_supported_virtual_device_types">
          <source-position filename="../clutter/clutter/clutter-seat.h"
                           line="127"/>
          <return-value transfer-ownership="none">
            <type name="VirtualDeviceType" c:type="ClutterVirtualDeviceType"/>
          </return-value>
          <parameters>
            <parameter name="seat" transfer-ownership="none">
              <type name="Seat" c:type="ClutterSeat*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Settings"
           c:symbol-prefix="settings"
           c:type="ClutterSettings"
           version="1.4"
           parent="GObject.Object"
           glib:type-name="ClutterSettings"
           glib:get-type="clutter_settings_get_type"
           glib:type-struct="SettingsClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-settings.c"
           line="43">`ClutterSettings` is an opaque structure whose
members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-settings.h"
                       line="17"/>
      <function name="get_default"
                c:identifier="clutter_settings_get_default"
                version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="713">Retrieves the singleton instance of #ClutterSettings</doc>
        <source-position filename="../clutter/clutter/clutter-settings.h"
                         line="23"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-settings.c"
               line="718">the instance of #ClutterSettings. The
  returned object is owned by Clutter and it should not be unreferenced
  directly</doc>
          <type name="Settings" c:type="ClutterSettings*"/>
        </return-value>
      </function>
      <property name="backend"
                version="1.4"
                deprecated="1"
                deprecated-version="1.10"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="457">A back pointer to the #ClutterBackend</doc>
        <type name="Backend"/>
      </property>
      <property name="dnd-drag-threshold"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="507">The default distance that the cursor of a pointer device
should travel before a drag operation should start.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="double-click-distance"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="491">The maximum distance, in pixels, between button-press events that
determines whether or not to increase the click count by 1.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="double-click-time"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="475">The time, in milliseconds, that should elapse between button-press
events in order to increase the click count by 1.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="font-antialias"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="538">Whether or not to use antialiasing when rendering text; a value
of 1 enables it unconditionally; a value of 0 disables it
unconditionally; and -1 will use the system's default.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="font-dpi"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="555">The DPI used when rendering text, as a value of 1024 * dots/inch.

If set to -1, the system's default will be used instead</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="font-hint-style"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="597">The style of the hinting used when rendering text. Valid values
are:

  - hintnone
  - hintslight
  - hintmedium
  - hintfull</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="font-hinting"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="580">Whether or not to use hinting when rendering text; a value of 1
unconditionally enables it; a value of 0 unconditionally disables
it; and a value of -1 will use the system's default.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="font-name"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="523">The default font name that should be used by text actors, as
a string that can be passed to pango_font_description_from_string().</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="font-subpixel-order"
                version="1.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="617">The type of sub-pixel antialiasing used when rendering text. Valid
values are:

  - none
  - rgb
  - bgr
  - vrgb
  - vbgr</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="fontconfig-timestamp"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="long-press-duration"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-settings.c"
             line="638">Sets the minimum duration for a press to be recognized as a long press
gesture. The duration is expressed in milliseconds.

See also #ClutterClickAction:long-press-duration.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="password-hint-time"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="unscaled-font-dpi"
                readable="0"
                writable="1"
                transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="SettingsClass"
            c:type="ClutterSettingsClass"
            disguised="1"
            glib:is-gtype-struct-for="Settings">
      <source-position filename="../clutter/clutter/clutter-settings.h"
                       line="17"/>
    </record>
    <record name="Shader" c:type="ClutterShader" disguised="1">
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="107"/>
    </record>
    <class name="ShaderEffect"
           c:symbol-prefix="shader_effect"
           c:type="ClutterShaderEffect"
           version="1.4"
           parent="OffscreenEffect"
           glib:type-name="ClutterShaderEffect"
           glib:get-type="clutter_shader_effect_get_type"
           glib:type-struct="ShaderEffectClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-effect.h"
           line="47">The #ClutterShaderEffect structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="91"/>
      <constructor name="new"
                   c:identifier="clutter_shader_effect_new"
                   version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="495">Creates a new #ClutterShaderEffect, to be applied to an actor using
clutter_actor_add_effect().

The effect will be empty until clutter_shader_effect_set_shader_source()
is called.</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-effect.c"
               line="506">the newly created #ClutterShaderEffect.
  Use g_object_unref() when done.</doc>
          <type name="Effect" c:type="ClutterEffect*"/>
        </return-value>
        <parameters>
          <parameter name="shader_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="497">the type of the shader, either %CLUTTER_FRAGMENT_SHADER,
  or %CLUTTER_VERTEX_SHADER</doc>
            <type name="ShaderType" c:type="ClutterShaderType"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_static_shader_source">
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_program"
              c:identifier="clutter_shader_effect_get_program"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="539">Retrieves a pointer to the program's handle</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="117"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-effect.c"
               line="545">a pointer to the program's handle,
  or %NULL</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="541">a #ClutterShaderEffect</doc>
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_shader"
              c:identifier="clutter_shader_effect_get_shader"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="519">Retrieves a pointer to the shader's handle</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-effect.c"
               line="525">a pointer to the shader's handle,
  or %NULL</doc>
          <type name="Cogl.Handle" c:type="CoglHandle"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="521">a #ClutterShaderEffect</doc>
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_shader_source"
              c:identifier="clutter_shader_effect_set_shader_source"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="856">Sets the source of the GLSL shader used by @effect

This function should only be called by implementations of
the #ClutterShaderEffect class, and not by application code.

This function can only be called once; subsequent calls will
yield no result.</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-effect.c"
               line="869">%TRUE if the source was set</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="858">a #ClutterShaderEffect</doc>
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
          <parameter name="source" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="859">the source of a GLSL shader</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform"
              c:identifier="clutter_shader_effect_set_uniform"
              version="1.4"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="773">Sets a list of values as the payload for the uniform @name inside
the shader effect

The @gtype must be one of: %G_TYPE_INT, for 1 or more integer values;
%G_TYPE_FLOAT, for 1 or more floating point values;
%CLUTTER_TYPE_SHADER_INT, for a pointer to an array of integer values;
%CLUTTER_TYPE_SHADER_FLOAT, for a pointer to an array of floating point
values; and %CLUTTER_TYPE_SHADER_MATRIX, for a pointer to an array of
floating point values mapping a matrix

The number of values interepreted is defined by the @n_value
argument, and by the @gtype argument. For instance, a uniform named
"sampler0" and containing a single integer value is set using:

|[&lt;!-- language="C" --&gt;
  clutter_shader_effect_set_uniform (effect, "sampler0",
                                     G_TYPE_INT, 1,
                                     0);
]|

While a uniform named "components" and containing a 3-elements vector
of floating point values (a "vec3") can be set using:

|[&lt;!-- language="C" --&gt;
  gfloat component_r, component_g, component_b;

  clutter_shader_effect_set_uniform (effect, "components",
                                     G_TYPE_FLOAT, 3,
                                     component_r,
                                     component_g,
                                     component_b);
]|

or can be set using:

|[&lt;!-- language="C" --&gt;
  gfloat component_vec[3];

  clutter_shader_effect_set_uniform (effect, "components",
                                     CLUTTER_TYPE_SHADER_FLOAT, 3,
                                     component_vec);
]|

Finally, a uniform named "map" and containing a matrix can be set using:

|[&lt;!-- language="C" --&gt;
  clutter_shader_effect_set_uniform (effect, "map",
                                     CLUTTER_TYPE_SHADER_MATRIX, 1,
                                     cogl_matrix_get_array (&amp;matrix));
]|</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="775">a #ClutterShaderEffect</doc>
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="776">the name of the uniform to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="gtype" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="777">the type of the uniform to set</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="n_values" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="778">the number of values</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="779">a list of values</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_uniform_value"
              c:identifier="clutter_shader_effect_set_uniform_value"
              version="1.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="628">Sets @value as the payload for the uniform @name inside the shader
effect

The #GType of the @value must be one of: %G_TYPE_INT, for a single
integer value; %G_TYPE_FLOAT, for a single floating point value;
%CLUTTER_TYPE_SHADER_INT, for an array of integer values;
%CLUTTER_TYPE_SHADER_FLOAT, for an array of floating point values;
and %CLUTTER_TYPE_SHADER_MATRIX, for a matrix of floating point
values. It also accepts %G_TYPE_DOUBLE for compatibility with other
languages than C.</doc>
        <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="effect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="630">a #ClutterShaderEffect</doc>
            <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="631">the name of the uniform to set</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-shader-effect.c"
                 line="632">a #GValue with the value of the uniform to set</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <property name="shader-type"
                version="1.4"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-effect.c"
             line="460">The type of shader that is used by the effect. This property
should be set by the constructor of #ClutterShaderEffect
sub-classes.</doc>
        <type name="ShaderType"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="OffscreenEffect" c:type="ClutterOffscreenEffect"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ShaderEffectPrivate" c:type="ClutterShaderEffectPrivate*"/>
      </field>
    </class>
    <record name="ShaderEffectClass"
            c:type="ClutterShaderEffectClass"
            glib:is-gtype-struct-for="ShaderEffect"
            version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-effect.h"
           line="63">The #ClutterShaderEffectClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="91"/>
      <field name="parent_class" readable="0" private="1">
        <type name="OffscreenEffectClass"
              c:type="ClutterOffscreenEffectClass"/>
      </field>
      <field name="get_static_shader_source">
        <callback name="get_static_shader_source">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="82"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="effect" transfer-ownership="none">
              <type name="ShaderEffect" c:type="ClutterShaderEffect*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_shader1" introspectable="0">
        <callback name="_clutter_shader1">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_shader2" introspectable="0">
        <callback name="_clutter_shader2">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_shader3" introspectable="0">
        <callback name="_clutter_shader3">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_shader4" introspectable="0">
        <callback name="_clutter_shader4">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_shader5" introspectable="0">
        <callback name="_clutter_shader5">
          <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ShaderEffectPrivate"
            c:type="ClutterShaderEffectPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-shader-effect.h"
                       line="44"/>
    </record>
    <class name="ShaderFloat"
           c:symbol-prefix="shader_float"
           c:type="ClutterShaderFloat"
           glib:type-name="ClutterShaderFloat"
           glib:get-type="clutter_shader_float_get_type"
           glib:fundamental="1">
    </class>
    <class name="ShaderInt"
           c:symbol-prefix="shader_int"
           c:type="ClutterShaderInt"
           glib:type-name="ClutterShaderInt"
           glib:get-type="clutter_shader_int_get_type"
           glib:fundamental="1">
    </class>
    <class name="ShaderMatrix"
           c:symbol-prefix="shader_matrix"
           c:type="ClutterShaderMatrix"
           glib:type-name="ClutterShaderMatrix"
           glib:get-type="clutter_shader_matrix_get_type"
           glib:fundamental="1">
    </class>
    <enumeration name="ShaderType"
                 version="1.4"
                 glib:type-name="ClutterShaderType"
                 glib:get-type="clutter_shader_type_get_type"
                 c:type="ClutterShaderType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="298">The type of GLSL shader program</doc>
      <member name="vertex_shader"
              value="0"
              c:identifier="CLUTTER_VERTEX_SHADER"
              glib:nick="vertex-shader">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="300">a vertex shader</doc>
      </member>
      <member name="fragment_shader"
              value="1"
              c:identifier="CLUTTER_FRAGMENT_SHADER"
              glib:nick="fragment-shader">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="301">a fragment shader</doc>
      </member>
    </enumeration>
    <class name="SnapConstraint"
           c:symbol-prefix="snap_constraint"
           c:type="ClutterSnapConstraint"
           version="1.6"
           parent="Constraint"
           glib:type-name="ClutterSnapConstraint"
           glib:get-type="clutter_snap_constraint_get_type"
           glib:type-struct="SnapConstraintClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-snap-constraint.h"
           line="40">#ClutterSnapConstraint is an opaque structure
whose members cannot be directly accesses</doc>
      <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                       line="49"/>
      <constructor name="new"
                   c:identifier="clutter_snap_constraint_new"
                   version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="388">Creates a new #ClutterSnapConstraint that will snap a #ClutterActor
to the @edge of @source, with the given @offset.</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-snap-constraint.c"
               line="399">the newly created #ClutterSnapConstraint</doc>
          <type name="Constraint" c:type="ClutterConstraint*"/>
        </return-value>
        <parameters>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="390">the #ClutterActor to use as the source of
  the constraint, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="from_edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="392">the edge of the actor to use in the constraint</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge"/>
          </parameter>
          <parameter name="to_edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="393">the edge of @source to use in the constraint</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="394">the offset to apply to the constraint, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_edges"
              c:identifier="clutter_snap_constraint_get_edges"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="536">Retrieves the edges used by the @constraint</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="538">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
          <parameter name="from_edge"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="539">return location for the actor's edge, or %NULL</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge*"/>
          </parameter>
          <parameter name="to_edge"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="540">return location for the source's edge, or %NULL</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_offset"
              c:identifier="clutter_snap_constraint_get_offset"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="586">Retrieves the offset set using clutter_snap_constraint_set_offset()</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-snap-constraint.c"
               line="592">the offset, in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="588">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_source"
              c:identifier="clutter_snap_constraint_get_source"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="468">Retrieves the #ClutterActor set using clutter_snap_constraint_set_source()</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-snap-constraint.c"
               line="474">a pointer to the source actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="470">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_edges"
              c:identifier="clutter_snap_constraint_set_edges"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="486">Sets the edges to be used by the @constraint

The @from_edge is the edge on the #ClutterActor to which @constraint
has been added. The @to_edge is the edge of the #ClutterActor inside
the #ClutterSnapConstraint:source property.</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="488">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
          <parameter name="from_edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="489">the edge on the actor</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge"/>
          </parameter>
          <parameter name="to_edge" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="490">the edge on the source</doc>
            <type name="SnapEdge" c:type="ClutterSnapEdge"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_offset"
              c:identifier="clutter_snap_constraint_set_offset"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="560">Sets the offset to be applied to the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="562">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="563">the offset to apply, in pixels</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_source"
              c:identifier="clutter_snap_constraint_set_source"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="419">Sets the source #ClutterActor for the constraint</doc>
        <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="constraint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="421">a #ClutterSnapConstraint</doc>
            <type name="SnapConstraint" c:type="ClutterSnapConstraint*"/>
          </instance-parameter>
          <parameter name="source"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-snap-constraint.c"
                 line="422">a #ClutterActor, or %NULL to unset the source</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <property name="from-edge"
                version="1.6"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="324">The edge of the #ClutterActor that should be snapped</doc>
        <type name="SnapEdge"/>
      </property>
      <property name="offset"
                version="1.6"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="354">The offset, in pixels, between #ClutterSnapConstraint:from-edge
and #ClutterSnapConstraint:to-edge</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="source"
                version="1.6"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="310">The #ClutterActor used as the source for the constraint</doc>
        <type name="Actor"/>
      </property>
      <property name="to-edge"
                version="1.6"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-snap-constraint.c"
             line="339">The edge of the #ClutterSnapConstraint:source that should be snapped</doc>
        <type name="SnapEdge"/>
      </property>
    </class>
    <record name="SnapConstraintClass"
            c:type="ClutterSnapConstraintClass"
            disguised="1"
            glib:is-gtype-struct-for="SnapConstraint">
      <source-position filename="../clutter/clutter/clutter-snap-constraint.h"
                       line="49"/>
    </record>
    <enumeration name="SnapEdge"
                 version="1.6"
                 glib:type-name="ClutterSnapEdge"
                 glib:get-type="clutter_snap_edge_get_type"
                 c:type="ClutterSnapEdge">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1119">The edge to snap</doc>
      <member name="top"
              value="0"
              c:identifier="CLUTTER_SNAP_EDGE_TOP"
              glib:nick="top">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1121">the top edge</doc>
      </member>
      <member name="right"
              value="1"
              c:identifier="CLUTTER_SNAP_EDGE_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1122">the right edge</doc>
      </member>
      <member name="bottom"
              value="2"
              c:identifier="CLUTTER_SNAP_EDGE_BOTTOM"
              glib:nick="bottom">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1123">the bottom edge</doc>
      </member>
      <member name="left"
              value="3"
              c:identifier="CLUTTER_SNAP_EDGE_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1124">the left edge</doc>
      </member>
    </enumeration>
    <class name="Stage"
           c:symbol-prefix="stage"
           c:type="ClutterStage"
           version="0.2"
           parent="Group"
           glib:type-name="ClutterStage"
           glib:get-type="clutter_stage_get_type"
           glib:type-struct="StageClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-stage.h"
           line="48">The #ClutterStage structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="94"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new" c:identifier="clutter_stage_new" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3086">Creates a new, non-default stage. A non-default stage is a new
top-level actor which can be used as another container. It works
exactly like the default stage, but while clutter_stage_get_default()
will always return the same instance, you will have to keep a pointer
to any #ClutterStage returned by clutter_stage_new().

The ability to support multiple stages depends on the current
backend. Use clutter_feature_available() and
%CLUTTER_FEATURE_STAGE_MULTIPLE to check at runtime whether a
backend supports multiple stages.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="3100">a new stage, or %NULL if the default backend does
  not support multiple stages. Use clutter_actor_destroy() to
  programmatically close the returned stage.</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <function name="get_default"
                c:identifier="clutter_stage_get_default"
                deprecated="1"
                deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2351">Retrieves a #ClutterStage singleton.

This function is not as useful as it sounds, and will most likely
by deprecated in the future. Application code should only create
a #ClutterStage instance using clutter_stage_new(), and manage the
lifetime of the stage manually.

The default stage singleton has a platform-specific behaviour: on
platforms without the %CLUTTER_FEATURE_STAGE_MULTIPLE feature flag
set, the first #ClutterStage instance will also be set to be the
default stage instance, and this function will always return a
pointer to it.

On platforms with the %CLUTTER_FEATURE_STAGE_MULTIPLE feature flag
set, the default stage will be created by the first call to this
function, and every following call will return the same pointer to
it.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_stage_new() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="2372">the main
  #ClutterStage. You should never destroy or unref the returned
  actor.</doc>
          <type name="Stage" c:type="ClutterActor*"/>
        </return-value>
      </function>
      <virtual-method name="activate">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deactivate">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_event">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paint_view">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </parameter>
          <parameter name="redraw_clip" transfer-ownership="none">
            <type name="cairo.Region" c:type="const cairo_region_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="capture" c:identifier="clutter_stage_capture">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="4361">Captures the stage pixels of @rect into @captures. @rect is in stage
coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="233"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="4373">%TRUE if a #ClutterCapture has been created, %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4363">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="paint" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4364">whether to pain the frame</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4365">a #cairo_rectangle_int_t in stage coordinates</doc>
            <type name="cairo.RectangleInt" c:type="cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="out_captures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4366">an array of
  #ClutterCapture</doc>
            <array length="3" zero-terminated="0" c:type="ClutterCapture**">
              <type name="Capture" c:type="ClutterCapture*"/>
            </array>
          </parameter>
          <parameter name="out_n_captures"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4368">the number of captures in @out_captures</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="capture_into" c:identifier="clutter_stage_capture_into">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="paint" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="cairo.RectangleInt" c:type="cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="guint8" c:type="uint8_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ensure_current"
              c:identifier="clutter_stage_ensure_current"
              version="0.8"
              deprecated="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3112">This function essentially makes sure the right GL context is
current for the passed stage. It is not intended to
be used by applications.</doc>
        <doc-deprecated xml:space="preserve">mutter: This function does not do anything.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3114">the #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ensure_redraw"
              c:identifier="clutter_stage_ensure_redraw"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3383">Ensures that @stage is redrawn

This function should not be called by applications: it is
used when embedding a #ClutterStage into a toolkit with
another windowing system, like GTK+.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3385">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="ensure_viewport"
              c:identifier="clutter_stage_ensure_viewport"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3129">Ensures that the GL viewport is updated with the current
stage window size.

This function will queue a redraw of @stage.

This function should not be called by applications; it is used
when embedding a #ClutterStage into a toolkit with another
windowing system, like GTK+.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="210"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3131">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="event" c:identifier="clutter_stage_event" version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2878">This function is used to emit an event on the main stage.

You should rarely need to use this function, except for
synthetised events.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="194"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="2888">the return value from the signal emission</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2880">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2881">a #ClutterEvent</doc>
            <type name="Event" c:type="ClutterEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="freeze_updates"
              c:identifier="clutter_stage_freeze_updates">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="4629">Freezing updates makes Clutter stop processing events,
redrawing, and advancing timelines, by pausing the master clock. This is
necessary when implementing a display server, to ensure that Clutter doesn't
keep trying to page flip when DRM master has been dropped, e.g. when VT
switched away.

The master clock starts out running, so if you are VT switched away on
startup, you need to call this immediately.

To thaw updates, use clutter_stage_thaw_updates().</doc>
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_accept_focus"
              c:identifier="clutter_stage_get_accept_focus"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3994">Retrieves the value set with clutter_stage_set_accept_focus().</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="4000">%TRUE if the #ClutterStage should accept focus, and %FALSE
  otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3996">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_actor_at_pos"
              c:identifier="clutter_stage_get_actor_at_pos">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2847">Checks the scene at the coordinates @x and @y and returns a pointer
to the #ClutterActor at those coordinates. The result is the actor which
would be at the specified location on the next redraw, and is not
necessarily that which was there on the previous redraw. This allows the
function to perform chronologically correctly after any queued changes to
the scene, and even if nothing has been drawn.

By using @pick_mode it is possible to control which actors will be
painted and thus available.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="2864">the actor at the specified coordinates,
  if any</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2849">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="pick_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2850">how the scene graph should be painted</doc>
            <type name="PickMode" c:type="ClutterPickMode"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2851">X coordinate to check</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2852">Y coordinate to check</doc>
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_capture_final_size"
              c:identifier="clutter_stage_get_capture_final_size">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="226"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="cairo.RectangleInt" c:type="cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="clutter_stage_get_color"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2419">Retrieves the stage color.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_get_background_color() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2421">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2422">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frame_counter"
              c:identifier="clutter_stage_get_frame_counter">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="int64_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_key_focus"
              c:identifier="clutter_stage_get_key_focus"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3043">Retrieves the actor that is currently under key focus.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="177"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="3049">the actor with key focus, or the stage</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3045">the #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_minimum_size"
              c:identifier="clutter_stage_get_minimum_size"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3633">Retrieves the minimum size for a stage window as set using
clutter_stage_set_minimum_size().

The returned size may not correspond to the actual minimum size and
it is specific to the #ClutterStage implementation inside the
Clutter backend</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3635">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3636">return location for the minimum width, in pixels,
  or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3638">return location for the minimum height, in pixels,
  or %NULL</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_motion_events_enabled"
              c:identifier="clutter_stage_get_motion_events_enabled"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="4058">Retrieves the value set using clutter_stage_set_motion_events_enabled().</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="4064">%TRUE if the per-actor motion event delivery is enabled
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4060">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_perspective"
              c:identifier="clutter_stage_get_perspective">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2492">Retrieves the stage perspective.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2494">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="perspective"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2495">return location for a
  #ClutterPerspective</doc>
            <type name="Perspective" c:type="ClutterPerspective*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_throttle_motion_events"
              c:identifier="clutter_stage_get_throttle_motion_events"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3533">Retrieves the value set with clutter_stage_set_throttle_motion_events()</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="3539">%TRUE if the motion events are being throttled,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3535">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="clutter_stage_get_title"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2959">Gets the stage title.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="2965">pointer to the title string for the stage. The
returned string is owned by the actor and should not
be modified or freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2961">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_alpha"
              c:identifier="clutter_stage_get_use_alpha"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3583">Retrieves the value set using clutter_stage_set_use_alpha()</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="3589">%TRUE if the stage should honour the opacity and the
  alpha channel of the stage color</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3585">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view_at"
              c:identifier="clutter_stage_get_view_at"
              introspectable="0">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="239"/>
        <return-value>
          <type name="StageView" c:type="ClutterStageView*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="hide_cursor"
              c:identifier="clutter_stage_hide_cursor"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2714">Makes the cursor invisible on the stage window</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2716">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_default"
              c:identifier="clutter_stage_is_default"
              version="0.8"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3446">Checks if @stage is the default stage, or an instance created using
clutter_stage_new() but internally using the same implementation.</doc>
        <doc-deprecated xml:space="preserve">Track the stage pointer inside your application
  code, or use clutter_actor_get_stage() to retrieve the stage for
  a given actor.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="3453">%TRUE if the passed stage is the default one</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3448">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_redraw_queued"
              c:identifier="clutter_stage_is_redraw_queued"
              introspectable="0">
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="215"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="paint_to_buffer"
              c:identifier="clutter_stage_paint_to_buffer"
              introspectable="0"
              throws="1">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="cairo.RectangleInt"
                  c:type="const cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="guint8" c:type="uint8_t*"/>
          </parameter>
          <parameter name="stride" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="Cogl.PixelFormat" c:type="CoglPixelFormat"/>
          </parameter>
          <parameter name="paint_flags" transfer-ownership="none">
            <type c:type="ClutterPaintFlag"/>
          </parameter>
        </parameters>
      </method>
      <method name="paint_to_framebuffer"
              c:identifier="clutter_stage_paint_to_framebuffer"
              introspectable="0">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="framebuffer" transfer-ownership="none">
            <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
          </parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="cairo.RectangleInt"
                  c:type="const cairo_rectangle_int_t*"/>
          </parameter>
          <parameter name="scale" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="paint_flags" transfer-ownership="none">
            <type c:type="ClutterPaintFlag"/>
          </parameter>
        </parameters>
      </method>
      <method name="queue_redraw"
              c:identifier="clutter_stage_queue_redraw"
              version="0.8"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3425">Queues a redraw for the passed stage.

Applications should call clutter_actor_queue_redraw() and not
this function.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_queue_redraw() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3427">the #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="read_pixels" c:identifier="clutter_stage_read_pixels">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2748">Makes a screenshot of the stage in RGBA 8bit data, returns a
linear buffer with @width * 4 as rowstride.

The alpha data contained in the returned buffer is driver-dependent,
and not guaranteed to hold any sensible value.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="203"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage.c"
               line="2764">a pointer to newly allocated memory with the buffer
  or %NULL if the read failed. Use g_free() on the returned data
  to release the resources it has allocated.</doc>
          <array zero-terminated="0" c:type="guchar*">
            <type name="guint8" c:type="guchar"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2750">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2751">x coordinate of the first pixel that is read from stage</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2752">y coordinate of the first pixel that is read from stage</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2753">Width dimention of pixels to be read, or -1 for the
  entire stage width</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2755">Height dimention of pixels to be read, or -1 for the
  entire stage height</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_accept_focus"
              c:identifier="clutter_stage_set_accept_focus"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3963">Sets whether the @stage should accept the key focus when shown.

This function should be called before showing @stage using
clutter_actor_show().</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="189"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3965">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="accept_focus" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3966">%TRUE to accept focus on show</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="clutter_stage_set_color"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2401">Sets the stage color.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_actor_set_background_color() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                         line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2403">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2404">A #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key_focus"
              c:identifier="clutter_stage_set_key_focus"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2979">Sets the key focus on @actor. An actor with key focus will receive
all the key events. If @actor is %NULL, the stage will receive
focus.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2981">the #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="actor"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2982">the actor to set key focus to, or %NULL</doc>
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_minimum_size"
              c:identifier="clutter_stage_set_minimum_size"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3602">Sets the minimum size for a stage window, if the default backend
uses #ClutterStage inside a window

This is a convenience function, and it is equivalent to setting the
#ClutterActor:min-width and #ClutterActor:min-height on @stage

If the current size of @stage is smaller than the minimum size, the
@stage will be resized to the new @width and @height</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="160"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3604">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3605">width, in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3606">height, in pixels</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_motion_events_enabled"
              c:identifier="clutter_stage_set_motion_events_enabled"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="4013">Sets whether per-actor motion events (and relative crossing
events) should be disabled or not.

The default is %TRUE.

If @enable is %FALSE the following signals will not be emitted
by the actors children of @stage:

 - #ClutterActor::motion-event
 - #ClutterActor::enter-event
 - #ClutterActor::leave-event

The events will still be delivered to the #ClutterStage.

The main side effect of this function is that disabling the motion
events will disable picking to detect the #ClutterActor underneath
the pointer for each motion event. This is useful, for instance,
when dragging a #ClutterActor across the @stage: the actor underneath
the pointer is not going to change, so it's meaningless to perform
a pick.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="184"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4015">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="4016">%TRUE to enable the motion events delivery, and %FALSE
  otherwise</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_perspective"
              c:identifier="clutter_stage_set_perspective">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2462">Sets the stage perspective. Using this function is not recommended
because it will disable Clutter's attempts to generate an
appropriate perspective based on the size of the stage.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2464">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="perspective" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2465">A #ClutterPerspective</doc>
            <type name="Perspective" c:type="ClutterPerspective*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_throttle_motion_events"
              c:identifier="clutter_stage_set_throttle_motion_events"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3503">Sets whether motion events received between redraws should
be throttled or not. If motion events are throttled, those
events received by the windowing system between redraws will
be compressed so that only the last event will be propagated
to the @stage and its actors.

This function should only be used if you want to have all
the motion events delivered to your application code.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3505">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="throttle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3506">%TRUE to throttle motion events</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="clutter_stage_set_title"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2929">Sets the stage title.</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2931">A #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2932">A utf8 string for the stage windows title.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_alpha"
              c:identifier="clutter_stage_set_use_alpha"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="3552">Sets whether the @stage should honour the #ClutterActor:opacity and
the alpha channel of the #ClutterStage:color</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3554">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
          <parameter name="use_alpha" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="3555">whether the stage should honour the opacity or the
  alpha channel of the stage color</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_cursor" c:identifier="clutter_stage_show_cursor">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2682">Shows the cursor on the stage window</doc>
        <source-position filename="../clutter/clutter/clutter-stage.h"
                         line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2684">a #ClutterStage</doc>
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="thaw_updates" c:identifier="clutter_stage_thaw_updates">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="4658">Resumes a master clock that has previously been frozen with
clutter_stage_freeze_updates(), and start pumping the master clock
again at the next iteration. Note that if you're switching back to your
own VT, you should probably also queue a stage redraw with
clutter_stage_ensure_redraw().</doc>
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_resource_scales"
              c:identifier="clutter_stage_update_resource_scales">
        <source-position filename="../clutter/clutter/clutter-mutter.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="accept-focus"
                version="1.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2125">Whether the #ClutterStage should accept key focus when shown.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="color"
                deprecated="1"
                deprecated-version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2046">The background color of the main stage.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterActor:background-color property of
  #ClutterActor instead.</doc-deprecated>
        <type name="Color"/>
      </property>
      <property name="cursor-visible" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2034">Whether the mouse pointer should be visible</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="key-focus"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2108">The #ClutterActor that will receive key events from the underlying
windowing system.

If %NULL, the #ClutterStage will receive the events.</doc>
        <type name="Actor"/>
      </property>
      <property name="perspective"
                version="0.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2062">The parameters used for the perspective projection from 3D
coordinates to 2D</doc>
        <type name="Perspective"/>
      </property>
      <property name="title"
                version="0.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2077">The stage's title - usually displayed in stage windows title decorations.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-alpha"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2091">Whether the #ClutterStage should honour the alpha component of the
#ClutterStage:color property when painting. If Clutter is run under
a compositing manager this will result in the stage being blended
with the underlying window(s)</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Group" c:type="ClutterGroup"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="StagePrivate" c:type="ClutterStagePrivate*"/>
      </field>
      <glib:signal name="activate" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2141">The ::activate signal is emitted when the stage receives key focus
from the underlying window system.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="after-paint" when="last" version="1.20">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2205">The ::after-paint signal is emitted after the stage is painted,
but before the results are displayed on the screen.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="deactivate" when="last" version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2157">The ::deactivate signal is emitted when the stage loses key focus
from the underlying window system.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="delete-event" when="last" version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2174">The ::delete-event signal is emitted when the user closes a
#ClutterStage window using the window controls.

Clutter by default will call clutter_main_quit() if @stage is
the default stage, and clutter_actor_destroy() for any other
stage.

It is possible to override the default behaviour by connecting
a new handler and returning %TRUE there.

This signal is emitted only on Clutter backends that
embed #ClutterStage in native windows. It is not emitted for
backends that use a static frame buffer.</doc>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2177">a #ClutterEvent of type %CLUTTER_DELETE</doc>
            <type name="Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="paint-view" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2223">The ::paint-view signal is emitted before a #ClutterStageView is being
painted.

The view is painted in the default handler. Hence, if you want to perform
some action after the view is painted, like reading the contents of the
framebuffer, use g_signal_connect_after() or pass %G_CONNECT_AFTER.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2226">a #ClutterStageView</doc>
            <type name="StageView"/>
          </parameter>
          <parameter name="redraw_clip"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2227">a #cairo_region_t with the redraw clip</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="presented" when="last" introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage.c"
             line="2246">Signals that the #ClutterStage was presented on the screen to the user.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="frame_event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2249">a #CoglFrameEvent</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="frame_info"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage.c"
                 line="2250">a #ClutterFrameInfo</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="StageClass"
            c:type="ClutterStageClass"
            glib:is-gtype-struct-for="Stage"
            version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-stage.h"
           line="63">The #ClutterStageClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="94"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GroupClass" c:type="ClutterGroupClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="../clutter/clutter/clutter-stage.h"
                           line="81"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deactivate">
        <callback name="deactivate">
          <source-position filename="../clutter/clutter/clutter-stage.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_event">
        <callback name="delete_event">
          <source-position filename="../clutter/clutter/clutter-stage.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
            <parameter name="event" transfer-ownership="none">
              <type name="Event" c:type="ClutterEvent*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paint_view">
        <callback name="paint_view">
          <source-position filename="../clutter/clutter/clutter-stage.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
            <parameter name="view" transfer-ownership="none">
              <type name="StageView" c:type="ClutterStageView*"/>
            </parameter>
            <parameter name="redraw_clip" transfer-ownership="none">
              <type name="cairo.Region" c:type="const cairo_region_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" fixed-size="30">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="StageManager"
           c:symbol-prefix="stage_manager"
           c:type="ClutterStageManager"
           version="1.0"
           parent="GObject.Object"
           glib:type-name="ClutterStageManager"
           glib:get-type="clutter_stage_manager_get_type"
           glib:type-struct="StageManagerClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-stage-manager.h"
           line="45">The #ClutterStageManager structure is private.</doc>
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="70"/>
      <function name="get_default"
                c:identifier="clutter_stage_manager_get_default"
                version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="163">Returns the default #ClutterStageManager.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-manager.c"
               line="168">the default stage manager instance. The returned
  object is owned by Clutter and you should not reference or unreference it.</doc>
          <type name="StageManager" c:type="ClutterStageManager*"/>
        </return-value>
      </function>
      <virtual-method name="stage_added">
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage_manager" transfer-ownership="none">
            <type name="StageManager" c:type="ClutterStageManager*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stage_removed">
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage_manager" transfer-ownership="none">
            <type name="StageManager" c:type="ClutterStageManager*"/>
          </instance-parameter>
          <parameter name="stage" transfer-ownership="none">
            <type name="Stage" c:type="ClutterStage*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_default_stage"
              c:identifier="clutter_stage_manager_get_default_stage"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="208">Returns the default #ClutterStage.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-manager.c"
               line="214">the default stage. The returned object
  is owned by Clutter and you should never reference or unreference it</doc>
          <type name="Stage" c:type="ClutterStage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="stage_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-manager.c"
                 line="210">a #ClutterStageManager</doc>
            <type name="StageManager" c:type="ClutterStageManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_stages"
              c:identifier="clutter_stage_manager_list_stages"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="225">Lists all currently used stages.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="80"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-manager.c"
               line="231">a newly
  allocated list of #ClutterStage objects. Use g_slist_free() to
  deallocate it when done.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Stage"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="stage_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-manager.c"
                 line="227">a #ClutterStageManager</doc>
            <type name="StageManager" c:type="ClutterStageManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="peek_stages"
              c:identifier="clutter_stage_manager_peek_stages"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="243">Lists all currently used stages.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-manager.c"
               line="249">a pointer
  to the internal list of #ClutterStage objects. The returned list
  is owned by the #ClutterStageManager and should never be modified
  or freed</doc>
          <type name="GLib.SList" c:type="const GSList*">
            <type name="Stage"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="stage_manager" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-manager.c"
                 line="245">a #ClutterStageManager</doc>
            <type name="StageManager" c:type="ClutterStageManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="default-stage" version="0.8" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="105">The default stage used by Clutter.</doc>
        <type name="Stage"/>
      </property>
      <glib:signal name="stage-added" when="last" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="120">The ::stage-added signal is emitted each time a new #ClutterStage
has been added to the stage manager.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-manager.c"
                 line="123">the added stage</doc>
            <type name="Stage"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="stage-removed" when="last" version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-manager.c"
             line="138">The ::stage-removed signal is emitted each time a #ClutterStage
has been removed from the stage manager.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-manager.c"
                 line="141">the removed stage</doc>
            <type name="Stage"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="StageManagerClass"
            c:type="ClutterStageManagerClass"
            glib:is-gtype-struct-for="StageManager"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-stage-manager.h"
           line="53">The #ClutterStageManagerClass structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                       line="70"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="stage_added">
        <callback name="stage_added">
          <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stage_manager" transfer-ownership="none">
              <type name="StageManager" c:type="ClutterStageManager*"/>
            </parameter>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stage_removed">
        <callback name="stage_removed">
          <source-position filename="../clutter/clutter/clutter-stage-manager.h"
                           line="68"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stage_manager" transfer-ownership="none">
              <type name="StageManager" c:type="ClutterStageManager*"/>
            </parameter>
            <parameter name="stage" transfer-ownership="none">
              <type name="Stage" c:type="ClutterStage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="StagePrivate" c:type="ClutterStagePrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-stage.h"
                       line="46"/>
    </record>
    <bitfield name="StageState"
              version="0.4"
              glib:type-name="ClutterStageState"
              glib:get-type="clutter_stage_state_get_type"
              c:type="ClutterStageState">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="968">Stage state masks, used by the #ClutterEvent of type %CLUTTER_STAGE_STATE.</doc>
      <member name="activated"
              value="8"
              c:identifier="CLUTTER_STAGE_STATE_ACTIVATED"
              glib:nick="activated">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="970">Activated mask</doc>
      </member>
    </bitfield>
    <record name="StageStateEvent"
            c:type="ClutterStageStateEvent"
            version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="349">Event signalling a change in the #ClutterStage state.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="373"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="351">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="352">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="353">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="354">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="355">event source actor (unused)</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="changed_mask" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="356">bitwise OR of the changed flags</doc>
        <type name="StageState" c:type="ClutterStageState"/>
      </field>
      <field name="new_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="357">bitwise OR of the current state flags</doc>
        <type name="StageState" c:type="ClutterStageState"/>
      </field>
    </record>
    <class name="StageView"
           c:symbol-prefix="stage_view"
           c:type="ClutterStageView"
           parent="GObject.Object"
           glib:type-name="ClutterStageView"
           glib:get-type="clutter_stage_view_get_type"
           glib:type-struct="StageViewClass">
      <source-position filename="../clutter/clutter/clutter-stage-view.h"
                       line="46"/>
      <virtual-method name="get_offscreen_transformation_matrix"
                      invoker="get_offscreen_transformation_matrix">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type name="Cogl.Matrix" c:type="CoglMatrix*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="setup_offscreen_blit_pipeline">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
          <parameter name="pipeline" transfer-ownership="none">
            <type name="Cogl.Pipeline" c:type="CoglPipeline*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_framebuffer"
              c:identifier="clutter_stage_view_get_framebuffer">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-view.c"
             line="74">Retrieves the framebuffer of @view to draw to.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-view.c"
               line="80">a #CoglFramebuffer</doc>
          <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-view.c"
                 line="76">a #ClutterStageView</doc>
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layout" c:identifier="clutter_stage_view_get_layout">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="cairo.RectangleInt" c:type="cairo_rectangle_int_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_offscreen_transformation_matrix"
              c:identifier="clutter_stage_view_get_offscreen_transformation_matrix">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type name="Cogl.Matrix" c:type="CoglMatrix*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_onscreen"
              c:identifier="clutter_stage_view_get_onscreen">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-stage-view.c"
             line="96">Retrieves the onscreen framebuffer of @view if available.</doc>
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-stage-view.c"
               line="102">a #CoglFramebuffer</doc>
          <type name="Cogl.Framebuffer" c:type="CoglFramebuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-stage-view.c"
                 line="98">a #ClutterStageView</doc>
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_scale" c:identifier="clutter_stage_view_get_scale">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="65"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="invalidate_offscreen_blit_pipeline"
              c:identifier="clutter_stage_view_invalidate_offscreen_blit_pipeline">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="transform_to_onscreen"
              c:identifier="clutter_stage_view_transform_to_onscreen">
        <source-position filename="../clutter/clutter/clutter-stage-view.h"
                         line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="view" transfer-ownership="none">
            <type name="StageView" c:type="ClutterStageView*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <property name="framebuffer"
                introspectable="0"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="layout"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="cairo.RectangleInt"/>
      </property>
      <property name="offscreen"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="scale"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="shadowfb"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="StageViewClass"
            c:type="ClutterStageViewClass"
            glib:is-gtype-struct-for="StageView">
      <source-position filename="../clutter/clutter/clutter-stage-view.h"
                       line="46"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="setup_offscreen_blit_pipeline">
        <callback name="setup_offscreen_blit_pipeline">
          <source-position filename="../clutter/clutter/clutter-stage-view.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="StageView" c:type="ClutterStageView*"/>
            </parameter>
            <parameter name="pipeline" transfer-ownership="none">
              <type name="Cogl.Pipeline" c:type="CoglPipeline*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_offscreen_transformation_matrix">
        <callback name="get_offscreen_transformation_matrix">
          <source-position filename="../clutter/clutter/clutter-stage-view.h"
                           line="44"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="view" transfer-ownership="none">
              <type name="StageView" c:type="ClutterStageView*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type name="Cogl.Matrix" c:type="CoglMatrix*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="State"
           c:symbol-prefix="state"
           c:type="ClutterState"
           version="1.4"
           parent="GObject.Object"
           glib:type-name="ClutterState"
           glib:get-type="clutter_state_get_type"
           glib:type-struct="StateClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-state.h"
           line="52">The #ClutterState structure contains only
private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="89"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_state_new"
                   version="1.4"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="283">Creates a new #ClutterState</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="95"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="288">the newly create #ClutterState instance</doc>
          <type name="State" c:type="ClutterState*"/>
        </return-value>
      </constructor>
      <virtual-method name="completed">
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_duration"
              c:identifier="clutter_state_get_duration"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1456">Queries the duration used for transitions between a source and
target state pair

The semantics for the query are the same as the semantics used for
setting the duration with clutter_state_set_duration()</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="1470">the duration, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1458">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="source_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1459">the name of the source state to
  get the duration of, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="target_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1461">the name of the source state to
  get the duration of, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state"
              c:identifier="clutter_state_get_state"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1519">Queries the currently set target state.

During a transition this function will return the target of the transition.

This function is useful when called from handlers of the
#ClutterState::completed signal.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="1530">a string containing the target state. The returned string
  is owned by the #ClutterState and should not be modified or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1521">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_states"
              c:identifier="clutter_state_get_states"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1197">Gets a list of all the state names managed by this #ClutterState.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="132"/>
        <return-value transfer-ownership="container">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="1203">a newly allocated
  #GList of state names. The contents of the returned #GList are owned
  by the #ClutterState and should not be modified or freed. Use
  g_list_free() to free the resources allocated by the returned list when
  done using it</doc>
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1199">a #ClutterState instance.</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set"
              c:identifier="clutter_state_set"
              version="1.4"
              introspectable="0"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="849">Adds multiple keys to a named state of a #ClutterState instance, specifying
the easing mode and value a given property of an object should have at a
given progress of the animation.

The mode specified is the easing mode used when going to from the previous
key to the specified key.

For instance, the code below:

|[
  clutter_state_set (state, NULL, "hover",
                     button, "opacity", CLUTTER_LINEAR, 255,
                     button, "scale-x", CLUTTER_EASE_OUT_CUBIC, 1.2,
                     button, "scale-y", CLUTTER_EASE_OUT_CUBIC, 1.2,
                     NULL);
]|

will create a transition from any state (a @source_state_name or NULL is
treated as a wildcard) and a state named "hover"; the
button object will have the #ClutterActor:opacity
property animated to a value of 255 using %CLUTTER_LINEAR as the animation
mode, and the #ClutterActor:scale-x and #ClutterActor:scale-y properties
animated to a value of 1.2 using %CLUTTER_EASE_OUT_CUBIC as the animation
mode. To change the state (and start the transition) you can use the
clutter_state_set_state() function:

|[
  clutter_state_set_state (state, "hover");
]|

If a given object, state_name, property tuple already exist in the
#ClutterState instance, then the mode and value will be replaced with
the new specified values.

If a property name is prefixed with "delayed::" two additional
arguments per key are expected: a value relative to the full state time
to pause before transitioning and a similar value to pause after
transitioning, e.g.:

|[
  clutter_state_set (state, "hover", "toggled",
                     button, "delayed::scale-x", CLUTTER_LINEAR, 1.0, 0.2, 0.2,
                     button, "delayed::scale-y", CLUTTER_LINEAR, 1.0, 0.2, 0.2,
                     NULL);
]|

will pause for 20% of the duration of the transition before animating,
and 20% of the duration after animating.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="851">a #ClutterState instance.</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="source_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="852">the name of the source state keys are being added for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="target_state_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="853">the name of the target state keys are being added for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="854">a #GObject</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="first_property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="855">a property of @first_object to specify a key for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="first_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="856">the id of the alpha function to use</doc>
            <type name="gulong" c:type="gulong"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="857">the value @first_property_name should have in @target_state_name,
  followed by object, property name, mode, value tuples, terminated
  by %NULL</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration"
              c:identifier="clutter_state_set_duration"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1397">Sets the duration of a transition.

If both state names are %NULL the default duration for @state is set.

If only @target_state_name is specified, the passed @duration becomes
the default duration for transitions to the target state.

If both states names are specified, the passed @duration only applies
to the specified transition.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1399">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="source_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1400">the name of the source state, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="target_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1401">the name of the target state, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1402">the duration of the transition, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_key"
              c:identifier="clutter_state_set_key"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1126">Sets one specific end key for a state name, @object, @property_name
combination.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="1145">the #ClutterState instance, allowing
  chaining of multiple calls</doc>
          <type name="State" c:type="ClutterState*"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1128">a #ClutterState instance.</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="source_state_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1129">the source transition to specify
  transition for, or %NULL to specify the default fallback when a
  more specific source state doesn't exist.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="target_state_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1132">the name of the transition to set a key value for.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1133">the #GObject to set a key for</doc>
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="property_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1134">the property to set a key for</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1135">the id of the alpha function to use</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1136">the value for property_name of object in state_name</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
          <parameter name="pre_delay" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1137">relative time of the transition to be idle in the beginning
  of the transition</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
          <parameter name="post_delay" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1139">relative time of the transition to be idle in the end of
  the transition</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_state"
              c:identifier="clutter_state_set_state"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="739">Change the current state of #ClutterState to @target_state_name.

The state will animate during its transition, see
#clutter_state_warp_to_state for animation-free state switching.

Setting a %NULL state will stop the current animation and unset
the current state, but keys will be left intact.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="752">the #ClutterTimeline that drives the
  state transition. The returned timeline is owned by the #ClutterState
  and it should not be unreferenced</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="741">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="target_state_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="742">the state to transition to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="warp_to_state"
              c:identifier="clutter_state_warp_to_state"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="767">Change to the specified target state immediately with no animation.

See clutter_state_set_state().</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="776">the #ClutterTimeline that drives the
  state transition. The returned timeline is owned by the #ClutterState
  and it should not be unreferenced</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <instance-parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="769">a #ClutterState</doc>
            <type name="State" c:type="ClutterState*"/>
          </instance-parameter>
          <parameter name="target_state_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="770">the state to transition to</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="duration"
                version="1.4"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1312">Default duration used if an duration has not been specified for a specific
source/target state pair. The values is in milliseconds.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="state"
                version="1.4"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1292">The currently set target state, setting it causes the
state machine to transition to the new state, use
clutter_state_warp_to_state() to change state without
a transition.</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="StatePrivate" c:type="ClutterStatePrivate*"/>
      </field>
      <glib:signal name="completed"
                   when="last"
                   version="1.4"
                   deprecated="1"
                   deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1272">The ::completed signal is emitted when a #ClutterState reaches
the target state specified by clutter_state_set_state() or
clutter_state_warp_to_state().</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="StateClass"
            c:type="ClutterStateClass"
            glib:is-gtype-struct-for="State"
            version="1.4"
            deprecated="1"
            deprecated-version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-state.h"
           line="67">The #ClutterStateClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="89"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="completed">
        <callback name="completed">
          <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="state" transfer-ownership="none">
              <type name="State" c:type="ClutterState*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding_dummy" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="StateKey"
            c:type="ClutterStateKey"
            version="1.4"
            glib:type-name="ClutterStateKey"
            glib:get-type="clutter_state_key_get_type"
            c:symbol-prefix="state_key">
      <doc xml:space="preserve"
           filename="../clutter/clutter/deprecated/clutter-state.h"
           line="42">#ClutterStateKey is an opaque structure whose
members cannot be accessed directly</doc>
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="50"/>
      <method name="get_property_type"
              c:identifier="clutter_state_key_get_property_type"
              version="1.4"
              deprecated="1"
              deprecated-version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/deprecated/clutter-state.c"
             line="1376">Retrieves the #GType of the property a key applies to</doc>
        <doc-deprecated xml:space="preserve">Use #ClutterKeyframeTransition and
  #ClutterTransitionGroup instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                         line="143"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/deprecated/clutter-state.c"
               line="1382">the #GType of the property</doc>
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="key" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/deprecated/clutter-state.c"
                 line="1378">a #ClutterStateKey</doc>
            <type name="StateKey" c:type="const ClutterStateKey*"/>
          </instance-parameter>
        </parameters>
      </method>
    </record>
    <record name="StatePrivate" c:type="ClutterStatePrivate" disguised="1">
      <source-position filename="../clutter/clutter/deprecated/clutter-state.h"
                       line="39"/>
    </record>
    <enumeration name="StaticColor"
                 version="1.6"
                 glib:type-name="ClutterStaticColor"
                 glib:get-type="clutter_static_color_get_type"
                 c:type="ClutterStaticColor">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="729">Named colors, for accessing global colors defined by Clutter</doc>
      <member name="white"
              value="0"
              c:identifier="CLUTTER_COLOR_WHITE"
              glib:nick="white">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="731">White color (ffffffff)</doc>
      </member>
      <member name="black"
              value="1"
              c:identifier="CLUTTER_COLOR_BLACK"
              glib:nick="black">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="732">Black color (000000ff)</doc>
      </member>
      <member name="red"
              value="2"
              c:identifier="CLUTTER_COLOR_RED"
              glib:nick="red">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="733">Red color (ff0000ff)</doc>
      </member>
      <member name="dark_red"
              value="3"
              c:identifier="CLUTTER_COLOR_DARK_RED"
              glib:nick="dark-red">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="734">Dark red color (800000ff)</doc>
      </member>
      <member name="green"
              value="4"
              c:identifier="CLUTTER_COLOR_GREEN"
              glib:nick="green">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="735">Green color (00ff00ff)</doc>
      </member>
      <member name="dark_green"
              value="5"
              c:identifier="CLUTTER_COLOR_DARK_GREEN"
              glib:nick="dark-green">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="736">Dark green color (008000ff)</doc>
      </member>
      <member name="blue"
              value="6"
              c:identifier="CLUTTER_COLOR_BLUE"
              glib:nick="blue">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="737">Blue color (0000ffff)</doc>
      </member>
      <member name="dark_blue"
              value="7"
              c:identifier="CLUTTER_COLOR_DARK_BLUE"
              glib:nick="dark-blue">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="738">Dark blue color (000080ff)</doc>
      </member>
      <member name="cyan"
              value="8"
              c:identifier="CLUTTER_COLOR_CYAN"
              glib:nick="cyan">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="739">Cyan color (00ffffff)</doc>
      </member>
      <member name="dark_cyan"
              value="9"
              c:identifier="CLUTTER_COLOR_DARK_CYAN"
              glib:nick="dark-cyan">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="740">Dark cyan color (008080ff)</doc>
      </member>
      <member name="magenta"
              value="10"
              c:identifier="CLUTTER_COLOR_MAGENTA"
              glib:nick="magenta">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="741">Magenta color (ff00ffff)</doc>
      </member>
      <member name="dark_magenta"
              value="11"
              c:identifier="CLUTTER_COLOR_DARK_MAGENTA"
              glib:nick="dark-magenta">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="742">Dark magenta color (800080ff)</doc>
      </member>
      <member name="yellow"
              value="12"
              c:identifier="CLUTTER_COLOR_YELLOW"
              glib:nick="yellow">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="743">Yellow color (ffff00ff)</doc>
      </member>
      <member name="dark_yellow"
              value="13"
              c:identifier="CLUTTER_COLOR_DARK_YELLOW"
              glib:nick="dark-yellow">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="744">Dark yellow color (808000ff)</doc>
      </member>
      <member name="gray"
              value="14"
              c:identifier="CLUTTER_COLOR_GRAY"
              glib:nick="gray">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="745">Gray color (a0a0a4ff)</doc>
      </member>
      <member name="dark_gray"
              value="15"
              c:identifier="CLUTTER_COLOR_DARK_GRAY"
              glib:nick="dark-gray">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="746">Dark Gray color (808080ff)</doc>
      </member>
      <member name="light_gray"
              value="16"
              c:identifier="CLUTTER_COLOR_LIGHT_GRAY"
              glib:nick="light-gray">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="747">Light gray color (c0c0c0ff)</doc>
      </member>
      <member name="butter"
              value="17"
              c:identifier="CLUTTER_COLOR_BUTTER"
              glib:nick="butter">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="748">Butter color (edd400ff)</doc>
      </member>
      <member name="butter_light"
              value="18"
              c:identifier="CLUTTER_COLOR_BUTTER_LIGHT"
              glib:nick="butter-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="749">Light butter color (fce94fff)</doc>
      </member>
      <member name="butter_dark"
              value="19"
              c:identifier="CLUTTER_COLOR_BUTTER_DARK"
              glib:nick="butter-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="750">Dark butter color (c4a000ff)</doc>
      </member>
      <member name="orange"
              value="20"
              c:identifier="CLUTTER_COLOR_ORANGE"
              glib:nick="orange">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="751">Orange color (f57900ff)</doc>
      </member>
      <member name="orange_light"
              value="21"
              c:identifier="CLUTTER_COLOR_ORANGE_LIGHT"
              glib:nick="orange-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="752">Light orange color (fcaf3fff)</doc>
      </member>
      <member name="orange_dark"
              value="22"
              c:identifier="CLUTTER_COLOR_ORANGE_DARK"
              glib:nick="orange-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="753">Dark orange color (ce5c00ff)</doc>
      </member>
      <member name="chocolate"
              value="23"
              c:identifier="CLUTTER_COLOR_CHOCOLATE"
              glib:nick="chocolate">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="754">Chocolate color (c17d11ff)</doc>
      </member>
      <member name="chocolate_light"
              value="24"
              c:identifier="CLUTTER_COLOR_CHOCOLATE_LIGHT"
              glib:nick="chocolate-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="755">Light chocolate color (e9b96eff)</doc>
      </member>
      <member name="chocolate_dark"
              value="25"
              c:identifier="CLUTTER_COLOR_CHOCOLATE_DARK"
              glib:nick="chocolate-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="756">Dark chocolate color (8f5902ff)</doc>
      </member>
      <member name="chameleon"
              value="26"
              c:identifier="CLUTTER_COLOR_CHAMELEON"
              glib:nick="chameleon">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="757">Chameleon color (73d216ff)</doc>
      </member>
      <member name="chameleon_light"
              value="27"
              c:identifier="CLUTTER_COLOR_CHAMELEON_LIGHT"
              glib:nick="chameleon-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="758">Light chameleon color (8ae234ff)</doc>
      </member>
      <member name="chameleon_dark"
              value="28"
              c:identifier="CLUTTER_COLOR_CHAMELEON_DARK"
              glib:nick="chameleon-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="759">Dark chameleon color (4e9a06ff)</doc>
      </member>
      <member name="sky_blue"
              value="29"
              c:identifier="CLUTTER_COLOR_SKY_BLUE"
              glib:nick="sky-blue">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="760">Sky color (3465a4ff)</doc>
      </member>
      <member name="sky_blue_light"
              value="30"
              c:identifier="CLUTTER_COLOR_SKY_BLUE_LIGHT"
              glib:nick="sky-blue-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="761">Light sky color (729fcfff)</doc>
      </member>
      <member name="sky_blue_dark"
              value="31"
              c:identifier="CLUTTER_COLOR_SKY_BLUE_DARK"
              glib:nick="sky-blue-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="762">Dark sky color (204a87ff)</doc>
      </member>
      <member name="plum"
              value="32"
              c:identifier="CLUTTER_COLOR_PLUM"
              glib:nick="plum">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="763">Plum color (75507bff)</doc>
      </member>
      <member name="plum_light"
              value="33"
              c:identifier="CLUTTER_COLOR_PLUM_LIGHT"
              glib:nick="plum-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="764">Light plum color (ad7fa8ff)</doc>
      </member>
      <member name="plum_dark"
              value="34"
              c:identifier="CLUTTER_COLOR_PLUM_DARK"
              glib:nick="plum-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="765">Dark plum color (5c3566ff)</doc>
      </member>
      <member name="scarlet_red"
              value="35"
              c:identifier="CLUTTER_COLOR_SCARLET_RED"
              glib:nick="scarlet-red">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="766">Scarlet red color (cc0000ff)</doc>
      </member>
      <member name="scarlet_red_light"
              value="36"
              c:identifier="CLUTTER_COLOR_SCARLET_RED_LIGHT"
              glib:nick="scarlet-red-light">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="767">Light scarlet red color (ef2929ff)</doc>
      </member>
      <member name="scarlet_red_dark"
              value="37"
              c:identifier="CLUTTER_COLOR_SCARLET_RED_DARK"
              glib:nick="scarlet-red-dark">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="768">Dark scarlet red color (a40000ff)</doc>
      </member>
      <member name="aluminium_1"
              value="38"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_1"
              glib:nick="aluminium-1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="769">Aluminium, first variant (eeeeecff)</doc>
      </member>
      <member name="aluminium_2"
              value="39"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_2"
              glib:nick="aluminium-2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="770">Aluminium, second variant (d3d7cfff)</doc>
      </member>
      <member name="aluminium_3"
              value="40"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_3"
              glib:nick="aluminium-3">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="771">Aluminium, third variant (babdb6ff)</doc>
      </member>
      <member name="aluminium_4"
              value="41"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_4"
              glib:nick="aluminium-4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="772">Aluminium, fourth variant (888a85ff)</doc>
      </member>
      <member name="aluminium_5"
              value="42"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_5"
              glib:nick="aluminium-5">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="773">Aluminium, fifth variant (555753ff)</doc>
      </member>
      <member name="aluminium_6"
              value="43"
              c:identifier="CLUTTER_COLOR_ALUMINIUM_6"
              glib:nick="aluminium-6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="774">Aluminium, sixth variant (2e3436ff)</doc>
      </member>
      <member name="transparent"
              value="44"
              c:identifier="CLUTTER_COLOR_TRANSPARENT"
              glib:nick="transparent">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="775">Transparent color (00000000)</doc>
      </member>
    </enumeration>
    <enumeration name="StepMode"
                 version="1.12"
                 glib:type-name="ClutterStepMode"
                 glib:get-type="clutter_step_mode_get_type"
                 c:type="ClutterStepMode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1494">Change the value transition of a step function.

See clutter_timeline_set_step_progress().</doc>
      <member name="start"
              value="0"
              c:identifier="CLUTTER_STEP_MODE_START"
              glib:nick="start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1496">The change in the value of a
  %CLUTTER_STEP progress mode should occur at the start of
  the transition</doc>
      </member>
      <member name="end"
              value="1"
              c:identifier="CLUTTER_STEP_MODE_END"
              glib:nick="end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1499">The change in the value of a
  %CLUTTER_STEP progress mode should occur at the end of
  the transition</doc>
      </member>
    </enumeration>
    <class name="SwipeAction"
           c:symbol-prefix="swipe_action"
           c:type="ClutterSwipeAction"
           version="1.8"
           parent="GestureAction"
           glib:type-name="ClutterSwipeAction"
           glib:get-type="clutter_swipe_action_get_type"
           glib:type-struct="SwipeActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-swipe-action.h"
           line="51">The #ClutterSwipeAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="99"/>
      <constructor name="new"
                   c:identifier="clutter_swipe_action_new"
                   version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-swipe-action.c"
             line="265">Creates a new #ClutterSwipeAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-swipe-action.c"
               line="270">the newly created #ClutterSwipeAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="swept">
        <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="SwipeAction" c:type="ClutterSwipeAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="SwipeDirection" c:type="ClutterSwipeDirection"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="swipe">
        <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="SwipeAction" c:type="ClutterSwipeAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="SwipeDirection" c:type="ClutterSwipeDirection"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GestureAction" c:type="ClutterGestureAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="SwipeActionPrivate" c:type="ClutterSwipeActionPrivate*"/>
      </field>
      <glib:signal name="swept"
                   when="last"
                   version="1.8"
                   deprecated="1"
                   deprecated-version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-swipe-action.c"
             line="208">The ::swept signal is emitted when a swipe gesture is recognized on the
attached actor.</doc>
        <doc-deprecated xml:space="preserve">Use the ::swipe signal instead.</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-swipe-action.c"
                 line="211">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-swipe-action.c"
                 line="212">the main direction of the swipe gesture</doc>
            <type name="SwipeDirection"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="swipe" when="last" version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-swipe-action.c"
             line="233">The ::swipe signal is emitted when a swipe gesture is recognized on the
attached actor.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-swipe-action.c"
               line="242">%TRUE if the swipe should continue, and %FALSE if
  the swipe should be cancelled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-swipe-action.c"
                 line="236">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-swipe-action.c"
                 line="237">the main direction of the swipe gesture</doc>
            <type name="SwipeDirection"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SwipeActionClass"
            c:type="ClutterSwipeActionClass"
            glib:is-gtype-struct-for="SwipeAction"
            version="1.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-swipe-action.h"
           line="67">The #ClutterSwipeActionClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="99"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GestureActionClass" c:type="ClutterGestureActionClass"/>
      </field>
      <field name="swept">
        <callback name="swept">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="SwipeAction" c:type="ClutterSwipeAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="SwipeDirection" c:type="ClutterSwipeDirection"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="swipe">
        <callback name="swipe">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="SwipeAction" c:type="ClutterSwipeAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="SwipeDirection" c:type="ClutterSwipeDirection"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_swipe_action1" introspectable="0">
        <callback name="_clutter_swipe_action1">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_swipe_action2" introspectable="0">
        <callback name="_clutter_swipe_action2">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_swipe_action3" introspectable="0">
        <callback name="_clutter_swipe_action3">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_swipe_action4" introspectable="0">
        <callback name="_clutter_swipe_action4">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_swipe_action5" introspectable="0">
        <callback name="_clutter_swipe_action5">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_swipe_action6" introspectable="0">
        <callback name="_clutter_swipe_action6">
          <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SwipeActionPrivate"
            c:type="ClutterSwipeActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-swipe-action.h"
                       line="48"/>
    </record>
    <bitfield name="SwipeDirection"
              version="1.8"
              glib:type-name="ClutterSwipeDirection"
              glib:get-type="clutter_swipe_direction_get_type"
              c:type="ClutterSwipeDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1155">The main direction of the swipe gesture</doc>
      <member name="up"
              value="1"
              c:identifier="CLUTTER_SWIPE_DIRECTION_UP"
              glib:nick="up">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1157">Upwards swipe gesture</doc>
      </member>
      <member name="down"
              value="2"
              c:identifier="CLUTTER_SWIPE_DIRECTION_DOWN"
              glib:nick="down">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1158">Downwards swipe gesture</doc>
      </member>
      <member name="left"
              value="4"
              c:identifier="CLUTTER_SWIPE_DIRECTION_LEFT"
              glib:nick="left">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1159">Leftwards swipe gesture</doc>
      </member>
      <member name="right"
              value="8"
              c:identifier="CLUTTER_SWIPE_DIRECTION_RIGHT"
              glib:nick="right">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1160">Rightwards swipe gesture</doc>
      </member>
    </bitfield>
    <function-macro name="TAP_ACTION"
                    c:identifier="CLUTTER_TAP_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="46"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TAP_ACTION_CLASS"
                    c:identifier="CLUTTER_TAP_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="48"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TAP_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_TAP_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="50"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT" c:identifier="CLUTTER_TEXT" introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text.h" line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXTURE_NODE"
                    c:identifier="CLUTTER_TEXTURE_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="59"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_BUFFER"
                    c:identifier="CLUTTER_TEXT_BUFFER"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="34"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_BUFFER_CLASS"
                    c:identifier="CLUTTER_TEXT_BUFFER_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="35"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_BUFFER_GET_CLASS"
                    c:identifier="CLUTTER_TEXT_BUFFER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="38"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_CLASS"
                    c:identifier="CLUTTER_TEXT_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text.h" line="40"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_GET_CLASS"
                    c:identifier="CLUTTER_TEXT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-text.h" line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TEXT_NODE"
                    c:identifier="CLUTTER_TEXT_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="125"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TIMELINE"
                    c:identifier="CLUTTER_TIMELINE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="36"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TIMELINE_CLASS"
                    c:identifier="CLUTTER_TIMELINE_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="37"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TIMELINE_GET_CLASS"
                    c:identifier="CLUTTER_TIMELINE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="40"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSFORM_NODE"
                    c:identifier="CLUTTER_TRANSFORM_NODE"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="213"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION"
                    c:identifier="CLUTTER_TRANSITION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION_CLASS"
                    c:identifier="CLUTTER_TRANSITION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION_GET_CLASS"
                    c:identifier="CLUTTER_TRANSITION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION_GROUP"
                    c:identifier="CLUTTER_TRANSITION_GROUP"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="37"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION_GROUP_CLASS"
                    c:identifier="CLUTTER_TRANSITION_GROUP_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="39"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="TRANSITION_GROUP_GET_CLASS"
                    c:identifier="CLUTTER_TRANSITION_GROUP_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="41"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="TapAction"
           c:symbol-prefix="tap_action"
           c:type="ClutterTapAction"
           version="1.14"
           parent="GestureAction"
           glib:type-name="ClutterTapAction"
           glib:get-type="clutter_tap_action_get_type"
           glib:type-struct="TapActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-tap-action.h"
           line="56">The #ClutterTapAction structure contains
only private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="93"/>
      <constructor name="new"
                   c:identifier="clutter_tap_action_new"
                   version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-tap-action.c"
             line="135">Creates a new #ClutterTapAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-tap-action.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-tap-action.c"
               line="140">the newly created #ClutterTapAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="tap">
        <source-position filename="../clutter/clutter/clutter-tap-action.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="TapAction" c:type="ClutterTapAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <field name="parent_instance" readable="0" private="1">
        <type name="GestureAction" c:type="ClutterGestureAction"/>
      </field>
      <glib:signal name="tap" when="last" version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-tap-action.c"
             line="111">The ::tap signal is emitted when the tap gesture is complete.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-tap-action.c"
                 line="114">the #ClutterActor attached to the @action</doc>
            <type name="Actor"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TapActionClass"
            c:type="ClutterTapActionClass"
            glib:is-gtype-struct-for="TapAction">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-tap-action.h"
           line="70">The #ClutterTapActionClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="93"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GestureActionClass" c:type="ClutterGestureActionClass"/>
      </field>
      <field name="tap">
        <callback name="tap">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="TapAction" c:type="ClutterTapAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_tap_action1" introspectable="0">
        <callback name="_clutter_tap_action1">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_tap_action2" introspectable="0">
        <callback name="_clutter_tap_action2">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_tap_action3" introspectable="0">
        <callback name="_clutter_tap_action3">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_tap_action4" introspectable="0">
        <callback name="_clutter_tap_action4">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_tap_action5" introspectable="0">
        <callback name="_clutter_tap_action5">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_tap_action6" introspectable="0">
        <callback name="_clutter_tap_action6">
          <source-position filename="../clutter/clutter/clutter-tap-action.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="TapActionPrivate"
            c:type="ClutterTapActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-tap-action.h"
                       line="53"/>
    </record>
    <class name="Text"
           c:symbol-prefix="text"
           c:type="ClutterText"
           version="1.0"
           parent="Actor"
           glib:type-name="ClutterText"
           glib:get-type="clutter_text_get_type"
           glib:type-struct="TextClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-text.h"
           line="49">The #ClutterText struct contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-text.h" line="97"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Animatable"/>
      <implements name="Container"/>
      <implements name="Scriptable"/>
      <constructor name="new" c:identifier="clutter_text_new" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4648">Creates a new #ClutterText actor. This actor can be used to
display and edit text.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4654">the newly created #ClutterText actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
      </constructor>
      <constructor name="new_full"
                   c:identifier="clutter_text_new_full"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4664">Creates a new #ClutterText actor, using @font_name as the font
description; @text will be used to set the contents of the actor;
and @color will be used as the color to render @text.

This function is equivalent to calling clutter_text_new(),
clutter_text_set_font_name(), clutter_text_set_text() and
clutter_text_set_color().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4678">the newly created #ClutterText actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="font_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4666">a string with a font description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4667">the contents of the actor</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4668">the color to be used to render @text</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_buffer"
                   c:identifier="clutter_text_new_with_buffer"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4856">Creates a new entry with the specified text buffer.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="112"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4862">a new #ClutterText</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4858">The buffer to use for the new #ClutterText.</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_text"
                   c:identifier="clutter_text_new_with_text"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4694">Creates a new #ClutterText actor, using @font_name as the font
description; @text will be used to set the contents of the actor.

This function is equivalent to calling clutter_text_new(),
clutter_text_set_font_name(), and clutter_text_set_text().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4705">the newly created #ClutterText actor</doc>
          <type name="Actor" c:type="ClutterActor*"/>
        </return-value>
        <parameters>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4696">a string with a font description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4697">the contents of the actor</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="activate">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="cursor_changed">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="cursor_event">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="rect" transfer-ownership="none">
            <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="text_changed">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate"
              c:identifier="clutter_text_activate"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5103">Emits the #ClutterText::activate signal, if @self has been set
as activatable using clutter_text_set_activatable().

This function can be used to emit the ::activate signal inside
a #ClutterActor::captured-event or #ClutterActor::key-press-event
signal handlers before the default signal handler for the
#ClutterText is invoked.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="282"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5115">%TRUE if the ::activate signal has been emitted,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5105">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="coords_to_position"
              c:identifier="clutter_text_coords_to_position"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="1149">Retrieves the position of the character at the given coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="284"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="1157">the position of the character</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1151">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1152">the X coordinate, relative to the actor</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1153">the Y coordinate, relative to the actor</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_chars"
              c:identifier="clutter_text_delete_chars"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6587">Deletes @n_chars inside a #ClutterText actor, starting from the
current cursor position.

Somewhat awkwardly, the cursor position is decremented by the same
number of characters you've deleted.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="185"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6589">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6590">the number of characters to delete</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_selection"
              c:identifier="clutter_text_delete_selection"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="1382">Deletes the currently selected text

This function is only useful in subclasses of #ClutterText</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="257"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="1390">%TRUE if text was deleted or if the text actor
  is empty, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1384">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="delete_text"
              c:identifier="clutter_text_delete_text"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6563">Deletes the text inside a #ClutterText actor between @start_pos
and @end_pos.

The starting and ending positions are expressed in characters,
not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="192"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6565">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="start_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6566">starting position</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6567">ending position</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activatable"
              c:identifier="clutter_text_get_activatable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5085">Retrieves whether a #ClutterText is activatable or not.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="208"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5091">%TRUE if the actor is activatable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5087">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_attributes"
              c:identifier="clutter_text_get_attributes"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6076">Gets the attribute list that was set on the #ClutterText actor
clutter_text_set_attributes(), if any.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="164"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6083">the attribute list, or %NULL if none was set. The
 returned value is owned by the #ClutterText and should not be unreferenced.</doc>
          <type name="Pango.AttrList" c:type="PangoAttrList*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6078">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_buffer"
              c:identifier="clutter_text_get_buffer"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4873">Get the #ClutterTextBuffer object which holds the text for
this widget.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4880">A #GtkEntryBuffer object.</doc>
          <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4875">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_chars"
              c:identifier="clutter_text_get_chars"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6616">Retrieves the contents of the #ClutterText actor between
@start_pos and @end_pos, but not including @end_pos.

The positions are specified in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="196"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6627">a newly allocated string with the contents of
  the text actor between the specified positions. Use g_free()
  to free the resources when done</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6618">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="start_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6619">start of text, in characters</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6620">end of text, in characters</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="clutter_text_get_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5797">Retrieves the text color as set by clutter_text_set_color().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5799">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5800">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cursor_color"
              c:identifier="clutter_text_get_cursor_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5217">Retrieves the color of the cursor of a #ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="224"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5219">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5220">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cursor_position"
              c:identifier="clutter_text_get_cursor_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6251">Retrieves the cursor position.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6257">the cursor position, in characters</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6253">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cursor_rect"
              c:identifier="clutter_text_get_cursor_rect"
              version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6826">Retrieves the rectangle that contains the cursor.

The coordinates of the rectangle's origin are in actor-relative
coordinates.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="232"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6828">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6829">return location of a #ClutterRect</doc>
            <type name="Graphene.Rect" c:type="graphene_rect_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cursor_size"
              c:identifier="clutter_text_get_cursor_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6347">Retrieves the size of the cursor of a #ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="230"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6353">the size of the cursor, in pixels</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6349">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cursor_visible"
              c:identifier="clutter_text_get_cursor_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5178">Retrieves whether the cursor of a #ClutterText actor is visible.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="219"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5184">%TRUE if the cursor is visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5180">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_editable"
              c:identifier="clutter_text_get_editable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4981">Retrieves whether a #ClutterText is editable or not.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="4987">%TRUE if the actor is editable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4983">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_ellipsize"
              c:identifier="clutter_text_get_ellipsize"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5855">Returns the ellipsizing position of a #ClutterText actor, as
set by clutter_text_set_ellipsize().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="147"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5862">#PangoEllipsizeMode</doc>
          <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5857">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_description"
              c:identifier="clutter_text_get_font_description"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5493">Retrieves the #PangoFontDescription used by @self</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="141"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5499">a #PangoFontDescription. The returned value is owned
  by the #ClutterText actor and it should not be modified or freed</doc>
          <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5495">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_font_name"
              c:identifier="clutter_text_get_font_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5512">Retrieves the font name as set by clutter_text_set_font_name().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5518">a string containing the font name. The returned
  string is owned by the #ClutterText actor and should not be
  modified or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5514">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_input_hints"
              c:identifier="clutter_text_get_input_hints">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="312"/>
        <return-value transfer-ownership="none">
          <type name="InputContentHintFlags"
                c:type="ClutterInputContentHintFlags"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_input_purpose"
              c:identifier="clutter_text_get_input_purpose">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="314"/>
        <return-value transfer-ownership="none">
          <type name="InputContentPurpose"
                c:type="ClutterInputContentPurpose"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_justify"
              c:identifier="clutter_text_get_justify"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6232">Retrieves whether the #ClutterText actor should justify its contents
on both margins.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6239">%TRUE if the text should be justified</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6234">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layout"
              c:identifier="clutter_text_get_layout"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5742">Retrieves the current #PangoLayout used by a #ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5748">a #PangoLayout. The returned object is owned by
  the #ClutterText actor and should not be modified or freed</doc>
          <type name="Pango.Layout" c:type="PangoLayout*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5744">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_layout_offsets"
              c:identifier="clutter_text_get_layout_offsets"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6797">Obtains the coordinates where the #ClutterText will draw the #PangoLayout
representing the text.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="301"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6799">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6800">location to store X offset of layout, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6801">location to store Y offset of layout, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_line_alignment"
              c:identifier="clutter_text_get_line_alignment"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6130">Retrieves the alignment of a #ClutterText, as set by
clutter_text_set_line_alignment().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="174"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6137">a #PangoAlignment</doc>
          <type name="Pango.Alignment" c:type="PangoAlignment"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6132">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_line_wrap"
              c:identifier="clutter_text_get_line_wrap"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5874">Retrieves the value set using clutter_text_set_line_wrap().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5880">%TRUE if the #ClutterText actor should wrap
  its contents</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5876">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_line_wrap_mode"
              c:identifier="clutter_text_get_line_wrap_mode"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5958">Retrieves the line wrap mode used by the #ClutterText actor.

See clutter_text_set_line_wrap_mode ().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5966">the wrap mode used by the #ClutterText</doc>
          <type name="Pango.WrapMode" c:type="PangoWrapMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5960">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length"
              c:identifier="clutter_text_get_max_length"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6439">Gets the maximum length of text that can be set into a text actor.

See clutter_text_set_max_length().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="267"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6447">the maximum number of characters.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6441">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_password_char"
              c:identifier="clutter_text_get_password_char"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6399">Retrieves the character to use in place of the actual text
as set by clutter_text_set_password_char().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="262"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6406">a Unicode character or 0 if the password
  character is not set</doc>
          <type name="gunichar" c:type="gunichar"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6401">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selectable"
              c:identifier="clutter_text_get_selectable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5031">Retrieves whether a #ClutterText is selectable or not.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="238"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5037">%TRUE if the actor is selectable</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5033">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_text_color"
              c:identifier="clutter_text_get_selected_text_color"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5447">Retrieves the color of selected text of a #ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="278"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5449">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5450">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_selection"
              c:identifier="clutter_text_get_selection"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5272">Retrieves the currently selected text.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="249"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5278">a newly allocated string containing the currently
  selected text, or %NULL. Use g_free() to free the returned
  string.</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5274">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selection_bound"
              c:identifier="clutter_text_get_selection_bound"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5360">Retrieves the other end of the selection of a #ClutterText actor,
in characters from the current cursor position.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="243"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5367">the position of the other end of the selection</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5362">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selection_color"
              c:identifier="clutter_text_get_selection_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5402">Retrieves the color of the selection of a #ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="254"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5404">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5405">return location for a #ClutterColor</doc>
            <type name="Color" c:type="ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_single_line_mode"
              c:identifier="clutter_text_get_single_line_mode"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6712">Retrieves whether the #ClutterText actor is in single line mode.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="272"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6718">%TRUE if the #ClutterText actor is in single line mode</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6714">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="clutter_text_get_text"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5613">Retrieves a pointer to the current contents of a #ClutterText
actor.

If you need a copy of the contents for manipulating, either
use g_strdup() on the returned string, or use:

|[
   copy = clutter_text_get_chars (text, 0, -1);
]|

Which will return a newly allocated string.

If the #ClutterText actor is empty, this function will return
an empty string, and not %NULL.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="119"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="5632">the contents of the actor. The returned
  string is owned by the #ClutterText actor and should never be modified
  or freed</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5615">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_markup"
              c:identifier="clutter_text_get_use_markup"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6182">Retrieves whether the contents of the #ClutterText actor should be
parsed for the Pango text markup.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="169"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="6189">%TRUE if the contents will be parsed for markup</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6184">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="has_preedit" c:identifier="clutter_text_has_preedit">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="317"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_text"
              c:identifier="clutter_text_insert_text"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6514">Inserts @text into a #ClutterActor at the given position.

If @position is a negative number, the text will be appended
at the end of the current contents of the #ClutterText.

The position is expressed in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="188"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6516">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6517">the text to be inserted</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6518">the position of the insertion, or -1</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert_unichar"
              c:identifier="clutter_text_insert_unichar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6486">Inserts @wc at the current cursor position of a
#ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6488">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="wc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6489">a Unicode character</doc>
            <type name="gunichar" c:type="gunichar"/>
          </parameter>
        </parameters>
      </method>
      <method name="position_to_coords"
              c:identifier="clutter_text_position_to_coords"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="1276">Retrieves the coordinates of the given @position.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="288"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text.c"
               line="1286">%TRUE if the conversion was successful</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1278">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1279">position in characters</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1280">return location for the X coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1281">return location for the Y coordinate, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
          <parameter name="line_height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="1282">return location for the line height, or %NULL</doc>
            <type name="gfloat" c:type="gfloat*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_activatable"
              c:identifier="clutter_text_set_activatable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5049">Sets whether a #ClutterText actor should be activatable.

An activatable #ClutterText actor will emit the #ClutterText::activate
signal whenever the 'Enter' (or 'Return') key is pressed; if it is not
activatable, a new line will be appended to the current content.

An activatable #ClutterText must also be set as editable using
clutter_text_set_editable().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="205"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5051">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="activatable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5052">whether the #ClutterText actor should be activatable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes"
              c:identifier="clutter_text_set_attributes"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6027">Sets the attributes list that are going to be applied to the
#ClutterText contents.

The #ClutterText actor will take a reference on the #PangoAttrList
passed to this function.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6029">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="attrs"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6030">a #PangoAttrList or %NULL to unset the attributes</doc>
            <type name="Pango.AttrList" c:type="PangoAttrList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_buffer"
              c:identifier="clutter_text_set_buffer"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4892">Set the #ClutterTextBuffer object which holds the text for
this widget.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4894">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4895">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="clutter_text_set_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5773">Sets the color of the contents of a #ClutterText actor.

The overall opacity of the #ClutterText actor will be the
result of the alpha value of @color and the composited
opacity of the actor itself on the scenegraph, as returned
by clutter_actor_get_paint_opacity().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5775">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5776">a #ClutterColor</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_color"
              c:identifier="clutter_text_set_cursor_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5196">Sets the color of the cursor of a #ClutterText actor.

If @color is %NULL, the cursor color will be the same as the
text color.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="221"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5198">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5199">the color of the cursor, or %NULL to unset it</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_position"
              c:identifier="clutter_text_set_cursor_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6269">Sets the cursor of a #ClutterText actor at @position.

The position is expressed in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="213"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6271">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6272">the new cursor position, in characters</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_size"
              c:identifier="clutter_text_set_cursor_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6312">Sets the size of the cursor of a #ClutterText. The cursor
will only be visible if the #ClutterText:cursor-visible property
is set to %TRUE.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="227"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6314">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6315">the size of the cursor, in pixels, or -1 to use the
  default value</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cursor_visible"
              c:identifier="clutter_text_set_cursor_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5138">Sets whether the cursor of a #ClutterText actor should be
visible or not.

The color of the cursor will be the same as the text color
unless clutter_text_set_cursor_color() has been called.

The size of the cursor can be set using clutter_text_set_cursor_size().

The position of the cursor can be changed programmatically using
clutter_text_set_cursor_position().</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="216"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5140">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="cursor_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5141">whether the cursor should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_editable"
              c:identifier="clutter_text_set_editable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4938">Sets whether the #ClutterText actor should be editable.

An editable #ClutterText with key focus set using
clutter_actor_grab_key_focus() or clutter_stage_set_key_focus()
will receive key events and will update its contents accordingly.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="200"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4940">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="editable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4941">whether the #ClutterText should be editable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ellipsize"
              c:identifier="clutter_text_set_ellipsize"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5820">Sets the mode used to ellipsize (add an ellipsis: "...") to the
text if there is not enough space to render the entire contents
of a #ClutterText actor</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5822">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5823">a #PangoEllipsizeMode</doc>
            <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font_description"
              c:identifier="clutter_text_set_font_description"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5470">Sets @font_desc as the font description for a #ClutterText

The #PangoFontDescription is copied by the #ClutterText actor
so you can safely call pango_font_description_free() on it after
calling this function.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5472">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="font_desc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5473">a #PangoFontDescription</doc>
            <type name="Pango.FontDescription" c:type="PangoFontDescription*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_font_name"
              c:identifier="clutter_text_set_font_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5532">Sets the font used by a #ClutterText. The @font_name string
must either be %NULL, which means that the font name from the
default #ClutterBackend will be used; or be something that can
be parsed by the pango_font_description_from_string() function,
like:

|[
  // Set the font to the system's Sans, 10 points
  clutter_text_set_font_name (text, "Sans 10");

  // Set the font to the system's Serif, 16 pixels
  clutter_text_set_font_name (text, "Serif 16px");

  // Set the font to Helvetica, 10 points
  clutter_text_set_font_name (text, "Helvetica 10");
]|</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5534">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5535">a font name, or %NULL to set the default font name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_hints"
              c:identifier="clutter_text_set_input_hints">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="306"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="hints" transfer-ownership="none">
            <type name="InputContentHintFlags"
                  c:type="ClutterInputContentHintFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_input_purpose"
              c:identifier="clutter_text_set_input_purpose">
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="309"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="purpose" transfer-ownership="none">
            <type name="InputContentPurpose"
                  c:type="ClutterInputContentPurpose"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_justify"
              c:identifier="clutter_text_set_justify"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6201">Sets whether the text of the #ClutterText actor should be justified
on both margins. This setting is ignored if Clutter is compiled
against Pango &amp;lt; 1.18.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6203">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="justify" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6204">whether the text should be justified</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line_alignment"
              c:identifier="clutter_text_set_line_alignment"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6096">Sets the way that the lines of a wrapped label are aligned with
respect to each other. This does not affect the overall alignment
of the label within its allocated or specified width.

To align a #ClutterText actor you should add it to a container
that supports alignment, or use the anchor point.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="171"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6098">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="alignment" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6099">A #PangoAlignment</doc>
            <type name="Pango.Alignment" c:type="PangoAlignment"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line_wrap"
              c:identifier="clutter_text_set_line_wrap"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5893">Sets whether the contents of a #ClutterText actor should wrap,
if they don't fit the size assigned to the actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5895">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="line_wrap" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5896">whether the contents should wrap</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_line_wrap_mode"
              c:identifier="clutter_text_set_line_wrap_mode"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5925">If line wrapping is enabled (see clutter_text_set_line_wrap()) this
function controls how the line wrapping is performed. The default is
%PANGO_WRAP_WORD which means wrap on word boundaries.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5927">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="wrap_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5928">the line wrapping mode</doc>
            <type name="Pango.WrapMode" c:type="PangoWrapMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_markup"
              c:identifier="clutter_text_set_markup"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5710">Sets @markup as the contents of a #ClutterText.

This is a convenience function for setting a string containing
Pango markup, and it is logically equivalent to:

|[
  /&amp;ast; the order is important &amp;ast;/
  clutter_text_set_text (CLUTTER_TEXT (actor), markup);
  clutter_text_set_use_markup (CLUTTER_TEXT (actor), TRUE);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5712">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="markup"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5713">a string containing Pango markup.
  Passing %NULL is the same as passing "" (the empty string)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length"
              c:identifier="clutter_text_set_max_length"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6419">Sets the maximum allowed length of the contents of the actor. If the
current contents are longer than the given length, then they will be
truncated to fit.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="264"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6421">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="max" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6422">the maximum number of characters allowed in the text actor; 0
  to disable or -1 to set the length of the current string</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_password_char"
              c:identifier="clutter_text_set_password_char"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6365">Sets the character to use in place of the actual text in a
password text actor.

If @wc is 0 the text will be displayed as it is entered in the
#ClutterText actor.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="259"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6367">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="wc" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6368">a Unicode character, or 0 to unset the password character</doc>
            <type name="gunichar" c:type="gunichar"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_preedit_string"
              c:identifier="clutter_text_set_preedit_string"
              version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6730">Sets, or unsets, the pre-edit string. This function is useful
for input methods to display a string (with eventual specific
Pango attributes) before it is entered inside the #ClutterText
buffer.

The preedit string and attributes are ignored if the #ClutterText
actor is not editable.

This function should not be used by applications</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="295"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6732">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="preedit_str"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6733">the pre-edit string, or %NULL to unset it</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="preedit_attrs"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6734">the pre-edit string attributes</doc>
            <type name="Pango.AttrList" c:type="PangoAttrList*"/>
          </parameter>
          <parameter name="cursor_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6735">the cursor position for the pre-edit string</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selectable"
              c:identifier="clutter_text_set_selectable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4999">Sets whether a #ClutterText actor should be selectable.

A selectable #ClutterText will allow selecting its contents using
the pointer or the keyboard.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="235"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5001">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="selectable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5002">whether the #ClutterText actor should be selectable</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selected_text_color"
              c:identifier="clutter_text_set_selected_text_color"
              version="1.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5425">Sets the selected text color of a #ClutterText actor.

If @color is %NULL, the selected text color will be the same as the
selection color, which then falls back to cursor, and then text color.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="275"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5427">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5428">the selected text color, or %NULL to unset it</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection"
              c:identifier="clutter_text_set_selection"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5240">Selects the region of text between @start_pos and @end_pos.

This function changes the position of the cursor to match
@start_pos and the selection bound to match @end_pos.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="245"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5242">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="start_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5243">start of the selection, in characters</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5244">end of the selection, in characters</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection_bound"
              c:identifier="clutter_text_set_selection_bound"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5323">Sets the other end of the selection, starting from the current
cursor position.

If @selection_bound is -1, the selection unset.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5325">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="selection_bound" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5326">the position of the end of the selection, in characters</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selection_color"
              c:identifier="clutter_text_set_selection_color"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5379">Sets the color of the selection of a #ClutterText actor.

If @color is %NULL, the selection color will be the same as the
cursor color, or if no cursor color is set either then it will be
the same as the text color.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="251"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5381">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5382">the color of the selection, or %NULL to unset it</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_single_line_mode"
              c:identifier="clutter_text_set_single_line_mode"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6659">Sets whether a #ClutterText actor should be in single line mode
or not. Only editable #ClutterText&lt;!-- --&gt;s can be in single line
mode.

A text actor in single line mode will not wrap text and will clip
the visible area to the predefined size. The contents of the
text actor will scroll to display the end of the text if its length
is bigger than the allocated width.

When setting the single line mode the #ClutterText:activatable
property is also set as a side effect. Instead of entering a new
line character, the text actor will emit the #ClutterText::activate
signal.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="269"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6661">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="single_line" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6662">whether to enable single line mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text"
              c:identifier="clutter_text_set_text"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="5675">Sets the contents of a #ClutterText actor.

If the #ClutterText:use-markup property was set to %TRUE it
will be reset to %FALSE as a side effect. If you want to
maintain the #ClutterText:use-markup you should use the
clutter_text_set_markup() function instead</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="121"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5677">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="5678">the text to set. Passing %NULL is the same
  as passing "" (the empty string)</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_markup"
              c:identifier="clutter_text_set_use_markup"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="6149">Sets whether the contents of the #ClutterText actor contains markup
in &lt;link linkend="PangoMarkupFormat"&gt;Pango's text markup language&lt;/link&gt;.

Setting #ClutterText:use-markup on an editable #ClutterText will
not have any effect except hiding the markup.

See also #ClutterText:use-markup.</doc>
        <source-position filename="../clutter/clutter/clutter-text.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6151">a #ClutterText</doc>
            <type name="Text" c:type="ClutterText*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="6152">%TRUE if the text should be parsed for markup.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="activatable"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3955">Toggles whether return invokes the activate signal or not.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="attributes"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4119">A list of #PangoStyleAttribute&lt;!-- --&gt;s to be applied to the
contents of the #ClutterText actor.</doc>
        <type name="Pango.AttrList"/>
      </property>
      <property name="buffer"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3835">The buffer which stores the text for this #ClutterText.

If set to %NULL, a default buffer will be created.</doc>
        <type name="TextBuffer"/>
      </property>
      <property name="color"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3905">The color used to render the text.</doc>
        <type name="Color"/>
      </property>
      <property name="cursor-color"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3989">The color of the cursor.</doc>
        <type name="Color"/>
      </property>
      <property name="cursor-color-set"
                version="1.0"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4005">Will be set to %TRUE if #ClutterText:cursor-color has been set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="cursor-position"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4056">The current input cursor position. -1 is taken to be the end of the text</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="cursor-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4020">The size of the cursor, in pixels. If set to -1 the size used will
be the default cursor size of 2 pixels.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="cursor-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3970">Whether the input cursor is visible or not.

The cursor will only be visible if this property and either
the #ClutterText:editable or the #ClutterText:selectable properties
are set to %TRUE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="editable"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3921">Whether key events delivered to the actor causes editing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="ellipsize"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4192">The preferred place to ellipsize the contents of the #ClutterText actor</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="font-description"
                version="1.2"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3870">The #PangoFontDescription that should be used by the #ClutterText

If you have a string describing the font then you should look at
#ClutterText:font-name instead</doc>
        <type name="Pango.FontDescription"/>
      </property>
      <property name="font-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3852">The font to be used by the #ClutterText, as a string
that can be parsed by pango_font_description_from_string().

If set to %NULL, the default system font will be used instead.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="input-hints" writable="1" transfer-ownership="none">
        <type name="InputContentHintFlags"/>
      </property>
      <property name="input-purpose" writable="1" transfer-ownership="none">
        <type name="InputContentPurpose"/>
      </property>
      <property name="justify"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4225">Whether the contents of the #ClutterText should be justified
on both margins.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="line-alignment"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4208">The preferred alignment for the text. This property controls
the alignment of multi-line paragraphs.</doc>
        <type name="Pango.Alignment"/>
      </property>
      <property name="line-wrap"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4158">Whether to wrap the lines of #ClutterText:text if the contents
exceed the available allocation. The wrapping strategy is
controlled by the #ClutterText:line-wrap-mode property.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="line-wrap-mode"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4175">If #ClutterText:line-wrap is set to %TRUE, this property will
control how the text is wrapped.</doc>
        <type name="Pango.WrapMode"/>
      </property>
      <property name="max-length"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4257">The maximum length of the contents of the #ClutterText actor.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="password-char"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4241">If non-zero, the character that should be used in place of
the actual text in a password text actor.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="position"
                version="1.0"
                deprecated="1"
                deprecated-version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4036">The current input cursor position. -1 is taken to be the end of the text</doc>
        <doc-deprecated xml:space="preserve">Use ClutterText:cursor-position instead.</doc-deprecated>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="selectable"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3936">Whether it is possible to select text, either using the pointer
or the keyboard.

This property depends on the #ClutterActor:reactive property being
set to %TRUE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="selected-text-color"
                version="1.8"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4296">The color of selected text.</doc>
        <type name="Color"/>
      </property>
      <property name="selected-text-color-set"
                version="1.8"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4312">Will be set to %TRUE if #ClutterText:selected-text-color has been set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="selection-bound"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4072">The current input cursor position. -1 is taken to be the end of the text</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="selection-color"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4088">The color of the selection.</doc>
        <type name="Color"/>
      </property>
      <property name="selection-color-set"
                version="1.0"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4104">Will be set to %TRUE if #ClutterText:selection-color has been set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="single-line-mode"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4272">Whether the #ClutterText actor should be in single line mode
or not. A single line #ClutterText actor will only contain a
single line of text, scrolling it in case its length is bigger
than the allocated size.

Setting this property will also set the #ClutterText:activatable
property as a side-effect.

The #ClutterText:single-line-mode property is used only if the
#ClutterText:editable property is set to %TRUE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="text"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="3890">The text to render inside the actor.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-markup"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4135">Whether the text includes Pango markup.

For more informations about the Pango markup format, see
pango_layout_set_markup() in the Pango documentation.

It is not possible to round-trip this property between
%TRUE and %FALSE. Once a string with markup has been set on
a #ClutterText actor with :use-markup set to %TRUE, the markup
is stripped from the string.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Actor" c:type="ClutterActor"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="TextPrivate" c:type="ClutterTextPrivate*"/>
      </field>
      <glib:signal name="activate" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4449">The ::activate signal is emitted each time the actor is 'activated'
by the user, normally by pressing the 'Enter' key. The signal is
emitted only if #ClutterText:activatable is set to %TRUE.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="cursor-changed" when="last" version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4432">The ::cursor-changed signal is emitted whenever the cursor
position or size changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="cursor-event"
                   when="last"
                   version="1.0"
                   deprecated="1"
                   deprecated-version="1.16">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4409">The ::cursor-event signal is emitted whenever the cursor position
changes inside a #ClutterText actor. Inside @rect it is stored
the current position and size of the cursor, relative to the actor
itself.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterText::cursor-changed signal instead</doc-deprecated>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rect" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4412">the coordinates of the cursor</doc>
            <type name="Graphene.Rect"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="delete-text" when="last" action="1" version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4387">This signal is emitted when text is deleted from the actor by
the user. It is emitted before @self text changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="start_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4390">the starting position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="end_pos" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4391">the end position</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="insert-text" when="last" action="1" version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4359">This signal is emitted when text is inserted into the actor by
the user. It is emitted before @self text changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="new_text" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4362">the new text to insert</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="new_text_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4363">the length of the new text, in bytes, or -1 if
    new_text is nul-terminated</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="position"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text.c"
                 line="4365">the position, in characters, at which to insert the
    new text. this is an in-out parameter.  After the signal
    emission is finished, it should point after the newly
    inserted text.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="text-changed" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text.c"
             line="4343">The ::text-changed signal is emitted after @actor's text changes</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="TextBuffer"
           c:symbol-prefix="text_buffer"
           c:type="ClutterTextBuffer"
           version="1.10"
           parent="GObject.Object"
           glib:type-name="ClutterTextBuffer"
           glib:get-type="clutter_text_buffer_get_type"
           glib:type-struct="TextBufferClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-text-buffer.h"
           line="53">The #ClutterTextBuffer structure contains private
data and it should only be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="124"/>
      <constructor name="new"
                   c:identifier="clutter_text_buffer_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="431">Create a new ClutterTextBuffer object.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="130"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="436">A new ClutterTextBuffer object.</doc>
          <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_text"
                   c:identifier="clutter_text_buffer_new_with_text"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="447">Create a new ClutterTextBuffer object with some text.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="132"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="454">A new ClutterTextBuffer object.</doc>
          <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
        </return-value>
        <parameters>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="449">initial buffer text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="text_len" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="450">initial buffer text length, or -1 for null-terminated.</doc>
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="delete_text" invoker="delete_text" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="681">Deletes a sequence of characters from the buffer. @n_chars characters are
deleted starting at @position. If @n_chars is negative, then all characters
until the end of the text are deleted.

If @position or @n_chars are out of bounds, then they are coerced to sane
values.

Note that the positions are specified in characters, not bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="696">The number of characters deleted.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="683">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="684">position at which to delete text</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="685">number of characters to delete</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="deleted_text">
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_length" invoker="get_length" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="469">Retrieves the length in characters of the buffer.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="475">The number of characters in the buffer.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="471">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_text">
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="n_bytes" transfer-ownership="none">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="insert_text" invoker="insert_text" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="623">Inserts @n_chars characters of @chars into the contents of the
buffer, at position @position.

If @n_chars is negative, then characters from chars will be inserted
until a null-terminator is found. If @position or @n_chars are out of
bounds, or the maximum buffer text length is exceeded, then they are
coerced to sane values.

Note that the position and length are in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="640">The number of characters actually inserted.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="625">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="626">the position at which to insert text.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="627">the text to insert into the buffer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="628">the length of the text in characters, or -1</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="inserted_text">
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="chars" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="delete_text"
              c:identifier="clutter_text_buffer_delete_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="681">Deletes a sequence of characters from the buffer. @n_chars characters are
deleted starting at @position. If @n_chars is negative, then all characters
until the end of the text are deleted.

If @position or @n_chars are out of bounds, then they are coerced to sane
values.

Note that the positions are specified in characters, not bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="157"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="696">The number of characters deleted.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="683">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="684">position at which to delete text</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="685">number of characters to delete</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_deleted_text"
              c:identifier="clutter_text_buffer_emit_deleted_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="747">Emits the #ClutterTextBuffer::deleted-text signal on @buffer.

Used when subclassing #ClutterTextBuffer</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="166"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="749">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="750">position at which text was deleted</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="751">number of characters deleted</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_inserted_text"
              c:identifier="clutter_text_buffer_emit_inserted_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="724">Emits the #ClutterTextBuffer::inserted-text signal on @buffer.

Used when subclassing #ClutterTextBuffer</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="726">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="727">position at which text was inserted</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="728">text that was inserted</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="729">number of characters inserted</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_bytes"
              c:identifier="clutter_text_buffer_get_bytes"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="492">Retrieves the length in bytes of the buffer.
See clutter_text_buffer_get_length().</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="136"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="499">The byte length of the buffer.</doc>
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="494">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_length"
              c:identifier="clutter_text_buffer_get_length"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="469">Retrieves the length in characters of the buffer.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="138"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="475">The number of characters in the buffer.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="471">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_max_length"
              c:identifier="clutter_text_buffer_get_max_length"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="604">Retrieves the maximum allowed length of the text in
@buffer. See clutter_text_buffer_set_max_length().</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="611">the maximum allowed number of characters
              in #ClutterTextBuffer, or 0 if there is no maximum.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="606">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text"
              c:identifier="clutter_text_buffer_get_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="518">Retrieves the contents of the buffer.

The memory pointer returned by this call will not change
unless this object emits a signal, or is finalized.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="527">a pointer to the contents of the widget as a
     string. This string points to internally allocated
     storage in the buffer and must not be freed, modified or
     stored.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="520">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert_text"
              c:identifier="clutter_text_buffer_insert_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="623">Inserts @n_chars characters of @chars into the contents of the
buffer, at position @position.

If @n_chars is negative, then characters from chars will be inserted
until a null-terminator is found. If @position or @n_chars are out of
bounds, or the maximum buffer text length is exceeded, then they are
coerced to sane values.

Note that the position and length are in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="152"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-text-buffer.c"
               line="640">The number of characters actually inserted.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="625">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="626">the position at which to insert text.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="627">the text to insert into the buffer.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="628">the length of the text in characters, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_max_length"
              c:identifier="clutter_text_buffer_set_max_length"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="576">Sets the maximum allowed length of the contents of the buffer. If
the current contents are longer than the given length, then they
will be truncated to fit.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="578">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="max_length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="579">the maximum length of the entry buffer, or 0 for no maximum.
  (other than the maximum length of entries.) The value passed in will
  be clamped to the range [ 0, %CLUTTER_TEXT_BUFFER_MAX_SIZE ].</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text"
              c:identifier="clutter_text_buffer_set_text"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="547">Sets the text in the buffer.

This is roughly equivalent to calling clutter_text_buffer_delete_text()
and clutter_text_buffer_insert_text().

Note that @n_chars is in characters, not in bytes.</doc>
        <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                         line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="buffer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="549">a #ClutterTextBuffer</doc>
            <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
          </instance-parameter>
          <parameter name="chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="550">the new text</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="551">the number of characters in @text, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="length" version="1.10" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="352">The length (in characters) of the text in buffer.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="max-length"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="366">The maximum length (in characters) of the text in the buffer.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="text" version="1.10" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="338">The contents of the buffer.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="TextBufferPrivate" c:type="ClutterTextBufferPrivate*"/>
      </field>
      <glib:signal name="deleted-text" when="first" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="405">This signal is emitted after text is deleted from the buffer.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="408">the position the text was deleted at.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="409">The number of characters that were deleted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="inserted-text" when="first" version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-text-buffer.c"
             line="382">This signal is emitted after text is inserted into the buffer.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="385">the position the text was inserted at.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="386">The text that was inserted.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="n_chars" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="387">The number of characters that were inserted.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TextBufferClass"
            c:type="ClutterTextBufferClass"
            glib:is-gtype-struct-for="TextBuffer"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-text-buffer.h"
           line="69">The #ClutterTextBufferClass structure contains
only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="124"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="inserted_text">
        <callback name="inserted_text">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="chars" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="n_chars" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deleted_text">
        <callback name="deleted_text">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="n_chars" transfer-ownership="none">
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_text">
        <callback name="get_text">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
            <parameter name="n_bytes" transfer-ownership="none">
              <type name="gsize" c:type="gsize*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_length">
        <callback name="get_length">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="103"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="475">The number of characters in the buffer.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="471">a #ClutterTextBuffer</doc>
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="insert_text">
        <callback name="insert_text">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="105"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="640">The number of characters actually inserted.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="625">a #ClutterTextBuffer</doc>
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="626">the position at which to insert text.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="chars" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="627">the text to insert into the buffer.</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="n_chars" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="628">the length of the text in characters, or -1</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_text">
        <callback name="delete_text">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="110"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-text-buffer.c"
                 line="696">The number of characters deleted.</doc>
            <type name="guint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="buffer" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="683">a #ClutterTextBuffer</doc>
              <type name="TextBuffer" c:type="ClutterTextBuffer*"/>
            </parameter>
            <parameter name="position" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="684">position at which to delete text</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="n_chars" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../clutter/clutter/clutter-text-buffer.c"
                   line="685">number of characters to delete</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="116"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="117"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="118"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="119"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="120"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="121"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved7" introspectable="0">
        <callback name="_clutter_reserved7">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="122"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved8" introspectable="0">
        <callback name="_clutter_reserved8">
          <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                           line="123"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="TextBufferPrivate"
            c:type="ClutterTextBufferPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-text-buffer.h"
                       line="51"/>
    </record>
    <record name="TextClass"
            c:type="ClutterTextClass"
            glib:is-gtype-struct-for="Text"
            version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-text.h"
           line="64">The #ClutterTextClass struct contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-text.h" line="97"/>
      <field name="parent_class" readable="0" private="1">
        <type name="ActorClass" c:type="ClutterActorClass"/>
      </field>
      <field name="text_changed">
        <callback name="text_changed">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Text" c:type="ClutterText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="83"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Text" c:type="ClutterText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cursor_event">
        <callback name="cursor_event">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Text" c:type="ClutterText*"/>
            </parameter>
            <parameter name="rect" transfer-ownership="none">
              <type name="Graphene.Rect" c:type="const graphene_rect_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cursor_changed">
        <callback name="cursor_changed">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Text" c:type="ClutterText*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_reserved1" introspectable="0">
        <callback name="_clutter_reserved1">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved2" introspectable="0">
        <callback name="_clutter_reserved2">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved3" introspectable="0">
        <callback name="_clutter_reserved3">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved4" introspectable="0">
        <callback name="_clutter_reserved4">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved5" introspectable="0">
        <callback name="_clutter_reserved5">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="94"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved6" introspectable="0">
        <callback name="_clutter_reserved6">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="95"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_reserved7" introspectable="0">
        <callback name="_clutter_reserved7">
          <source-position filename="../clutter/clutter/clutter-text.h"
                           line="96"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TextDirection"
                 version="1.2"
                 glib:type-name="ClutterTextDirection"
                 glib:get-type="clutter_text_direction_get_type"
                 c:type="ClutterTextDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="280">The text direction to be used by #ClutterActor&lt;!-- --&gt;s</doc>
      <member name="default"
              value="0"
              c:identifier="CLUTTER_TEXT_DIRECTION_DEFAULT"
              glib:nick="default">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="282">Use the default setting, as returned
  by clutter_get_default_text_direction()</doc>
      </member>
      <member name="ltr"
              value="1"
              c:identifier="CLUTTER_TEXT_DIRECTION_LTR"
              glib:nick="ltr">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="284">Use left-to-right text direction</doc>
      </member>
      <member name="rtl"
              value="2"
              c:identifier="CLUTTER_TEXT_DIRECTION_RTL"
              glib:nick="rtl">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="285">Use right-to-left text direction</doc>
      </member>
    </enumeration>
    <class name="TextNode"
           c:symbol-prefix="text_node"
           c:type="ClutterTextNode"
           version="1.10"
           parent="PaintNode"
           glib:type-name="ClutterTextNode"
           glib:get-type="clutter_text_node_get_type"
           glib:type-struct="TextNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="128">The #ClutterTextNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="137"/>
      <constructor name="new"
                   c:identifier="clutter_text_node_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-nodes.c"
             line="945">Creates a new #ClutterPaintNode that will paint a #PangoLayout
with the given color.

This function takes a reference on the passed @layout, so it
is safe to call g_object_unref() after it returns.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="143"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-nodes.c"
               line="957">the newly created #ClutterPaintNode.
  Use clutter_paint_node_unref() when done</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="layout"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="947">a #PangoLayout, or %NULL</doc>
            <type name="Pango.Layout" c:type="PangoLayout*"/>
          </parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="948">the color used to paint the layout,
  or %NULL</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="TextNodeClass"
            c:type="ClutterTextNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="TextNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.c"
           line="788">The `ClutterTextNodeClass` structure is an opaque
type whose contents cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="137"/>
    </record>
    <record name="TextPrivate" c:type="ClutterTextPrivate" disguised="1">
      <source-position filename="../clutter/clutter/clutter-text.h" line="46"/>
    </record>
    <bitfield name="TextureFlags"
              version="0.4"
              deprecated="1"
              deprecated-version="1.22"
              glib:type-name="ClutterTextureFlags"
              glib:get-type="clutter_texture_flags_get_type"
              c:type="ClutterTextureFlags">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1197">Flags for clutter_texture_set_from_rgb_data().</doc>
      <doc-deprecated xml:space="preserve">The #ClutterTexture class was the only user of
  this API</doc-deprecated>
      <member name="none"
              value="0"
              c:identifier="CLUTTER_TEXTURE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1199">No flags</doc>
      </member>
      <member name="rgb_flag_bgr"
              value="2"
              c:identifier="CLUTTER_TEXTURE_RGB_FLAG_BGR"
              glib:nick="rgb-flag-bgr">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1200">Unused flag</doc>
      </member>
      <member name="rgb_flag_premult"
              value="4"
              c:identifier="CLUTTER_TEXTURE_RGB_FLAG_PREMULT"
              glib:nick="rgb-flag-premult">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1201">Unused flag</doc>
      </member>
      <member name="yuv_flag_yuv2"
              value="8"
              c:identifier="CLUTTER_TEXTURE_YUV_FLAG_YUV2"
              glib:nick="yuv-flag-yuv2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1202">Unused flag</doc>
      </member>
    </bitfield>
    <class name="TextureNode"
           c:symbol-prefix="texture_node"
           c:type="ClutterTextureNode"
           version="1.10"
           parent="PipelineNode"
           glib:type-name="ClutterTextureNode"
           glib:get-type="clutter_texture_node_get_type"
           glib:type-struct="TextureNodeClass"
           glib:fundamental="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.h"
           line="62">The #ClutterTextNode structure is an opaque
type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="71"/>
      <constructor name="new"
                   c:identifier="clutter_texture_node_new"
                   version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-nodes.c"
             line="718">Creates a new #ClutterPaintNode that will paint the passed @texture.

This function will take a reference on @texture, so it is safe to
call cogl_object_unref() on @texture when it returns.

The @color must not be pre-multiplied with its #ClutterColor.alpha
channel value; if @color is %NULL, a fully opaque white color will
be used for blending.</doc>
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="77"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-nodes.c"
               line="734">the newly created #ClutterPaintNode.
  Use clutter_paint_node_unref() when done</doc>
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="texture" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="720">a #CoglTexture</doc>
            <type name="Cogl.Texture" c:type="CoglTexture*"/>
          </parameter>
          <parameter name="color"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="721">a #ClutterColor used for blending, or %NULL</doc>
            <type name="Color" c:type="const ClutterColor*"/>
          </parameter>
          <parameter name="min_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="722">the minification filter for the texture</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter"/>
          </parameter>
          <parameter name="mag_filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-paint-nodes.c"
                 line="723">the magnification filter for the texture</doc>
            <type name="ScalingFilter" c:type="ClutterScalingFilter"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="TextureNodeClass"
            c:type="ClutterTextureNodeClass"
            disguised="1"
            glib:is-gtype-struct-for="TextureNode"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-nodes.c"
           line="671">The `ClutterTextureNodeClass` structure is an
opaque type whose members cannot be directly accessed.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="71"/>
    </record>
    <enumeration name="TextureQuality"
                 version="0.8"
                 deprecated="1"
                 deprecated-version="1.22"
                 glib:type-name="ClutterTextureQuality"
                 glib:get-type="clutter_texture_quality_get_type"
                 c:type="ClutterTextureQuality">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1219">Enumaration controlling the texture quality.</doc>
      <doc-deprecated xml:space="preserve">The #ClutterTexture class was the only used ot
  this API; use #ClutterImage and clutter_actor_set_content_scaling_filters()
  instead.</doc-deprecated>
      <member name="low"
              value="0"
              c:identifier="CLUTTER_TEXTURE_QUALITY_LOW"
              glib:nick="low">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1221">fastest rendering will use nearest neighbour
  interpolation when rendering. good setting.</doc>
      </member>
      <member name="medium"
              value="1"
              c:identifier="CLUTTER_TEXTURE_QUALITY_MEDIUM"
              glib:nick="medium">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1223">higher quality rendering without using
  extra resources.</doc>
      </member>
      <member name="high"
              value="2"
              c:identifier="CLUTTER_TEXTURE_QUALITY_HIGH"
              glib:nick="high">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1225">render the texture with the best quality
  available using extra memory.</doc>
      </member>
    </enumeration>
    <class name="Timeline"
           c:symbol-prefix="timeline"
           c:type="ClutterTimeline"
           version="0.2"
           parent="GObject.Object"
           glib:type-name="ClutterTimeline"
           glib:get-type="clutter_timeline_get_type"
           glib:type-struct="TimelineClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-timeline.h"
           line="63">The #ClutterTimeline structure contains only private data
and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="116"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_timeline_new"
                   version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1447">Creates a new #ClutterTimeline with a duration of @msecs.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="122"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1453">the newly created #ClutterTimeline instance. Use
  g_object_unref() when done using it</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1449">Duration of the timeline in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="completed">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="marker_reached">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="msecs" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_frame">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="paused">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="started">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stopped">
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="is_finished" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="add_marker"
              c:identifier="clutter_timeline_add_marker"
              version="1.14">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1768">Adds a named marker that will be hit when the timeline has reached
the specified @progress.

Markers are unique string identifiers for a given position on the
timeline. Once @timeline reaches the given @progress of its duration,
if will emit a ::marker-reached signal for each marker attached to
that particular point.

A marker can be removed with clutter_timeline_remove_marker(). The
timeline can be advanced to a marker using
clutter_timeline_advance_to_marker().

See also: clutter_timeline_add_marker_at_time()</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="172"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1770">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1771">the unique name for this marker</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1772">the normalized value of the position of the martke</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_marker_at_time"
              c:identifier="clutter_timeline_add_marker_at_time"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1804">Adds a named marker that will be hit when the timeline has been
running for @msecs milliseconds.

Markers are unique string identifiers for a given position on the
timeline. Once @timeline reaches the given @msecs, it will emit
a ::marker-reached signal for each marker attached to that position.

A marker can be removed with clutter_timeline_remove_marker(). The
timeline can be advanced to a marker using
clutter_timeline_advance_to_marker().

See also: clutter_timeline_add_marker()</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="176"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1806">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1807">the unique name for this marker</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1808">position of the marker in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="advance" c:identifier="clutter_timeline_advance">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1352">Advance timeline to the requested point. The point is given as a
time in milliseconds since the timeline started.

The @timeline will not emit the #ClutterTimeline::new-frame
signal for the given time. The first ::new-frame signal after the call to
clutter_timeline_advance() will be emit the skipped markers.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="156"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1354">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1355">Time to advance to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="advance_to_marker"
              c:identifier="clutter_timeline_advance_to_marker"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1937">Advances @timeline to the time of the given @marker_name.

Like clutter_timeline_advance(), this function will not
emit the #ClutterTimeline::new-frame for the time where @marker_name
is set, nor it will emit #ClutterTimeline::marker-reached for
@marker_name.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="190"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1939">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1940">the name of the marker</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clone"
              c:identifier="clutter_timeline_clone"
              version="0.4"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1409">Create a new #ClutterTimeline instance which has property values
matching that of supplied timeline. The cloned timeline will not
be started and will not be positioned to the current position of
the original @timeline: you will have to start it with
clutter_timeline_start().

The only cloned properties are:

 - #ClutterTimeline:duration
 - #ClutterTimeline:loop
 - #ClutterTimeline:delay
 - #ClutterTimeline:direction</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_new() or g_object_new()
  instead</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-timeline.h"
                         line="30"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1426">a new #ClutterTimeline, cloned
  from @timeline</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1411">#ClutterTimeline to duplicate.</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_auto_reverse"
              c:identifier="clutter_timeline_get_auto_reverse"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2113">Retrieves the value set by clutter_timeline_set_auto_reverse().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="144"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2119">%TRUE if the timeline should automatically reverse, and
  %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2115">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_cubic_bezier_progress"
              c:identifier="clutter_timeline_get_cubic_bezier_progress"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2509">Retrieves the control points for the cubic bezier progress mode.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="215"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2519">%TRUE if the @timeline is using a cubic bezier progress
  more, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2511">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="c_1"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2512">return location for the first control
  point of the cubic bezier, or %NULL</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
          <parameter name="c_2"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2514">return location for the second control
  point of the cubic bezier, or %NULL</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_current_repeat"
              c:identifier="clutter_timeline_get_current_repeat"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2382">Retrieves the current repeat for a timeline.

Repeats start at 0.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="222"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2390">the current repeat</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2384">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_delay"
              c:identifier="clutter_timeline_get_delay"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1466">Retrieves the delay set using clutter_timeline_set_delay().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1472">the delay in milliseconds.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1468">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_delta"
              c:identifier="clutter_timeline_get_delta"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1646">Retrieves the amount of time elapsed since the last
ClutterTimeline::new-frame signal.

This function is only useful inside handlers for the ::new-frame
signal, and its behaviour is undefined if the timeline is not
playing.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="170"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1657">the amount of time in milliseconds elapsed since the
last frame</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1648">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_direction"
              c:identifier="clutter_timeline_get_direction"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1595">Retrieves the direction of the timeline set with
clutter_timeline_set_direction().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="130"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1602">the direction of the timeline</doc>
          <type name="TimelineDirection" c:type="ClutterTimelineDirection"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1597">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="clutter_timeline_get_duration"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1510">Retrieves the duration of a #ClutterTimeline in milliseconds.
See clutter_timeline_set_duration().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1517">the duration of the timeline, in milliseconds.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1512">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_duration_hint"
              c:identifier="clutter_timeline_get_duration_hint"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2348">Retrieves the full duration of the @timeline, taking into account the
current value of the #ClutterTimeline:repeat-count property.

If the #ClutterTimeline:repeat-count property is set to -1, this function
will return %G_MAXINT64.

The returned value is to be considered a hint, and it's only valid
as long as the @timeline hasn't been changed.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="220"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2361">the full duration of the #ClutterTimeline</doc>
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2350">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_elapsed_time"
              c:identifier="clutter_timeline_get_elapsed_time">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1377">Request the current time position of the timeline.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="159"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1383">current elapsed time in milliseconds.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1379">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_loop"
              c:identifier="clutter_timeline_get_loop"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1276">Gets whether @timeline is looping</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_get_repeat_count() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-timeline.h"
                         line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1282">%TRUE if the timeline is looping</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1278">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="clutter_timeline_get_progress"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1562">The position of the timeline in a normalized [-1, 2] interval.

The return value of this function is determined by the progress
mode set using clutter_timeline_set_progress_mode(), or by the
progress function set using clutter_timeline_set_progress_func().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1572">the normalized current position in the timeline.</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1564">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress_mode"
              c:identifier="clutter_timeline_get_progress_mode"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2329">Retrieves the progress mode set using clutter_timeline_set_progress_mode()
or clutter_timeline_set_progress_func().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="201"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2336">a #ClutterAnimationMode</doc>
          <type name="AnimationMode" c:type="ClutterAnimationMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2331">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_repeat_count"
              c:identifier="clutter_timeline_get_repeat_count"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2166">Retrieves the number set using clutter_timeline_set_repeat_count().</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="149"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2172">the number of repeats</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2168">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_step_progress"
              c:identifier="clutter_timeline_get_step_progress"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2436">Retrieves the parameters of the step progress mode used by @timeline.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="207"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2445">%TRUE if the @timeline is using a step progress
  mode, and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2438">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="n_steps"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2439">return location for the number of steps, or %NULL</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="step_mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2440">return location for the value change policy,
  or %NULL</doc>
            <type name="StepMode" c:type="ClutterStepMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_marker"
              c:identifier="clutter_timeline_has_marker"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2023">Checks whether @timeline has a marker set with the given name.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="187"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="2030">%TRUE if the marker was found</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2025">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2026">the name of the marker</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_playing" c:identifier="clutter_timeline_is_playing">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1393">Queries state of a #ClutterTimeline.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="163"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1399">%TRUE if timeline is currently playing</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1395">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="list_markers"
              c:identifier="clutter_timeline_list_markers"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1866">Retrieves the list of markers at time @msecs. If @msecs is a
negative integer, all the markers attached to @timeline will be
returned.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="183"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.c"
               line="1876">
  a newly allocated, %NULL terminated string array containing the names
  of the markers. Use g_strfreev() when done.</doc>
          <array length="1" zero-terminated="1" c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1868">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1869">the time to check, or -1</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="n_markers"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1870">the number of markers returned</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pause" c:identifier="clutter_timeline_pause">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1202">Pauses the #ClutterTimeline on current frame</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1204">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_marker"
              c:identifier="clutter_timeline_remove_marker"
              version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1985">Removes @marker_name, if found, from @timeline.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="180"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1987">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1988">the name of the marker to remove</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="rewind" c:identifier="clutter_timeline_rewind">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1294">Rewinds #ClutterTimeline to the first frame if its direction is
%CLUTTER_TIMELINE_FORWARD and the last frame if it is
%CLUTTER_TIMELINE_BACKWARD.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1296">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_auto_reverse"
              c:identifier="clutter_timeline_set_auto_reverse"
              version="1.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2048">Sets whether @timeline should reverse the direction after the
emission of the #ClutterTimeline::completed signal.

Setting the #ClutterTimeline:auto-reverse property to %TRUE is the
equivalent of connecting a callback to the #ClutterTimeline::completed
signal and changing the direction of the timeline from that callback;
for instance, this code:

|[
static void
reverse_timeline (ClutterTimeline *timeline)
{
  ClutterTimelineDirection dir = clutter_timeline_get_direction (timeline);

  if (dir == CLUTTER_TIMELINE_FORWARD)
    dir = CLUTTER_TIMELINE_BACKWARD;
  else
    dir = CLUTTER_TIMELINE_FORWARD;

  clutter_timeline_set_direction (timeline, dir);
}
...
  timeline = clutter_timeline_new (1000);
  clutter_timeline_set_repeat_count (timeline, -1);
  g_signal_connect (timeline, "completed",
                    G_CALLBACK (reverse_timeline),
                    NULL);
]|

can be effectively replaced by:

|[
  timeline = clutter_timeline_new (1000);
  clutter_timeline_set_repeat_count (timeline, -1);
  clutter_timeline_set_auto_reverse (timeline);
]|</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2050">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="reverse" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2051">%TRUE if the @timeline should reverse the direction</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cubic_bezier_progress"
              c:identifier="clutter_timeline_set_cubic_bezier_progress"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2471">Sets the #ClutterTimeline:progress-mode of @timeline
to %CLUTTER_CUBIC_BEZIER, and sets the two control
points for the cubic bezier.

The cubic bezier curve is between (0, 0) and (1, 1). The X coordinate
of the two control points must be in the [ 0, 1 ] range, while the
Y coordinate of the two control points can exceed this range.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2473">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="c_1" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2474">the first control point for the cubic bezier</doc>
            <type name="Graphene.Point" c:type="const graphene_point_t*"/>
          </parameter>
          <parameter name="c_2" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2475">the second control point for the cubic bezier</doc>
            <type name="Graphene.Point" c:type="const graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_delay"
              c:identifier="clutter_timeline_set_delay"
              version="0.4">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1484">Sets the delay, in milliseconds, before @timeline should start.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="165"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1486">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1487">delay in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_direction"
              c:identifier="clutter_timeline_set_direction"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1615">Sets the direction of @timeline, either %CLUTTER_TIMELINE_FORWARD or
%CLUTTER_TIMELINE_BACKWARD.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="132"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1617">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1618">the direction of the timeline</doc>
            <type name="TimelineDirection" c:type="ClutterTimelineDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration"
              c:identifier="clutter_timeline_set_duration"
              version="0.6">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1533">Sets the duration of the timeline, in milliseconds. The speed
of the timeline depends on the ClutterTimeline:fps setting.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1535">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1536">duration of the timeline in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_loop"
              c:identifier="clutter_timeline_set_loop"
              deprecated="1"
              deprecated-version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1255">Sets whether @timeline should loop.

This function is equivalent to calling clutter_timeline_set_repeat_count()
with -1 if @loop is %TRUE, and with 0 if @loop is %FALSE.</doc>
        <doc-deprecated xml:space="preserve">Use clutter_timeline_set_repeat_count() instead.</doc-deprecated>
        <source-position filename="../clutter/clutter/deprecated/clutter-timeline.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1257">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="loop" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1258">%TRUE for enable looping</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_progress_func"
              c:identifier="clutter_timeline_set_progress_func"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2184">Sets a custom progress function for @timeline. The progress function will
be called by clutter_timeline_get_progress() and will be used to compute
the progress value based on the elapsed time and the total duration of the
timeline.

If @func is not %NULL, the #ClutterTimeline:progress-mode property will
be set to %CLUTTER_CUSTOM_MODE.

If @func is %NULL, any previously set progress function will be unset, and
the #ClutterTimeline:progress-mode property will be set to %CLUTTER_LINEAR.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="193"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2186">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2187">a progress function, or %NULL</doc>
            <type name="TimelineProgressFunc"
                  c:type="ClutterTimelineProgressFunc"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2188">data to pass to @func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="async">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2189">a function to be called when the progress function is removed
   or the timeline is disposed</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_progress_mode"
              c:identifier="clutter_timeline_set_progress_mode"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2286">Sets the progress function using a value from the #ClutterAnimationMode
enumeration. The @mode cannot be %CLUTTER_CUSTOM_MODE or bigger than
%CLUTTER_ANIMATION_LAST.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="198"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2288">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2289">the progress mode, as a #ClutterAnimationMode</doc>
            <type name="AnimationMode" c:type="ClutterAnimationMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_repeat_count"
              c:identifier="clutter_timeline_set_repeat_count"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2132">Sets the number of times the @timeline should repeat.

If @count is 0, the timeline never repeats.

If @count is -1, the timeline will always repeat until
it's stopped.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2134">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2135">the number of times the timeline should repeat</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_step_progress"
              c:identifier="clutter_timeline_set_step_progress"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="2402">Sets the #ClutterTimeline:progress-mode of the @timeline to %CLUTTER_STEPS
and provides the parameters of the step function.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="203"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2404">a #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="n_steps" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2405">the number of steps</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="step_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="2406">whether the change should happen at the start
  or at the end of the step</doc>
            <type name="StepMode" c:type="ClutterStepMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip" c:identifier="clutter_timeline_skip">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1317">Advance timeline by the requested time in milliseconds</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="153"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1319">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1320">Amount of time to skip</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="start" c:identifier="clutter_timeline_start">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1168">Starts the #ClutterTimeline playing.</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1170">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="stop" c:identifier="clutter_timeline_stop">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="1228">Stops the #ClutterTimeline and moves to frame 0</doc>
        <source-position filename="../clutter/clutter/clutter-timeline.h"
                         line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="timeline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="1230">A #ClutterTimeline</doc>
            <type name="Timeline" c:type="ClutterTimeline*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="auto-reverse"
                version="1.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="643">If the direction of the timeline should be automatically reversed
when reaching the end.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="delay"
                version="0.4"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="595">A delay, in milliseconds, that should be observed by the
timeline before actually starting.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="direction"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="627">The direction of the timeline, either %CLUTTER_TIMELINE_FORWARD or
%CLUTTER_TIMELINE_BACKWARD.</doc>
        <type name="TimelineDirection"/>
      </property>
      <property name="duration"
                version="0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="611">Duration of the timeline in milliseconds, depending on the
ClutterTimeline:fps value.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="loop"
                deprecated="1"
                deprecated-version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="576">Whether the timeline should automatically rewind and restart.

As a side effect, setting this property to %TRUE will set the
#ClutterTimeline:repeat-count property to -1, while setting this
property to %FALSE will set the #ClutterTimeline:repeat-count
property to 0.</doc>
        <doc-deprecated xml:space="preserve">Use the #ClutterTimeline:repeat-count property instead.</doc-deprecated>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="progress-mode"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="678">Controls the way a #ClutterTimeline computes the normalized progress.</doc>
        <type name="AnimationMode"/>
      </property>
      <property name="repeat-count"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="658">Defines how many times the timeline should repeat.

If the repeat count is 0, the timeline does not repeat.

If the repeat count is set to -1, the timeline will repeat until it is
stopped.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="TimelinePrivate" c:type="ClutterTimelinePrivate*"/>
      </field>
      <glib:signal name="completed" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="716">The #ClutterTimeline::completed signal is emitted when the timeline's
elapsed time reaches the value of the #ClutterTimeline:duration
property.

This signal will be emitted even if the #ClutterTimeline is set to be
repeating.

If you want to get notification on whether the #ClutterTimeline has
been stopped or has finished its run, including its eventual repeats,
you should use the #ClutterTimeline::stopped signal instead.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="marker-reached"
                   when="last"
                   no-recurse="1"
                   detailed="1"
                   no-hooks="1"
                   version="0.8">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="767">The ::marker-reached signal is emitted each time a timeline
reaches a marker set with
clutter_timeline_add_marker_at_time(). This signal is detailed
with the name of the marker as well, so it is possible to connect
a callback to the ::marker-reached signal for a specific marker
with:

&lt;informalexample&gt;&lt;programlisting&gt;
  clutter_timeline_add_marker_at_time (timeline, "foo", 500);
  clutter_timeline_add_marker_at_time (timeline, "bar", 750);

  g_signal_connect (timeline, "marker-reached",
                    G_CALLBACK (each_marker_reached), NULL);
  g_signal_connect (timeline, "marker-reached::foo",
                    G_CALLBACK (foo_marker_reached), NULL);
  g_signal_connect (timeline, "marker-reached::bar",
                    G_CALLBACK (bar_marker_reached), NULL);
&lt;/programlisting&gt;&lt;/informalexample&gt;

In the example, the first callback will be invoked for both
the "foo" and "bar" marker, while the second and third callbacks
will be invoked for the "foo" or "bar" markers, respectively.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="marker_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="770">the name of the marker reached</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="771">the elapsed time</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="new-frame" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="699">The ::new-frame signal is emitted for each timeline running
timeline before a new frame is drawn to give animations a chance
to update the scene.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="msecs" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="702">the elapsed time between 0 and duration</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="paused" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="754">The ::paused signal is emitted when clutter_timeline_pause() is invoked.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="started" when="last">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="738">The ::started signal is emitted when the timeline starts its run.
This might be as soon as clutter_timeline_start() is invoked or
after the delay set in the ClutterTimeline:delay property has
expired.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="stopped" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.c"
             line="809">The #ClutterTimeline::stopped signal is emitted when the timeline
has been stopped, either because clutter_timeline_stop() has been
called, or because it has been exhausted.

This is different from the #ClutterTimeline::completed signal,
which gets emitted after every repeat finishes.

If the #ClutterTimeline has is marked as infinitely repeating,
this signal will never be emitted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_finished" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-timeline.c"
                 line="812">%TRUE if the signal was emitted at the end of the
  timeline.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="TimelineClass"
            c:type="ClutterTimelineClass"
            glib:is-gtype-struct-for="Timeline"
            version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-timeline.h"
           line="79">The #ClutterTimelineClass structure contains only private data</doc>
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="116"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="started">
        <callback name="started">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="completed">
        <callback name="completed">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="99"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="paused">
        <callback name="paused">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="100"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_frame">
        <callback name="new_frame">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="102"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
            <parameter name="msecs" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="marker_reached">
        <callback name="marker_reached">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="105"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
            <parameter name="marker_name" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="msecs" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stopped">
        <callback name="stopped">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="108"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="timeline" transfer-ownership="none">
              <type name="Timeline" c:type="ClutterTimeline*"/>
            </parameter>
            <parameter name="is_finished" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_timeline_1" introspectable="0">
        <callback name="_clutter_timeline_1">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="112"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_timeline_2" introspectable="0">
        <callback name="_clutter_timeline_2">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="113"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_timeline_3" introspectable="0">
        <callback name="_clutter_timeline_3">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="114"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_timeline_4" introspectable="0">
        <callback name="_clutter_timeline_4">
          <source-position filename="../clutter/clutter/clutter-timeline.h"
                           line="115"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="TimelineDirection"
                 version="0.6"
                 glib:type-name="ClutterTimelineDirection"
                 glib:get-type="clutter_timeline_direction_get_type"
                 c:type="ClutterTimelineDirection">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1243">The direction of a #ClutterTimeline</doc>
      <member name="forward"
              value="0"
              c:identifier="CLUTTER_TIMELINE_FORWARD"
              glib:nick="forward">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1245">forward direction for a timeline</doc>
      </member>
      <member name="backward"
              value="1"
              c:identifier="CLUTTER_TIMELINE_BACKWARD"
              glib:nick="backward">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1246">backward direction for a timeline</doc>
      </member>
    </enumeration>
    <record name="TimelinePrivate"
            c:type="ClutterTimelinePrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="43"/>
    </record>
    <callback name="TimelineProgressFunc"
              c:type="ClutterTimelineProgressFunc"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-timeline.h"
           line="45">A function for defining a custom progress.</doc>
      <source-position filename="../clutter/clutter/clutter-timeline.h"
                       line="58"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-timeline.h"
             line="54">the progress, as a floating point value between -1.0 and 2.0.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="timeline" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.h"
               line="47">a #ClutterTimeline</doc>
          <type name="Timeline" c:type="ClutterTimeline*"/>
        </parameter>
        <parameter name="elapsed" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.h"
               line="48">the elapsed time, in milliseconds</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="total" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.h"
               line="49">the total duration of the timeline, in milliseconds,</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="3">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-timeline.h"
               line="50">data passed to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="TouchEvent" c:type="ClutterTouchEvent" version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="375">Used for touch events.

The @type field will be one of %CLUTTER_TOUCH_BEGIN, %CLUTTER_TOUCH_END,
%CLUTTER_TOUCH_UPDATE, or %CLUTTER_TOUCH_CANCEL.

Touch events are grouped into sequences; each touch sequence will begin
with a %CLUTTER_TOUCH_BEGIN event, progress with %CLUTTER_TOUCH_UPDATE
events, and end either with a %CLUTTER_TOUCH_END event or with a
%CLUTTER_TOUCH_CANCEL event.

With multi-touch capable devices there can be multiple event sequence
running at the same time.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="421"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="377">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="378">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="379">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="380">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="381">event source actor (unused)</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="382">the X coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="383">the Y coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="sequence" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="384">the event sequence that this event belongs to</doc>
        <type name="EventSequence" c:type="ClutterEventSequence*"/>
      </field>
      <field name="modifier_state" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="385">a bit-mask representing the state
  of modifier keys (e.g. Control, Shift, and Alt) and the pointer
  buttons. See #ClutterModifierType</doc>
        <type name="ModifierType"/>
      </field>
      <field name="axes" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="388">reserved</doc>
        <type name="gdouble" c:type="gdouble*"/>
      </field>
      <field name="device" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="389">the device that originated the event. If you want the physical
device the event originated from, use clutter_event_get_source_device()</doc>
        <type name="InputDevice" c:type="ClutterInputDevice*"/>
      </field>
    </record>
    <enumeration name="TouchpadGesturePhase"
                 version="1.24"
                 glib:type-name="ClutterTouchpadGesturePhase"
                 glib:get-type="clutter_touchpad_gesture_phase_get_type"
                 c:type="ClutterTouchpadGesturePhase">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1557">The phase of a touchpad gesture event. All gestures are guaranteed to
begin with an event of type %CLUTTER_TOUCHPAD_GESTURE_PHASE_BEGIN,
followed by a number of %CLUTTER_TOUCHPAD_GESTURE_PHASE_UPDATE (possibly 0).

A finished gesture may have 2 possible outcomes, an event with phase
%CLUTTER_TOUCHPAD_GESTURE_PHASE_END will be emitted when the gesture is
considered successful, this should be used as the hint to perform any
permanent changes.

Cancelled gestures may be so for a variety of reasons, due to hardware,
or due to the gesture recognition layers hinting the gesture did not
finish resolutely (eg. a 3rd finger being added during a pinch gesture).
In these cases, the last event with report the phase
%CLUTTER_TOUCHPAD_GESTURE_PHASE_CANCEL, this should be used as a hint
to undo any visible/permanent changes that were done throughout the
progress of the gesture.

See also #ClutterTouchpadPinchEvent and #ClutterTouchpadPinchEvent.</doc>
      <member name="begin"
              value="0"
              c:identifier="CLUTTER_TOUCHPAD_GESTURE_PHASE_BEGIN"
              glib:nick="begin">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1559">The gesture has begun.</doc>
      </member>
      <member name="update"
              value="1"
              c:identifier="CLUTTER_TOUCHPAD_GESTURE_PHASE_UPDATE"
              glib:nick="update">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1560">The gesture has been updated.</doc>
      </member>
      <member name="end"
              value="2"
              c:identifier="CLUTTER_TOUCHPAD_GESTURE_PHASE_END"
              glib:nick="end">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1561">The gesture was finished, changes
  should be permanently applied.</doc>
      </member>
      <member name="cancel"
              value="3"
              c:identifier="CLUTTER_TOUCHPAD_GESTURE_PHASE_CANCEL"
              glib:nick="cancel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1563">The gesture was cancelled, all
  changes should be undone.</doc>
      </member>
    </enumeration>
    <record name="TouchpadPinchEvent"
            c:type="ClutterTouchpadPinchEvent"
            version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="423">Used for touchpad pinch gesture events. The current state of the
gesture will be determined by the @phase field.

Each event with phase %CLUTTER_TOUCHPAD_GESTURE_PHASE_BEGIN
will report a @scale of 1.0, all later phases in the gesture
report the current scale relative to the initial 1.0 value
(eg. 0.5 being half the size, 2.0 twice as big).</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="465"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="425">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="426">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="427">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="428">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="429">event source actor (unused)</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="phase" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="430">the current phase of the gesture</doc>
        <type name="TouchpadGesturePhase"
              c:type="ClutterTouchpadGesturePhase"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="431">the X coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="432">the Y coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="dx" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="433">movement delta of the pinch focal point in the X axis</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="dy" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="434">movement delta of the pinch focal point in the Y axis</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="angle_delta" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="435">angle delta in degrees, clockwise rotations are
  represented by positive deltas</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="scale" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="437">the current scale</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="n_fingers" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="TouchpadSwipeEvent"
            c:type="ClutterTouchpadSwipeEvent"
            version="1.24">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.h"
           line="467">Used for touchpad swipe gesture events. The current state of the
gesture will be determined by the @phase field.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="500"/>
      <field name="type" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="469">event type</doc>
        <type name="EventType" c:type="ClutterEventType"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="470">event time</doc>
        <type name="guint32" c:type="guint32"/>
      </field>
      <field name="flags" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="471">event flags</doc>
        <type name="EventFlags" c:type="ClutterEventFlags"/>
      </field>
      <field name="stage" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="472">event source stage</doc>
        <type name="Stage" c:type="ClutterStage*"/>
      </field>
      <field name="source" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="473">event source actor (unused)</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </field>
      <field name="phase" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="474">the current phase of the gesture</doc>
        <type name="TouchpadGesturePhase"
              c:type="ClutterTouchpadGesturePhase"/>
      </field>
      <field name="n_fingers" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="475">the number of fingers triggering the swipe</doc>
        <type name="guint" c:type="guint"/>
      </field>
      <field name="x" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="476">the X coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="y" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="477">the Y coordinate of the pointer, relative to the stage</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="dx" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="478">movement delta of the pinch focal point in the X axis</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="dy" writable="1">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.h"
             line="479">movement delta of the pinch focal point in the Y axis</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <class name="TransformNode"
           c:symbol-prefix="transform_node"
           c:type="ClutterTransformNode"
           parent="PaintNode"
           glib:type-name="ClutterTransformNode"
           glib:get-type="clutter_transform_node_get_type"
           glib:type-struct="TransformNodeClass"
           glib:fundamental="1">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="225"/>
      <constructor name="new" c:identifier="clutter_transform_node_new">
        <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                         line="231"/>
        <return-value transfer-ownership="full">
          <type name="PaintNode" c:type="ClutterPaintNode*"/>
        </return-value>
        <parameters>
          <parameter name="projection" transfer-ownership="none">
            <type name="Cogl.Matrix" c:type="const CoglMatrix*"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <record name="TransformNodeClass"
            c:type="ClutterTransformNodeClass"
            glib:is-gtype-struct-for="TransformNode">
      <source-position filename="../clutter/clutter/clutter-paint-nodes.h"
                       line="225"/>
    </record>
    <class name="Transition"
           c:symbol-prefix="transition"
           c:type="ClutterTransition"
           version="1.10"
           parent="Timeline"
           abstract="1"
           glib:type-name="ClutterTransition"
           glib:get-type="clutter_transition_get_type"
           glib:type-struct="TransitionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-transition.h"
           line="46">The #ClutterTransition structure contains private
data and should only be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="94"/>
      <implements name="Scriptable"/>
      <virtual-method name="attached">
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="animatable" transfer-ownership="none">
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="compute_value">
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="animatable" transfer-ownership="none">
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </parameter>
          <parameter name="interval" transfer-ownership="none">
            <type name="Interval" c:type="ClutterInterval*"/>
          </parameter>
          <parameter name="progress" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="detached">
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="animatable" transfer-ownership="none">
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_animatable"
              c:identifier="clutter_transition_get_animatable"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="388">Retrieves the #ClutterAnimatable set using clutter_transition_set_animatable().</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="123"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-transition.c"
               line="394">a #ClutterAnimatable, or %NULL; the returned
  animatable is owned by the #ClutterTransition, and it should not be freed
  directly.</doc>
          <type name="Animatable" c:type="ClutterAnimatable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="390">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interval"
              c:identifier="clutter_transition_get_interval"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="326">Retrieves the interval set using clutter_transition_set_interval()</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-transition.c"
               line="332">a #ClutterInterval, or %NULL; the returned
  interval is owned by the #ClutterTransition and it should not be freed
  directly</doc>
          <type name="Interval" c:type="ClutterInterval*"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="328">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_remove_on_complete"
              c:identifier="clutter_transition_get_remove_on_complete"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="436">Retrieves the value of the #ClutterTransition:remove-on-complete property.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-transition.c"
               line="442">%TRUE if the @transition should be detached when complete,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="438">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_animatable"
              c:identifier="clutter_transition_set_animatable"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="346">Sets the #ClutterTransition:animatable property.

The @transition will acquire a reference to the @animatable instance,
and will call the #ClutterTransitionClass.attached() virtual function.

If an existing #ClutterAnimatable is attached to @transition, the
reference will be released, and the #ClutterTransitionClass.detached()
virtual function will be called.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="348">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="animatable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="349">a #ClutterAnimatable, or %NULL</doc>
            <type name="Animatable" c:type="ClutterAnimatable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_from"
              c:identifier="clutter_transition_set_from"
              shadowed-by="set_from_value"
              version="1.12"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="576">Sets the initial value of the transition.

This is a convenience function that will either create the
#ClutterInterval used by @transition, or will update it if
the #ClutterTransition:interval is already set.

If @transition already has a #ClutterTransition:interval set,
then @value must hold the same type, or a transformable type,
as the interval's #ClutterInterval:value-type property.

This is a convenience function for the C API; language bindings
should use clutter_transition_set_from_value() instead.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="578">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="value_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="579">the type of the value to set</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="580">the initial value</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_from_value"
              c:identifier="clutter_transition_set_from_value"
              shadows="set_from"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="508">Sets the initial value of the transition.

This is a convenience function that will either create the
#ClutterInterval used by @transition, or will update it if
the #ClutterTransition:interval is already set.

This function will copy the contents of @value, so it is
safe to call g_value_unset() after it returns.

If @transition already has a #ClutterTransition:interval set,
then @value must hold the same type, or a transformable type,
as the interval's #ClutterInterval:value-type property.

This function is meant to be used by language bindings.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="510">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="511">a #GValue with the initial value of the transition</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interval"
              c:identifier="clutter_transition_set_interval"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="292">Sets the #ClutterTransition:interval property using @interval.

The @transition will acquire a reference on the @interval, sinking
the floating flag on it if necessary.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="294">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="interval"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="295">a #ClutterInterval, or %NULL</doc>
            <type name="Interval" c:type="ClutterInterval*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_remove_on_complete"
              c:identifier="clutter_transition_set_remove_on_complete"
              version="1.10">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="408">Sets whether @transition should be detached from the #ClutterAnimatable
set using clutter_transition_set_animatable() when the
#ClutterTimeline::completed signal is emitted.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="410">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="remove_complete" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="411">whether to detach @transition when complete</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_to"
              c:identifier="clutter_transition_set_to"
              shadowed-by="set_to_value"
              version="1.12"
              introspectable="0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="629">Sets the final value of the transition.

This is a convenience function that will either create the
#ClutterInterval used by @transition, or will update it if
the #ClutterTransition:interval is already set.

If @transition already has a #ClutterTransition:interval set,
then @value must hold the same type, or a transformable type,
as the interval's #ClutterInterval:value-type property.

This is a convenience function for the C API; language bindings
should use clutter_transition_set_to_value() instead.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="631">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="value_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="632">the type of the value to set</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="633">the final value</doc>
            <varargs/>
          </parameter>
        </parameters>
      </method>
      <method name="set_to_value"
              c:identifier="clutter_transition_set_to_value"
              shadows="set_to"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="542">Sets the final value of the transition.

This is a convenience function that will either create the
#ClutterInterval used by @transition, or will update it if
the #ClutterTransition:interval is already set.

This function will copy the contents of @value, so it is
safe to call g_value_unset() after it returns.

If @transition already has a #ClutterTransition:interval set,
then @value must hold the same type, or a transformable type,
as the interval's #ClutterInterval:value-type property.

This function is meant to be used by language bindings.</doc>
        <source-position filename="../clutter/clutter/clutter-transition.h"
                         line="108"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="544">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition.c"
                 line="545">a #GValue with the final value of the transition</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </method>
      <property name="animatable"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="247">The #ClutterAnimatable instance currently being animated.</doc>
        <type name="Animatable"/>
      </property>
      <property name="interval"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="231">The #ClutterInterval used to describe the initial and final states
of the transition.</doc>
        <type name="Interval"/>
      </property>
      <property name="remove-on-complete"
                version="1.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition.c"
             line="262">Whether the #ClutterTransition should be automatically detached
from the #ClutterTransition:animatable instance whenever the
#ClutterTimeline::stopped signal is emitted.

The #ClutterTransition:remove-on-complete property takes into
account the value of the #ClutterTimeline:repeat-count property,
and it only detaches the transition if the transition is not
repeating.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="Timeline" c:type="ClutterTimeline"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="TransitionPrivate" c:type="ClutterTransitionPrivate*"/>
      </field>
    </class>
    <record name="TransitionClass"
            c:type="ClutterTransitionClass"
            glib:is-gtype-struct-for="Transition"
            version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-transition.h"
           line="62">The #ClutterTransitionClass structure contains
private data.</doc>
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="94"/>
      <field name="parent_class" readable="0" private="1">
        <type name="TimelineClass" c:type="ClutterTimelineClass"/>
      </field>
      <field name="attached">
        <callback name="attached">
          <source-position filename="../clutter/clutter/clutter-transition.h"
                           line="82"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transition" transfer-ownership="none">
              <type name="Transition" c:type="ClutterTransition*"/>
            </parameter>
            <parameter name="animatable" transfer-ownership="none">
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="detached">
        <callback name="detached">
          <source-position filename="../clutter/clutter/clutter-transition.h"
                           line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transition" transfer-ownership="none">
              <type name="Transition" c:type="ClutterTransition*"/>
            </parameter>
            <parameter name="animatable" transfer-ownership="none">
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="compute_value">
        <callback name="compute_value">
          <source-position filename="../clutter/clutter/clutter-transition.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="transition" transfer-ownership="none">
              <type name="Transition" c:type="ClutterTransition*"/>
            </parameter>
            <parameter name="animatable" transfer-ownership="none">
              <type name="Animatable" c:type="ClutterAnimatable*"/>
            </parameter>
            <parameter name="interval" transfer-ownership="none">
              <type name="Interval" c:type="ClutterInterval*"/>
            </parameter>
            <parameter name="progress" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="TransitionGroup"
           c:symbol-prefix="transition_group"
           c:type="ClutterTransitionGroup"
           version="1.12"
           parent="Transition"
           glib:type-name="ClutterTransitionGroup"
           glib:get-type="clutter_transition_group_get_type"
           glib:type-struct="TransitionGroupClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-transition-group.h"
           line="46">The #ClutterTransitionGroup structure contains
private data and should only be accessed using the provided API.</doc>
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="76"/>
      <implements name="Scriptable"/>
      <constructor name="new"
                   c:identifier="clutter_transition_group_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition-group.c"
             line="173">Creates a new #ClutterTransitionGroup instance.</doc>
        <source-position filename="../clutter/clutter/clutter-transition-group.h"
                         line="82"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-transition-group.c"
               line="178">the newly created #ClutterTransitionGroup. Use
  g_object_unref() when done to deallocate the resources it
  uses</doc>
          <type name="Transition" c:type="ClutterTransition*"/>
        </return-value>
      </constructor>
      <method name="add_transition"
              c:identifier="clutter_transition_group_add_transition"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition-group.c"
             line="190">Adds @transition to @group.

This function acquires a reference on @transition that will be released
when calling clutter_transition_group_remove_transition().</doc>
        <source-position filename="../clutter/clutter/clutter-transition-group.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition-group.c"
                 line="192">a #ClutterTransitionGroup</doc>
            <type name="TransitionGroup" c:type="ClutterTransitionGroup*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition-group.c"
                 line="193">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_all"
              c:identifier="clutter_transition_group_remove_all"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition-group.c"
             line="233">Removes all transitions from @group.

This function releases the reference acquired when calling
clutter_transition_group_add_transition().</doc>
        <source-position filename="../clutter/clutter/clutter-transition-group.h"
                         line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition-group.c"
                 line="235">a #ClutterTransitionGroup</doc>
            <type name="TransitionGroup" c:type="ClutterTransitionGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_transition"
              c:identifier="clutter_transition_group_remove_transition"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-transition-group.c"
             line="212">Removes @transition from @group.

This function releases the reference acquired on @transition when
calling clutter_transition_group_add_transition().</doc>
        <source-position filename="../clutter/clutter/clutter-transition-group.h"
                         line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition-group.c"
                 line="214">a #ClutterTransitionGroup</doc>
            <type name="TransitionGroup" c:type="ClutterTransitionGroup*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-transition-group.c"
                 line="215">a #ClutterTransition</doc>
            <type name="Transition" c:type="ClutterTransition*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance" readable="0" private="1">
        <type name="Transition" c:type="ClutterTransition"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="TransitionGroupPrivate"
              c:type="ClutterTransitionGroupPrivate*"/>
      </field>
    </class>
    <record name="TransitionGroupClass"
            c:type="ClutterTransitionGroupClass"
            glib:is-gtype-struct-for="TransitionGroup"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-transition-group.h"
           line="62">The #ClutterTransitionGroupClass structure
contains only private data.</doc>
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="76"/>
      <field name="parent_class" readable="0" private="1">
        <type name="TransitionClass" c:type="ClutterTransitionClass"/>
      </field>
      <field name="_padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="8">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <record name="TransitionGroupPrivate"
            c:type="ClutterTransitionGroupPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-transition-group.h"
                       line="43"/>
    </record>
    <record name="TransitionPrivate"
            c:type="ClutterTransitionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-transition.h"
                       line="43"/>
    </record>
    <enumeration name="UnitType"
                 version="1.0"
                 glib:type-name="ClutterUnitType"
                 glib:get-type="clutter_unit_type_get_type"
                 c:type="ClutterUnitType">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1258">The type of unit in which a value is expressed

This enumeration might be expanded at later date</doc>
      <member name="pixel"
              value="0"
              c:identifier="CLUTTER_UNIT_PIXEL"
              glib:nick="pixel">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1260">Unit expressed in pixels (with subpixel precision)</doc>
      </member>
      <member name="em"
              value="1"
              c:identifier="CLUTTER_UNIT_EM"
              glib:nick="em">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1261">Unit expressed in em</doc>
      </member>
      <member name="mm"
              value="2"
              c:identifier="CLUTTER_UNIT_MM"
              glib:nick="mm">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1262">Unit expressed in millimeters</doc>
      </member>
      <member name="point"
              value="3"
              c:identifier="CLUTTER_UNIT_POINT"
              glib:nick="point">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1263">Unit expressed in points</doc>
      </member>
      <member name="cm"
              value="4"
              c:identifier="CLUTTER_UNIT_CM"
              glib:nick="cm">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1264">Unit expressed in centimeters</doc>
      </member>
    </enumeration>
    <record name="Units"
            c:type="ClutterUnits"
            version="1.0"
            glib:type-name="ClutterUnits"
            glib:get-type="clutter_units_get_type"
            c:symbol-prefix="units">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.h"
           line="40">An opaque structure, to be used to store sizing and positioning
values along with their unit.</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="71"/>
      <field name="unit_type" readable="0" private="1">
        <type name="UnitType" c:type="ClutterUnitType"/>
      </field>
      <field name="value" readable="0" private="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="pixels" readable="0" private="1">
        <type name="gfloat" c:type="gfloat"/>
      </field>
      <field name="pixels_set" readable="0" private="1">
        <type name="guint" c:type="guint"/>
      </field>
      <field name="serial" readable="0" private="1">
        <type name="gint32" c:type="gint32"/>
      </field>
      <field name="__padding_1" readable="0" private="1">
        <type name="gint32" c:type="gint32"/>
      </field>
      <field name="__padding_2" readable="0" private="1">
        <type name="gint64" c:type="gint64"/>
      </field>
      <method name="copy" c:identifier="clutter_units_copy" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="337">Copies @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="81"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="343">the newly created copy of a
  #ClutterUnits structure. Use clutter_units_free() to free
  the allocated resources</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="339">the #ClutterUnits to copy</doc>
            <type name="Units" c:type="const ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="free" c:identifier="clutter_units_free" version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="358">Frees the resources allocated by @units

You should only call this function on a #ClutterUnits
created using clutter_units_copy()</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="360">the #ClutterUnits to free</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit_type"
              c:identifier="clutter_units_get_unit_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="301">Retrieves the unit type of the value stored inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="307">a unit type</doc>
          <type name="UnitType" c:type="ClutterUnitType"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="303">a #ClutterUnits</doc>
            <type name="Units" c:type="const ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_unit_value"
              c:identifier="clutter_units_get_unit_value"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="319">Retrieves the value stored inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="325">the value stored inside a #ClutterUnits</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="321">a #ClutterUnits</doc>
            <type name="Units" c:type="const ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_pixels"
              c:identifier="clutter_units_to_pixels"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="376">Converts a value in #ClutterUnits to pixels</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="382">the value in pixels</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="378">units to convert</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="to_string"
              c:identifier="clutter_units_to_string"
              version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="587">Converts @units into a string

See clutter_units_from_string() for the units syntax and for
examples of output

Fractional values are truncated to the second decimal
position for em, mm and cm, and to the first decimal position for
typographic points. Pixels are integers.</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="112"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="600">a newly allocated string containing the encoded
  #ClutterUnits value. Use g_free() to free the string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="units" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="589">a #ClutterUnits</doc>
            <type name="Units" c:type="const ClutterUnits*"/>
          </instance-parameter>
        </parameters>
      </method>
      <function name="from_cm"
                c:identifier="clutter_units_from_cm"
                version="1.2">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="168">Stores a value in centimeters inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="170">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="cm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="171">centimeters</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_em"
                c:identifier="clutter_units_from_em"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="220">Stores a value in em inside @units, using the default font
name as returned by clutter_backend_get_font_name()</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="222">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="em" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="223">em</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_em_for_font"
                c:identifier="clutter_units_from_em_for_font"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="247">Stores a value in em inside @units using @font_name</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="249">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="font_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="250">the font name and size</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="em" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="251">em</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_mm"
                c:identifier="clutter_units_from_mm"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="142">Stores a value in millimiters inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="96"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="144">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="mm" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="145">millimeters</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_pixels"
                c:identifier="clutter_units_from_pixels"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="275">Stores a value in pixels inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="277">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="px" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="278">pixels</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_pt"
                c:identifier="clutter_units_from_pt"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="194">Stores a value in typographic points inside @units</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="196">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="pt" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="197">typographic points</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </function>
      <function name="from_string"
                c:identifier="clutter_units_from_string"
                version="1.0">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="430">Parses a value and updates @units with it

A #ClutterUnits expressed in string should match:

|[
  units: wsp* unit-value wsp* unit-name? wsp*
  unit-value: number
  unit-name: 'px' | 'pt' | 'mm' | 'em' | 'cm'
  number: digit+
          | digit* sep digit+
  sep: '.' | ','
  digit: '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
  wsp: (#0x20 | #0x9 | #0xA | #0xB | #0xC | #0xD)+
]|

For instance, these are valid strings:

|[
  10 px
  5.1 em
  24 pt
  12.6 mm
  .3 cm
]|

While these are not:

|[
  42 cats
  omg!1!ponies
]|

If no unit is specified, pixels are assumed.</doc>
        <source-position filename="../clutter/clutter/clutter-units.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="469">%TRUE if the string was successfully parsed,
  and %FALSE otherwise</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="units"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="432">a #ClutterUnits</doc>
            <type name="Units" c:type="ClutterUnits*"/>
          </parameter>
          <parameter name="str" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-units.c"
                 line="433">the string to convert</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </function>
    </record>
    <function-macro name="VALUE_HOLDS_COLOR"
                    c:identifier="CLUTTER_VALUE_HOLDS_COLOR"
                    version="1.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.h"
           line="150">Evaluates to %TRUE if @x holds a #ClutterColor&lt;!-- --&gt;.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="158"/>
      <parameters>
        <parameter name="x">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.h"
               line="152">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VALUE_HOLDS_PAINT_NODE"
                    c:identifier="CLUTTER_VALUE_HOLDS_PAINT_NODE"
                    version="1.10"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.h"
           line="93">Evaluates to %TRUE if the @value has been initialized to hold
a #ClutterPaintNode.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="102"/>
      <parameters>
        <parameter name="value">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.h"
               line="95">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VALUE_HOLDS_SHADER_FLOAT"
                    c:identifier="CLUTTER_VALUE_HOLDS_SHADER_FLOAT"
                    version="1.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.h"
           line="43">Evaluates to %TRUE if @x holds a #ClutterShaderFloat.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="51"/>
      <parameters>
        <parameter name="x">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.h"
               line="45">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VALUE_HOLDS_SHADER_INT"
                    c:identifier="CLUTTER_VALUE_HOLDS_SHADER_INT"
                    version="1.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.h"
           line="53">Evaluates to %TRUE if @x holds a #ClutterShaderInt.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="61"/>
      <parameters>
        <parameter name="x">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.h"
               line="55">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VALUE_HOLDS_SHADER_MATRIX"
                    c:identifier="CLUTTER_VALUE_HOLDS_SHADER_MATRIX"
                    version="1.0"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.h"
           line="63">Evaluates to %TRUE if @x holds a #ClutterShaderMatrix.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="71"/>
      <parameters>
        <parameter name="x">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.h"
               line="65">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="VALUE_HOLDS_UNITS"
                    c:identifier="CLUTTER_VALUE_HOLDS_UNITS"
                    version="0.8"
                    introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.h"
           line="127">Evaluates to %TRUE if @x holds a #ClutterUnits value</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="135"/>
      <parameters>
        <parameter name="x">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.h"
               line="129">a #GValue</doc>
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="VirtualDeviceType"
              glib:type-name="ClutterVirtualDeviceType"
              glib:get-type="clutter_virtual_device_type_get_type"
              c:type="ClutterVirtualDeviceType">
      <member name="none"
              value="0"
              c:identifier="CLUTTER_VIRTUAL_DEVICE_TYPE_NONE"
              glib:nick="none">
      </member>
      <member name="keyboard"
              value="1"
              c:identifier="CLUTTER_VIRTUAL_DEVICE_TYPE_KEYBOARD"
              glib:nick="keyboard">
      </member>
      <member name="pointer"
              value="2"
              c:identifier="CLUTTER_VIRTUAL_DEVICE_TYPE_POINTER"
              glib:nick="pointer">
      </member>
      <member name="touchscreen"
              value="4"
              c:identifier="CLUTTER_VIRTUAL_DEVICE_TYPE_TOUCHSCREEN"
              glib:nick="touchscreen">
      </member>
    </bitfield>
    <class name="VirtualInputDevice"
           c:symbol-prefix="virtual_input_device"
           c:type="ClutterVirtualInputDevice"
           parent="GObject.Object"
           glib:type-name="ClutterVirtualInputDevice"
           glib:get-type="clutter_virtual_input_device_get_type"
           glib:type-struct="VirtualInputDeviceClass">
      <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                       line="107"/>
      <virtual-method name="notify_absolute_motion"
                      invoker="notify_absolute_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_button" invoker="notify_button">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="button_state" transfer-ownership="none">
            <type name="ButtonState" c:type="ClutterButtonState"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_discrete_scroll"
                      invoker="notify_discrete_scroll">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
          </parameter>
          <parameter name="scroll_source" transfer-ownership="none">
            <type name="ScrollSource" c:type="ClutterScrollSource"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_key" invoker="notify_key">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="key_state" transfer-ownership="none">
            <type name="KeyState" c:type="ClutterKeyState"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_keyval" invoker="notify_keyval">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="keyval" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="key_state" transfer-ownership="none">
            <type name="KeyState" c:type="ClutterKeyState"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_relative_motion"
                      invoker="notify_relative_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="dx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_scroll_continuous"
                      invoker="notify_scroll_continuous">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="dx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="scroll_source" transfer-ownership="none">
            <type name="ScrollSource" c:type="ClutterScrollSource"/>
          </parameter>
          <parameter name="finish_flags" transfer-ownership="none">
            <type name="ScrollFinishFlags" c:type="ClutterScrollFinishFlags"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_touch_down" invoker="notify_touch_down">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_touch_motion" invoker="notify_touch_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="notify_touch_up" invoker="notify_touch_up">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_device_type"
              c:identifier="clutter_virtual_input_device_get_device_type">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="173"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="int"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="notify_absolute_motion"
              c:identifier="clutter_virtual_input_device_notify_absolute_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_button"
              c:identifier="clutter_virtual_input_device_notify_button">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="button" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="button_state" transfer-ownership="none">
            <type name="ButtonState" c:type="ClutterButtonState"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_discrete_scroll"
              c:identifier="clutter_virtual_input_device_notify_discrete_scroll">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="140"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
          </parameter>
          <parameter name="scroll_source" transfer-ownership="none">
            <type name="ScrollSource" c:type="ClutterScrollSource"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_key"
              c:identifier="clutter_virtual_input_device_notify_key">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="key_state" transfer-ownership="none">
            <type name="KeyState" c:type="ClutterKeyState"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_keyval"
              c:identifier="clutter_virtual_input_device_notify_keyval">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="keyval" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="key_state" transfer-ownership="none">
            <type name="KeyState" c:type="ClutterKeyState"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_relative_motion"
              c:identifier="clutter_virtual_input_device_notify_relative_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="dx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_scroll_continuous"
              c:identifier="clutter_virtual_input_device_notify_scroll_continuous">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="dx" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="dy" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="scroll_source" transfer-ownership="none">
            <type name="ScrollSource" c:type="ClutterScrollSource"/>
          </parameter>
          <parameter name="finish_flags" transfer-ownership="none">
            <type name="ScrollFinishFlags" c:type="ClutterScrollFinishFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_touch_down"
              c:identifier="clutter_virtual_input_device_notify_touch_down">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_touch_motion"
              c:identifier="clutter_virtual_input_device_notify_touch_motion">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="161"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="notify_touch_up"
              c:identifier="clutter_virtual_input_device_notify_touch_up">
        <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                         line="168"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="virtual_device" transfer-ownership="none">
            <type name="VirtualInputDevice"
                  c:type="ClutterVirtualInputDevice*"/>
          </instance-parameter>
          <parameter name="time_us" transfer-ownership="none">
            <type name="guint64" c:type="uint64_t"/>
          </parameter>
          <parameter name="slot" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <property name="device-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputDeviceType"/>
      </property>
      <property name="seat"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Seat"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="VirtualInputDeviceClass"
            c:type="ClutterVirtualInputDeviceClass"
            glib:is-gtype-struct-for="VirtualInputDevice">
      <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                       line="107"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="notify_relative_motion">
        <callback name="notify_relative_motion">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="56"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="dx" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="dy" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_absolute_motion">
        <callback name="notify_absolute_motion">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="61"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_button">
        <callback name="notify_button">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="66"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="button" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
            <parameter name="button_state" transfer-ownership="none">
              <type name="ButtonState" c:type="ClutterButtonState"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_key">
        <callback name="notify_key">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="71"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
            <parameter name="key_state" transfer-ownership="none">
              <type name="KeyState" c:type="ClutterKeyState"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_keyval">
        <callback name="notify_keyval">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="75"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="keyval" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
            <parameter name="key_state" transfer-ownership="none">
              <type name="KeyState" c:type="ClutterKeyState"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_discrete_scroll">
        <callback name="notify_discrete_scroll">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="direction" transfer-ownership="none">
              <type name="ScrollDirection" c:type="ClutterScrollDirection"/>
            </parameter>
            <parameter name="scroll_source" transfer-ownership="none">
              <type name="ScrollSource" c:type="ClutterScrollSource"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_scroll_continuous">
        <callback name="notify_scroll_continuous">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="85"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="dx" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="dy" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="scroll_source" transfer-ownership="none">
              <type name="ScrollSource" c:type="ClutterScrollSource"/>
            </parameter>
            <parameter name="finish_flags" transfer-ownership="none">
              <type name="ScrollFinishFlags"
                    c:type="ClutterScrollFinishFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_touch_down">
        <callback name="notify_touch_down">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="92"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="slot" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_touch_motion">
        <callback name="notify_touch_motion">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="slot" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
            <parameter name="x" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
            <parameter name="y" transfer-ownership="none">
              <type name="gdouble" c:type="double"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="notify_touch_up">
        <callback name="notify_touch_up">
          <source-position filename="../clutter/clutter/clutter-virtual-input-device.h"
                           line="104"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="virtual_device" transfer-ownership="none">
              <type name="VirtualInputDevice"
                    c:type="ClutterVirtualInputDevice*"/>
            </parameter>
            <parameter name="time_us" transfer-ownership="none">
              <type name="guint64" c:type="uint64_t"/>
            </parameter>
            <parameter name="slot" transfer-ownership="none">
              <type name="gint" c:type="int"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <constant name="WINDOWING_EGL"
              value="eglnative"
              c:type="CLUTTER_WINDOWING_EGL">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="16"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="WINDOWING_GLX" value="glx" c:type="CLUTTER_WINDOWING_GLX">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="15"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <constant name="WINDOWING_X11" value="x11" c:type="CLUTTER_WINDOWING_X11">
      <source-position filename="../clutter/clutter/clutter-config.h"
                       line="13"/>
      <type name="utf8" c:type="gchar*"/>
    </constant>
    <function-macro name="ZOOM_ACTION"
                    c:identifier="CLUTTER_ZOOM_ACTION"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="39"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_ACTION_CLASS"
                    c:identifier="CLUTTER_ZOOM_ACTION_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="41"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="ZOOM_ACTION_GET_CLASS"
                    c:identifier="CLUTTER_ZOOM_ACTION_GET_CLASS"
                    introspectable="0">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="43"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ZoomAction"
           c:symbol-prefix="zoom_action"
           c:type="ClutterZoomAction"
           version="1.12"
           parent="GestureAction"
           glib:type-name="ClutterZoomAction"
           glib:get-type="clutter_zoom_action_get_type"
           glib:type-struct="ZoomActionClass">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-zoom-action.h"
           line="49">The #ClutterZoomAction structure contains only
private data and should be accessed using the provided API</doc>
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="91"/>
      <constructor name="new"
                   c:identifier="clutter_zoom_action_new"
                   version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="419">Creates a new #ClutterZoomAction instance</doc>
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-zoom-action.c"
               line="424">the newly created #ClutterZoomAction</doc>
          <type name="Action" c:type="ClutterAction*"/>
        </return-value>
      </constructor>
      <virtual-method name="zoom">
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="80"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="ZoomAction" c:type="ClutterZoomAction*"/>
          </instance-parameter>
          <parameter name="actor" transfer-ownership="none">
            <type name="Actor" c:type="ClutterActor*"/>
          </parameter>
          <parameter name="focal_point" transfer-ownership="none">
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
          <parameter name="factor" transfer-ownership="none">
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_focal_point"
              c:identifier="clutter_zoom_action_get_focal_point"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="478">Retrieves the focal point of the current zoom</doc>
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="480">a #ClutterZoomAction</doc>
            <type name="ZoomAction" c:type="ClutterZoomAction*"/>
          </instance-parameter>
          <parameter name="point"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="481">a #graphene_point_t</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transformed_focal_point"
              c:identifier="clutter_zoom_action_get_transformed_focal_point"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="497">Retrieves the focal point relative to the actor's coordinates of
the current zoom</doc>
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="499">a #ClutterZoomAction</doc>
            <type name="ZoomAction" c:type="ClutterZoomAction*"/>
          </instance-parameter>
          <parameter name="point"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="500">a #graphene_point_t</doc>
            <type name="Graphene.Point" c:type="graphene_point_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_zoom_axis"
              c:identifier="clutter_zoom_action_get_zoom_axis"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="459">Retrieves the axis constraint set by clutter_zoom_action_set_zoom_axis()</doc>
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-zoom-action.c"
               line="465">the axis constraint</doc>
          <type name="ZoomAxis" c:type="ClutterZoomAxis"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="461">a #ClutterZoomAction</doc>
            <type name="ZoomAction" c:type="ClutterZoomAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_zoom_axis"
              c:identifier="clutter_zoom_action_set_zoom_axis"
              version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="434">Restricts the zooming action to a specific axis</doc>
        <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                         line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="436">a #ClutterZoomAction</doc>
            <type name="ZoomAction" c:type="ClutterZoomAction*"/>
          </instance-parameter>
          <parameter name="axis" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="437">the axis to constraint the zooming to</doc>
            <type name="ZoomAxis" c:type="ClutterZoomAxis"/>
          </parameter>
        </parameters>
      </method>
      <property name="zoom-axis"
                version="1.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="354">Constraints the zooming action to the specified axis</doc>
        <type name="ZoomAxis"/>
      </property>
      <field name="parent_instance" readable="0" private="1">
        <type name="GestureAction" c:type="ClutterGestureAction"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="ZoomActionPrivate" c:type="ClutterZoomActionPrivate*"/>
      </field>
      <glib:signal name="zoom" when="last" version="1.12">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-zoom-action.c"
             line="373">The ::zoom signal is emitted for each series of touch events that
change the distance and focal point between the touch points.

The default handler of the signal will call
clutter_actor_set_scale() on @actor using the ratio of the first
distance between the touch points and the current distance. To
override the default behaviour, connect to this signal and return
%FALSE.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-zoom-action.c"
               line="389">%TRUE if the zoom should continue, and %FALSE if
  the zoom should be cancelled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="actor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="376">the #ClutterActor attached to the action</doc>
            <type name="Actor"/>
          </parameter>
          <parameter name="focal_point" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="377">the focal point of the zoom</doc>
            <type name="Graphene.Point"/>
          </parameter>
          <parameter name="factor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../clutter/clutter/clutter-zoom-action.c"
                 line="378">the initial distance between the 2 touch points</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ZoomActionClass"
            c:type="ClutterZoomActionClass"
            glib:is-gtype-struct-for="ZoomAction"
            version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-zoom-action.h"
           line="65">The #ClutterZoomActionClass structure contains
only private data</doc>
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="91"/>
      <field name="parent_class" readable="0" private="1">
        <type name="GestureActionClass" c:type="ClutterGestureActionClass"/>
      </field>
      <field name="zoom">
        <callback name="zoom">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="80"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="ZoomAction" c:type="ClutterZoomAction*"/>
            </parameter>
            <parameter name="actor" transfer-ownership="none">
              <type name="Actor" c:type="ClutterActor*"/>
            </parameter>
            <parameter name="focal_point" transfer-ownership="none">
              <type name="Graphene.Point" c:type="graphene_point_t*"/>
            </parameter>
            <parameter name="factor" transfer-ownership="none">
              <type name="gdouble" c:type="gdouble"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_clutter_zoom_action1" introspectable="0">
        <callback name="_clutter_zoom_action1">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="86"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_zoom_action2" introspectable="0">
        <callback name="_clutter_zoom_action2">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_zoom_action3" introspectable="0">
        <callback name="_clutter_zoom_action3">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="88"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_zoom_action4" introspectable="0">
        <callback name="_clutter_zoom_action4">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="89"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_clutter_zoom_action5" introspectable="0">
        <callback name="_clutter_zoom_action5">
          <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                           line="90"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ZoomActionPrivate"
            c:type="ClutterZoomActionPrivate"
            disguised="1">
      <source-position filename="../clutter/clutter/clutter-zoom-action.h"
                       line="46"/>
    </record>
    <enumeration name="ZoomAxis"
                 version="1.12"
                 glib:type-name="ClutterZoomAxis"
                 glib:get-type="clutter_zoom_axis_get_type"
                 c:type="ClutterZoomAxis">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-enums.h"
           line="1515">The axis of the constraint that should be applied by the
zooming action.</doc>
      <member name="x_axis"
              value="0"
              c:identifier="CLUTTER_ZOOM_X_AXIS"
              glib:nick="x-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1517">Scale only on the X axis</doc>
      </member>
      <member name="y_axis"
              value="1"
              c:identifier="CLUTTER_ZOOM_Y_AXIS"
              glib:nick="y-axis">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1518">Scale only on the Y axis</doc>
      </member>
      <member name="both"
              value="2"
              c:identifier="CLUTTER_ZOOM_BOTH"
              glib:nick="both">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-enums.h"
             line="1519">Scale on both axis</doc>
      </member>
    </enumeration>
    <function name="actor_box_alloc"
              c:identifier="clutter_actor_box_alloc"
              moved-to="ActorBox.alloc"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-actor-box.c"
           line="44">Allocates a new #ClutterActorBox.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="189"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-actor-box.c"
             line="49">the newly allocated #ClutterActorBox.
  Use clutter_actor_box_free() to free its resources</doc>
        <type name="ActorBox" c:type="ClutterActorBox*"/>
      </return-value>
    </function>
    <function name="add_debug_flags"
              c:identifier="clutter_add_debug_flags"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2605">Adds the debug flags passed to the list of debug flags.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="201"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="debug_flags" transfer-ownership="none">
          <type name="DebugFlag" c:type="ClutterDebugFlag"/>
        </parameter>
        <parameter name="draw_flags" transfer-ownership="none">
          <type name="DrawDebugFlag" c:type="ClutterDrawDebugFlag"/>
        </parameter>
        <parameter name="pick_flags" transfer-ownership="none">
          <type name="PickDebugFlag" c:type="ClutterPickDebugFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="base_init" c:identifier="clutter_base_init">
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="122"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="cairo_clear"
              c:identifier="clutter_cairo_clear"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-cairo.c"
           line="73">Utility function to clear a Cairo context.</doc>
      <source-position filename="../clutter/clutter/clutter-cairo.h"
                       line="54"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-cairo.c"
               line="75">a Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
      </parameters>
    </function>
    <function name="cairo_set_source_color"
              c:identifier="clutter_cairo_set_source_color"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-cairo.c"
           line="35">Utility function for setting the source color of @cr using
a #ClutterColor. This function is the equivalent of:

|[
  cairo_set_source_rgba (cr,
                         color-&gt;red / 255.0,
                         color-&gt;green / 255.0,
                         color-&gt;blue / 255.0,
                         color-&gt;alpha / 255.0);
]|</doc>
      <source-position filename="../clutter/clutter/clutter-cairo.h"
                       line="56"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="cr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-cairo.c"
               line="37">a Cairo context</doc>
          <type name="cairo.Context" c:type="cairo_t*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-cairo.c"
               line="38">a #ClutterColor</doc>
          <type name="Color" c:type="const ClutterColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="check_windowing_backend"
              c:identifier="clutter_check_windowing_backend"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2553">Checks the run-time name of the Clutter windowing system backend, using
the symbolic macros like %CLUTTER_WINDOWING_X11.

This function should be used in conjuction with the compile-time macros
inside applications and libraries that are using the platform-specific
windowing system API, to ensure that they are running on the correct
windowing system; for instance:

|[
#ifdef CLUTTER_WINDOWING_X11
  if (clutter_check_windowing_backend (CLUTTER_WINDOWING_X11))
    {
      // it is safe to use the clutter_x11_* API
    }
  else
#endif
    g_error ("Unknown Clutter backend.");
]|</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="198"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2576">%TRUE if the current Clutter windowing system backend is
  the one checked, and %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="backend_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2555">the name of the backend to check</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_from_hls"
              c:identifier="clutter_color_from_hls"
              moved-to="Color.from_hls">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="301">Converts a color expressed in HLS (hue, luminance and saturation)
values into a #ClutterColor.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="123"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="color"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="303">return location for a #ClutterColor</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </parameter>
        <parameter name="hue" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="304">hue value, in the 0 .. 360 range</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="luminance" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="305">luminance value, in the 0 .. 1 range</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="saturation" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="306">saturation value, in the 0 .. 1 range</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_from_pixel"
              c:identifier="clutter_color_from_pixel"
              moved-to="Color.from_pixel">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="413">Converts @pixel from the packed representation of a four 8 bit channel
color to a #ClutterColor.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="131"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="color"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="415">return location for a #ClutterColor</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </parameter>
        <parameter name="pixel" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="416">a 32 bit packed integer containing a color</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_from_string"
              c:identifier="clutter_color_from_string"
              moved-to="Color.from_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="611">Parses a string definition of a color, filling the #ClutterColor.red,
#ClutterColor.green, #ClutterColor.blue and #ClutterColor.alpha fields
of @color.

The @color is not allocated.

The format of @str can be either one of:

  - a standard name (as taken from the X11 rgb.txt file)
  - an hexadecimal value in the form: `#rgb`, `#rrggbb`, `#rgba`, or `#rrggbbaa`
  - a RGB color in the form: `rgb(r, g, b)`
  - a RGB color in the form: `rgba(r, g, b, a)`
  - a HSL color in the form: `hsl(h, s, l)`
   -a HSL color in the form: `hsla(h, s, l, a)`

where 'r', 'g', 'b' and 'a' are (respectively) the red, green, blue color
intensities and the opacity. The 'h', 's' and 'l' are (respectively) the
hue, saturation and luminance values.

In the rgb() and rgba() formats, the 'r', 'g', and 'b' values are either
integers between 0 and 255, or percentage values in the range between 0%
and 100%; the percentages require the '%' character. The 'a' value, if
specified, can only be a floating point value between 0.0 and 1.0.

In the hls() and hlsa() formats, the 'h' value (hue) is an angle between
0 and 360.0 degrees; the 'l' and 's' values (luminance and saturation) are
percentage values in the range between 0% and 100%. The 'a' value, if specified,
can only be a floating point value between 0.0 and 1.0.

Whitespace inside the definitions is ignored; no leading whitespace
is allowed.

If the alpha component is not specified then it is assumed to be set to
be fully opaque.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="114"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="651">%TRUE if parsing succeeded, and %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="color"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="613">return location for a #ClutterColor</doc>
          <type name="Color" c:type="ClutterColor*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="614">a string specifiying a color</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="color_get_static"
              c:identifier="clutter_color_get_static"
              moved-to="Color.get_static"
              version="1.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="102">Retrieves a static color for the given @color name

Static colors are created by Clutter and are guaranteed to always be
available and valid</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="196"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="111">a pointer to a static color; the returned pointer
  is owned by Clutter and it should never be modified or freed</doc>
        <type name="Color" c:type="const ClutterColor*"/>
      </return-value>
      <parameters>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="104">the named global color</doc>
          <type name="StaticColor" c:type="ClutterStaticColor"/>
        </parameter>
      </parameters>
    </function>
    <function name="container_class_find_child_property"
              c:identifier="clutter_container_class_find_child_property"
              moved-to="Container.class_find_child_property"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-container.c"
           line="858">Looks up the #GParamSpec for a child property of @klass.</doc>
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="137"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="865">The #GParamSpec for the property or %NULL
  if no such property exist.</doc>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="860">a #GObjectClass implementing the #ClutterContainer interface.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="861">a property name.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="container_class_list_child_properties"
              c:identifier="clutter_container_class_list_child_properties"
              moved-to="Container.class_list_child_properties"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-container.c"
           line="897">Returns an array of #GParamSpec for all child properties.</doc>
      <source-position filename="../clutter/clutter/clutter-container.h"
                       line="140"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-container.c"
             line="904">an array
  of #GParamSpec&lt;!-- --&gt;s which should be freed after use.</doc>
        <array length="1" zero-terminated="0" c:type="GParamSpec**">
          <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="899">a #GObjectClass implementing the #ClutterContainer interface.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="n_properties"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-container.c"
               line="900">return location for length of returned array.</doc>
          <type name="guint" c:type="guint*"/>
        </parameter>
      </parameters>
    </function>
    <function name="disable_accessibility"
              c:identifier="clutter_disable_accessibility"
              version="1.14">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="382">Disable loading the accessibility support. It has the same effect
as setting the environment variable
CLUTTER_DISABLE_ACCESSIBILITY. For the same reason, this method
should be called before clutter_init().</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="155"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="do_event" c:identifier="clutter_do_event" version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="1695">Processes an event.

The @event must be a valid #ClutterEvent and have a #ClutterStage
associated to it.

This function is only useful when embedding Clutter inside another
toolkit, and it should never be called by applications.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="148"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="event" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1697">a #ClutterEvent.</doc>
          <type name="Event" c:type="ClutterEvent*"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_add_filter"
              c:identifier="clutter_event_add_filter"
              moved-to="Event.add_filter"
              version="1.18">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1954">Adds a function which will be called for all events that Clutter
processes. The function will be called before any signals are
emitted for the event and it will take precedence over any grabs.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="624"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1965">an identifier for the event filter, to be used
  with clutter_event_remove_filter().</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="stage"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1956">The #ClutterStage to capture events for</doc>
          <type name="Stage" c:type="ClutterStage*"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1957">The callback function which will be passed all events.</doc>
          <type name="EventFilterFunc" c:type="ClutterEventFilterFunc"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1958">A #GDestroyNotify</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1959">A data pointer to pass to the function.</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="event_get"
              c:identifier="clutter_event_get"
              moved-to="Event.get"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1500">Pops an event off the event queue. Applications should not need to call
this.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="617"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1506">A #ClutterEvent or NULL if queue empty</doc>
        <type name="Event" c:type="ClutterEvent*"/>
      </return-value>
    </function>
    <function name="event_peek"
              c:identifier="clutter_event_peek"
              moved-to="Event.peek"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1524">Returns a pointer to the first event from the event queue but
does not remove it.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="619"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1530">A #ClutterEvent or NULL if queue empty.</doc>
        <type name="Event" c:type="ClutterEvent*"/>
      </return-value>
    </function>
    <function name="event_remove_filter"
              c:identifier="clutter_event_remove_filter"
              moved-to="Event.remove_filter"
              version="1.18">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1993">Removes an event filter that was previously added with
clutter_event_add_filter().</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="629"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-event.c"
               line="1995">The ID of the event filter, as returned from clutter_event_add_filter()</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="events_pending"
              c:identifier="clutter_events_pending"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1599">Checks if events are pending in the event queue.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="615"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1604">TRUE if there are pending events, FALSE otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="feature_available"
              c:identifier="clutter_feature_available"
              version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-feature.c"
           line="105">Checks whether @feature is available.  @feature can be a logical
OR of #ClutterFeatureFlags.</doc>
      <source-position filename="../clutter/clutter/clutter-feature.h"
                       line="36"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-feature.c"
             line="112">%TRUE if a feature is available</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="feature" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-feature.c"
               line="107">a #ClutterFeatureFlags</doc>
          <type name="FeatureFlags" c:type="ClutterFeatureFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="feature_get_all"
              c:identifier="clutter_feature_get_all"
              version="0.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-feature.c"
           line="128">Returns all the supported features.</doc>
      <source-position filename="../clutter/clutter/clutter-feature.h"
                       line="38"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-feature.c"
             line="133">a logical OR of all the supported features.</doc>
        <type name="FeatureFlags" c:type="ClutterFeatureFlags"/>
      </return-value>
    </function>
    <function name="get_accessibility_enabled"
              c:identifier="clutter_get_accessibility_enabled"
              version="1.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="365">Returns whether Clutter has accessibility support enabled.  As
least, a value of TRUE means that there are a proper AtkUtil
implementation available</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="152"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="372">%TRUE if Clutter has accessibility support enabled</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="get_actor_by_gid"
              c:identifier="clutter_get_actor_by_gid"
              version="0.6"
              deprecated="1"
              deprecated-version="1.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2160">Retrieves the #ClutterActor with @id_.</doc>
      <doc-deprecated xml:space="preserve">The id is deprecated, and this function always returns
  %NULL. Use the proper scene graph API in #ClutterActor to find a child
  of the stage.</doc-deprecated>
      <source-position filename="../clutter/clutter/deprecated/clutter-actor.h"
                       line="37"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2166">the actor with the passed id or %NULL.
  The returned actor does not have its reference count increased.</doc>
        <type name="Actor" c:type="ClutterActor*"/>
      </return-value>
      <parameters>
        <parameter name="id_" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2162">a #ClutterActor unique id.</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_current_event"
              c:identifier="clutter_get_current_event"
              version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1644">If an event is currently being processed, return that event.
This function is intended to be used to access event state
that might not be exposed by higher-level widgets.  For
example, to get the key modifier state from a Button 'clicked'
event.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="772"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1653">The current ClutterEvent, or %NULL if none</doc>
        <type name="Event" c:type="const ClutterEvent*"/>
      </return-value>
    </function>
    <function name="get_current_event_time"
              c:identifier="clutter_get_current_event_time"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-event.c"
           line="1621">Retrieves the timestamp of the last event, if there is an
event or if the event has a timestamp.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="770"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-event.c"
             line="1627">the event timestamp, or %CLUTTER_CURRENT_TIME</doc>
        <type name="guint32" c:type="guint32"/>
      </return-value>
    </function>
    <function name="get_default_backend"
              c:identifier="clutter_get_default_backend"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-backend.c"
           line="779">Retrieves the default #ClutterBackend used by Clutter. The
#ClutterBackend holds backend-specific configuration options.</doc>
      <source-position filename="../clutter/clutter/clutter-backend.h"
                       line="62"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-backend.c"
             line="785">the default backend. You should
  not ref or unref the returned object. Applications should rarely
  need to use this.</doc>
        <type name="Backend" c:type="ClutterBackend*"/>
      </return-value>
    </function>
    <function name="get_default_frame_rate"
              c:identifier="clutter_get_default_frame_rate"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2202">Retrieves the default frame rate. See clutter_set_default_frame_rate().</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="195"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2207">the default frame rate</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
    </function>
    <function name="get_default_text_direction"
              c:identifier="clutter_get_default_text_direction"
              version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2481">Retrieves the default direction for the text. The text direction is
determined by the locale and/or by the `CLUTTER_TEXT_DIRECTION`
environment variable.

The default text direction can be overridden on a per-actor basis by using
clutter_actor_set_text_direction().</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="192"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2491">the default text direction</doc>
        <type name="TextDirection" c:type="ClutterTextDirection"/>
      </return-value>
    </function>
    <function name="get_font_map"
              c:identifier="clutter_get_font_map"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2221">Retrieves the #PangoFontMap instance used by Clutter.
You can use the global font map object with the COGL
Pango API.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="189"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2228">the #PangoFontMap instance. The returned
  value is owned by Clutter and it should never be unreferenced.</doc>
        <type name="Pango.FontMap" c:type="PangoFontMap*"/>
      </return-value>
    </function>
    <function name="get_option_group"
              c:identifier="clutter_get_option_group"
              version="0.2"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="1125">Returns a #GOptionGroup for the command line arguments recognized
by Clutter. You should add this group to your #GOptionContext with
g_option_context_add_group(), if you are using g_option_context_parse()
to parse your commandline arguments.

Calling g_option_context_parse() with Clutter's #GOptionGroup will result
in Clutter's initialization. That is, the following code:

|[
  g_option_context_set_main_group (context, clutter_get_option_group ());
  res = g_option_context_parse (context, &amp;argc, &amp;argc, NULL);
]|

is functionally equivalent to:

|[
  clutter_init (&amp;argc, &amp;argv);
]|

After g_option_context_parse() on a #GOptionContext containing the
Clutter #GOptionGroup has returned %TRUE, Clutter is guaranteed to be
initialized.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="135"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="1151">a #GOptionGroup for the commandline arguments
  recognized by Clutter</doc>
        <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
      </return-value>
    </function>
    <function name="get_option_group_without_init"
              c:identifier="clutter_get_option_group_without_init"
              version="0.8"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="1181">Returns a #GOptionGroup for the command line arguments recognized
by Clutter. You should add this group to your #GOptionContext with
g_option_context_add_group(), if you are using g_option_context_parse()
to parse your commandline arguments.

Unlike clutter_get_option_group(), calling g_option_context_parse() with
the #GOptionGroup returned by this function requires a subsequent explicit
call to clutter_init(); use this function when needing to set foreign
display connection with clutter_x11_set_display(), or with
`gtk_clutter_init()`.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="137"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="1195">a #GOptionGroup for the commandline arguments
  recognized by Clutter</doc>
        <type name="GLib.OptionGroup" c:type="GOptionGroup*"/>
      </return-value>
    </function>
    <function name="get_script_id"
              c:identifier="clutter_get_script_id"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-script.c"
           line="852">Retrieves the Clutter script id, if any.</doc>
      <source-position filename="../clutter/clutter/clutter-script.h"
                       line="217"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-script.c"
             line="858">the script id, or %NULL if @object was not defined inside
  a UI definition file. The returned string is owned by the object and
  should never be modified or freed.</doc>
        <type name="utf8" c:type="const gchar*"/>
      </return-value>
      <parameters>
        <parameter name="gobject" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-script.c"
               line="854">a #GObject</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="group_add"
                    c:identifier="clutter_group_add"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-group.h"
                       line="50"/>
      <parameters>
        <parameter name="group">
        </parameter>
        <parameter name="actor">
        </parameter>
      </parameters>
    </function-macro>
    <function name="image_error_quark"
              c:identifier="clutter_image_error_quark"
              moved-to="ImageError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="init" c:identifier="clutter_init">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="1350">Initialises everything needed to operate with Clutter and parses some
standard command line options; @argc and @argv are adjusted accordingly
so your own code will never see those standard arguments.

It is safe to call this function multiple times.

This function will not abort in case of errors during
initialization; clutter_init() will print out the error message on
stderr, and will return an error code. It is up to the application
code to handle this case. If you need to display the error message
yourself, you can use clutter_init_with_args(), which takes a #GError
pointer.

If this function fails, and returns an error code, any subsequent
Clutter API will have undefined behaviour - including segmentation
faults and assertion failures. Make sure to handle the returned
#ClutterInitError enumeration value.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="124"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="1374">a #ClutterInitError value</doc>
        <type name="InitError" c:type="ClutterInitError"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1352">The number of arguments in @argv</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1353">A pointer to an array
  of arguments.</doc>
          <array length="0" zero-terminated="0" c:type="char***">
            <type name="utf8" c:type="char**"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="init_error_quark"
              c:identifier="clutter_init_error_quark"
              moved-to="InitError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="init_with_args"
              c:identifier="clutter_init_with_args"
              version="0.2"
              throws="1">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="1221">This function does the same work as clutter_init(). Additionally,
it allows you to add your own command line options, and it
automatically generates nicely formatted &lt;option&gt;--help&lt;/option&gt;
output. Note that your program will be terminated after writing
out the help output. Also note that, in case of error, the
error message will be placed inside @error instead of being
printed on the display.

Just like clutter_init(), if this function returns an error code then
any subsequent call to any other Clutter API will result in undefined
behaviour - including segmentation faults.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="127"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="1248">%CLUTTER_INIT_SUCCESS if Clutter has been successfully
  initialised, or other values or #ClutterInitError in case of
  error.</doc>
        <type name="InitError" c:type="ClutterInitError"/>
      </return-value>
      <parameters>
        <parameter name="argc"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1223">a pointer to the number of command line arguments</doc>
          <type name="gint" c:type="int*"/>
        </parameter>
        <parameter name="argv"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1224">a pointer to the array
  of command line arguments</doc>
          <array length="0" zero-terminated="0" c:type="char***">
            <type name="utf8" c:type="char**"/>
          </array>
        </parameter>
        <parameter name="parameter_string"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1226">a string which is displayed in the
  first line of &lt;option&gt;--help&lt;/option&gt; output, after
  &lt;literal&gt;&lt;replaceable&gt;programname&lt;/replaceable&gt; [OPTION...]&lt;/literal&gt;</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
        <parameter name="entries"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1229">a %NULL terminated array of
  #GOptionEntry&lt;!-- --&gt;s describing the options of your program</doc>
          <array zero-terminated="0" c:type="GOptionEntry*">
            <type name="GLib.OptionEntry" c:type="GOptionEntry"/>
          </array>
        </parameter>
        <parameter name="translation_domain"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="1231">a translation domain to use for
  translating the &lt;option&gt;--help&lt;/option&gt; output for the options in
  @entries with gettext(), or %NULL</doc>
          <type name="utf8" c:type="const char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keysym_to_unicode"
              c:identifier="clutter_keysym_to_unicode">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-keysyms-table.c"
           line="833">Converts @keyval from a Clutter key symbol to the corresponding
ISO10646 (Unicode) character.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="765"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keysyms-table.c"
             line="840">a Unicode character, or 0 if there  is no corresponding
  character.</doc>
        <type name="guint32" c:type="guint32"/>
      </return-value>
      <parameters>
        <parameter name="keyval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-keysyms-table.c"
               line="835">a key symbol</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="main" c:identifier="clutter_main">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="497">Starts the Clutter mainloop.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="141"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="main_level" c:identifier="clutter_main_level">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="484">Retrieves the depth of the Clutter mainloop.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="145"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="489">The level of the mainloop.</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
    </function>
    <function name="main_quit" c:identifier="clutter_main_quit">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="463">Terminates the Clutter mainloop.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="143"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="matrix_alloc"
              c:identifier="clutter_matrix_alloc"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="199">Allocates enough memory to hold a #ClutterMatrix.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="425"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="204">the newly allocated #ClutterMatrix</doc>
        <type name="Matrix" c:type="ClutterMatrix*"/>
      </return-value>
    </function>
    <function name="matrix_free"
              c:identifier="clutter_matrix_free"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="214">Frees the memory allocated by clutter_matrix_alloc().</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="435"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="matrix"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="216">a #ClutterMatrix</doc>
          <type name="Matrix" c:type="ClutterMatrix*"/>
        </parameter>
      </parameters>
    </function>
    <function name="matrix_get_type" c:identifier="clutter_matrix_get_type">
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="422"/>
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
    </function>
    <function name="matrix_init_from_array"
              c:identifier="clutter_matrix_init_from_array"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="253">Initializes @matrix with the contents of a C array of floating point
values.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="429"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="262">the initialzed #ClutterMatrix</doc>
        <type name="Matrix" c:type="ClutterMatrix*"/>
      </return-value>
      <parameters>
        <parameter name="matrix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="255">a #ClutterMatrix</doc>
          <type name="Matrix" c:type="ClutterMatrix*"/>
        </parameter>
        <parameter name="values" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="256">a C array of 16 floating point values,
  representing a 4x4 matrix, with column-major order</doc>
          <array zero-terminated="0" c:type="const float*" fixed-size="16">
            <type name="gfloat" c:type="float"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="matrix_init_from_matrix"
              c:identifier="clutter_matrix_init_from_matrix"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="275">Initializes the #ClutterMatrix @a with the contents of the
#ClutterMatrix @b.</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="432"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="283">the initialized #ClutterMatrix</doc>
        <type name="Matrix" c:type="ClutterMatrix*"/>
      </return-value>
      <parameters>
        <parameter name="a" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="277">the #ClutterMatrix to initialize</doc>
          <type name="Matrix" c:type="ClutterMatrix*"/>
        </parameter>
        <parameter name="b" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="278">the #ClutterMatrix to copy</doc>
          <type name="Matrix" c:type="const ClutterMatrix*"/>
        </parameter>
      </parameters>
    </function>
    <function name="matrix_init_identity"
              c:identifier="clutter_matrix_init_identity"
              version="1.12">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-base-types.c"
           line="228">Initializes @matrix with the identity matrix, i.e.:

|[
  .xx = 1.0, .xy = 0.0, .xz = 0.0, .xw = 0.0
  .yx = 0.0, .yy = 1.0, .yz = 0.0, .yw = 0.0
  .zx = 0.0, .zy = 0.0, .zz = 1.0, .zw = 0.0
  .wx = 0.0, .wy = 0.0, .wz = 0.0, .ww = 1.0
]|</doc>
      <source-position filename="../clutter/clutter/clutter-types.h"
                       line="427"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-base-types.c"
             line="241">the initialized #ClutterMatrix</doc>
        <type name="Matrix" c:type="ClutterMatrix*"/>
      </return-value>
      <parameters>
        <parameter name="matrix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-base-types.c"
               line="230">a #ClutterMatrix</doc>
          <type name="Matrix" c:type="ClutterMatrix*"/>
        </parameter>
      </parameters>
    </function>
    <function name="param_spec_color"
              c:identifier="clutter_param_spec_color"
              version="0.8"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="1164">Creates a #GParamSpec for properties using #ClutterColor.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="189"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="1174">the newly created #GParamSpec</doc>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1166">name of the property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1167">short name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1168">description (can be translatable)</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="default_value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1169">default value</doc>
          <type name="Color" c:type="const ClutterColor*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1170">flags for the param spec</doc>
          <type name="GObject.ParamFlags" c:type="GParamFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="param_spec_units"
              c:identifier="clutter_param_spec_units"
              version="1.0"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="890">Creates a #GParamSpec for properties using #ClutterUnits.</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="167"/>
      <return-value>
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="903">the newly created #GParamSpec</doc>
        <type name="GObject.ParamSpec" c:type="GParamSpec*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="892">name of the property</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="nick" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="893">short name</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="blurb" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="894">description (can be translatable)</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="default_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="895">the default type for the #ClutterUnits</doc>
          <type name="UnitType" c:type="ClutterUnitType"/>
        </parameter>
        <parameter name="minimum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="896">lower boundary</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="maximum" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="897">higher boundary</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="default_value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="898">default value</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="899">flags for the param spec</doc>
          <type name="GObject.ParamFlags" c:type="GParamFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="remove_debug_flags"
              c:identifier="clutter_remove_debug_flags"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2620">Removes the debug flags passed from the list of debug flags.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="206"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="debug_flags" transfer-ownership="none">
          <type name="DebugFlag" c:type="ClutterDebugFlag"/>
        </parameter>
        <parameter name="draw_flags" transfer-ownership="none">
          <type name="DrawDebugFlag" c:type="ClutterDrawDebugFlag"/>
        </parameter>
        <parameter name="pick_flags" transfer-ownership="none">
          <type name="PickDebugFlag" c:type="ClutterPickDebugFlag"/>
        </parameter>
      </parameters>
    </function>
    <function name="script_error_quark"
              c:identifier="clutter_script_error_quark"
              moved-to="ScriptError.quark">
      <return-value transfer-ownership="none">
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="set_custom_backend_func"
              c:identifier="clutter_set_custom_backend_func">
      <source-position filename="../clutter/clutter/clutter-mutter.h"
                       line="41"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="func"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer*"/>
        </parameter>
      </parameters>
    </function>
    <function-macro name="stage_add"
                    c:identifier="clutter_stage_add"
                    introspectable="0">
      <source-position filename="../clutter/clutter/deprecated/clutter-stage.h"
                       line="58"/>
      <parameters>
        <parameter name="stage">
        </parameter>
        <parameter name="actor">
        </parameter>
      </parameters>
    </function-macro>
    <function name="threads_add_idle"
              c:identifier="clutter_threads_add_idle"
              shadowed-by="threads_add_idle_full"
              version="0.4"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="677">Simple wrapper around clutter_threads_add_idle_full() using the
default priority.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="159"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="685">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="func" transfer-ownership="none" closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="679">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="680">data to pass to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_idle_full"
              c:identifier="clutter_threads_add_idle_full"
              shadows="threads_add_idle"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="570">Adds a function to be called whenever there are no higher priority
events pending. If the function returns %FALSE it is automatically
removed from the list of event sources and will not be called again.

This function can be considered a thread-safe variant of g_idle_add_full():
it will call @function while holding the Clutter lock. It is logically
equivalent to the following implementation:

|[
static gboolean
idle_safe_callback (gpointer data)
{
   SafeClosure *closure = data;
   gboolean res = FALSE;

   // the callback does not need to acquire the Clutter
    / lock itself, as it is held by the this proxy handler
    //
   res = closure-&gt;callback (closure-&gt;data);

   return res;
}
static gulong
add_safe_idle (GSourceFunc callback,
               gpointer    data)
{
  SafeClosure *closure = g_new0 (SafeClosure, 1);

  closure-&gt;callback = callback;
  closure-&gt;data = data;

  return g_idle_add_full (G_PRIORITY_DEFAULT_IDLE,
                          idle_safe_callback,
                          closure,
                          g_free)
}
]|

This function should be used by threaded applications to make sure
that @func is emitted under the Clutter threads lock and invoked
from the same thread that started the Clutter main loop. For instance,
it can be used to update the UI using the results from a worker
thread:

|[
static gboolean
update_ui (gpointer data)
{
  SomeClosure *closure = data;

  // it is safe to call Clutter API from this function because
   / it is invoked from the same thread that started the main
   / loop and under the Clutter thread lock
   //
  clutter_label_set_text (CLUTTER_LABEL (closure-&gt;label),
                          closure-&gt;text);

  g_object_unref (closure-&gt;label);
  g_free (closure);

  return FALSE;
}

  // within another thread //
  closure = g_new0 (SomeClosure, 1);
  // always take a reference on GObject instances //
  closure-&gt;label = g_object_ref (my_application-&gt;label);
  closure-&gt;text = g_strdup (processed_text_to_update_the_label);

  clutter_threads_add_idle_full (G_PRIORITY_HIGH_IDLE,
                                 update_ui,
                                 closure,
                                 NULL);
]|</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="162"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="653">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="572">the priority of the timeout source. Typically this will be in the
   range between #G_PRIORITY_DEFAULT_IDLE and #G_PRIORITY_HIGH_IDLE</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="2"
                   destroy="3">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="574">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="575">data to pass to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="576">functio to call when the idle source is removed</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_repaint_func"
              c:identifier="clutter_threads_add_repaint_func"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2294">Adds a function to be called whenever Clutter is processing a new
frame.

If the function returns %FALSE it is automatically removed from the
list of repaint functions and will not be called again.

This function is guaranteed to be called from within the same thread
that called clutter_main(), and while the Clutter lock is being held;
the function will be called within the main loop, so it is imperative
that it does not block, otherwise the frame time budget may be lost.

A repaint function is useful to ensure that an update of the scenegraph
is performed before the scenegraph is repainted. By default, a repaint
function added using this function will be invoked prior to the frame
being processed.

Adding a repaint function does not automatically ensure that a new
frame will be queued.

When the repaint function is removed (either because it returned %FALSE
or because clutter_threads_remove_repaint_func() has been called) the
@notify function will be called, if any is set.

See also: clutter_threads_add_repaint_func_full()</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="177"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2326">the ID (greater than 0) of the repaint function. You
  can use the returned integer to remove the repaint function by
  calling clutter_threads_remove_repaint_func().</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="1"
                   destroy="2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2296">the function to be called within the paint cycle</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2297">data to be passed to the function, or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2298">function to be called when removing the repaint
   function, or %NULL</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_repaint_func_full"
              c:identifier="clutter_threads_add_repaint_func_full"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2342">Adds a function to be called whenever Clutter is processing a new
frame.

If the function returns %FALSE it is automatically removed from the
list of repaint functions and will not be called again.

This function is guaranteed to be called from within the same thread
that called clutter_main(), and while the Clutter lock is being held;
the function will be called within the main loop, so it is imperative
that it does not block, otherwise the frame time budget may be lost.

A repaint function is useful to ensure that an update of the scenegraph
is performed before the scenegraph is repainted. The @flags passed to this
function will determine the section of the frame processing that will
result in @func being called.

Adding a repaint function does not automatically ensure that a new
frame will be queued.

When the repaint function is removed (either because it returned %FALSE
or because clutter_threads_remove_repaint_func() has been called) the
@notify function will be called, if any is set.</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="181"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="2373">the ID (greater than 0) of the repaint function. You
  can use the returned integer to remove the repaint function by
  calling clutter_threads_remove_repaint_func().</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="flags" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2344">flags for the repaint function</doc>
          <type name="RepaintFlags" c:type="ClutterRepaintFlags"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="2"
                   destroy="3">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2345">the function to be called within the paint cycle</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2346">data to be passed to the function, or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2347">function to be called when removing the repaint
   function, or %NULL</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout"
              c:identifier="clutter_threads_add_timeout"
              shadowed-by="threads_add_timeout_full"
              version="0.4"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="749">Simple wrapper around clutter_threads_add_timeout_full().</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="167"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="757">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="751">the time between calls to the function, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="func" transfer-ownership="none" closure="2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="752">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="753">data to pass to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_add_timeout_full"
              c:identifier="clutter_threads_add_timeout_full"
              shadows="threads_add_timeout"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="700">Sets a function to be called at regular intervals holding the Clutter
threads lock, with the given priority. The function is called repeatedly
until it returns %FALSE, at which point the timeout is automatically
removed and the function will not be called again. The @notify function
is called when the timeout is removed.

The first call to the function will be at the end of the first @interval.

It is important to note that, due to how the Clutter main loop is
implemented, the timing will not be accurate and it will not try to
"keep up" with the interval.

See also clutter_threads_add_idle_full().</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="171"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-main.c"
             line="723">the ID (greater than 0) of the event source.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="priority" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="702">the priority of the timeout source. Typically this will be in the
           range between #G_PRIORITY_DEFAULT and #G_PRIORITY_HIGH.</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="interval" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="704">the time between calls to the function, in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="3"
                   destroy="4">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="705">function to call</doc>
          <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="706">data to pass to the function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="async">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="707">function to call when the timeout source is removed</doc>
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="threads_remove_repaint_func"
              c:identifier="clutter_threads_remove_repaint_func"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-main.c"
           line="2248">Removes the repaint function with @handle_id as its id</doc>
      <source-position filename="../clutter/clutter/clutter-main.h"
                       line="186"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="handle_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-main.c"
               line="2250">an unsigned integer greater than zero</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="unicode_to_keysym"
              c:identifier="clutter_unicode_to_keysym"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-keysyms-table.c"
           line="1638">Convert from a ISO10646 character to a key symbol.</doc>
      <source-position filename="../clutter/clutter/clutter-event.h"
                       line="767"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-keysyms-table.c"
             line="1644">the corresponding Clutter key symbol, if one exists.
  or, if there is no corresponding symbol, wc | 0x01000000</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="wc" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-keysyms-table.c"
               line="1640">a ISO10646 encoded character</doc>
          <type name="guint32" c:type="guint32"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_cm"
              c:identifier="clutter_units_from_cm"
              moved-to="Units.from_cm"
              version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="168">Stores a value in centimeters inside @units</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="99"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="170">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="cm" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="171">centimeters</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_em"
              c:identifier="clutter_units_from_em"
              moved-to="Units.from_em"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="220">Stores a value in em inside @units, using the default font
name as returned by clutter_backend_get_font_name()</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="89"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="222">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="em" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="223">em</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_em_for_font"
              c:identifier="clutter_units_from_em_for_font"
              moved-to="Units.from_em_for_font"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="247">Stores a value in em inside @units using @font_name</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="249">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="font_name"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="250">the font name and size</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="em" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="251">em</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_mm"
              c:identifier="clutter_units_from_mm"
              moved-to="Units.from_mm"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="142">Stores a value in millimiters inside @units</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="96"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="144">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="mm" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="145">millimeters</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_pixels"
              c:identifier="clutter_units_from_pixels"
              moved-to="Units.from_pixels"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="275">Stores a value in pixels inside @units</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="86"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="277">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="px" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="278">pixels</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_pt"
              c:identifier="clutter_units_from_pt"
              moved-to="Units.from_pt"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="194">Stores a value in typographic points inside @units</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="102"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="196">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="pt" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="197">typographic points</doc>
          <type name="gfloat" c:type="gfloat"/>
        </parameter>
      </parameters>
    </function>
    <function name="units_from_string"
              c:identifier="clutter_units_from_string"
              moved-to="Units.from_string"
              version="1.0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="430">Parses a value and updates @units with it

A #ClutterUnits expressed in string should match:

|[
  units: wsp* unit-value wsp* unit-name? wsp*
  unit-value: number
  unit-name: 'px' | 'pt' | 'mm' | 'em' | 'cm'
  number: digit+
          | digit* sep digit+
  sep: '.' | ','
  digit: '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'
  wsp: (#0x20 | #0x9 | #0xA | #0xB | #0xC | #0xD)+
]|

For instance, these are valid strings:

|[
  10 px
  5.1 em
  24 pt
  12.6 mm
  .3 cm
]|

While these are not:

|[
  42 cats
  omg!1!ponies
]|

If no unit is specified, pixels are assumed.</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="109"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="469">%TRUE if the string was successfully parsed,
  and %FALSE otherwise</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="units"
                   direction="out"
                   caller-allocates="1"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="432">a #ClutterUnits</doc>
          <type name="Units" c:type="ClutterUnits*"/>
        </parameter>
        <parameter name="str" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="433">the string to convert</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_dup_paint_node"
              c:identifier="clutter_value_dup_paint_node"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="744">Retrieves a pointer to the #ClutterPaintNode contained inside
the passed #GValue, and if not %NULL it will increase the
reference count.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="113"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="752">a pointer
  to the #ClutterPaintNode, with its reference count increased,
  or %NULL</doc>
        <type name="PaintNode" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="746">a #GValue initialized with %CLUTTER_TYPE_PAINT_NODE</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_color"
              c:identifier="clutter_value_get_color"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="1073">Gets the #ClutterColor contained in @value.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="184"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-color.c"
             line="1079">the color inside the passed #GValue</doc>
        <type name="Color" c:type="const ClutterColor*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1075">a #GValue initialized to #CLUTTER_TYPE_COLOR</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_paint_node"
              c:identifier="clutter_value_get_paint_node"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="724">Retrieves a pointer to the #ClutterPaintNode contained inside
the passed #GValue.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="111"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-paint-node.c"
             line="731">a pointer to
  a #ClutterPaintNode, or %NULL</doc>
        <type name="PaintNode" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="726">a #GValue initialized with %CLUTTER_TYPE_PAINT_NODE</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_shader_float"
              c:identifier="clutter_value_get_shader_float"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="470">Retrieves the list of floating point values stored inside
the passed #GValue. @value must have been initialized with
%CLUTTER_TYPE_SHADER_FLOAT.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="93"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-types.c"
             line="480">the pointer to a list of
  floating point values.  The returned value is owned by the
  #GValue and should never be modified or freed.</doc>
        <array length="1" zero-terminated="0" c:type="const gfloat*">
          <type name="gfloat" c:type="gfloat"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="472">a #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="length"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="473">return location for the number of returned floating
  point values, or %NULL</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_shader_int"
              c:identifier="clutter_value_get_shader_int"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="502">Retrieves the list of integer values stored inside the passed
#GValue. @value must have been initialized with
%CLUTTER_TYPE_SHADER_INT.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="96"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-types.c"
             line="512">the pointer to a list of
  integer values.  The returned value is owned by the #GValue and
  should never be modified or freed.</doc>
        <array length="1" zero-terminated="0" c:type="const gint*">
          <type name="gint" c:type="gint"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="504">a #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="length"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="505">return location for the number of returned integer
  values, or %NULL</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_shader_matrix"
              c:identifier="clutter_value_get_shader_matrix"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="534">Retrieves a matrix of floating point values stored inside
the passed #GValue. @value must have been initialized with
%CLUTTER_TYPE_SHADER_MATRIX.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="99"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-shader-types.c"
             line="544">the pointer to a matrix
  of floating point values. The returned value is owned by the #GValue and
  should never be modified or freed.</doc>
        <array length="1" zero-terminated="0" c:type="const gfloat*">
          <type name="gfloat" c:type="gfloat"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="536">a #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="length"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="537">return location for the number of returned floating
  point values, or %NULL</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_get_units"
              c:identifier="clutter_value_get_units"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="764">Gets the #ClutterUnits contained in @value.</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="180"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/clutter-units.c"
             line="770">the units inside the passed #GValue</doc>
        <type name="Units" c:type="const ClutterUnits*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="766">a #GValue initialized to %CLUTTER_TYPE_UNITS</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_color"
              c:identifier="clutter_value_set_color"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-color.c"
           line="1055">Sets @value to @color.</doc>
      <source-position filename="../clutter/clutter/clutter-color.h"
                       line="181"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1057">a #GValue initialized to #CLUTTER_TYPE_COLOR</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="color" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-color.c"
               line="1058">the color to set</doc>
          <type name="Color" c:type="const ClutterColor*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_paint_node"
              c:identifier="clutter_value_set_paint_node"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="651">Sets the contents of a #GValue initialized with %CLUTTER_TYPE_PAINT_NODE.

This function increased the reference count of @node; if you do not wish
to increase the reference count, use clutter_value_take_paint_node()
instead. The reference count will be released by g_value_unset().</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="105"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="653">a #GValue initialized with %CLUTTER_TYPE_PAINT_NODE</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="node"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="654">a #ClutterPaintNode, or %NULL</doc>
          <type name="PaintNode" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_shader_float"
              c:identifier="clutter_value_set_shader_float"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="380">Sets @floats as the contents of @value. The passed #GValue
must have been initialized using %CLUTTER_TYPE_SHADER_FLOAT.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="81"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="382">a #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="383">number of floating point values in @floats</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="floats" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="384">an array of floating point values</doc>
          <array length="1" zero-terminated="0" c:type="const gfloat*">
            <type name="gfloat" c:type="gfloat"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_shader_int"
              c:identifier="clutter_value_set_shader_int"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="410">Sets @ints as the contents of @value. The passed #GValue
must have been initialized using %CLUTTER_TYPE_SHADER_INT.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="85"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="412">a #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="413">number of integer values in @ints</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="ints" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="414">an array of integer values</doc>
          <array length="1" zero-terminated="0" c:type="const gint*">
            <type name="gint" c:type="gint"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_shader_matrix"
              c:identifier="clutter_value_set_shader_matrix"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-shader-types.c"
           line="440">Sets @matrix as the contents of @value. The passed #GValue
must have been initialized using %CLUTTER_TYPE_SHADER_MATRIX.</doc>
      <source-position filename="../clutter/clutter/clutter-shader-types.h"
                       line="89"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="442">a #GValue</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="443">number of floating point values in @floats</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="matrix" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-shader-types.c"
               line="444">a matrix of floating point values</doc>
          <array length="1" zero-terminated="0" c:type="const gfloat*">
            <type name="gfloat" c:type="gfloat"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="value_set_units"
              c:identifier="clutter_value_set_units"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-units.c"
           line="746">Sets @value to @units</doc>
      <source-position filename="../clutter/clutter/clutter-units.h"
                       line="177"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="748">a #GValue initialized to %CLUTTER_TYPE_UNITS</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="units" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-units.c"
               line="749">the units to set</doc>
          <type name="Units" c:type="const ClutterUnits*"/>
        </parameter>
      </parameters>
    </function>
    <function name="value_take_paint_node"
              c:identifier="clutter_value_take_paint_node"
              version="1.10">
      <doc xml:space="preserve"
           filename="../clutter/clutter/clutter-paint-node.c"
           line="687">Sets the contents of a #GValue initialized with %CLUTTER_TYPE_PAINT_NODE.

Unlike clutter_value_set_paint_node(), this function will not take a
reference on the passed @node: instead, it will take ownership of the
current reference count.</doc>
      <source-position filename="../clutter/clutter/clutter-paint-node.h"
                       line="108"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="689">a #GValue, initialized with %CLUTTER_TYPE_PAINT_NODE</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="node"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/clutter-paint-node.c"
               line="690">a #ClutterPaintNode, or %NULL</doc>
          <type name="PaintNode" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
