<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Clutter" version="6"/>
  <include name="Cogl" version="6"/>
  <include name="CoglPango" version="6"/>
  <include name="xlib" version="2.0"/>
  <package name="mutter-clutter-x11-6"/>
  <namespace name="ClutterX11"
             version="6"
             shared-library="libmutter-clutter-6.so.0"
             c:identifier-prefixes="ClutterX11"
             c:symbol-prefixes="clutter_x11">
    <callback name="FilterFunc" c:type="ClutterX11FilterFunc" version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-x11.h"
           line="75">Filter function for X11 native events.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="87"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-x11.h"
             line="83">the result of the filtering</doc>
        <type name="FilterReturn" c:type="ClutterX11FilterReturn"/>
      </return-value>
      <parameters>
        <parameter name="xev" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-x11.h"
               line="77">Native X11 event structure</doc>
          <type name="xlib.XEvent" c:type="XEvent*"/>
        </parameter>
        <parameter name="cev" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-x11.h"
               line="78">Clutter event structure</doc>
          <type name="Clutter.Event" c:type="ClutterEvent*"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="2">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-x11.h"
               line="79">user data passed to the filter function</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="FilterReturn"
                 version="0.6"
                 glib:type-name="ClutterX11FilterReturn"
                 glib:get-type="clutter_x11_filter_return_get_type"
                 c:type="ClutterX11FilterReturn">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-x11.h"
           line="48">Return values for the #ClutterX11FilterFunc function.</doc>
      <member name="continue"
              value="0"
              c:identifier="CLUTTER_X11_FILTER_CONTINUE"
              glib:nick="continue">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-x11.h"
             line="50">The event was not handled, continues the
  processing</doc>
      </member>
      <member name="translate"
              value="1"
              c:identifier="CLUTTER_X11_FILTER_TRANSLATE"
              glib:nick="translate">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-x11.h"
             line="52">Native event translated into a Clutter
  event, stops the processing</doc>
      </member>
      <member name="remove"
              value="2"
              c:identifier="CLUTTER_X11_FILTER_REMOVE"
              glib:nick="remove">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-x11.h"
             line="54">Remove the event, stops the processing</doc>
      </member>
    </enumeration>
    <record name="XInputDevice" c:type="ClutterX11XInputDevice" disguised="1">
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="73"/>
    </record>
    <function name="add_filter"
              c:identifier="clutter_x11_add_filter"
              version="0.6"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="834">Adds an event filter function.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="106"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="func" transfer-ownership="none" closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="836">a filter function</doc>
          <type name="FilterFunc" c:type="ClutterX11FilterFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="837">user data to be passed to the filter function, or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_default_display"
              c:identifier="clutter_x11_get_default_display"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="719">Retrieves the pointer to the default display.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="97"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="724">the default display</doc>
        <type name="xlib.Display" c:type="Display*"/>
      </return-value>
    </function>
    <function name="get_default_screen"
              c:identifier="clutter_x11_get_default_screen"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="776">Gets the number of the default X Screen object.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="99"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="781">the number of the default screen</doc>
        <type name="gint" c:type="int"/>
      </return-value>
    </function>
    <function name="get_root_window"
              c:identifier="clutter_x11_get_root_window"
              version="0.6"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="805">Retrieves the root window.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="101"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="810">the id of the root window</doc>
        <type name="xlib.Window" c:type="Window"/>
      </return-value>
    </function>
    <function name="get_use_argb_visual"
              c:identifier="clutter_x11_get_use_argb_visual"
              version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="1010">Retrieves whether the Clutter X11 backend is using ARGB visuals by default</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="118"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="1015">%TRUE if ARGB visuals are queried by default</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="get_use_stereo_stage"
              c:identifier="clutter_x11_get_use_stereo_stage"
              version="1.22">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="1063">Retrieves whether the Clutter X11 backend will create stereo
stages if possible.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="123"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="1069">%TRUE if stereo stages are used if possible</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="has_composite_extension"
              c:identifier="clutter_x11_has_composite_extension">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="932">Retrieves whether Clutter is running on an X11 server with the
XComposite extension</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="113"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="938">%TRUE if the XComposite extension is available</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
    </function>
    <function name="remove_filter"
              c:identifier="clutter_x11_remove_filter"
              version="0.6"
              introspectable="0">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="877">Removes the given filter function.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="109"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="func" transfer-ownership="none" closure="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="879">a filter function</doc>
          <type name="FilterFunc" c:type="ClutterX11FilterFunc"/>
        </parameter>
        <parameter name="data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="880">user data to be passed to the filter function, or %NULL</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_display"
              c:identifier="clutter_x11_set_display"
              version="0.8">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="748">Sets the display connection Clutter should use; must be called
before clutter_init(), clutter_init_with_args() or other functions
pertaining Clutter's initialization process.

If you are parsing the command line arguments by retrieving Clutter's
#GOptionGroup with clutter_get_option_group() and calling
g_option_context_parse() yourself, you should also call
clutter_x11_set_display() before g_option_context_parse().</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="103"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="xdpy" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="750">pointer to a X display connection.</doc>
          <type name="xlib.Display" c:type="Display*"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_use_argb_visual"
              c:identifier="clutter_x11_set_use_argb_visual"
              version="1.2">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="975">Sets whether the Clutter X11 backend should request ARGB visuals by default
or not.

By default, Clutter requests RGB visuals.

If no ARGB visuals are found, the X11 backend will fall back to
requesting a RGB visual instead.

ARGB visuals are required for the #ClutterStage:use-alpha property to work.

This function can only be called once, and before clutter_init() is
called.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="116"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="use_argb" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="977">%TRUE if ARGB visuals should be requested by default</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="set_use_stereo_stage"
              c:identifier="clutter_x11_set_use_stereo_stage"
              version="1.22">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="1025">Sets whether the backend object for Clutter stages, will,
if possible, be created with the ability to support stereo drawing
(drawing separate images for the left and right eyes).

This function must be called before clutter_init() is called.
During paint callbacks, cogl_framebuffer_is_stereo() can be called
on the framebuffer retrieved by cogl_get_draw_framebuffer() to
determine if stereo support was successfully enabled, and
cogl_framebuffer_set_stereo_mode() to determine which buffers
will be drawn to.

Note that this function *does not* cause the stage to be drawn
multiple times with different perspective transformations and thus
appear in 3D, it simply enables individual ClutterActors to paint
different images for the left and and right eye.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="121"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="use_stereo" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../clutter/clutter/x11/clutter-backend-x11.c"
               line="1027">%TRUE if the stereo stages should be used if possible.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="trap_x_errors"
              c:identifier="clutter_x11_trap_x_errors"
              version="0.6">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="688">Traps every X error until clutter_x11_untrap_x_errors() is called.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="92"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="untrap_x_errors"
              c:identifier="clutter_x11_untrap_x_errors"
              version="0.4">
      <doc xml:space="preserve"
           filename="../clutter/clutter/x11/clutter-backend-x11.c"
           line="702">Removes the X error trap and returns the current status.</doc>
      <source-position filename="../clutter/clutter/x11/clutter-x11.h"
                       line="94"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../clutter/clutter/x11/clutter-backend-x11.c"
             line="707">the trapped error code, or 0 for success</doc>
        <type name="gint" c:type="gint"/>
      </return-value>
    </function>
  </namespace>
</repository>
