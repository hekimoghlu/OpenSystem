#!/usr/bin/makensis

; Marker file to tell the uninstaller that it's a user installation
!define USER_INSTALL_MARKER _user_install_marker

!if "${NSIS_PACKEDVERSION}" >= 0x03000000
    Unicode true
    ManifestDPIAware true
!endif

!define APPNAME "Meld"
!define ID "meld"
!define DESC "Visual diff and merge tool"
!define WEBSITE "https://meld.app"

!define APPDIR "meld"
!define ICON "${APPDIR}\_internal\meld.ico"
!include version.nsh

!define UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${APPNAME}"

!define MULTIUSER_EXECUTIONLEVEL Highest
!define MULTIUSER_INSTALLMODE_DEFAULT_CURRENTUSER
!define MULTIUSER_MUI
!define MULTIUSER_INSTALLMODE_COMMANDLINE
!define MULTIUSER_INSTALLMODE_INSTDIR "${APPNAME}"
!define MULTIUSER_INSTALLMODE_FUNCTION correctProgramFiles
!include MultiUser.nsh
!include FileFunc.nsh

SetCompressor /SOLID /FINAL lzma

; Modern UI installer stuff
!include "MUI2.nsh"
!define MUI_ABORTWARNING
!define MUI_ICON "${ICON}"
!define MUI_UNICON "${ICON}"

; UI pages
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE "${APPDIR}\_internal\share\meld\COPYING"
!insertmacro MULTIUSER_PAGE_INSTALLMODE
!insertmacro MUI_PAGE_DIRECTORY
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES

; UI languages
!insertmacro MUI_LANGUAGE "English"
!insertmacro MUI_LANGUAGE "French"
!insertmacro MUI_LANGUAGE "German"
!insertmacro MUI_LANGUAGE "Spanish"
!insertmacro MUI_LANGUAGE "SpanishInternational"
!insertmacro MUI_LANGUAGE "SimpChinese"
!insertmacro MUI_LANGUAGE "TradChinese"
!insertmacro MUI_LANGUAGE "Japanese"
!insertmacro MUI_LANGUAGE "Italian"
!insertmacro MUI_LANGUAGE "Dutch"
!insertmacro MUI_LANGUAGE "Danish"
!insertmacro MUI_LANGUAGE "Swedish"
!insertmacro MUI_LANGUAGE "Norwegian"
!insertmacro MUI_LANGUAGE "NorwegianNynorsk"
!insertmacro MUI_LANGUAGE "Russian"
!insertmacro MUI_LANGUAGE "Portuguese"
!insertmacro MUI_LANGUAGE "PortugueseBR"
!insertmacro MUI_LANGUAGE "Polish"
!insertmacro MUI_LANGUAGE "Ukrainian"
!insertmacro MUI_LANGUAGE "Czech"
!insertmacro MUI_LANGUAGE "Slovak"
!insertmacro MUI_LANGUAGE "Slovenian"
!insertmacro MUI_LANGUAGE "Arabic"
!insertmacro MUI_LANGUAGE "Hebrew"
!insertmacro MUI_LANGUAGE "Indonesian"
!insertmacro MUI_LANGUAGE "Mongolian"
!insertmacro MUI_LANGUAGE "Albanian"
!insertmacro MUI_LANGUAGE "Belarusian"
!insertmacro MUI_LANGUAGE "Esperanto"
!insertmacro MUI_LANGUAGE "Asturian"
!insertmacro MUI_LANGUAGE "Basque"
!insertmacro MUI_LANGUAGE "ScotsGaelic"
!insertmacro MUI_LANGUAGE "Vietnamese"
!insertmacro MUI_LANGUAGE "Armenian"
!insertmacro MUI_LANGUAGE "Corsican"
!insertmacro MUI_LANGUAGE "Tatar"
!insertmacro MUI_LANGUAGE "Hindi"


Name "${APPNAME} ${VERSION}"
OutFile "${ID}-${VERSION}.exe"
ShowInstDetails show
ShowUninstDetails show

Var cmdLineInstallDir

Section -SETTINGS
    SetOutPath "$INSTDIR"
    SetOverwrite ifnewer
SectionEnd

Section "!${APPNAME}" sec_app
    !if ${ARCH} == "AMD64"
        SetRegView 64
    !else
        SetRegView 32
    !endif
    SectionIn RO
    File ${ICON}

    SetOutPath "$INSTDIR"
    File /r "${APPDIR}\*"

    ; Marker file for per-user install
    StrCmp $MultiUser.InstallMode CurrentUser 0 +3
        FileOpen $0 "$INSTDIR\${USER_INSTALL_MARKER}" w
        FileClose $0
        SetFileAttributes "$INSTDIR\${USER_INSTALL_MARKER}" HIDDEN

    WriteUninstaller $INSTDIR\uninstall.exe

    ; Create start menu shortcuts
    CreateDirectory "$SMPROGRAMS\${APPNAME}"
    CreateShortCut "$SMPROGRAMS\${APPNAME}\${APPNAME}.lnk" "$INSTDIR\meld.exe"

    ; Add ourselves to Add/Remove Programs
    WriteRegStr SHCTX "${UNINST_KEY}" "DisplayName" "${APPNAME}"
    WriteRegStr SHCTX "${UNINST_KEY}" "DisplayIcon" "$INSTDIR\${ICON}"
    WriteRegStr SHCTX "${UNINST_KEY}" "UninstallString" '"$INSTDIR\uninstall.exe"'
    WriteRegStr SHCTX "${UNINST_KEY}" "InstallLocation" "$INSTDIR"
    WriteRegStr SHCTX "${UNINST_KEY}" "HelpLink" "${WEBSITE}"
    WriteRegStr SHCTX "${UNINST_KEY}" "Publisher" "${APPNAME} Project"
    WriteRegStr SHCTX "${UNINST_KEY}" "DisplayVersion" "${VERSION}"
    WriteRegDWORD SHCTX "${UNINST_KEY}" "NoModify" 1
    WriteRegDWORD SHCTX "${UNINST_KEY}" "NoRepair" 1
    ; Installation size
    ${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
    IntFmt $0 "0x%08X" $0
    WriteRegDWORD SHCTX "${UNINST_KEY}" "EstimatedSize" "$0"

SectionEnd

Section "Uninstall"
    !if ${ARCH} == "AMD64"
        SetRegView 64
    !else
        SetRegView 32
    !endif
    SetShellVarContext all
    SetAutoClose true
    IfFileExists "$INSTDIR\${USER_INSTALL_MARKER}" 0 +3
        SetShellVarContext current
        Delete "$INSTDIR\${USER_INSTALL_MARKER}"

    ; Delete installation related keys
    DeleteRegKey SHCTX "${UNINST_KEY}"

    RMDir /r /REBOOTOK "$SMPROGRAMS\${APPNAME}"
    RMDir /r /REBOOTOK "$INSTDIR"
SectionEnd

; Functions

Function .onInit
    ; Multiuser.nsh breaks /D command line parameter. Parse /INSTDIR instead.
    ; Cribbing from https://nsis-dev.github.io/NSIS-Forums/html/t-299280.html
    ${GetParameters} $0
    ClearErrors
    ${GetOptions} '$0' "/INSTDIR=" $1
    IfErrors +2  ; Error means flag not found
        StrCpy $cmdLineInstallDir $1
    ClearErrors

    !insertmacro MULTIUSER_INIT

    ; If cmd line included /INSTDIR, override the install dir set by MultiUser
    StrCmp $cmdLineInstallDir "" +2
        StrCpy $INSTDIR $cmdLineInstallDir
FunctionEnd

Function un.onInit
    !insertmacro MULTIUSER_UNINIT
FunctionEnd

Function correctProgramFiles
    ; The multiuser machinery doesn't know about the different Program files
    ; folder for 64-bit applications. Override the install dir it set.
    StrCmp $MultiUser.InstallMode AllUsers 0 +2
        StrCpy $INSTDIR "$PROGRAMFILES64\${MULTIUSER_INSTALLMODE_INSTDIR}"
FunctionEnd
